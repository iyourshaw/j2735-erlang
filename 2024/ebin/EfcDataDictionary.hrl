%% Generated by the Erlang ASN.1 compiler. Version: 5.3.1
%% Purpose: Erlang record definitions for each named and unnamed
%% SEQUENCE and SET, and macro definitions for each value
%% definition in module EfcDataDictionary.

-ifndef(_EFCDATADICTIONARY_HRL_).
-define(_EFCDATADICTIONARY_HRL_, true).

-record('AbsolutePosition2d', {
  gnssLon,
  gnssLat
}).

-record('AbsolutePosition3d', {
  longitude,
  latitude,
  altitude = asn1_NOVALUE
}).

-record('AxleWeightLimit', {
  axleNumber,
  maxLadenWeightOnAxle
}).

-record('AxleWeightLimits', {
  maxLadenweightOnAxle1,
  maxLadenweightOnAxle2,
  maxLadenweightOnAxle3,
  maxLadenweightOnAxle4,
  maxLadenweightOnAxle5
}).

-record('DateCompact', {
  year,
  month,
  day
}).

-record('DieselEmissionValues', {
  particulate,
  absorptionCoeff
}).

-record('DriverCharacteristics', {
  driverClass,
  tripPurpose
}).

-record('Distance', {
  distanceValue,
  distanceUnit = asn1_DEFAULT
}).

-record('Duration', {
  durationValue,
  timeUnit = asn1_DEFAULT
}).

-record('EngineDetails', {
  engineCapacity,
  enginePower
}).

-record('ExhaustEmissionValues', {
  unitType,
  emissionCo,
  emissionHc,
  emissionNox,
  emissionHcNox
}).

-record('NumberOfAxles', {
  trailerAxles,
  tractorAxles
}).

-record('ObeId', {
  manufacturerId,
  equipmentObuId
}).

-record('Particulate', {
  unitType,
  value
}).

-record('PassengerCapacity', {
  numberOfSeats,
  numberOfStandingPlaces
}).

-record('PaymentFee', {
  paymentFeeAmount,
  paymentFeeUnit
}).

-record('Period', {
  beginOfPeriod,
  endOfPeriod
}).

-record('Provider', {
  countryCode,
  providerIdentifier
}).

-record('RelativePosition3d', {
  longitude,
  latitude,
  altitude = asn1_NOVALUE
}).

-record('SessionClass', {
  sessionTariffClass,
  sessionClaimedClass
}).

-record('SessionLocation', {
  ascendingKilometrage,
  laneCodeNumber
}).

-record('SoundLevel', {
  soundStationary,
  soundDriveBy
}).

-record('TimeCompact', {
  hours,
  mins,
  doubleSecs
}).

-record('TrailerDetails', {
  trailerType,
  trailerAxles
}).

-record('ChargeObjectId', {
  chargeObjectOperator = asn1_NOVALUE,
  chargeObjectDesignation
}).

-record('ContractValidity', {
  contractRestrictions,
  contractExpiryDate
}).

-record('DateAndTime', {
  timeDate,
  timeCompact
}).

-record('EnvironmentalCharacteristics', {
  euroValue,
  copValue
}).

-record('Lpn', {
  countryCode,
  alphabetIndicator,
  licencePlateNumber
}).

-record('PaymentMeans', {
  personalAccountNumber,
  paymentMeansExpiryDate,
  pamentMeansUsageControl
}).

-record('PurseBalance', {
  purseValue,
  purseUnit
}).

-record('TrailerCharacteristics', {
  trailerDetails,
  trailerMaxLadenWeight,
  trailerWeightUnladen
}).

-record('ValidityOfContract', {
  issuerRestrictions,
  contractExpiryDate
}).

-record('VehicleAxlesNumber', {
  tyreConfiguration,
  numberOfAxles
}).

-record('VehicleDimensions', {
  vehicleLengthOverall,
  vehicleHeigthOverall,
  vehicleWidthOverall
}).

-record('VehicleWeightLimits', {
  vehicleMaxLadenWeight,
  vehicleTrainMaximumWeight,
  vehicleWeightUnladen
}).

-record('EfcContextMark', {
  contractProvider,
  typeOfContract,
  contextVersion
}).

-record('ReceiptContract', {
  sessionContractProvider,
  sessionTypeOfContract,
  sessionContractSerialNumber
}).

-record('ReceiptData', {
  sessionTime,
  sessionServiceProvider,
  locationOfStation,
  sessionLocation,
  sessionType,
  sessionResult,
  sessionTariffClass,
  sessionClaimedClass,
  sessionFee,
  sessionContractProvider,
  sessionTypeOfContract,
  sessionContextVersion,
  receiptDataAuthenticator
}).

-record('ReceiptFinancialPart', {
  personalAccountNumber,
  sessionPaymentFee,
  sessionCurrentBalance,
  receiptFinancialSerialNumber
}).

-record('ReceiptServicePart', {
  sessionTime,
  sessionServiceProvider,
  stationLocation,
  sessionLocation,
  typeOfSession,
  sessionResultOperational,
  sessionResultFinancial
}).

-record('UserId', {
  pan = asn1_NOVALUE,
  contractSerialNumber = asn1_NOVALUE,
  licencePlateNumber = asn1_NOVALUE,
  obeId = asn1_NOVALUE,
  iccId = asn1_NOVALUE
}).

-record('VehicleAxles', {
  vehicleFirstAxleHeight,
  vehicleAxlesNumber
}).

-record('VehicleSpecificCharacteristics', {
  environmentalCharacteristics,
  engineCharacteristics,
  descriptiveCharacteristics,
  futureCharacteristics
}).

-record('AggregatedSingleTariffClassSession', {
  timePeriodCovered = asn1_NOVALUE,
  currentTariffClass = asn1_NOVALUE,
  vehicleDescription = asn1_NOVALUE,
  totalDistanceCovered = asn1_NOVALUE,
  numberOfDetectedEvents = asn1_NOVALUE,
  obeStatus = asn1_NOVALUE,
  feeExclVat = asn1_NOVALUE,
  sumVat = asn1_NOVALUE
  %% with extension mark
}).

-record('DetectedChargeObject', {
  chargeObjectId,
  subObjectNumber = asn1_NOVALUE,
  timeWhenUsed = asn1_NOVALUE,
  mileageWhenUsed = asn1_NOVALUE,
  currentTariffClass = asn1_NOVALUE,
  vehicleDescription = asn1_NOVALUE,
  obeStatus = asn1_NOVALUE,
  feeExclVat = asn1_NOVALUE,
  sumVat = asn1_NOVALUE,
  chargeObjDetectionMode = asn1_NOVALUE
  %% with extension mark
}).

-record('TariffClassDescription', {
  tariffClassId = asn1_DEFAULT,
  localVehicleClassId = asn1_NOVALUE,
  timeClassId = asn1_NOVALUE,
  locationClassId = asn1_NOVALUE,
  userClassId = asn1_NOVALUE
}).

-record('VehicleDescription', {
  vehicleLPNr = asn1_NOVALUE,
  axles = asn1_NOVALUE,
  class = asn1_NOVALUE,
  dimensions = asn1_NOVALUE,
  specificCharacteristics = asn1_NOVALUE,
  ladenWeight = asn1_NOVALUE,
  weightLimits = asn1_NOVALUE,
  trailerCharacteristics = asn1_NOVALUE,
  vehicleCurrentMaxTrainWeight = asn1_NOVALUE,
  actualNumberOfPassengers = asn1_NOVALUE,
  axleWeightLimits = asn1_NOVALUE,
  dieselEmissionValues = asn1_NOVALUE,
  driverCharacteristics = asn1_NOVALUE,
  engineDetails = asn1_NOVALUE,
  exhaustEmissionValues = asn1_NOVALUE,
  passengerCapacity = asn1_NOVALUE,
  soundLevel = asn1_NOVALUE
  %% with extension mark
}).

-endif. %% _EFCDATADICTIONARY_HRL_
