%% Generated by the Erlang ASN.1 PER (unaligned) compiler. Version: 5.3.1
%% Purpose: Encoding and decoding of the types in J2540ITIS.

-module('J2540ITIS').
-moduledoc false.
-compile(nowarn_unused_vars).
-dialyzer(no_improper_lists).
-dialyzer(no_match).
-include("J2540ITIS.hrl").
-asn1_info([{vsn,'5.3.1'},
            {module,'J2540ITIS'},
            {options,[{i,"./ebin"},uper,jer,verbose,{i,"./asn"},{outdir,"./ebin"},{i,"."}]}]).

-export([encoding_rule/0,maps/0,bit_string_format/0,
         legacy_erlang_types/0]).
-export(['dialyzer-suppressions'/1]).
-export([typeinfo/1]).
-export([
enc_AccidentsAndIncidents/1,
enc_AlternateRoute/1,
enc_AssetStatus/1,
enc_Closures/1,
enc_DelayStatusCancellation/1,
enc_DeviceStatus/1,
enc_Disasters/1,
enc_Disturbances/1,
enc_GenericLocations/1,
enc_IncidentResponseEquipment/1,
enc_IncidentResponseStatus/1,
enc_SystemInformation/1,
enc_AdviceInstructionsMandatory/1,
enc_AdviceInstructionsRecommendations/1,
enc_ITIStext/1,
enc_ITISgroups/1,
enc_ITIScodes/1,
enc_LaneRoadway/1,
enc_LargeNumbers/1,
enc_MobileSituation/1,
enc_MUTCDLocations/1,
enc_NamedObjects/1,
enc_Objects/1,
enc_Obstruction/1,
enc_ParkingInformation/1,
enc_PavementConditions/1,
enc_Precipitation/1,
enc_Qualifiers/1,
enc_RecreationalObjectsAndActivities/1,
enc_RegulatoryAndWarningSigns/1,
enc_ResponderGroupAffected/1,
enc_RestrictionClass/1,
enc_RoadsideAssets/1,
enc_Roadwork/1,
enc_SmallNumbers/1,
enc_SpecialEvents/1,
enc_SportingEvents/1,
enc_StatesAndTerritories/1,
enc_StreetSuffixes/1,
enc_Structures/1,
enc_SuggestionAdvice/1,
enc_Temperature/1,
enc_TrafficConditions/1,
enc_TransitMode/1,
enc_TransitOperations/1,
enc_TravelerGroupAffected/1,
enc_Units/1,
enc_UnusualDriving/1,
enc_ValidManeuvers/1,
enc_VehicleGroupAffected/1,
enc_VisibilityAndAirQuality/1,
enc_WarningAdvice/1,
enc_WeatherConditions/1,
enc_Winds/1,
enc_WinterDrivingIndex/1,
enc_WinterDrivingRestrictions/1,
enc_ITISEventType/1,
enc_ITIScodesAndText/1
]).

-export([
dec_AccidentsAndIncidents/1,
dec_AlternateRoute/1,
dec_AssetStatus/1,
dec_Closures/1,
dec_DelayStatusCancellation/1,
dec_DeviceStatus/1,
dec_Disasters/1,
dec_Disturbances/1,
dec_GenericLocations/1,
dec_IncidentResponseEquipment/1,
dec_IncidentResponseStatus/1,
dec_SystemInformation/1,
dec_AdviceInstructionsMandatory/1,
dec_AdviceInstructionsRecommendations/1,
dec_ITIStext/1,
dec_ITISgroups/1,
dec_ITIScodes/1,
dec_LaneRoadway/1,
dec_LargeNumbers/1,
dec_MobileSituation/1,
dec_MUTCDLocations/1,
dec_NamedObjects/1,
dec_Objects/1,
dec_Obstruction/1,
dec_ParkingInformation/1,
dec_PavementConditions/1,
dec_Precipitation/1,
dec_Qualifiers/1,
dec_RecreationalObjectsAndActivities/1,
dec_RegulatoryAndWarningSigns/1,
dec_ResponderGroupAffected/1,
dec_RestrictionClass/1,
dec_RoadsideAssets/1,
dec_Roadwork/1,
dec_SmallNumbers/1,
dec_SpecialEvents/1,
dec_SportingEvents/1,
dec_StatesAndTerritories/1,
dec_StreetSuffixes/1,
dec_Structures/1,
dec_SuggestionAdvice/1,
dec_Temperature/1,
dec_TrafficConditions/1,
dec_TransitMode/1,
dec_TransitOperations/1,
dec_TravelerGroupAffected/1,
dec_Units/1,
dec_UnusualDriving/1,
dec_ValidManeuvers/1,
dec_VehicleGroupAffected/1,
dec_VisibilityAndAirQuality/1,
dec_WarningAdvice/1,
dec_WeatherConditions/1,
dec_Winds/1,
dec_WinterDrivingIndex/1,
dec_WinterDrivingRestrictions/1,
dec_ITISEventType/1,
dec_ITIScodesAndText/1
]).

-export([info/0]).

-export([encode/2,decode/2]).
-export([jer_encode/2,jer_decode/2]).

encoding_rule() -> uper.

maps() -> false.

bit_string_format() -> bitstring.

legacy_erlang_types() -> false.

encode(Type, Data) ->
try complete(encode_disp(Type, Data)) of
  Bytes ->
    {ok,Bytes}
  catch
    Class:Exception:Stk when Class =:= error; Class =:= exit ->
      case Exception of
        {error,{asn1,Reason}} ->
          {error,{asn1,{Reason,Stk}}};
        Reason ->
         {error,{asn1,{Reason,Stk}}}
      end
end.


jer_encode(Type, Data) ->
try encode_jer('J2540ITIS', Type, Data) of
  Bytes ->
    {ok,Bytes}
  catch
    Class:Exception:Stk when Class =:= error; Class =:= exit ->
      case Exception of
        {error,{asn1,Reason}} ->
          {error,{asn1,{Reason,Stk}}};
        Reason ->
         {error,{asn1,{Reason,Stk}}}
      end
end.


decode(Type, Data) ->
try
   {Result,_Rest} = decode_disp(Type, Data),
   {ok,Result}
  catch
    Class:Exception:Stk when Class =:= error; Class =:= exit ->
      case Exception of
        {error,{asn1,Reason}} ->
          {error,{asn1,{Reason,Stk}}};
        Reason ->
         {error,{asn1,{Reason,Stk}}}
      end
end.

jer_decode(Type, Data) ->
try
   Result = decode_jer('J2540ITIS', Type, json:decode(Data)),
   {ok,Result}
  catch
    Class:Exception:Stk when Class =:= error; Class =:= exit ->
      case Exception of
        {error,{asn1,Reason}} ->
          {error,{asn1,{Reason,Stk}}};
        Reason ->
         {error,{asn1,{Reason,Stk}}}
      end
end.

encode_disp('AccidentsAndIncidents', Data) -> enc_AccidentsAndIncidents(Data);
encode_disp('AlternateRoute', Data) -> enc_AlternateRoute(Data);
encode_disp('AssetStatus', Data) -> enc_AssetStatus(Data);
encode_disp('Closures', Data) -> enc_Closures(Data);
encode_disp('DelayStatusCancellation', Data) -> enc_DelayStatusCancellation(Data);
encode_disp('DeviceStatus', Data) -> enc_DeviceStatus(Data);
encode_disp('Disasters', Data) -> enc_Disasters(Data);
encode_disp('Disturbances', Data) -> enc_Disturbances(Data);
encode_disp('GenericLocations', Data) -> enc_GenericLocations(Data);
encode_disp('IncidentResponseEquipment', Data) -> enc_IncidentResponseEquipment(Data);
encode_disp('IncidentResponseStatus', Data) -> enc_IncidentResponseStatus(Data);
encode_disp('SystemInformation', Data) -> enc_SystemInformation(Data);
encode_disp('AdviceInstructionsMandatory', Data) -> enc_AdviceInstructionsMandatory(Data);
encode_disp('AdviceInstructionsRecommendations', Data) -> enc_AdviceInstructionsRecommendations(Data);
encode_disp('ITIStext', Data) -> enc_ITIStext(Data);
encode_disp('ITISgroups', Data) -> enc_ITISgroups(Data);
encode_disp('ITIScodes', Data) -> enc_ITIScodes(Data);
encode_disp('LaneRoadway', Data) -> enc_LaneRoadway(Data);
encode_disp('LargeNumbers', Data) -> enc_LargeNumbers(Data);
encode_disp('MobileSituation', Data) -> enc_MobileSituation(Data);
encode_disp('MUTCDLocations', Data) -> enc_MUTCDLocations(Data);
encode_disp('NamedObjects', Data) -> enc_NamedObjects(Data);
encode_disp('Objects', Data) -> enc_Objects(Data);
encode_disp('Obstruction', Data) -> enc_Obstruction(Data);
encode_disp('ParkingInformation', Data) -> enc_ParkingInformation(Data);
encode_disp('PavementConditions', Data) -> enc_PavementConditions(Data);
encode_disp('Precipitation', Data) -> enc_Precipitation(Data);
encode_disp('Qualifiers', Data) -> enc_Qualifiers(Data);
encode_disp('RecreationalObjectsAndActivities', Data) -> enc_RecreationalObjectsAndActivities(Data);
encode_disp('RegulatoryAndWarningSigns', Data) -> enc_RegulatoryAndWarningSigns(Data);
encode_disp('ResponderGroupAffected', Data) -> enc_ResponderGroupAffected(Data);
encode_disp('RestrictionClass', Data) -> enc_RestrictionClass(Data);
encode_disp('RoadsideAssets', Data) -> enc_RoadsideAssets(Data);
encode_disp('Roadwork', Data) -> enc_Roadwork(Data);
encode_disp('SmallNumbers', Data) -> enc_SmallNumbers(Data);
encode_disp('SpecialEvents', Data) -> enc_SpecialEvents(Data);
encode_disp('SportingEvents', Data) -> enc_SportingEvents(Data);
encode_disp('StatesAndTerritories', Data) -> enc_StatesAndTerritories(Data);
encode_disp('StreetSuffixes', Data) -> enc_StreetSuffixes(Data);
encode_disp('Structures', Data) -> enc_Structures(Data);
encode_disp('SuggestionAdvice', Data) -> enc_SuggestionAdvice(Data);
encode_disp('Temperature', Data) -> enc_Temperature(Data);
encode_disp('TrafficConditions', Data) -> enc_TrafficConditions(Data);
encode_disp('TransitMode', Data) -> enc_TransitMode(Data);
encode_disp('TransitOperations', Data) -> enc_TransitOperations(Data);
encode_disp('TravelerGroupAffected', Data) -> enc_TravelerGroupAffected(Data);
encode_disp('Units', Data) -> enc_Units(Data);
encode_disp('UnusualDriving', Data) -> enc_UnusualDriving(Data);
encode_disp('ValidManeuvers', Data) -> enc_ValidManeuvers(Data);
encode_disp('VehicleGroupAffected', Data) -> enc_VehicleGroupAffected(Data);
encode_disp('VisibilityAndAirQuality', Data) -> enc_VisibilityAndAirQuality(Data);
encode_disp('WarningAdvice', Data) -> enc_WarningAdvice(Data);
encode_disp('WeatherConditions', Data) -> enc_WeatherConditions(Data);
encode_disp('Winds', Data) -> enc_Winds(Data);
encode_disp('WinterDrivingIndex', Data) -> enc_WinterDrivingIndex(Data);
encode_disp('WinterDrivingRestrictions', Data) -> enc_WinterDrivingRestrictions(Data);
encode_disp('ITISEventType', Data) -> enc_ITISEventType(Data);
encode_disp('ITIScodesAndText', Data) -> enc_ITIScodesAndText(Data);
encode_disp(Type, _Data) -> exit({error,{asn1,{undefined_type,Type}}}).

decode_disp('AccidentsAndIncidents', Data) -> dec_AccidentsAndIncidents(Data);
decode_disp('AlternateRoute', Data) -> dec_AlternateRoute(Data);
decode_disp('AssetStatus', Data) -> dec_AssetStatus(Data);
decode_disp('Closures', Data) -> dec_Closures(Data);
decode_disp('DelayStatusCancellation', Data) -> dec_DelayStatusCancellation(Data);
decode_disp('DeviceStatus', Data) -> dec_DeviceStatus(Data);
decode_disp('Disasters', Data) -> dec_Disasters(Data);
decode_disp('Disturbances', Data) -> dec_Disturbances(Data);
decode_disp('GenericLocations', Data) -> dec_GenericLocations(Data);
decode_disp('IncidentResponseEquipment', Data) -> dec_IncidentResponseEquipment(Data);
decode_disp('IncidentResponseStatus', Data) -> dec_IncidentResponseStatus(Data);
decode_disp('SystemInformation', Data) -> dec_SystemInformation(Data);
decode_disp('AdviceInstructionsMandatory', Data) -> dec_AdviceInstructionsMandatory(Data);
decode_disp('AdviceInstructionsRecommendations', Data) -> dec_AdviceInstructionsRecommendations(Data);
decode_disp('ITIStext', Data) -> dec_ITIStext(Data);
decode_disp('ITISgroups', Data) -> dec_ITISgroups(Data);
decode_disp('ITIScodes', Data) -> dec_ITIScodes(Data);
decode_disp('LaneRoadway', Data) -> dec_LaneRoadway(Data);
decode_disp('LargeNumbers', Data) -> dec_LargeNumbers(Data);
decode_disp('MobileSituation', Data) -> dec_MobileSituation(Data);
decode_disp('MUTCDLocations', Data) -> dec_MUTCDLocations(Data);
decode_disp('NamedObjects', Data) -> dec_NamedObjects(Data);
decode_disp('Objects', Data) -> dec_Objects(Data);
decode_disp('Obstruction', Data) -> dec_Obstruction(Data);
decode_disp('ParkingInformation', Data) -> dec_ParkingInformation(Data);
decode_disp('PavementConditions', Data) -> dec_PavementConditions(Data);
decode_disp('Precipitation', Data) -> dec_Precipitation(Data);
decode_disp('Qualifiers', Data) -> dec_Qualifiers(Data);
decode_disp('RecreationalObjectsAndActivities', Data) -> dec_RecreationalObjectsAndActivities(Data);
decode_disp('RegulatoryAndWarningSigns', Data) -> dec_RegulatoryAndWarningSigns(Data);
decode_disp('ResponderGroupAffected', Data) -> dec_ResponderGroupAffected(Data);
decode_disp('RestrictionClass', Data) -> dec_RestrictionClass(Data);
decode_disp('RoadsideAssets', Data) -> dec_RoadsideAssets(Data);
decode_disp('Roadwork', Data) -> dec_Roadwork(Data);
decode_disp('SmallNumbers', Data) -> dec_SmallNumbers(Data);
decode_disp('SpecialEvents', Data) -> dec_SpecialEvents(Data);
decode_disp('SportingEvents', Data) -> dec_SportingEvents(Data);
decode_disp('StatesAndTerritories', Data) -> dec_StatesAndTerritories(Data);
decode_disp('StreetSuffixes', Data) -> dec_StreetSuffixes(Data);
decode_disp('Structures', Data) -> dec_Structures(Data);
decode_disp('SuggestionAdvice', Data) -> dec_SuggestionAdvice(Data);
decode_disp('Temperature', Data) -> dec_Temperature(Data);
decode_disp('TrafficConditions', Data) -> dec_TrafficConditions(Data);
decode_disp('TransitMode', Data) -> dec_TransitMode(Data);
decode_disp('TransitOperations', Data) -> dec_TransitOperations(Data);
decode_disp('TravelerGroupAffected', Data) -> dec_TravelerGroupAffected(Data);
decode_disp('Units', Data) -> dec_Units(Data);
decode_disp('UnusualDriving', Data) -> dec_UnusualDriving(Data);
decode_disp('ValidManeuvers', Data) -> dec_ValidManeuvers(Data);
decode_disp('VehicleGroupAffected', Data) -> dec_VehicleGroupAffected(Data);
decode_disp('VisibilityAndAirQuality', Data) -> dec_VisibilityAndAirQuality(Data);
decode_disp('WarningAdvice', Data) -> dec_WarningAdvice(Data);
decode_disp('WeatherConditions', Data) -> dec_WeatherConditions(Data);
decode_disp('Winds', Data) -> dec_Winds(Data);
decode_disp('WinterDrivingIndex', Data) -> dec_WinterDrivingIndex(Data);
decode_disp('WinterDrivingRestrictions', Data) -> dec_WinterDrivingRestrictions(Data);
decode_disp('ITISEventType', Data) -> dec_ITISEventType(Data);
decode_disp('ITIScodesAndText', Data) -> dec_ITIScodesAndText(Data);
decode_disp(Type, _Data) -> exit({error,{asn1,{undefined_type,Type}}}).

info() ->
   case ?MODULE:module_info(attributes) of
     Attributes when is_list(Attributes) ->
       case lists:keyfind(asn1_info, 1, Attributes) of
         {_,Info} when is_list(Info) ->
           Info;
         _ ->
           []
       end;
     _ ->
       []
   end.
enc_AccidentsAndIncidents(Val) ->
if Val =:= accident ->
<<513:16>>;
Val =:= 'serious-accident' ->
<<514:16>>;
Val =:= 'injury-accident' ->
<<515:16>>;
Val =:= 'minor-accident' ->
<<516:16>>;
Val =:= 'multi-vehicle-accident' ->
<<517:16>>;
Val =:= 'numerous-accidents' ->
<<518:16>>;
Val =:= 'accident-involving-a-bicycle' ->
<<519:16>>;
Val =:= 'accident-involving-a-bus' ->
<<520:16>>;
Val =:= 'accident-involving-a-motorcycle' ->
<<521:16>>;
Val =:= 'accident-involving-a-pedestrian' ->
<<522:16>>;
Val =:= 'accident-involving-a-train' ->
<<523:16>>;
Val =:= 'accident-involving-a-truck' ->
<<524:16>>;
Val =:= 'accident-involving-hazardous-materials' ->
<<525:16>>;
Val =:= 'earlier-accident' ->
<<526:16>>;
Val =:= 'medical-emergency' ->
<<527:16>>;
Val =:= 'secondary-accident' ->
<<528:16>>;
Val =:= 'rescue-and-recovery-work-REMOVED' ->
<<529:16>>;
Val =:= 'accident-investigation-work' ->
<<530:16>>;
Val =:= incident ->
<<531:16>>;
Val =:= 'stalled-vehicle' ->
<<532:16>>;
Val =:= 'abandoned-vehicle' ->
<<533:16>>;
Val =:= 'disabled-vehicle' ->
<<534:16>>;
Val =:= 'disabled-truck' ->
<<535:16>>;
Val =:= 'disabled-semi-trailer' ->
<<536:16>>;
Val =:= 'disabled-bus' ->
<<537:16>>;
Val =:= 'disabled-train' ->
<<538:16>>;
Val =:= 'vehicle-spun-out' ->
<<539:16>>;
Val =:= 'vehicle-on-fire' ->
<<540:16>>;
Val =:= 'vehicle-in-water' ->
<<541:16>>;
Val =:= 'vehicles-slowing-to-look-at-accident' ->
<<542:16>>;
Val =:= 'jackknifed-semi-trailer' ->
<<543:16>>;
Val =:= 'jackknifed-trailer-home' ->
<<544:16>>;
Val =:= 'jackknifed-trailer' ->
<<545:16>>;
Val =:= 'spillage-occurring-from-moving-vehicle' ->
<<546:16>>;
Val =:= 'acid-spill' ->
<<547:16>>;
Val =:= 'chemical-spill' ->
<<548:16>>;
Val =:= 'fuel-spill' ->
<<549:16>>;
Val =:= 'hazardous-materials-spill' ->
<<550:16>>;
Val =:= 'oil-spill' ->
<<551:16>>;
Val =:= 'spilled-load' ->
<<552:16>>;
Val =:= 'toxic-spill' ->
<<553:16>>;
Val =:= 'overturned-vehicle' ->
<<554:16>>;
Val =:= 'overturned-truck' ->
<<555:16>>;
Val =:= 'overturned-semi-trailer' ->
<<556:16>>;
Val =:= 'overturned-bus' ->
<<557:16>>;
Val =:= 'derailed-train' ->
<<558:16>>;
Val =:= 'stuck-vehicle' ->
<<559:16>>;
Val =:= 'truck-stuck-under-bridge' ->
<<560:16>>;
Val =:= 'bus-stuck-under-bridge' ->
<<561:16>>;
Val =:= 'accident-involving-a-semi-trailer' ->
<<562:16>>;
Val =:= 'accident-cleared' ->
<<638:16>>;
Val =:= 'incident-cleared' ->
<<639:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_AccidentsAndIncidents(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
513 -> accident;
514 -> 'serious-accident';
515 -> 'injury-accident';
516 -> 'minor-accident';
517 -> 'multi-vehicle-accident';
518 -> 'numerous-accidents';
519 -> 'accident-involving-a-bicycle';
520 -> 'accident-involving-a-bus';
521 -> 'accident-involving-a-motorcycle';
522 -> 'accident-involving-a-pedestrian';
523 -> 'accident-involving-a-train';
524 -> 'accident-involving-a-truck';
525 -> 'accident-involving-hazardous-materials';
526 -> 'earlier-accident';
527 -> 'medical-emergency';
528 -> 'secondary-accident';
529 -> 'rescue-and-recovery-work-REMOVED';
530 -> 'accident-investigation-work';
531 -> incident;
532 -> 'stalled-vehicle';
533 -> 'abandoned-vehicle';
534 -> 'disabled-vehicle';
535 -> 'disabled-truck';
536 -> 'disabled-semi-trailer';
537 -> 'disabled-bus';
538 -> 'disabled-train';
539 -> 'vehicle-spun-out';
540 -> 'vehicle-on-fire';
541 -> 'vehicle-in-water';
542 -> 'vehicles-slowing-to-look-at-accident';
543 -> 'jackknifed-semi-trailer';
544 -> 'jackknifed-trailer-home';
545 -> 'jackknifed-trailer';
546 -> 'spillage-occurring-from-moving-vehicle';
547 -> 'acid-spill';
548 -> 'chemical-spill';
549 -> 'fuel-spill';
550 -> 'hazardous-materials-spill';
551 -> 'oil-spill';
552 -> 'spilled-load';
553 -> 'toxic-spill';
554 -> 'overturned-vehicle';
555 -> 'overturned-truck';
556 -> 'overturned-semi-trailer';
557 -> 'overturned-bus';
558 -> 'derailed-train';
559 -> 'stuck-vehicle';
560 -> 'truck-stuck-under-bridge';
561 -> 'bus-stuck-under-bridge';
562 -> 'accident-involving-a-semi-trailer';
638 -> 'accident-cleared';
639 -> 'incident-cleared';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_AlternateRoute(Val) ->
if Val =:= 'detour-where-possible' ->
<<8449:16>>;
Val =:= 'no-detour-available' ->
<<8450:16>>;
Val =:= 'follow-signs' ->
<<8451:16>>;
Val =:= 'follow-detour-signs' ->
<<8452:16>>;
Val =:= 'follow-special-detour-markers' ->
<<8453:16>>;
Val =:= 'do-not-follow-detour-signs' ->
<<8454:16>>;
Val =:= 'detour-in-operation' ->
<<8455:16>>;
Val =:= 'follow-local-detour' ->
<<8456:16>>;
Val =:= 'compulsory-detour-in-operation' ->
<<8457:16>>;
Val =:= 'no-suitable-detour-available' ->
<<8458:16>>;
Val =:= 'detour-is-no-longer-recommended' ->
<<8459:16>>;
Val =:= 'local-drivers-are-recommended-to-avoid-the-area' ->
<<8460:16>>;
Val =:= 'trucks-are-recommended-to-avoid-the-area' ->
<<8461:16>>;
Val =:= 'consider-alternate-route' ->
<<8462:16>>;
Val =:= 'consider-alternate-parking' ->
<<8463:16>>;
Val =:= 'consider-alternate-destination' ->
<<8464:16>>;
Val =:= 'consider-alternate-area' ->
<<8465:16>>;
Val =:= 'snow-route' ->
<<8466:16>>;
Val =:= 'emergency-snow-route' ->
<<8467:16>>;
Val =:= 'evacuation-route' ->
<<8468:16>>;
Val =:= 'truck-route' ->
<<8469:16>>;
Val =:= 'hazardous-materials-route' ->
<<8470:16>>;
Val =:= detour ->
<<8471:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_AlternateRoute(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
8449 -> 'detour-where-possible';
8450 -> 'no-detour-available';
8451 -> 'follow-signs';
8452 -> 'follow-detour-signs';
8453 -> 'follow-special-detour-markers';
8454 -> 'do-not-follow-detour-signs';
8455 -> 'detour-in-operation';
8456 -> 'follow-local-detour';
8457 -> 'compulsory-detour-in-operation';
8458 -> 'no-suitable-detour-available';
8459 -> 'detour-is-no-longer-recommended';
8460 -> 'local-drivers-are-recommended-to-avoid-the-area';
8461 -> 'trucks-are-recommended-to-avoid-the-area';
8462 -> 'consider-alternate-route';
8463 -> 'consider-alternate-parking';
8464 -> 'consider-alternate-destination';
8465 -> 'consider-alternate-area';
8466 -> 'snow-route';
8467 -> 'emergency-snow-route';
8468 -> 'evacuation-route';
8469 -> 'truck-route';
8470 -> 'hazardous-materials-route';
8471 -> detour;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_AssetStatus(Val) ->
if Val =:= 'unknown-status' ->
<<10240:16>>;
Val =:= 'ready-for-use' ->
<<10241:16>>;
Val =:= 'working-normally' ->
<<10242:16>>;
Val =:= 'working-autonomously' ->
<<10243:16>>;
Val =:= 'working-incorrectly' ->
<<10244:16>>;
Val =:= 'not-working' ->
<<10245:16>>;
Val =:= 'normal-maintenance' ->
<<10246:16>>;
Val =:= 'in-route-to-use' ->
<<10247:16>>;
Val =:= 'returning-from-use' ->
<<10248:16>>;
Val =:= 'out-of-service' ->
<<10249:16>>;
Val =:= 'off-duty' ->
<<10250:16>>;
Val =:= 'on-patrol' ->
<<10251:16>>;
Val =:= 'on-call' ->
<<10252:16>>;
Val =:= 'on-break' ->
<<10253:16>>;
Val =:= 'mandatory-time-off' ->
<<10254:16>>;
Val =:= 'low-on-fuel' ->
<<10255:16>>;
Val =:= 'low-on-water' ->
<<10256:16>>;
Val =:= 'low-charge' ->
<<10257:16>>;
Val =:= missing ->
<<10258:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_AssetStatus(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
10240 -> 'unknown-status';
10241 -> 'ready-for-use';
10242 -> 'working-normally';
10243 -> 'working-autonomously';
10244 -> 'working-incorrectly';
10245 -> 'not-working';
10246 -> 'normal-maintenance';
10247 -> 'in-route-to-use';
10248 -> 'returning-from-use';
10249 -> 'out-of-service';
10250 -> 'off-duty';
10251 -> 'on-patrol';
10252 -> 'on-call';
10253 -> 'on-break';
10254 -> 'mandatory-time-off';
10255 -> 'low-on-fuel';
10256 -> 'low-on-water';
10257 -> 'low-charge';
10258 -> missing;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Closures(Val) ->
if Val =:= 'closed-to-traffic' ->
<<769:16>>;
Val =:= closed ->
<<770:16>>;
Val =:= 'closed-ahead' ->
<<771:16>>;
Val =:= 'closed-intermittently' ->
<<772:16>>;
Val =:= 'closed-for-repairs' ->
<<773:16>>;
Val =:= 'closed-for-the-season' ->
<<774:16>>;
Val =:= blocked ->
<<775:16>>;
Val =:= 'blocked-ahead' ->
<<776:16>>;
Val =:= 'reduced-to-one-lane' ->
<<777:16>>;
Val =:= 'reduced-to-two-lanes' ->
<<778:16>>;
Val =:= 'reduced-to-three-lanes' ->
<<779:16>>;
Val =:= collapse ->
<<780:16>>;
Val =:= out ->
<<781:16>>;
Val =:= 'open-to-traffic' ->
<<891:16>>;
Val =:= open ->
<<892:16>>;
Val =:= 'reopened-to-traffic' ->
<<893:16>>;
Val =:= clearing ->
<<894:16>>;
Val =:= 'cleared-from-road' ->
<<895:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Closures(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
769 -> 'closed-to-traffic';
770 -> closed;
771 -> 'closed-ahead';
772 -> 'closed-intermittently';
773 -> 'closed-for-repairs';
774 -> 'closed-for-the-season';
775 -> blocked;
776 -> 'blocked-ahead';
777 -> 'reduced-to-one-lane';
778 -> 'reduced-to-two-lanes';
779 -> 'reduced-to-three-lanes';
780 -> collapse;
781 -> out;
891 -> 'open-to-traffic';
892 -> open;
893 -> 'reopened-to-traffic';
894 -> clearing;
895 -> 'cleared-from-road';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_DelayStatusCancellation(Val) ->
if Val =:= delays ->
<<1537:16>>;
Val =:= 'short-delays' ->
<<1538:16>>;
Val =:= 'long-delays' ->
<<1539:16>>;
Val =:= 'very-long-delays' ->
<<1540:16>>;
Val =:= 'delays-of-uncertain-duration' ->
<<1541:16>>;
Val =:= 'delayed-until-further-notice' ->
<<1542:16>>;
Val =:= busy ->
<<1543:16>>;
Val =:= 'very-busy' ->
<<1544:16>>;
Val =:= crowded ->
<<1545:16>>;
Val =:= overcrowded ->
<<1546:16>>;
Val =:= cancellations ->
<<1547:16>>;
Val =:= 'route-canceled-and-no-replacement' ->
<<1548:16>>;
Val =:= 'service-canceled' ->
<<1549:16>>;
Val =:= 'service-suspended' ->
<<1550:16>>;
Val =:= 'service-withdrawn' ->
<<1551:16>>;
Val =:= 'service-fully-booked' ->
<<1552:16>>;
Val =:= 'all-services-fully-booked' ->
<<1553:16>>;
Val =:= 'next-departure' ->
<<1554:16>>;
Val =:= 'next-arrival' ->
<<1555:16>>;
Val =:= 'very-frequent-service' ->
<<1556:16>>;
Val =:= 'frequent-service' ->
<<1557:16>>;
Val =:= 'fairly-frequent-service' ->
<<1558:16>>;
Val =:= 'regular-service' ->
<<1559:16>>;
Val =:= 'irregular-service' ->
<<1560:16>>;
Val =:= 'not-operating' ->
<<1561:16>>;
Val =:= 'system-busy' ->
<<1562:16>>;
Val =:= 'system-very-busy' ->
<<1563:16>>;
Val =:= 'system-crowded' ->
<<1564:16>>;
Val =:= 'system-overcrowded' ->
<<1565:16>>;
Val =:= 'deleted-travel-time' ->
<<1566:16>>;
Val =:= headway ->
<<1567:16>>;
Val =:= 'extra-services-in-operation' ->
<<1568:16>>;
Val =:= 'delays-clearing' ->
<<1660:16>>;
Val =:= 'delays-cleared' ->
<<1661:16>>;
Val =:= 'normal-services-resumed' ->
<<1662:16>>;
Val =:= operating ->
<<1663:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_DelayStatusCancellation(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
1537 -> delays;
1538 -> 'short-delays';
1539 -> 'long-delays';
1540 -> 'very-long-delays';
1541 -> 'delays-of-uncertain-duration';
1542 -> 'delayed-until-further-notice';
1543 -> busy;
1544 -> 'very-busy';
1545 -> crowded;
1546 -> overcrowded;
1547 -> cancellations;
1548 -> 'route-canceled-and-no-replacement';
1549 -> 'service-canceled';
1550 -> 'service-suspended';
1551 -> 'service-withdrawn';
1552 -> 'service-fully-booked';
1553 -> 'all-services-fully-booked';
1554 -> 'next-departure';
1555 -> 'next-arrival';
1556 -> 'very-frequent-service';
1557 -> 'frequent-service';
1558 -> 'fairly-frequent-service';
1559 -> 'regular-service';
1560 -> 'irregular-service';
1561 -> 'not-operating';
1562 -> 'system-busy';
1563 -> 'system-very-busy';
1564 -> 'system-crowded';
1565 -> 'system-overcrowded';
1566 -> 'deleted-travel-time';
1567 -> headway;
1568 -> 'extra-services-in-operation';
1660 -> 'delays-clearing';
1661 -> 'delays-cleared';
1662 -> 'normal-services-resumed';
1663 -> operating;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_DeviceStatus(Val) ->
if Val =:= 'lane-control-signs-not-working' ->
<<2305:16>>;
Val =:= 'lane-control-signs-working-incorrectly' ->
<<2306:16>>;
Val =:= 'lane-control-signs-operating' ->
<<2307:16>>;
Val =:= 'variable-message-signs-not-working' ->
<<2308:16>>;
Val =:= 'variable-message-signs-working-incorrectly' ->
<<2309:16>>;
Val =:= 'variable-message-signs-operating' ->
<<2310:16>>;
Val =:= 'emergency-telephones-not-working' ->
<<2311:16>>;
Val =:= 'emergency-telephone-number-not-working' ->
<<2312:16>>;
Val =:= 'traffic-lights-not-working' ->
<<2313:16>>;
Val =:= 'traffic-lights-working-incorrectly' ->
<<2314:16>>;
Val =:= 'ramp-control-signals-not-working' ->
<<2315:16>>;
Val =:= 'ramp-control-signals-working-incorrectly' ->
<<2316:16>>;
Val =:= 'temporary-traffic-lights-not-working' ->
<<2317:16>>;
Val =:= 'temporary-traffic-lights-working-incorrectly' ->
<<2318:16>>;
Val =:= 'traffic-signal-control-computer-not-working' ->
<<2319:16>>;
Val =:= 'traffic-signal-timings-changed' ->
<<2320:16>>;
Val =:= 'overheight-warning-system-triggered' ->
<<2321:16>>;
Val =:= 'equipment-failure' ->
<<2322:16>>;
Val =:= 'railroad-crossing-equipment-failure' ->
<<2323:16>>;
Val =:= 'tunnel-ventilation-not-working' ->
<<2324:16>>;
Val =:= 'power-failure' ->
<<2325:16>>;
Val =:= 'widespread-power-outages' ->
<<2326:16>>;
Val =:= 'technical-problems' ->
<<2327:16>>;
Val =:= 'sign-down' ->
<<2328:16>>;
Val =:= 'lines-in-road-faded' ->
<<2329:16>>;
Val =:= 'damaged-light-standard' ->
<<2330:16>>;
Val =:= 'traffic-signal-stuck-on-flash' ->
<<2331:16>>;
Val =:= 'guide-rail' ->
<<2332:16>>;
Val =:= fencing ->
<<2333:16>>;
Val =:= 'light-standard-hanging-by-wires' ->
<<2334:16>>;
Val =:= 'call-box' ->
<<2335:16>>;
Val =:= 'signal-cabinet' ->
<<2336:16>>;
Val =:= detector ->
<<2337:16>>;
Val =:= 'improper-use-of-State-vehicle-or-equipment' ->
<<2338:16>>;
Val =:= 'bulb-out' ->
<<2339:16>>;
Val =:= 'not-yet-operational' ->
<<2340:16>>;
Val =:= 'not-yet-installed' ->
<<2341:16>>;
Val =:= 'electronic-signs-repaired' ->
<<2428:16>>;
Val =:= 'emergency-call-facilities-restored' ->
<<2429:16>>;
Val =:= 'traffic-signals-repaired' ->
<<2430:16>>;
Val =:= 'railroad-crossing-equipment-now-working-normally' ->
<<2431:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_DeviceStatus(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
2305 -> 'lane-control-signs-not-working';
2306 -> 'lane-control-signs-working-incorrectly';
2307 -> 'lane-control-signs-operating';
2308 -> 'variable-message-signs-not-working';
2309 -> 'variable-message-signs-working-incorrectly';
2310 -> 'variable-message-signs-operating';
2311 -> 'emergency-telephones-not-working';
2312 -> 'emergency-telephone-number-not-working';
2313 -> 'traffic-lights-not-working';
2314 -> 'traffic-lights-working-incorrectly';
2315 -> 'ramp-control-signals-not-working';
2316 -> 'ramp-control-signals-working-incorrectly';
2317 -> 'temporary-traffic-lights-not-working';
2318 -> 'temporary-traffic-lights-working-incorrectly';
2319 -> 'traffic-signal-control-computer-not-working';
2320 -> 'traffic-signal-timings-changed';
2321 -> 'overheight-warning-system-triggered';
2322 -> 'equipment-failure';
2323 -> 'railroad-crossing-equipment-failure';
2324 -> 'tunnel-ventilation-not-working';
2325 -> 'power-failure';
2326 -> 'widespread-power-outages';
2327 -> 'technical-problems';
2328 -> 'sign-down';
2329 -> 'lines-in-road-faded';
2330 -> 'damaged-light-standard';
2331 -> 'traffic-signal-stuck-on-flash';
2332 -> 'guide-rail';
2333 -> fencing;
2334 -> 'light-standard-hanging-by-wires';
2335 -> 'call-box';
2336 -> 'signal-cabinet';
2337 -> detector;
2338 -> 'improper-use-of-State-vehicle-or-equipment';
2339 -> 'bulb-out';
2340 -> 'not-yet-operational';
2341 -> 'not-yet-installed';
2428 -> 'electronic-signs-repaired';
2429 -> 'emergency-call-facilities-restored';
2430 -> 'traffic-signals-repaired';
2431 -> 'railroad-crossing-equipment-now-working-normally';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Disasters(Val) ->
if Val =:= 'flash-flood' ->
<<3073:16>>;
Val =:= 'major-flood' ->
<<3074:16>>;
Val =:= 'reservoir-failure' ->
<<3075:16>>;
Val =:= 'levee-failure' ->
<<3076:16>>;
Val =:= tsunami ->
<<3077:16>>;
Val =:= 'tidal-wave' ->
<<3078:16>>;
Val =:= 'volcanic-eruption' ->
<<3079:16>>;
Val =:= 'ash-fall' ->
<<3080:16>>;
Val =:= 'lava-flow' ->
<<3081:16>>;
Val =:= 'serious-fire' ->
<<3082:16>>;
Val =:= 'forest-fire' ->
<<3083:16>>;
Val =:= wildfire ->
<<3084:16>>;
Val =:= 'building-fire' ->
<<3085:16>>;
Val =:= 'brush-fire' ->
<<3086:16>>;
Val =:= 'grass-fire' ->
<<3087:16>>;
Val =:= 'fire-danger-extreme' ->
<<3088:16>>;
Val =:= 'fire-danger-very-high' ->
<<3089:16>>;
Val =:= 'fire-danger-high' ->
<<3090:16>>;
Val =:= 'fire-danger-medium' ->
<<3091:16>>;
Val =:= 'fire-danger-low' ->
<<3092:16>>;
Val =:= 'earthquake-damage' ->
<<3093:16>>;
Val =:= 'air-crash' ->
<<3094:16>>;
Val =:= 'rail-crash' ->
<<3095:16>>;
Val =:= 'toxic-release' ->
<<3096:16>>;
Val =:= 'toxic-leak' ->
<<3097:16>>;
Val =:= 'radioactive-release' ->
<<3098:16>>;
Val =:= 'radiation-hazard' ->
<<3099:16>>;
Val =:= 'reactor-leakage' ->
<<3100:16>>;
Val =:= explosion ->
<<3101:16>>;
Val =:= 'major-hazardous-materials-fire' ->
<<3102:16>>;
Val =:= 'major-hazardous-materials-release' ->
<<3103:16>>;
Val =:= 'disaster-cleared' ->
<<3199:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Disasters(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
3073 -> 'flash-flood';
3074 -> 'major-flood';
3075 -> 'reservoir-failure';
3076 -> 'levee-failure';
3077 -> tsunami;
3078 -> 'tidal-wave';
3079 -> 'volcanic-eruption';
3080 -> 'ash-fall';
3081 -> 'lava-flow';
3082 -> 'serious-fire';
3083 -> 'forest-fire';
3084 -> wildfire;
3085 -> 'building-fire';
3086 -> 'brush-fire';
3087 -> 'grass-fire';
3088 -> 'fire-danger-extreme';
3089 -> 'fire-danger-very-high';
3090 -> 'fire-danger-high';
3091 -> 'fire-danger-medium';
3092 -> 'fire-danger-low';
3093 -> 'earthquake-damage';
3094 -> 'air-crash';
3095 -> 'rail-crash';
3096 -> 'toxic-release';
3097 -> 'toxic-leak';
3098 -> 'radioactive-release';
3099 -> 'radiation-hazard';
3100 -> 'reactor-leakage';
3101 -> explosion;
3102 -> 'major-hazardous-materials-fire';
3103 -> 'major-hazardous-materials-release';
3199 -> 'disaster-cleared';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Disturbances(Val) ->
if Val =:= assault ->
<<3329:16>>;
Val =:= crime ->
<<3330:16>>;
Val =:= robbery ->
<<3331:16>>;
Val =:= 'fare-dispute' ->
<<3332:16>>;
Val =:= shooting ->
<<3333:16>>;
Val =:= 'gunfire-on-roadway' ->
<<3334:16>>;
Val =:= suicide ->
<<3335:16>>;
Val =:= fight ->
<<3336:16>>;
Val =:= 'gang-fight' ->
<<3337:16>>;
Val =:= 'person-harassment' ->
<<3338:16>>;
Val =:= 'person-injured' ->
<<3339:16>>;
Val =:= 'unruly-passenger' ->
<<3340:16>>;
Val =:= 'person-intoxicated' ->
<<3341:16>>;
Val =:= 'crowd-control-problem' ->
<<3342:16>>;
Val =:= demonstration ->
<<3343:16>>;
Val =:= march ->
<<3344:16>>;
Val =:= 'public-disturbance' ->
<<3345:16>>;
Val =:= riot ->
<<3346:16>>;
Val =:= 'civil-unrest' ->
<<3347:16>>;
Val =:= 'civil-emergency' ->
<<3348:16>>;
Val =:= strike ->
<<3349:16>>;
Val =:= 'public-transit-strike' ->
<<3350:16>>;
Val =:= stampede ->
<<3351:16>>;
Val =:= 'teargas-used' ->
<<3352:16>>;
Val =:= 'security-alert' ->
<<3353:16>>;
Val =:= 'security-incident' ->
<<3354:16>>;
Val =:= checkpoint ->
<<3355:16>>;
Val =:= 'bomb-alert' ->
<<3356:16>>;
Val =:= 'terrorist-incident' ->
<<3357:16>>;
Val =:= 'high-velocity-shell-fire' ->
<<3358:16>>;
Val =:= 'explosives-in-use' ->
<<3359:16>>;
Val =:= 'air-raid' ->
<<3360:16>>;
Val =:= 'weapons-of-mass-destruction-threat' ->
<<3361:16>>;
Val =:= 'military-operations' ->
<<3362:16>>;
Val =:= 'sick-customer' ->
<<3363:16>>;
Val =:= 'security-problem-cleared' ->
<<3454:16>>;
Val =:= 'traffic-disturbance-cleared' ->
<<3455:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Disturbances(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
3329 -> assault;
3330 -> crime;
3331 -> robbery;
3332 -> 'fare-dispute';
3333 -> shooting;
3334 -> 'gunfire-on-roadway';
3335 -> suicide;
3336 -> fight;
3337 -> 'gang-fight';
3338 -> 'person-harassment';
3339 -> 'person-injured';
3340 -> 'unruly-passenger';
3341 -> 'person-intoxicated';
3342 -> 'crowd-control-problem';
3343 -> demonstration;
3344 -> march;
3345 -> 'public-disturbance';
3346 -> riot;
3347 -> 'civil-unrest';
3348 -> 'civil-emergency';
3349 -> strike;
3350 -> 'public-transit-strike';
3351 -> stampede;
3352 -> 'teargas-used';
3353 -> 'security-alert';
3354 -> 'security-incident';
3355 -> checkpoint;
3356 -> 'bomb-alert';
3357 -> 'terrorist-incident';
3358 -> 'high-velocity-shell-fire';
3359 -> 'explosives-in-use';
3360 -> 'air-raid';
3361 -> 'weapons-of-mass-destruction-threat';
3362 -> 'military-operations';
3363 -> 'sick-customer';
3454 -> 'security-problem-cleared';
3455 -> 'traffic-disturbance-cleared';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_GenericLocations(Val) ->
if Val =:= 'on-bridges' ->
<<7937:16>>;
Val =:= 'in-tunnels' ->
<<7938:16>>;
Val =:= 'entering-or-leaving-tunnels' ->
<<7939:16>>;
Val =:= 'on-ramps' ->
<<7940:16>>;
Val =:= 'in-road-construction-area' ->
<<7941:16>>;
Val =:= 'around-a-curve' ->
<<7942:16>>;
Val =:= 'on-minor-roads' ->
<<7943:16>>;
Val =:= 'in-the-opposing-lanes' ->
<<7944:16>>;
Val =:= 'adjacent-to-roadway' ->
<<7945:16>>;
Val =:= 'on-bend' ->
<<7946:16>>;
Val =:= 'entire-intersection' ->
<<7947:16>>;
Val =:= 'in-the-median' ->
<<7948:16>>;
Val =:= 'moved-to-side-of-road' ->
<<7949:16>>;
Val =:= 'moved-to-shoulder' ->
<<7950:16>>;
Val =:= 'on-the-roadway' ->
<<7951:16>>;
Val =:= 'in-shaded-areas' ->
<<7952:16>>;
Val =:= 'in-low-lying-areas' ->
<<7953:16>>;
Val =:= 'in-the-downtown-area' ->
<<7954:16>>;
Val =:= 'in-the-inner-city-area' ->
<<7955:16>>;
Val =:= 'in-parts' ->
<<7956:16>>;
Val =:= 'in-some-places' ->
<<7957:16>>;
Val =:= 'in-the-ditch' ->
<<7958:16>>;
Val =:= 'in-the-valley' ->
<<7959:16>>;
Val =:= 'on-hill-top' ->
<<7960:16>>;
Val =:= 'near-the-foothills' ->
<<7961:16>>;
Val =:= 'at-high-altitudes' ->
<<7962:16>>;
Val =:= 'near-the-lake' ->
<<7963:16>>;
Val =:= 'near-the-shore' ->
<<7964:16>>;
Val =:= 'over-the-crest-of-a-hill' ->
<<7965:16>>;
Val =:= 'other-than-on-the-roadway' ->
<<7966:16>>;
Val =:= 'near-the-beach' ->
<<7967:16>>;
Val =:= 'near-beach-access-point' ->
<<7968:16>>;
Val =:= 'lower-level' ->
<<7969:16>>;
Val =:= 'upper-level' ->
<<7970:16>>;
Val =:= airport ->
<<7971:16>>;
Val =:= concourse ->
<<7972:16>>;
Val =:= gate ->
<<7973:16>>;
Val =:= 'baggage-claim' ->
<<7974:16>>;
Val =:= 'customs-point' ->
<<7975:16>>;
Val =:= station ->
<<7976:16>>;
Val =:= platform ->
<<7977:16>>;
Val =:= dock ->
<<7978:16>>;
Val =:= depot ->
<<7979:16>>;
Val =:= 'ev-charging-point' ->
<<7980:16>>;
Val =:= 'information-welcome-point' ->
<<7981:16>>;
Val =:= 'at-rest-area' ->
<<7982:16>>;
Val =:= 'at-service-area' ->
<<7983:16>>;
Val =:= 'at-weigh-station' ->
<<7984:16>>;
Val =:= 'picnic-areas' ->
<<7985:16>>;
Val =:= 'rest-area' ->
<<7986:16>>;
Val =:= 'service-stations' ->
<<7987:16>>;
Val =:= toilets ->
<<7988:16>>;
Val =:= 'on-the-right' ->
<<7989:16>>;
Val =:= 'on-the-left' ->
<<7990:16>>;
Val =:= 'in-the-center' ->
<<7991:16>>;
Val =:= 'in-the-opposite-direction' ->
<<7992:16>>;
Val =:= 'cross-traffic' ->
<<7993:16>>;
Val =:= 'northbound-traffic' ->
<<7994:16>>;
Val =:= 'eastbound-traffic' ->
<<7995:16>>;
Val =:= 'southbound-traffic' ->
<<7996:16>>;
Val =:= 'westbound-traffic' ->
<<7997:16>>;
Val =:= north ->
<<7998:16>>;
Val =:= south ->
<<7999:16>>;
Val =:= east ->
<<8000:16>>;
Val =:= west ->
<<8001:16>>;
Val =:= northeast ->
<<8002:16>>;
Val =:= northwest ->
<<8003:16>>;
Val =:= southeast ->
<<8004:16>>;
Val =:= southwest ->
<<8005:16>>;
Val =:= 'mountain-pass' ->
<<8006:16>>;
Val =:= 'reservation-center' ->
<<8007:16>>;
Val =:= 'nearby-basin' ->
<<8008:16>>;
Val =:= 'on-tracks' ->
<<8009:16>>;
Val =:= dip ->
<<8010:16>>;
Val =:= 'traffic-circle' ->
<<8011:16>>;
Val =:= 'park-and-ride-lot' ->
<<8012:16>>;
Val =:= to ->
<<8014:16>>;
Val =:= by ->
<<8015:16>>;
Val =:= through ->
<<8016:16>>;
Val =:= 'area-of' ->
<<8017:16>>;
Val =:= under ->
<<8018:16>>;
Val =:= over ->
<<8019:16>>;
Val =:= from ->
<<8020:16>>;
Val =:= approaching ->
<<8021:16>>;
Val =:= 'entering-at' ->
<<8022:16>>;
Val =:= 'exiting-at' ->
<<8023:16>>;
Val =:= 'across-tracks' ->
<<8024:16>>;
Val =:= 'in-street' ->
<<8025:16>>;
Val =:= 'on-curve' ->
<<8026:16>>;
Val =:= shoulder ->
<<8027:16>>;
Val =:= crossover ->
<<8028:16>>;
Val =:= 'cross-road' ->
<<8029:16>>;
Val =:= 'side-road' ->
<<8030:16>>;
Val =:= 'bus-stop' ->
<<8031:16>>;
Val =:= intersection ->
<<8032:16>>;
Val =:= 'roadside-park' ->
<<8033:16>>;
Val =:= coast ->
<<8034:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_GenericLocations(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
7937 -> 'on-bridges';
7938 -> 'in-tunnels';
7939 -> 'entering-or-leaving-tunnels';
7940 -> 'on-ramps';
7941 -> 'in-road-construction-area';
7942 -> 'around-a-curve';
7943 -> 'on-minor-roads';
7944 -> 'in-the-opposing-lanes';
7945 -> 'adjacent-to-roadway';
7946 -> 'on-bend';
7947 -> 'entire-intersection';
7948 -> 'in-the-median';
7949 -> 'moved-to-side-of-road';
7950 -> 'moved-to-shoulder';
7951 -> 'on-the-roadway';
7952 -> 'in-shaded-areas';
7953 -> 'in-low-lying-areas';
7954 -> 'in-the-downtown-area';
7955 -> 'in-the-inner-city-area';
7956 -> 'in-parts';
7957 -> 'in-some-places';
7958 -> 'in-the-ditch';
7959 -> 'in-the-valley';
7960 -> 'on-hill-top';
7961 -> 'near-the-foothills';
7962 -> 'at-high-altitudes';
7963 -> 'near-the-lake';
7964 -> 'near-the-shore';
7965 -> 'over-the-crest-of-a-hill';
7966 -> 'other-than-on-the-roadway';
7967 -> 'near-the-beach';
7968 -> 'near-beach-access-point';
7969 -> 'lower-level';
7970 -> 'upper-level';
7971 -> airport;
7972 -> concourse;
7973 -> gate;
7974 -> 'baggage-claim';
7975 -> 'customs-point';
7976 -> station;
7977 -> platform;
7978 -> dock;
7979 -> depot;
7980 -> 'ev-charging-point';
7981 -> 'information-welcome-point';
7982 -> 'at-rest-area';
7983 -> 'at-service-area';
7984 -> 'at-weigh-station';
7985 -> 'picnic-areas';
7986 -> 'rest-area';
7987 -> 'service-stations';
7988 -> toilets;
7989 -> 'on-the-right';
7990 -> 'on-the-left';
7991 -> 'in-the-center';
7992 -> 'in-the-opposite-direction';
7993 -> 'cross-traffic';
7994 -> 'northbound-traffic';
7995 -> 'eastbound-traffic';
7996 -> 'southbound-traffic';
7997 -> 'westbound-traffic';
7998 -> north;
7999 -> south;
8000 -> east;
8001 -> west;
8002 -> northeast;
8003 -> northwest;
8004 -> southeast;
8005 -> southwest;
8006 -> 'mountain-pass';
8007 -> 'reservation-center';
8008 -> 'nearby-basin';
8009 -> 'on-tracks';
8010 -> dip;
8011 -> 'traffic-circle';
8012 -> 'park-and-ride-lot';
8014 -> to;
8015 -> by;
8016 -> through;
8017 -> 'area-of';
8018 -> under;
8019 -> over;
8020 -> from;
8021 -> approaching;
8022 -> 'entering-at';
8023 -> 'exiting-at';
8024 -> 'across-tracks';
8025 -> 'in-street';
8026 -> 'on-curve';
8027 -> shoulder;
8028 -> crossover;
8029 -> 'cross-road';
8030 -> 'side-road';
8031 -> 'bus-stop';
8032 -> intersection;
8033 -> 'roadside-park';
8034 -> coast;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_IncidentResponseEquipment(Val) ->
if Val =:= 'ground-fire-suppression' ->
<<9985:16>>;
Val =:= 'heavy-ground-equipment' ->
<<9986:16>>;
Val =:= aircraft ->
<<9988:16>>;
Val =:= 'marine-equipment' ->
<<9989:16>>;
Val =:= 'support-equipment' ->
<<9990:16>>;
Val =:= 'medical-rescue-unit' ->
<<9991:16>>;
Val =:= other ->
<<9993:16>>;
Val =:= 'ground-fire-suppression-other' ->
<<9994:16>>;
Val =:= engine ->
<<9995:16>>;
Val =:= 'truck-or-aerial' ->
<<9996:16>>;
Val =:= quint ->
<<9997:16>>;
Val =:= 'tanker-pumper-combination' ->
<<9998:16>>;
Val =:= 'brush-truck' ->
<<10000:16>>;
Val =:= 'aircraft-rescue-firefighting' ->
<<10001:16>>;
Val =:= 'heavy-ground-equipment-other' ->
<<10004:16>>;
Val =:= 'dozer-or-plow' ->
<<10005:16>>;
Val =:= tractor ->
<<10006:16>>;
Val =:= 'tanker-or-tender' ->
<<10008:16>>;
Val =:= 'aircraft-other' ->
<<10024:16>>;
Val =:= 'aircraft-fixed-wing-tanker' ->
<<10025:16>>;
Val =:= helitanker ->
<<10026:16>>;
Val =:= helicopter ->
<<10027:16>>;
Val =:= 'marine-equipment-other' ->
<<10034:16>>;
Val =:= 'fire-boat-with-pump' ->
<<10035:16>>;
Val =:= 'boat-no-pump' ->
<<10036:16>>;
Val =:= 'support-apparatus-other' ->
<<10044:16>>;
Val =:= 'breathing-apparatus-support' ->
<<10045:16>>;
Val =:= 'light-and-air-unit' ->
<<10046:16>>;
Val =:= 'medical-rescue-unit-other' ->
<<10054:16>>;
Val =:= 'rescue-unit' ->
<<10055:16>>;
Val =:= 'urban-search-rescue-unit' ->
<<10056:16>>;
Val =:= 'high-angle-rescue' ->
<<10057:16>>;
Val =:= 'crash-fire-rescue' ->
<<10058:16>>;
Val =:= 'bLS-unit' ->
<<10059:16>>;
Val =:= 'aLS-unit' ->
<<10060:16>>;
Val =:= 'mobile-command-post' ->
<<10075:16>>;
Val =:= 'chief-officer-car' ->
<<10076:16>>;
Val =:= 'hAZMAT-unit' ->
<<10077:16>>;
Val =:= 'type-i-hand-crew' ->
<<10078:16>>;
Val =:= 'type-ii-hand-crew' ->
<<10079:16>>;
Val =:= 'privately-owned-vehicle' ->
<<10083:16>>;
Val =:= 'other-apparatus-resource' ->
<<10084:16>>;
Val =:= ambulance ->
<<10085:16>>;
Val =:= 'bomb-squad-van' ->
<<10086:16>>;
Val =:= 'combine-harvester' ->
<<10087:16>>;
Val =:= 'construction-vehicle' ->
<<10088:16>>;
Val =:= 'farm-tractor' ->
<<10089:16>>;
Val =:= 'grass-cutting-machines' ->
<<10090:16>>;
Val =:= 'hAZMAT-containment-tow' ->
<<10091:16>>;
Val =:= 'heavy-tow' ->
<<10092:16>>;
Val =:= 'hedge-cutting-machines' ->
<<10093:16>>;
Val =:= 'light-tow' ->
<<10094:16>>;
Val =:= 'mobile-crane' ->
<<10095:16>>;
Val =:= 'refuse-collection-vehicle' ->
<<10096:16>>;
Val =:= 'resurfacing-vehicle' ->
<<10097:16>>;
Val =:= 'road-sweeper' ->
<<10098:16>>;
Val =:= 'roadside-litter-collection-crews' ->
<<10099:16>>;
Val =:= 'salvage-vehicle' ->
<<10100:16>>;
Val =:= 'sand-truck' ->
<<10101:16>>;
Val =:= snowplow ->
<<10102:16>>;
Val =:= 'steam-roller' ->
<<10103:16>>;
Val =:= 'swat-team-van' ->
<<10104:16>>;
Val =:= 'track-laying-vehicle' ->
<<10105:16>>;
Val =:= 'unknown-vehicle' ->
<<10106:16>>;
Val =:= 'white-lining-vehicle' ->
<<10107:16>>;
Val =:= 'dump-truck' ->
<<10108:16>>;
Val =:= 'supervisor-vehicle' ->
<<10109:16>>;
Val =:= 'snow-blower' ->
<<10110:16>>;
Val =:= 'rotary-snow-blower' ->
<<10111:16>>;
Val =:= 'road-grader' ->
<<10112:16>>;
Val =:= 'steam-truck' ->
<<10113:16>>;
Val =:= 'flatbed-tow' ->
<<10114:16>>;
Val =:= 'survey-crews' ->
<<10115:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_IncidentResponseEquipment(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
9985 -> 'ground-fire-suppression';
9986 -> 'heavy-ground-equipment';
9988 -> aircraft;
9989 -> 'marine-equipment';
9990 -> 'support-equipment';
9991 -> 'medical-rescue-unit';
9993 -> other;
9994 -> 'ground-fire-suppression-other';
9995 -> engine;
9996 -> 'truck-or-aerial';
9997 -> quint;
9998 -> 'tanker-pumper-combination';
10000 -> 'brush-truck';
10001 -> 'aircraft-rescue-firefighting';
10004 -> 'heavy-ground-equipment-other';
10005 -> 'dozer-or-plow';
10006 -> tractor;
10008 -> 'tanker-or-tender';
10024 -> 'aircraft-other';
10025 -> 'aircraft-fixed-wing-tanker';
10026 -> helitanker;
10027 -> helicopter;
10034 -> 'marine-equipment-other';
10035 -> 'fire-boat-with-pump';
10036 -> 'boat-no-pump';
10044 -> 'support-apparatus-other';
10045 -> 'breathing-apparatus-support';
10046 -> 'light-and-air-unit';
10054 -> 'medical-rescue-unit-other';
10055 -> 'rescue-unit';
10056 -> 'urban-search-rescue-unit';
10057 -> 'high-angle-rescue';
10058 -> 'crash-fire-rescue';
10059 -> 'bLS-unit';
10060 -> 'aLS-unit';
10075 -> 'mobile-command-post';
10076 -> 'chief-officer-car';
10077 -> 'hAZMAT-unit';
10078 -> 'type-i-hand-crew';
10079 -> 'type-ii-hand-crew';
10083 -> 'privately-owned-vehicle';
10084 -> 'other-apparatus-resource';
10085 -> ambulance;
10086 -> 'bomb-squad-van';
10087 -> 'combine-harvester';
10088 -> 'construction-vehicle';
10089 -> 'farm-tractor';
10090 -> 'grass-cutting-machines';
10091 -> 'hAZMAT-containment-tow';
10092 -> 'heavy-tow';
10093 -> 'hedge-cutting-machines';
10094 -> 'light-tow';
10095 -> 'mobile-crane';
10096 -> 'refuse-collection-vehicle';
10097 -> 'resurfacing-vehicle';
10098 -> 'road-sweeper';
10099 -> 'roadside-litter-collection-crews';
10100 -> 'salvage-vehicle';
10101 -> 'sand-truck';
10102 -> snowplow;
10103 -> 'steam-roller';
10104 -> 'swat-team-van';
10105 -> 'track-laying-vehicle';
10106 -> 'unknown-vehicle';
10107 -> 'white-lining-vehicle';
10108 -> 'dump-truck';
10109 -> 'supervisor-vehicle';
10110 -> 'snow-blower';
10111 -> 'rotary-snow-blower';
10112 -> 'road-grader';
10113 -> 'steam-truck';
10114 -> 'flatbed-tow';
10115 -> 'survey-crews';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_IncidentResponseStatus(Val) ->
if Val =:= 'unconfirmed-report' ->
<<2817:16>>;
Val =:= 'initial-response-en-route' ->
<<2818:16>>;
Val =:= 'follow-up-response-en-route' ->
<<2819:16>>;
Val =:= 'initial-response-on-scene' ->
<<2820:16>>;
Val =:= 'follow-up-response-on-scene' ->
<<2821:16>>;
Val =:= 'confirmed-report' ->
<<2822:16>>;
Val =:= 'scene-is-unsecured-at-this-time' ->
<<2823:16>>;
Val =:= 'response-scene-secured' ->
<<2824:16>>;
Val =:= 'rescue-and-recovery-work-in-progress' ->
<<2825:16>>;
Val =:= 'extraction-in-progress' ->
<<2826:16>>;
Val =:= 'clearance-work-in-progress' ->
<<2827:16>>;
Val =:= 'body-removal-operations' ->
<<2828:16>>;
Val =:= 'fire-containment-contained' ->
<<2829:16>>;
Val =:= 'fire-containment-not-contained' ->
<<2830:16>>;
Val =:= 'event-cleared' ->
<<2831:16>>;
Val =:= 'traffic-clearing' ->
<<2832:16>>;
Val =:= 'incident-closed' ->
<<2833:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_IncidentResponseStatus(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
2817 -> 'unconfirmed-report';
2818 -> 'initial-response-en-route';
2819 -> 'follow-up-response-en-route';
2820 -> 'initial-response-on-scene';
2821 -> 'follow-up-response-on-scene';
2822 -> 'confirmed-report';
2823 -> 'scene-is-unsecured-at-this-time';
2824 -> 'response-scene-secured';
2825 -> 'rescue-and-recovery-work-in-progress';
2826 -> 'extraction-in-progress';
2827 -> 'clearance-work-in-progress';
2828 -> 'body-removal-operations';
2829 -> 'fire-containment-contained';
2830 -> 'fire-containment-not-contained';
2831 -> 'event-cleared';
2832 -> 'traffic-clearing';
2833 -> 'incident-closed';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_SystemInformation(Val) ->
if Val =:= 'information-available-on-radio' ->
<<4353:16>>;
Val =:= 'information-available-on-TV' ->
<<4354:16>>;
Val =:= 'call-to-get-information' ->
<<4355:16>>;
Val =:= 'information-available-via-Internet' ->
<<4356:16>>;
Val =:= 'test-message' ->
<<4357:16>>;
Val =:= 'no-information-available' ->
<<4358:16>>;
Val =:= 'null-description' ->
<<4359:16>>;
Val =:= 'information-service-is-being-suspended' ->
<<4360:16>>;
Val =:= 'police-assistance' ->
<<4361:16>>;
Val =:= 'police-monitor-CB' ->
<<4362:16>>;
Val =:= 'emergency-notification' ->
<<4363:16>>;
Val =:= 'in-emergency-dial-911' ->
<<4364:16>>;
Val =:= 'travel-Info-call-511' ->
<<4365:16>>;
Val =:= 'car-pool-information' ->
<<4366:16>>;
Val =:= 'information-service-resumed' ->
<<4478:16>>;
Val =:= 'message-canceled' ->
<<4479:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_SystemInformation(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
4353 -> 'information-available-on-radio';
4354 -> 'information-available-on-TV';
4355 -> 'call-to-get-information';
4356 -> 'information-available-via-Internet';
4357 -> 'test-message';
4358 -> 'no-information-available';
4359 -> 'null-description';
4360 -> 'information-service-is-being-suspended';
4361 -> 'police-assistance';
4362 -> 'police-monitor-CB';
4363 -> 'emergency-notification';
4364 -> 'in-emergency-dial-911';
4365 -> 'travel-Info-call-511';
4366 -> 'car-pool-information';
4478 -> 'information-service-resumed';
4479 -> 'message-canceled';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_AdviceInstructionsMandatory(Val) ->
if Val =:= 'keep-to-the-right' ->
<<7425:16>>;
Val =:= 'keep-to-the-left' ->
<<7426:16>>;
Val =:= 'use-right-lane' ->
<<7427:16>>;
Val =:= 'use-left-lane' ->
<<7428:16>>;
Val =:= 'heavy-vehicles-use-right-lane' ->
<<7429:16>>;
Val =:= 'heavy-vehicles-use-left-lane' ->
<<7430:16>>;
Val =:= 'observe-signals' ->
<<7431:16>>;
Val =:= 'observe-signs' ->
<<7432:16>>;
Val =:= 'no-passing' ->
<<7433:16>>;
Val =:= 'no-smoking' ->
<<7434:16>>;
Val =:= 'no-open-flames' ->
<<7435:16>>;
Val =:= 'use-shoulder-as-lane' ->
<<7436:16>>;
Val =:= 'do-not-drive-on-the-shoulder' ->
<<7437:16>>;
Val =:= 'allow-emergency-vehicles-to-pass' ->
<<7438:16>>;
Val =:= 'clear-a-lane-for-emergency-vehicles' ->
<<7439:16>>;
Val =:= 'pull-over-to-the-edge-of-the-roadway' ->
<<7440:16>>;
Val =:= 'wait-for-escort-vehicle' ->
<<7441:16>>;
Val =:= 'in-emergency-wait-for-police-patrol' ->
<<7442:16>>;
Val =:= 'reduce-your-speed' ->
<<7443:16>>;
Val =:= 'observe-speed-limits' ->
<<7444:16>>;
Val =:= 'check-point' ->
<<7445:16>>;
Val =:= 'entry-requirements' ->
<<7446:16>>;
Val =:= 'insurance-requirements' ->
<<7447:16>>;
Val =:= 'firearms-requirements' ->
<<7448:16>>;
Val =:= 'pet-requirements' ->
<<7449:16>>;
Val =:= 'stay-in-lane' ->
<<7450:16>>;
Val =:= merge ->
<<7451:16>>;
Val =:= 'slower-traffic-keep-right' ->
<<7452:16>>;
Val =:= 'keep-off' ->
<<7453:16>>;
Val =:= 'evacuate-area-immediately' ->
<<7454:16>>;
Val =:= 'shoulder-travel-no-longer-allowed' ->
<<7547:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_AdviceInstructionsMandatory(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
7425 -> 'keep-to-the-right';
7426 -> 'keep-to-the-left';
7427 -> 'use-right-lane';
7428 -> 'use-left-lane';
7429 -> 'heavy-vehicles-use-right-lane';
7430 -> 'heavy-vehicles-use-left-lane';
7431 -> 'observe-signals';
7432 -> 'observe-signs';
7433 -> 'no-passing';
7434 -> 'no-smoking';
7435 -> 'no-open-flames';
7436 -> 'use-shoulder-as-lane';
7437 -> 'do-not-drive-on-the-shoulder';
7438 -> 'allow-emergency-vehicles-to-pass';
7439 -> 'clear-a-lane-for-emergency-vehicles';
7440 -> 'pull-over-to-the-edge-of-the-roadway';
7441 -> 'wait-for-escort-vehicle';
7442 -> 'in-emergency-wait-for-police-patrol';
7443 -> 'reduce-your-speed';
7444 -> 'observe-speed-limits';
7445 -> 'check-point';
7446 -> 'entry-requirements';
7447 -> 'insurance-requirements';
7448 -> 'firearms-requirements';
7449 -> 'pet-requirements';
7450 -> 'stay-in-lane';
7451 -> merge;
7452 -> 'slower-traffic-keep-right';
7453 -> 'keep-off';
7454 -> 'evacuate-area-immediately';
7547 -> 'shoulder-travel-no-longer-allowed';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_AdviceInstructionsRecommendations(Val) ->
if Val =:= 'drive-carefully' ->
<<7169:16>>;
Val =:= 'drive-with-extreme-caution' ->
<<7170:16>>;
Val =:= 'approach-with-care' ->
<<7171:16>>;
Val =:= 'keep-your-distance' ->
<<7172:16>>;
Val =:= 'increase-normal-following-distance' ->
<<7173:16>>;
Val =:= 'test-your-brakes' ->
<<7174:16>>;
Val =:= 'cross-intersection-with-care' ->
<<7175:16>>;
Val =:= 'pass-with-care' ->
<<7176:16>>;
Val =:= 'use-low-beam-headlights' ->
<<7177:16>>;
Val =:= 'use-fog-lights' ->
<<7178:16>>;
Val =:= 'use-hazard-warning-lights' ->
<<7179:16>>;
Val =:= 'do-not-leave-your-vehicle' ->
<<7180:16>>;
Val =:= 'leave-your-vehicle-and-proceed-to-next-safe-place' ->
<<7181:16>>;
Val =:= 'turn-off-engine' ->
<<7182:16>>;
Val =:= 'close-all-windows-turn-off-heater-air-conditioner-and-vents' ->
<<7183:16>>;
Val =:= 'turn-off-air-conditioner-to-prevent-engine-overheating' ->
<<7184:16>>;
Val =:= 'turn-off-mobile-phones-and-two-way-radios' ->
<<7185:16>>;
Val =:= 'prepare-to-stop' ->
<<7186:16>>;
Val =:= 'stop-at-next-rest-area' ->
<<7187:16>>;
Val =:= 'stop-at-next-safe-place' ->
<<7188:16>>;
Val =:= 'only-travel-if-absolutely-necessary' ->
<<7189:16>>;
Val =:= 'drive-to-another-service-area' ->
<<7190:16>>;
Val =:= 'use-through-traffic-lanes' ->
<<7191:16>>;
Val =:= 'use-local-traffic-lanes' ->
<<7192:16>>;
Val =:= 'use-left-hand-parallel-roadway' ->
<<7193:16>>;
Val =:= 'use-right-hand-parallel-roadway' ->
<<7194:16>>;
Val =:= 'use-heavy-vehicle-lane' ->
<<7195:16>>;
Val =:= 'observe-recommended-speed' ->
<<7196:16>>;
Val =:= 'facing-traffic' ->
<<7197:16>>;
Val =:= 'push-button' ->
<<7198:16>>;
Val =:= 'to-cross-street' ->
<<7199:16>>;
Val =:= pass ->
<<7200:16>>;
Val =:= 'be-prepared-to-stop' ->
<<7201:16>>;
Val =:= 'signals-sequenced-for-speed' ->
<<7202:16>>;
Val =:= 'maintain-top-safe-speed' ->
<<7203:16>>;
Val =:= 'evacuate-area-voluntarily' ->
<<7204:16>>;
Val =:= 'shelter-in-place' ->
<<7205:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_AdviceInstructionsRecommendations(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
7169 -> 'drive-carefully';
7170 -> 'drive-with-extreme-caution';
7171 -> 'approach-with-care';
7172 -> 'keep-your-distance';
7173 -> 'increase-normal-following-distance';
7174 -> 'test-your-brakes';
7175 -> 'cross-intersection-with-care';
7176 -> 'pass-with-care';
7177 -> 'use-low-beam-headlights';
7178 -> 'use-fog-lights';
7179 -> 'use-hazard-warning-lights';
7180 -> 'do-not-leave-your-vehicle';
7181 -> 'leave-your-vehicle-and-proceed-to-next-safe-place';
7182 -> 'turn-off-engine';
7183 -> 'close-all-windows-turn-off-heater-air-conditioner-and-vents';
7184 -> 'turn-off-air-conditioner-to-prevent-engine-overheating';
7185 -> 'turn-off-mobile-phones-and-two-way-radios';
7186 -> 'prepare-to-stop';
7187 -> 'stop-at-next-rest-area';
7188 -> 'stop-at-next-safe-place';
7189 -> 'only-travel-if-absolutely-necessary';
7190 -> 'drive-to-another-service-area';
7191 -> 'use-through-traffic-lanes';
7192 -> 'use-local-traffic-lanes';
7193 -> 'use-left-hand-parallel-roadway';
7194 -> 'use-right-hand-parallel-roadway';
7195 -> 'use-heavy-vehicle-lane';
7196 -> 'observe-recommended-speed';
7197 -> 'facing-traffic';
7198 -> 'push-button';
7199 -> 'to-cross-street';
7200 -> pass;
7201 -> 'be-prepared-to-stop';
7202 -> 'signals-sequenced-for-speed';
7203 -> 'maintain-top-safe-speed';
7204 -> 'evacuate-area-voluntarily';
7205 -> 'shelter-in-place';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_ITIStext(Val) ->
Enc1@len = length(Val),
Enc1@bin = encode_chars(Val, 7),
Enc1@len@sub = Enc1@len - 1,
if 0 =< Enc1@len@sub, Enc1@len@sub < 500 ->
[<<Enc1@len@sub:9>>|Enc1@bin]
end.


dec_ITIStext(Bytes) ->
begin
<<V1@V0:9,V1@Buf1/bitstring>> = Bytes,
V1@Add2 = V1@V0 + 1,
<<V1@V3:V1@Add2/binary-unit:7,V1@Buf4/bitstring>> = V1@Buf1,
{V1@V5,V1@Buf6}  = {decode_chars(V1@V3, 7),V1@Buf4},
{V1@V5,V1@Buf6}
end.

enc_ITISgroups(Val) ->
if Val =:= trafficConditions ->
[1];
Val =:= accidentsAndIncidents ->
[2];
Val =:= closures ->
[3];
Val =:= roadwork ->
[4];
Val =:= obstruction ->
[5];
Val =:= delayStatusCancellation ->
[6];
Val =:= unusualDriving ->
[7];
Val =:= mobileSituation ->
[8];
Val =:= deviceStatus ->
[9];
Val =:= restrictionClass ->
[10];
Val =:= incidentResponseStatus ->
[11];
Val =:= disasters ->
[12];
Val =:= disturbances ->
[13];
Val =:= sportingEvents ->
[14];
Val =:= specialEvents ->
[15];
Val =:= parkingInformation ->
[16];
Val =:= systemInformation ->
[17];
Val =:= weatherConditions ->
[18];
Val =:= precipitation ->
[19];
Val =:= winds ->
[20];
Val =:= visibilityAndAirQuality ->
[21];
Val =:= temperature ->
[22];
Val =:= pavementConditions ->
[23];
Val =:= winterDrivingRestrictions ->
[24];
Val =:= winterDrivingIndex ->
[25];
Val =:= suggestionAdvice ->
[26];
Val =:= warningAdvice ->
[27];
Val =:= adviceInstructionsRecommendations ->
[28];
Val =:= adviceInstructionsMandatory ->
[29];
Val =:= qualifiers ->
[30];
Val =:= genericLocations ->
[31];
Val =:= laneRoadway ->
[32];
Val =:= alternateRoute ->
[33];
Val =:= units ->
[34];
Val =:= transitMode ->
[35];
Val =:= vehicleGroupAffected ->
[36];
Val =:= travelerGroupAffected ->
[37];
Val =:= responderGroupAffected ->
[38];
Val =:= incidentResponseEquipment ->
[39];
Val =:= assetStatus ->
[40];
Val =:= roadsideAssets ->
[41];
Val =:= transitOperations ->
[42];
Val =:= objects ->
[43];
Val =:= validManeuvers ->
[44];
Val =:= largeNumbers ->
[45];
Val =:= namedObjects ->
[46];
Val =:= recreationalObjectsAndActivities ->
[47];
Val =:= regulatoryAndWarningSigns ->
[48];
Val =:= smallNumbers ->
[49];
Val =:= states ->
[50];
Val =:= structures ->
[51];
Val =:= streetSuffixes ->
[52];
Val =:= mUTCDLocations ->
[53];
Val bsr 8 =:= 0 ->
[Val];
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_ITISgroups(Bytes) ->
begin
<<V1@V0:8,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
1 -> trafficConditions;
2 -> accidentsAndIncidents;
3 -> closures;
4 -> roadwork;
5 -> obstruction;
6 -> delayStatusCancellation;
7 -> unusualDriving;
8 -> mobileSituation;
9 -> deviceStatus;
10 -> restrictionClass;
11 -> incidentResponseStatus;
12 -> disasters;
13 -> disturbances;
14 -> sportingEvents;
15 -> specialEvents;
16 -> parkingInformation;
17 -> systemInformation;
18 -> weatherConditions;
19 -> precipitation;
20 -> winds;
21 -> visibilityAndAirQuality;
22 -> temperature;
23 -> pavementConditions;
24 -> winterDrivingRestrictions;
25 -> winterDrivingIndex;
26 -> suggestionAdvice;
27 -> warningAdvice;
28 -> adviceInstructionsRecommendations;
29 -> adviceInstructionsMandatory;
30 -> qualifiers;
31 -> genericLocations;
32 -> laneRoadway;
33 -> alternateRoute;
34 -> units;
35 -> transitMode;
36 -> vehicleGroupAffected;
37 -> travelerGroupAffected;
38 -> responderGroupAffected;
39 -> incidentResponseEquipment;
40 -> assetStatus;
41 -> roadsideAssets;
42 -> transitOperations;
43 -> objects;
44 -> validManeuvers;
45 -> largeNumbers;
46 -> namedObjects;
47 -> recreationalObjectsAndActivities;
48 -> regulatoryAndWarningSigns;
49 -> smallNumbers;
50 -> states;
51 -> structures;
52 -> streetSuffixes;
53 -> mUTCDLocations;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_ITIScodes(Val) ->
if Val =:= 'stopped-traffic' ->
<<257:16>>;
Val =:= 'stop-and-go-traffic' ->
<<258:16>>;
Val =:= 'slow-traffic' ->
<<259:16>>;
Val =:= 'heavy-traffic' ->
<<260:16>>;
Val =:= 'traffic-building' ->
<<261:16>>;
Val =:= 'long-queues' ->
<<262:16>>;
Val =:= 'traffic-congestion' ->
<<263:16>>;
Val =:= 'traffic-lighter-than-normal' ->
<<264:16>>;
Val =:= 'traffic-heavier-than-normal' ->
<<265:16>>;
Val =:= 'traffic-much-heavier-than-normal' ->
<<266:16>>;
Val =:= 'current-speed' ->
<<267:16>>;
Val =:= 'speed-limit' ->
<<268:16>>;
Val =:= 'travel-time' ->
<<269:16>>;
Val =:= 'merging-traffic' ->
<<272:16>>;
Val =:= contraflow ->
<<273:16>>;
Val =:= 'contraflow-canceled' ->
<<378:16>>;
Val =:= 'traffic-flowing-freely' ->
<<379:16>>;
Val =:= 'traffic-easing' ->
<<380:16>>;
Val =:= 'traffic-returned-to-normal' ->
<<381:16>>;
Val =:= 'no-problems-to-report' ->
<<382:16>>;
Val =:= 'traffic-congestion-cleared' ->
<<383:16>>;
Val =:= accident ->
<<513:16>>;
Val =:= 'serious-accident' ->
<<514:16>>;
Val =:= 'injury-accident' ->
<<515:16>>;
Val =:= 'minor-accident' ->
<<516:16>>;
Val =:= 'multi-vehicle-accident' ->
<<517:16>>;
Val =:= 'numerous-accidents' ->
<<518:16>>;
Val =:= 'accident-involving-a-bicycle' ->
<<519:16>>;
Val =:= 'accident-involving-a-bus' ->
<<520:16>>;
Val =:= 'accident-involving-a-motorcycle' ->
<<521:16>>;
Val =:= 'accident-involving-a-pedestrian' ->
<<522:16>>;
Val =:= 'accident-involving-a-train' ->
<<523:16>>;
Val =:= 'accident-involving-a-truck' ->
<<524:16>>;
Val =:= 'accident-involving-hazardous-materials' ->
<<525:16>>;
Val =:= 'earlier-accident' ->
<<526:16>>;
Val =:= 'medical-emergency' ->
<<527:16>>;
Val =:= 'secondary-accident' ->
<<528:16>>;
Val =:= 'rescue-and-recovery-work-REMOVED' ->
<<529:16>>;
Val =:= 'accident-investigation-work' ->
<<530:16>>;
Val =:= incident ->
<<531:16>>;
Val =:= 'stalled-vehicle' ->
<<532:16>>;
Val =:= 'abandoned-vehicle' ->
<<533:16>>;
Val =:= 'disabled-vehicle' ->
<<534:16>>;
Val =:= 'disabled-truck' ->
<<535:16>>;
Val =:= 'disabled-semi-trailer' ->
<<536:16>>;
Val =:= 'disabled-bus' ->
<<537:16>>;
Val =:= 'disabled-train' ->
<<538:16>>;
Val =:= 'vehicle-spun-out' ->
<<539:16>>;
Val =:= 'vehicle-on-fire' ->
<<540:16>>;
Val =:= 'vehicle-in-water' ->
<<541:16>>;
Val =:= 'vehicles-slowing-to-look-at-accident' ->
<<542:16>>;
Val =:= 'jackknifed-semi-trailer' ->
<<543:16>>;
Val =:= 'jackknifed-trailer-home' ->
<<544:16>>;
Val =:= 'jackknifed-trailer' ->
<<545:16>>;
Val =:= 'spillage-occurring-from-moving-vehicle' ->
<<546:16>>;
Val =:= 'acid-spill' ->
<<547:16>>;
Val =:= 'chemical-spill' ->
<<548:16>>;
Val =:= 'fuel-spill' ->
<<549:16>>;
Val =:= 'hazardous-materials-spill' ->
<<550:16>>;
Val =:= 'oil-spill' ->
<<551:16>>;
Val =:= 'spilled-load' ->
<<552:16>>;
Val =:= 'toxic-spill' ->
<<553:16>>;
Val =:= 'overturned-vehicle' ->
<<554:16>>;
Val =:= 'overturned-truck' ->
<<555:16>>;
Val =:= 'overturned-semi-trailer' ->
<<556:16>>;
Val =:= 'overturned-bus' ->
<<557:16>>;
Val =:= 'derailed-train' ->
<<558:16>>;
Val =:= 'stuck-vehicle' ->
<<559:16>>;
Val =:= 'truck-stuck-under-bridge' ->
<<560:16>>;
Val =:= 'bus-stuck-under-bridge' ->
<<561:16>>;
Val =:= 'accident-involving-a-semi-trailer' ->
<<562:16>>;
Val =:= 'accident-cleared' ->
<<638:16>>;
Val =:= 'incident-cleared' ->
<<639:16>>;
Val =:= 'closed-to-traffic' ->
<<769:16>>;
Val =:= closed ->
<<770:16>>;
Val =:= 'closed-ahead' ->
<<771:16>>;
Val =:= 'closed-intermittently' ->
<<772:16>>;
Val =:= 'closed-for-repairs' ->
<<773:16>>;
Val =:= 'closed-for-the-season' ->
<<774:16>>;
Val =:= blocked ->
<<775:16>>;
Val =:= 'blocked-ahead' ->
<<776:16>>;
Val =:= 'reduced-to-one-lane' ->
<<777:16>>;
Val =:= 'reduced-to-two-lanes' ->
<<778:16>>;
Val =:= 'reduced-to-three-lanes' ->
<<779:16>>;
Val =:= collapse ->
<<780:16>>;
Val =:= out ->
<<781:16>>;
Val =:= 'open-to-traffic' ->
<<891:16>>;
Val =:= open ->
<<892:16>>;
Val =:= 'reopened-to-traffic' ->
<<893:16>>;
Val =:= clearing ->
<<894:16>>;
Val =:= 'cleared-from-road' ->
<<895:16>>;
Val =:= 'road-construction' ->
<<1025:16>>;
Val =:= 'major-road-construction' ->
<<1026:16>>;
Val =:= 'long-term-road-construction' ->
<<1027:16>>;
Val =:= 'construction-work' ->
<<1028:16>>;
Val =:= 'paving-operations' ->
<<1029:16>>;
Val =:= 'work-in-the-median' ->
<<1030:16>>;
Val =:= 'road-reconstruction' ->
<<1031:16>>;
Val =:= 'opposing-traffic' ->
<<1032:16>>;
Val =:= 'narrow-lanes' ->
<<1033:16>>;
Val =:= 'construction-traffic-merging' ->
<<1034:16>>;
Val =:= 'single-line-traffic-alternating-directions' ->
<<1035:16>>;
Val =:= 'road-maintenance-operations' ->
<<1036:16>>;
Val =:= 'road-marking-operations' ->
<<1037:16>>;
Val =:= 'bridge-maintenance-operations' ->
<<1038:16>>;
Val =:= 'bridge-construction' ->
<<1039:16>>;
Val =:= 'bridge-demolition-work' ->
<<1040:16>>;
Val =:= blasting ->
<<1041:16>>;
Val =:= 'avalanche-control-activities' ->
<<1042:16>>;
Val =:= 'water-main-work' ->
<<1043:16>>;
Val =:= 'gas-main-work' ->
<<1044:16>>;
Val =:= 'work-on-underground-cables' ->
<<1045:16>>;
Val =:= 'work-on-underground-services' ->
<<1046:16>>;
Val =:= 'new-road-construction-layout' ->
<<1047:16>>;
Val =:= 'new-road-layout' ->
<<1048:16>>;
Val =:= 'temporary-lane-markings' ->
<<1049:16>>;
Val =:= 'temporary-traffic-lights' ->
<<1050:16>>;
Val =:= 'emergency-maintenance' ->
<<1051:16>>;
Val =:= cracks ->
<<1052:16>>;
Val =:= bumps ->
<<1053:16>>;
Val =:= 'storm-drain' ->
<<1054:16>>;
Val =:= 'overgrown-grass' ->
<<1055:16>>;
Val =:= 'overgrown-brushshrubs' ->
<<1056:16>>;
Val =:= 'overgrown-trees' ->
<<1057:16>>;
Val =:= 'crack-REMOVE' ->
<<1058:16>>;
Val =:= 'drop-off' ->
<<1059:16>>;
Val =:= 'seismic-retrofit' ->
<<1060:16>>;
Val =:= 'road-widening' ->
<<1061:16>>;
Val =:= 'utility-work' ->
<<1062:16>>;
Val =:= 'road-maintenance-cleared' ->
<<1146:16>>;
Val =:= 'normal-road-layout-restored' ->
<<1147:16>>;
Val =:= 'road-work-clearance-in-progress' ->
<<1148:16>>;
Val =:= 'road-construction-cleared' ->
<<1149:16>>;
Val =:= 'normal-traffic-lanes-restored' ->
<<1150:16>>;
Val =:= 'road-work-cleared' ->
<<1151:16>>;
Val =:= 'obstruction-on-roadway' ->
<<1281:16>>;
Val =:= 'object-on-roadway' ->
<<1282:16>>;
Val =:= 'objects-falling-from-moving-vehicle' ->
<<1283:16>>;
Val =:= 'debris-on-roadway' ->
<<1284:16>>;
Val =:= 'storm-damage' ->
<<1285:16>>;
Val =:= 'people-on-roadway' ->
<<1286:16>>;
Val =:= 'bicyclists-on-roadway' ->
<<1287:16>>;
Val =:= 'sightseers-obstructing-access' ->
<<1288:16>>;
Val =:= 'large-numbers-of-visitors' ->
<<1289:16>>;
Val =:= 'animal-on-roadway' ->
<<1290:16>>;
Val =:= 'large-animal-on-roadway' ->
<<1291:16>>;
Val =:= 'herd-of-animals-on-roadway' ->
<<1292:16>>;
Val =:= 'animal-struck' ->
<<1293:16>>;
Val =:= 'fallen-trees' ->
<<1294:16>>;
Val =:= 'downed-power-lines' ->
<<1295:16>>;
Val =:= 'downed-cables' ->
<<1296:16>>;
Val =:= subsidence ->
<<1297:16>>;
Val =:= 'road-surface-collapse' ->
<<1298:16>>;
Val =:= 'pavement-buckled' ->
<<1299:16>>;
Val =:= pothole ->
<<1300:16>>;
Val =:= flooding ->
<<1301:16>>;
Val =:= 'broken-water-main' ->
<<1302:16>>;
Val =:= 'collapsed-sewer' ->
<<1303:16>>;
Val =:= 'sewer-overflow' ->
<<1304:16>>;
Val =:= 'gas-leak' ->
<<1305:16>>;
Val =:= snowmelt ->
<<1306:16>>;
Val =:= mudslide ->
<<1307:16>>;
Val =:= avalanche ->
<<1308:16>>;
Val =:= rockfall ->
<<1309:16>>;
Val =:= landslide ->
<<1310:16>>;
Val =:= 'over-turned-trees' ->
<<1311:16>>;
Val =:= 'tree-limbs' ->
<<1312:16>>;
Val =:= 'utility-pole-down' ->
<<1314:16>>;
Val =:= 'advertising-signs' ->
<<1315:16>>;
Val =:= 'frost-heave' ->
<<1316:16>>;
Val =:= 'frost-jacking' ->
<<1317:16>>;
Val =:= washboard ->
<<1318:16>>;
Val =:= 'wash-out' ->
<<1319:16>>;
Val =:= 'clearance-work' ->
<<1406:16>>;
Val =:= 'obstruction-cleared' ->
<<1407:16>>;
Val =:= delays ->
<<1537:16>>;
Val =:= 'short-delays' ->
<<1538:16>>;
Val =:= 'long-delays' ->
<<1539:16>>;
Val =:= 'very-long-delays' ->
<<1540:16>>;
Val =:= 'delays-of-uncertain-duration' ->
<<1541:16>>;
Val =:= 'delayed-until-further-notice' ->
<<1542:16>>;
Val =:= busy ->
<<1543:16>>;
Val =:= 'very-busy' ->
<<1544:16>>;
Val =:= crowded ->
<<1545:16>>;
Val =:= overcrowded ->
<<1546:16>>;
Val =:= cancellations ->
<<1547:16>>;
Val =:= 'route-canceled-and-no-replacement' ->
<<1548:16>>;
Val =:= 'service-canceled' ->
<<1549:16>>;
Val =:= 'service-suspended' ->
<<1550:16>>;
Val =:= 'service-withdrawn' ->
<<1551:16>>;
Val =:= 'service-fully-booked' ->
<<1552:16>>;
Val =:= 'all-services-fully-booked' ->
<<1553:16>>;
Val =:= 'next-departure' ->
<<1554:16>>;
Val =:= 'next-arrival' ->
<<1555:16>>;
Val =:= 'very-frequent-service' ->
<<1556:16>>;
Val =:= 'frequent-service' ->
<<1557:16>>;
Val =:= 'fairly-frequent-service' ->
<<1558:16>>;
Val =:= 'regular-service' ->
<<1559:16>>;
Val =:= 'irregular-service' ->
<<1560:16>>;
Val =:= 'not-operating' ->
<<1561:16>>;
Val =:= 'system-busy' ->
<<1562:16>>;
Val =:= 'system-very-busy' ->
<<1563:16>>;
Val =:= 'system-crowded' ->
<<1564:16>>;
Val =:= 'system-overcrowded' ->
<<1565:16>>;
Val =:= 'deleted-travel-time' ->
<<1566:16>>;
Val =:= headway ->
<<1567:16>>;
Val =:= 'extra-services-in-operation' ->
<<1568:16>>;
Val =:= 'delays-clearing' ->
<<1660:16>>;
Val =:= 'delays-cleared' ->
<<1661:16>>;
Val =:= 'normal-services-resumed' ->
<<1662:16>>;
Val =:= operating ->
<<1663:16>>;
Val =:= 'vehicle-traveling-wrong-way' ->
<<1793:16>>;
Val =:= 'reckless-driver' ->
<<1794:16>>;
Val =:= 'prohibited-vehicle-on-roadway' ->
<<1795:16>>;
Val =:= 'emergency-vehicles-on-roadway' ->
<<1796:16>>;
Val =:= 'high-speed-emergency-vehicles' ->
<<1797:16>>;
Val =:= 'high-speed-chase' ->
<<1798:16>>;
Val =:= 'dangerous-vehicle-warning-cleared' ->
<<1918:16>>;
Val =:= 'emergency-vehicle-warning-cleared' ->
<<1919:16>>;
Val =:= 'abnormal-load' ->
<<2049:16>>;
Val =:= 'wide-load' ->
<<2050:16>>;
Val =:= 'long-load' ->
<<2051:16>>;
Val =:= 'slow-vehicle' ->
<<2052:16>>;
Val =:= 'farm-equipment' ->
<<2053:16>>;
Val =:= 'horse-drawn-vehicles' ->
<<2054:16>>;
Val =:= 'overheight-load' ->
<<2055:16>>;
Val =:= 'overweight-load' ->
<<2056:16>>;
Val =:= 'tracked-vehicle' ->
<<2057:16>>;
Val =:= 'vehicle-carrying-hazardous-materials' ->
<<2058:16>>;
Val =:= 'slow-moving-maintenance-vehicle' ->
<<2059:16>>;
Val =:= convoy ->
<<2060:16>>;
Val =:= 'military-convoy' ->
<<2061:16>>;
Val =:= 'refugee-convoy' ->
<<2062:16>>;
Val =:= motorcade ->
<<2063:16>>;
Val =:= 'mobile-situation-repositioning' ->
<<2064:16>>;
Val =:= 'winter-maintenance-vehicles' ->
<<2065:16>>;
Val =:= snowplows ->
<<2066:16>>;
Val =:= 'slow-moving-maintenance-vehicle-warning-cleared' ->
<<2172:16>>;
Val =:= 'exceptional-load-warning-cleared' ->
<<2173:16>>;
Val =:= 'hazardous-load-warning-cleared' ->
<<2174:16>>;
Val =:= 'convoy-cleared' ->
<<2175:16>>;
Val =:= 'lane-control-signs-not-working' ->
<<2305:16>>;
Val =:= 'lane-control-signs-working-incorrectly' ->
<<2306:16>>;
Val =:= 'lane-control-signs-operating' ->
<<2307:16>>;
Val =:= 'variable-message-signs-not-working' ->
<<2308:16>>;
Val =:= 'variable-message-signs-working-incorrectly' ->
<<2309:16>>;
Val =:= 'variable-message-signs-operating' ->
<<2310:16>>;
Val =:= 'emergency-telephones-not-working' ->
<<2311:16>>;
Val =:= 'emergency-telephone-number-not-working' ->
<<2312:16>>;
Val =:= 'traffic-lights-not-working' ->
<<2313:16>>;
Val =:= 'traffic-lights-working-incorrectly' ->
<<2314:16>>;
Val =:= 'ramp-control-signals-not-working' ->
<<2315:16>>;
Val =:= 'ramp-control-signals-working-incorrectly' ->
<<2316:16>>;
Val =:= 'temporary-traffic-lights-not-working' ->
<<2317:16>>;
Val =:= 'temporary-traffic-lights-working-incorrectly' ->
<<2318:16>>;
Val =:= 'traffic-signal-control-computer-not-working' ->
<<2319:16>>;
Val =:= 'traffic-signal-timings-changed' ->
<<2320:16>>;
Val =:= 'overheight-warning-system-triggered' ->
<<2321:16>>;
Val =:= 'equipment-failure' ->
<<2322:16>>;
Val =:= 'railroad-crossing-equipment-failure' ->
<<2323:16>>;
Val =:= 'tunnel-ventilation-not-working' ->
<<2324:16>>;
Val =:= 'power-failure' ->
<<2325:16>>;
Val =:= 'widespread-power-outages' ->
<<2326:16>>;
Val =:= 'technical-problems' ->
<<2327:16>>;
Val =:= 'sign-down' ->
<<2328:16>>;
Val =:= 'lines-in-road-faded' ->
<<2329:16>>;
Val =:= 'damaged-light-standard' ->
<<2330:16>>;
Val =:= 'traffic-signal-stuck-on-flash' ->
<<2331:16>>;
Val =:= 'guide-rail' ->
<<2332:16>>;
Val =:= fencing ->
<<2333:16>>;
Val =:= 'light-standard-hanging-by-wires' ->
<<2334:16>>;
Val =:= 'call-box' ->
<<2335:16>>;
Val =:= 'signal-cabinet' ->
<<2336:16>>;
Val =:= detector ->
<<2337:16>>;
Val =:= 'improper-use-of-State-vehicle-or-equipment' ->
<<2338:16>>;
Val =:= 'bulb-out' ->
<<2339:16>>;
Val =:= 'not-yet-operational' ->
<<2340:16>>;
Val =:= 'not-yet-installed' ->
<<2341:16>>;
Val =:= 'electronic-signs-repaired' ->
<<2428:16>>;
Val =:= 'emergency-call-facilities-restored' ->
<<2429:16>>;
Val =:= 'traffic-signals-repaired' ->
<<2430:16>>;
Val =:= 'railroad-crossing-equipment-now-working-normally' ->
<<2431:16>>;
Val =:= restrictions ->
<<2561:16>>;
Val =:= 'ramp-restrictions' ->
<<2562:16>>;
Val =:= 'truck-restriction' ->
<<2563:16>>;
Val =:= 'speed-restriction' ->
<<2564:16>>;
Val =:= 'noise-restriction' ->
<<2565:16>>;
Val =:= 'traffic-regulations-have-been-changed' ->
<<2566:16>>;
Val =:= 'local-access-only' ->
<<2567:16>>;
Val =:= 'no-trailers' ->
<<2568:16>>;
Val =:= 'no-high-profile-vehicles' ->
<<2569:16>>;
Val =:= 'hazardous-materials-truck-restriction' ->
<<2570:16>>;
Val =:= 'no-through-traffic' ->
<<2571:16>>;
Val =:= 'no-motor-vehicles' ->
<<2572:16>>;
Val =:= 'width-limit' ->
<<2573:16>>;
Val =:= 'height-limit' ->
<<2574:16>>;
Val =:= 'length-limit' ->
<<2575:16>>;
Val =:= 'axle-load-limit' ->
<<2576:16>>;
Val =:= 'gross-weight-limit' ->
<<2577:16>>;
Val =:= 'axle-count-limit' ->
<<2578:16>>;
Val =:= 'carpool-lane-available' ->
<<2579:16>>;
Val =:= 'carpool-restrictions-changed' ->
<<2580:16>>;
Val =:= 'hOV-2-no-single-occupant-vehicles' ->
<<2581:16>>;
Val =:= 'hOV-3-no-vehicles-with-less-than-three-occupants' ->
<<2582:16>>;
Val =:= 'bus-lane-available-for-all-vehicles' ->
<<2583:16>>;
Val =:= 'truck-lane-available-for-all-vehicles' ->
<<2584:16>>;
Val =:= 'permits-call-in-basis' ->
<<2585:16>>;
Val =:= 'permits-temporarily-closed' ->
<<2586:16>>;
Val =:= 'permits-closed' ->
<<2587:16>>;
Val =:= 'road-use-permits-required' ->
<<2588:16>>;
Val =:= 'permits-open' ->
<<2675:16>>;
Val =:= 'restrictions-for-high-profile-vehicles-lifted' ->
<<2676:16>>;
Val =:= 'width-limit-lifted' ->
<<2677:16>>;
Val =:= 'height-limit-lifted' ->
<<2678:16>>;
Val =:= 'length-limit-lifted' ->
<<2679:16>>;
Val =:= 'axle-load-limit-lifted' ->
<<2680:16>>;
Val =:= 'weight-limit-lifted' ->
<<2681:16>>;
Val =:= 'axle-count-limit-lifted' ->
<<2682:16>>;
Val =:= 'carpool-restrictions-lifted' ->
<<2683:16>>;
Val =:= 'lane-restrictions-lifted' ->
<<2684:16>>;
Val =:= 'ramp-restrictions-lifted' ->
<<2685:16>>;
Val =:= 'motor-vehicle-restrictions-lifted' ->
<<2686:16>>;
Val =:= 'restrictions-lifted' ->
<<2687:16>>;
Val =:= 'unconfirmed-report' ->
<<2817:16>>;
Val =:= 'initial-response-en-route' ->
<<2818:16>>;
Val =:= 'follow-up-response-en-route' ->
<<2819:16>>;
Val =:= 'initial-response-on-scene' ->
<<2820:16>>;
Val =:= 'follow-up-response-on-scene' ->
<<2821:16>>;
Val =:= 'confirmed-report' ->
<<2822:16>>;
Val =:= 'scene-is-unsecured-at-this-time' ->
<<2823:16>>;
Val =:= 'response-scene-secured' ->
<<2824:16>>;
Val =:= 'rescue-and-recovery-work-in-progress' ->
<<2825:16>>;
Val =:= 'extraction-in-progress' ->
<<2826:16>>;
Val =:= 'clearance-work-in-progress' ->
<<2827:16>>;
Val =:= 'body-removal-operations' ->
<<2828:16>>;
Val =:= 'fire-containment-contained' ->
<<2829:16>>;
Val =:= 'fire-containment-not-contained' ->
<<2830:16>>;
Val =:= 'event-cleared' ->
<<2831:16>>;
Val =:= 'traffic-clearing' ->
<<2832:16>>;
Val =:= 'incident-closed' ->
<<2833:16>>;
Val =:= 'flash-flood' ->
<<3073:16>>;
Val =:= 'major-flood' ->
<<3074:16>>;
Val =:= 'reservoir-failure' ->
<<3075:16>>;
Val =:= 'levee-failure' ->
<<3076:16>>;
Val =:= tsunami ->
<<3077:16>>;
Val =:= 'tidal-wave' ->
<<3078:16>>;
Val =:= 'volcanic-eruption' ->
<<3079:16>>;
Val =:= 'ash-fall' ->
<<3080:16>>;
Val =:= 'lava-flow' ->
<<3081:16>>;
Val =:= 'serious-fire' ->
<<3082:16>>;
Val =:= 'forest-fire' ->
<<3083:16>>;
Val =:= wildfire ->
<<3084:16>>;
Val =:= 'building-fire' ->
<<3085:16>>;
Val =:= 'brush-fire' ->
<<3086:16>>;
Val =:= 'grass-fire' ->
<<3087:16>>;
Val =:= 'fire-danger-extreme' ->
<<3088:16>>;
Val =:= 'fire-danger-very-high' ->
<<3089:16>>;
Val =:= 'fire-danger-high' ->
<<3090:16>>;
Val =:= 'fire-danger-medium' ->
<<3091:16>>;
Val =:= 'fire-danger-low' ->
<<3092:16>>;
Val =:= 'earthquake-damage' ->
<<3093:16>>;
Val =:= 'air-crash' ->
<<3094:16>>;
Val =:= 'rail-crash' ->
<<3095:16>>;
Val =:= 'toxic-release' ->
<<3096:16>>;
Val =:= 'toxic-leak' ->
<<3097:16>>;
Val =:= 'radioactive-release' ->
<<3098:16>>;
Val =:= 'radiation-hazard' ->
<<3099:16>>;
Val =:= 'reactor-leakage' ->
<<3100:16>>;
Val =:= explosion ->
<<3101:16>>;
Val =:= 'major-hazardous-materials-fire' ->
<<3102:16>>;
Val =:= 'major-hazardous-materials-release' ->
<<3103:16>>;
Val =:= 'disaster-cleared' ->
<<3199:16>>;
Val =:= assault ->
<<3329:16>>;
Val =:= crime ->
<<3330:16>>;
Val =:= robbery ->
<<3331:16>>;
Val =:= 'fare-dispute' ->
<<3332:16>>;
Val =:= shooting ->
<<3333:16>>;
Val =:= 'gunfire-on-roadway' ->
<<3334:16>>;
Val =:= suicide ->
<<3335:16>>;
Val =:= fight ->
<<3336:16>>;
Val =:= 'gang-fight' ->
<<3337:16>>;
Val =:= 'person-harassment' ->
<<3338:16>>;
Val =:= 'person-injured' ->
<<3339:16>>;
Val =:= 'unruly-passenger' ->
<<3340:16>>;
Val =:= 'person-intoxicated' ->
<<3341:16>>;
Val =:= 'crowd-control-problem' ->
<<3342:16>>;
Val =:= demonstration ->
<<3343:16>>;
Val =:= march ->
<<3344:16>>;
Val =:= 'public-disturbance' ->
<<3345:16>>;
Val =:= riot ->
<<3346:16>>;
Val =:= 'civil-unrest' ->
<<3347:16>>;
Val =:= 'civil-emergency' ->
<<3348:16>>;
Val =:= strike ->
<<3349:16>>;
Val =:= 'public-transit-strike' ->
<<3350:16>>;
Val =:= stampede ->
<<3351:16>>;
Val =:= 'teargas-used' ->
<<3352:16>>;
Val =:= 'security-alert' ->
<<3353:16>>;
Val =:= 'security-incident' ->
<<3354:16>>;
Val =:= checkpoint ->
<<3355:16>>;
Val =:= 'bomb-alert' ->
<<3356:16>>;
Val =:= 'terrorist-incident' ->
<<3357:16>>;
Val =:= 'high-velocity-shell-fire' ->
<<3358:16>>;
Val =:= 'explosives-in-use' ->
<<3359:16>>;
Val =:= 'air-raid' ->
<<3360:16>>;
Val =:= 'weapons-of-mass-destruction-threat' ->
<<3361:16>>;
Val =:= 'military-operations' ->
<<3362:16>>;
Val =:= 'sick-customer' ->
<<3363:16>>;
Val =:= 'security-problem-cleared' ->
<<3454:16>>;
Val =:= 'traffic-disturbance-cleared' ->
<<3455:16>>;
Val =:= 'sports-event' ->
<<3585:16>>;
Val =:= game ->
<<3586:16>>;
Val =:= tournament ->
<<3587:16>>;
Val =:= 'track-and-field-event' ->
<<3588:16>>;
Val =:= 'baseball-game' ->
<<3589:16>>;
Val =:= 'basketball-game' ->
<<3590:16>>;
Val =:= 'boxing-match' ->
<<3591:16>>;
Val =:= 'football-game' ->
<<3592:16>>;
Val =:= 'soccer-game' ->
<<3593:16>>;
Val =:= 'golf-tournament' ->
<<3594:16>>;
Val =:= 'hockey-game' ->
<<3595:16>>;
Val =:= 'tennis-tournament' ->
<<3596:16>>;
Val =:= 'wrestling-match' ->
<<3597:16>>;
Val =:= 'road-race' ->
<<3598:16>>;
Val =:= 'automobile-race' ->
<<3599:16>>;
Val =:= 'bicycle-race' ->
<<3600:16>>;
Val =:= 'race-event' ->
<<3601:16>>;
Val =:= marathon ->
<<3602:16>>;
Val =:= 'horse-show' ->
<<3603:16>>;
Val =:= rodeo ->
<<3604:16>>;
Val =:= 'water-sports-event' ->
<<3605:16>>;
Val =:= 'winter-sports-event' ->
<<3606:16>>;
Val =:= 'skating-event' ->
<<3607:16>>;
Val =:= 'dog-sled-race' ->
<<3608:16>>;
Val =:= 'sporting-event-ended' ->
<<3711:16>>;
Val =:= 'major-event' ->
<<3841:16>>;
Val =:= airshow ->
<<3842:16>>;
Val =:= 'hot-air-ballooning' ->
<<3843:16>>;
Val =:= concert ->
<<3844:16>>;
Val =:= 'state-occasion' ->
<<3845:16>>;
Val =:= 'vIP-visit' ->
<<3846:16>>;
Val =:= show ->
<<3847:16>>;
Val =:= festival ->
<<3848:16>>;
Val =:= exhibition ->
<<3849:16>>;
Val =:= 'performing-arts' ->
<<3850:16>>;
Val =:= 'outdoor-market' ->
<<3851:16>>;
Val =:= fair ->
<<3852:16>>;
Val =:= carnival ->
<<3853:16>>;
Val =:= 'fireworks-display' ->
<<3854:16>>;
Val =:= 'trade-expo' ->
<<3855:16>>;
Val =:= 'movie-filming' ->
<<3856:16>>;
Val =:= 'presidential-visit' ->
<<3857:16>>;
Val =:= parade ->
<<3858:16>>;
Val =:= procession ->
<<3859:16>>;
Val =:= 'funeral-procession' ->
<<3860:16>>;
Val =:= crowd ->
<<3861:16>>;
Val =:= 'holiday-traffic-crowds' ->
<<3862:16>>;
Val =:= 'event-ended' ->
<<3967:16>>;
Val =:= 'normal-parking-restrictions-lifted' ->
<<4097:16>>;
Val =:= 'parking-meter-restrictions-lifted' ->
<<4098:16>>;
Val =:= 'special-parking-restrictions-in-force' ->
<<4099:16>>;
Val =:= 'full-parking-lot' ->
<<4100:16>>;
Val =:= 'full-parking-garage' ->
<<4101:16>>;
Val =:= 'all-parking-lots-full' ->
<<4102:16>>;
Val =:= 'no-parking-spaces-available' ->
<<4103:16>>;
Val =:= 'only-a-few-spaces-available' ->
<<4104:16>>;
Val =:= 'spaces-available' ->
<<4105:16>>;
Val =:= 'no-parking' ->
<<4106:16>>;
Val =:= 'parking-on-one-side-of-street-only' ->
<<4107:16>>;
Val =:= 'parking-on-both-sides-of-street' ->
<<4108:16>>;
Val =:= 'parallel-parking-only' ->
<<4109:16>>;
Val =:= 'parking-meters-not-available' ->
<<4110:16>>;
Val =:= 'use-of-parking-meters-restricted' ->
<<4111:16>>;
Val =:= 'event-parking' ->
<<4112:16>>;
Val =:= 'handicapped-parking' ->
<<4113:16>>;
Val =:= 'long-term-parking' ->
<<4114:16>>;
Val =:= 'overnight-parking' ->
<<4115:16>>;
Val =:= 'short-term-parking' ->
<<4116:16>>;
Val =:= 'parking-by-permit-only' ->
<<4117:16>>;
Val =:= 'emergency-parking-only' ->
<<4118:16>>;
Val =:= 'emergency-stopping-only' ->
<<4119:16>>;
Val =:= parking ->
<<4120:16>>;
Val =:= stopping ->
<<4121:16>>;
Val =:= standing ->
<<4122:16>>;
Val =:= 'tow-away-zone' ->
<<4123:16>>;
Val =:= 'school-zone' ->
<<4124:16>>;
Val =:= 'speed-zone' ->
<<4125:16>>;
Val =:= 'loading-zone' ->
<<4126:16>>;
Val =:= 'state-law' ->
<<4127:16>>;
Val =:= 'van-accessible' ->
<<4128:16>>;
Val =:= 'special-parking-restrictions-lifted' ->
<<4222:16>>;
Val =:= 'no-parking-information-available' ->
<<4223:16>>;
Val =:= 'information-available-on-radio' ->
<<4353:16>>;
Val =:= 'information-available-on-TV' ->
<<4354:16>>;
Val =:= 'call-to-get-information' ->
<<4355:16>>;
Val =:= 'information-available-via-Internet' ->
<<4356:16>>;
Val =:= 'test-message' ->
<<4357:16>>;
Val =:= 'no-information-available' ->
<<4358:16>>;
Val =:= 'null-description' ->
<<4359:16>>;
Val =:= 'information-service-is-being-suspended' ->
<<4360:16>>;
Val =:= 'police-assistance' ->
<<4361:16>>;
Val =:= 'police-monitor-CB' ->
<<4362:16>>;
Val =:= 'emergency-notification' ->
<<4363:16>>;
Val =:= 'in-emergency-dial-911' ->
<<4364:16>>;
Val =:= 'travel-Info-call-511' ->
<<4365:16>>;
Val =:= 'car-pool-information' ->
<<4366:16>>;
Val =:= 'information-service-resumed' ->
<<4478:16>>;
Val =:= 'message-canceled' ->
<<4479:16>>;
Val =:= overcast ->
<<4609:16>>;
Val =:= cloudy ->
<<4610:16>>;
Val =:= 'mostly-cloudy' ->
<<4611:16>>;
Val =:= 'partly-cloudy' ->
<<4612:16>>;
Val =:= 'partly-sunny' ->
<<4613:16>>;
Val =:= 'mostly-sunny' ->
<<4614:16>>;
Val =:= sunny ->
<<4615:16>>;
Val =:= 'fair-skies' ->
<<4616:16>>;
Val =:= 'clear-skies' ->
<<4617:16>>;
Val =:= 'mostly-clear' ->
<<4618:16>>;
Val =:= 'mostly-dry' ->
<<4619:16>>;
Val =:= dry ->
<<4620:16>>;
Val =:= 'uV-index-very-high' ->
<<4621:16>>;
Val =:= 'uV-index-high' ->
<<4622:16>>;
Val =:= 'uV-index-moderate' ->
<<4623:16>>;
Val =:= 'uV-index-low' ->
<<4624:16>>;
Val =:= 'uV-index-very-low' ->
<<4625:16>>;
Val =:= 'barometric-pressure' ->
<<4626:16>>;
Val =:= 'ozone-alert' ->
<<4627:16>>;
Val =:= 'lighting-unknown' ->
<<4628:16>>;
Val =:= 'artificial-exterior-light' ->
<<4629:16>>;
Val =:= 'artificial-interior-light' ->
<<4630:16>>;
Val =:= darkness ->
<<4631:16>>;
Val =:= dusk ->
<<4632:16>>;
Val =:= dawn ->
<<4633:16>>;
Val =:= moonlight ->
<<4634:16>>;
Val =:= daylight ->
<<4635:16>>;
Val =:= 'weather-forecast-withdrawn' ->
<<4735:16>>;
Val =:= 'severe-weather' ->
<<4865:16>>;
Val =:= blizzard ->
<<4866:16>>;
Val =:= 'heavy-snow' ->
<<4867:16>>;
Val =:= snow ->
<<4868:16>>;
Val =:= 'light-snow' ->
<<4869:16>>;
Val =:= 'snow-showers' ->
<<4870:16>>;
Val =:= 'winter-storm' ->
<<4871:16>>;
Val =:= 'ice-glaze' ->
<<4872:16>>;
Val =:= 'heavy-frost' ->
<<4873:16>>;
Val =:= frost ->
<<4874:16>>;
Val =:= 'ice-storm' ->
<<4875:16>>;
Val =:= sleet ->
<<4876:16>>;
Val =:= 'rain-and-snow-mixed' ->
<<4877:16>>;
Val =:= 'rain-changing-to-snow' ->
<<4878:16>>;
Val =:= 'damaging-hail' ->
<<4879:16>>;
Val =:= hail ->
<<4880:16>>;
Val =:= thunderstorms ->
<<4881:16>>;
Val =:= thundershowers ->
<<4882:16>>;
Val =:= 'extremely-heavy-downpour' ->
<<4883:16>>;
Val =:= 'heavy-rain' ->
<<4884:16>>;
Val =:= rain ->
<<4885:16>>;
Val =:= 'light-rain' ->
<<4886:16>>;
Val =:= drizzle ->
<<4887:16>>;
Val =:= showers ->
<<4888:16>>;
Val =:= dew ->
<<4889:16>>;
Val =:= 'precipitation-cleared' ->
<<4991:16>>;
Val =:= tornado ->
<<5121:16>>;
Val =:= hurricane ->
<<5122:16>>;
Val =:= 'hurricane-force-winds' ->
<<5123:16>>;
Val =:= 'tropical-storm' ->
<<5124:16>>;
Val =:= 'gale-force-winds' ->
<<5125:16>>;
Val =:= 'storm-force-winds' ->
<<5126:16>>;
Val =:= 'strong-winds' ->
<<5127:16>>;
Val =:= 'moderate-winds' ->
<<5128:16>>;
Val =:= 'light-winds' ->
<<5129:16>>;
Val =:= calm ->
<<5130:16>>;
Val =:= 'gusty-winds' ->
<<5131:16>>;
Val =:= crosswinds ->
<<5132:16>>;
Val =:= windy ->
<<5133:16>>;
Val =:= 'strong-winds-have-eased' ->
<<5246:16>>;
Val =:= 'strong-wind-forecast-withdrawn' ->
<<5247:16>>;
Val =:= 'dense-fog' ->
<<5377:16>>;
Val =:= fog ->
<<5378:16>>;
Val =:= 'patchy-fog' ->
<<5379:16>>;
Val =:= 'freezing-fog' ->
<<5380:16>>;
Val =:= mist ->
<<5381:16>>;
Val =:= haze ->
<<5382:16>>;
Val =:= 'visibility-reduced' ->
<<5383:16>>;
Val =:= 'white-out' ->
<<5384:16>>;
Val =:= 'blowing-snow' ->
<<5385:16>>;
Val =:= 'smoke-hazard' ->
<<5386:16>>;
Val =:= 'spray-hazard' ->
<<5387:16>>;
Val =:= 'low-sun-glare' ->
<<5388:16>>;
Val =:= 'snow-glare' ->
<<5389:16>>;
Val =:= 'blowing-dust' ->
<<5390:16>>;
Val =:= 'blowing-sand' ->
<<5391:16>>;
Val =:= 'dust-storms' ->
<<5392:16>>;
Val =:= sandstorms ->
<<5393:16>>;
Val =:= 'air-quality-good' ->
<<5394:16>>;
Val =:= 'air-quality-fair' ->
<<5395:16>>;
Val =:= 'air-quality-poor' ->
<<5396:16>>;
Val =:= 'air-quality-very-poor' ->
<<5397:16>>;
Val =:= 'severe-exhaust-pollution' ->
<<5398:16>>;
Val =:= 'smog-alert' ->
<<5399:16>>;
Val =:= 'pollen-count-high' ->
<<5400:16>>;
Val =:= 'pollen-count-medium' ->
<<5401:16>>;
Val =:= 'pollen-count-low' ->
<<5402:16>>;
Val =:= 'swarms-of-insects' ->
<<5403:16>>;
Val =:= 'visibility-blocked' ->
<<5404:16>>;
Val =:= 'ice-fog' ->
<<5405:16>>;
Val =:= 'fog-clearing' ->
<<5499:16>>;
Val =:= 'visibility-improved' ->
<<5500:16>>;
Val =:= 'fog-forecast-withdrawn' ->
<<5501:16>>;
Val =:= 'pollution-alert-ended' ->
<<5502:16>>;
Val =:= 'air-quality-improved' ->
<<5503:16>>;
Val =:= 'maximum-temperature' ->
<<5633:16>>;
Val =:= temperature ->
<<5634:16>>;
Val =:= 'minimum-temperature' ->
<<5635:16>>;
Val =:= 'current-temperature' ->
<<5636:16>>;
Val =:= 'heat-index' ->
<<5637:16>>;
Val =:= 'extreme-heat' ->
<<5638:16>>;
Val =:= hot ->
<<5639:16>>;
Val =:= hotter ->
<<5640:16>>;
Val =:= heat ->
<<5641:16>>;
Val =:= warmer ->
<<5642:16>>;
Val =:= warm ->
<<5643:16>>;
Val =:= mild ->
<<5644:16>>;
Val =:= cool ->
<<5645:16>>;
Val =:= cooler ->
<<5646:16>>;
Val =:= cold ->
<<5647:16>>;
Val =:= colder ->
<<5648:16>>;
Val =:= 'very-cold' ->
<<5649:16>>;
Val =:= 'extreme-cold' ->
<<5650:16>>;
Val =:= 'wind-chill' ->
<<5651:16>>;
Val =:= dewpoint ->
<<5652:16>>;
Val =:= 'relative-humidity' ->
<<5653:16>>;
Val =:= 'temperatures-close-to-the-seasonal-norm' ->
<<5758:16>>;
Val =:= 'less-extreme-temperatures' ->
<<5759:16>>;
Val =:= impassable ->
<<5889:16>>;
Val =:= 'almost-impassable' ->
<<5890:16>>;
Val =:= 'passable-with-care' ->
<<5891:16>>;
Val =:= passable ->
<<5892:16>>;
Val =:= 'surface-water-hazard' ->
<<5893:16>>;
Val =:= 'danger-of-hydroplaning' ->
<<5894:16>>;
Val =:= 'wet-pavement' ->
<<5895:16>>;
Val =:= 'treated-pavement' ->
<<5896:16>>;
Val =:= slippery ->
<<5897:16>>;
Val =:= 'mud-on-roadway' ->
<<5898:16>>;
Val =:= 'leaves-on-roadway' ->
<<5899:16>>;
Val =:= 'loose-sand-on-roadway' ->
<<5900:16>>;
Val =:= 'loose-gravel' ->
<<5901:16>>;
Val =:= 'fuel-on-roadway' ->
<<5902:16>>;
Val =:= 'oil-on-roadway' ->
<<5903:16>>;
Val =:= 'road-surface-in-poor-condition' ->
<<5904:16>>;
Val =:= 'melting-tar' ->
<<5905:16>>;
Val =:= ice ->
<<5906:16>>;
Val =:= 'icy-patches' ->
<<5907:16>>;
Val =:= 'black-ice' ->
<<5908:16>>;
Val =:= 'ice-pellets-on-roadway' ->
<<5909:16>>;
Val =:= 'ice-build-up' ->
<<5910:16>>;
Val =:= 'freezing-rain' ->
<<5911:16>>;
Val =:= 'wet-and-icy-roads' ->
<<5912:16>>;
Val =:= 'melting-snow' ->
<<5913:16>>;
Val =:= slush ->
<<5914:16>>;
Val =:= 'frozen-slush' ->
<<5915:16>>;
Val =:= 'snow-on-roadway' ->
<<5916:16>>;
Val =:= 'packed-snow' ->
<<5917:16>>;
Val =:= 'packed-snow-patches' ->
<<5918:16>>;
Val =:= 'plowed-snow' ->
<<5919:16>>;
Val =:= 'wet-snow' ->
<<5920:16>>;
Val =:= 'fresh-snow' ->
<<5921:16>>;
Val =:= 'powder-snow' ->
<<5922:16>>;
Val =:= 'granular-snow' ->
<<5923:16>>;
Val =:= 'frozen-snow' ->
<<5924:16>>;
Val =:= 'crusted-snow' ->
<<5925:16>>;
Val =:= 'deep-snow' ->
<<5926:16>>;
Val =:= 'snow-drifts' ->
<<5927:16>>;
Val =:= 'drifting-snow' ->
<<5928:16>>;
Val =:= 'expected-snow-accumulation' ->
<<5929:16>>;
Val =:= 'current-snow-accumulation' ->
<<5930:16>>;
Val =:= 'rough-road' ->
<<5931:16>>;
Val =:= sand ->
<<5932:16>>;
Val =:= gravel ->
<<5933:16>>;
Val =:= paved ->
<<5934:16>>;
Val =:= 'uneven-lanes' ->
<<5935:16>>;
Val =:= 'rough-crossing' ->
<<5936:16>>;
Val =:= 'at-grade-level-crossing' ->
<<5937:16>>;
Val =:= 'low-ground-clearance' ->
<<5938:16>>;
Val =:= 'dry-pavement' ->
<<6011:16>>;
Val =:= 'snow-cleared' ->
<<6012:16>>;
Val =:= 'pavement-conditions-improved' ->
<<6013:16>>;
Val =:= 'skid-hazard-reduced' ->
<<6014:16>>;
Val =:= 'pavement-conditions-cleared' ->
<<6015:16>>;
Val =:= 'winter-equipment-recommended' ->
<<6145:16>>;
Val =:= 'winter-equipment-required' ->
<<6146:16>>;
Val =:= 'snow-chains-recommended' ->
<<6147:16>>;
Val =:= 'snow-chains-required' ->
<<6148:16>>;
Val =:= 'snow-chains-prohibited' ->
<<6149:16>>;
Val =:= 'studded-tires-prohibited' ->
<<6150:16>>;
Val =:= 'snow-tires-recommended' ->
<<6151:16>>;
Val =:= 'snow-tires-required' ->
<<6152:16>>;
Val =:= 'four-wheel-drive-recommended' ->
<<6153:16>>;
Val =:= 'four-wheel-drive-required' ->
<<6154:16>>;
Val =:= 'snow-tires-or-chains-recommended' ->
<<6155:16>>;
Val =:= 'snow-tires-or-chains-required' ->
<<6156:16>>;
Val =:= 'winter-driving-requirements-lifted' ->
<<6271:16>>;
Val =:= 'driving-conditions-good' ->
<<6401:16>>;
Val =:= 'driving-conditions-fair' ->
<<6402:16>>;
Val =:= 'difficult-driving-conditions' ->
<<6403:16>>;
Val =:= 'very-difficult-driving-conditions' ->
<<6404:16>>;
Val =:= 'hazardous-driving-conditions' ->
<<6405:16>>;
Val =:= 'extremely-hazardous-driving-conditions' ->
<<6406:16>>;
Val =:= 'why-not-ride-share' ->
<<6657:16>>;
Val =:= 'is-this-your-no-ride-day' ->
<<6658:16>>;
Val =:= 'why-not-use-transit' ->
<<6659:16>>;
Val =:= 'why-not-park-and-ride' ->
<<6660:16>>;
Val =:= 'why-not-try-paratransit' ->
<<6661:16>>;
Val =:= 'why-not-travel-by-rail' ->
<<6662:16>>;
Val =:= 'why-not-use-the-subway' ->
<<6663:16>>;
Val =:= 'why-not-try-rapid-transit' ->
<<6664:16>>;
Val =:= 'why-not-travel-by-bus' ->
<<6665:16>>;
Val =:= 'your-parking-ticket-covers-the-return-ride' ->
<<6666:16>>;
Val =:= 'avoid-the-rush-hour' ->
<<6667:16>>;
Val =:= 'do-not-allow-unnecessary-gaps' ->
<<6668:16>>;
Val =:= 'follow-the-vehicle-in-front-smoothly' ->
<<6669:16>>;
Val =:= 'do-not-slow-down-unnecessarily' ->
<<6670:16>>;
Val =:= 'watch-for-muggers' ->
<<6671:16>>;
Val =:= 'watch-for-pickpockets' ->
<<6672:16>>;
Val =:= 'watch-for-thieves' ->
<<6673:16>>;
Val =:= 'sorry-for-any-delay' ->
<<6674:16>>;
Val =:= 'thank-you-for-your-understanding' ->
<<6675:16>>;
Val =:= 'we-appreciate-your-patience' ->
<<6676:16>>;
Val =:= 'we-are-grateful-for-your-cooperation' ->
<<6677:16>>;
Val =:= 'share-the-road' ->
<<6678:16>>;
Val =:= risk ->
<<6913:16>>;
Val =:= watch ->
<<6914:16>>;
Val =:= warning ->
<<6915:16>>;
Val =:= alert ->
<<6916:16>>;
Val =:= danger ->
<<6917:16>>;
Val =:= 'danger-of-explosion' ->
<<6918:16>>;
Val =:= 'danger-of-fire' ->
<<6919:16>>;
Val =:= 'extra-police-patrols-in-operation' ->
<<6920:16>>;
Val =:= 'look-out-for-vehicles-stopped-under-bridges' ->
<<6921:16>>;
Val =:= 'increased-risk-of-accident' ->
<<6922:16>>;
Val =:= 'rescue-and-recovery-work-in-progress-at-sceneREMOVED' ->
<<6923:16>>;
Val =:= 'police-at-scene' ->
<<6924:16>>;
Val =:= 'emergency-vehicles-at-scene' ->
<<6925:16>>;
Val =:= 'traffic-being-directed-around-accident-area' ->
<<6926:16>>;
Val =:= 'police-directing-traffic' ->
<<6927:16>>;
Val =:= 'rescue-workers-directing-traffic' ->
<<6928:16>>;
Val =:= 'repairs-in-progress' ->
<<6929:16>>;
Val =:= 'pilot-car-in-operation' ->
<<6930:16>>;
Val =:= 'look-out-for-flagger' ->
<<6931:16>>;
Val =:= 'police-checks-in-operation' ->
<<6932:16>>;
Val =:= 'mandatory-speed-limit-in-force' ->
<<6933:16>>;
Val =:= 'speed-limit-in-force-for-heavy-vehicles' ->
<<6934:16>>;
Val =:= lockdown ->
<<6935:16>>;
Val =:= 'security-check-point' ->
<<6936:16>>;
Val =:= 'truck-check-point' ->
<<6937:16>>;
Val =:= 'single-occupancy-vehicle-check-point' ->
<<6938:16>>;
Val =:= look ->
<<6939:16>>;
Val =:= 'photo-enforced' ->
<<6940:16>>;
Val =:= 'traffic-laws' ->
<<6941:16>>;
Val =:= 'use-low-gear' ->
<<6942:16>>;
Val =:= 'bridge-ices-before-road' ->
<<6943:16>>;
Val =:= 'speed-checked-by-radar' ->
<<6944:16>>;
Val =:= 'speed-checked-by-aircraft' ->
<<6945:16>>;
Val =:= fines ->
<<6946:16>>;
Val =:= 'fines-higher' ->
<<6947:16>>;
Val =:= 'fines-doubled' ->
<<6948:16>>;
Val =:= 'fines-tripled' ->
<<6949:16>>;
Val =:= 'behind-you' ->
<<6950:16>>;
Val =:= 'traffic-signs' ->
<<6951:16>>;
Val =:= 'look-out-for-workers' ->
<<6952:16>>;
Val =:= 'ride-with-traffic' ->
<<6953:16>>;
Val =:= 'prepare-to-evacuate-area' ->
<<6954:16>>;
Val =:= avoid ->
<<6955:16>>;
Val =:= 'evacuation-canceled' ->
<<7033:16>>;
Val =:= 'warning-canceled' ->
<<7034:16>>;
Val =:= 'watch-canceled' ->
<<7035:16>>;
Val =:= 'alert-canceled' ->
<<7036:16>>;
Val =:= ended ->
<<7037:16>>;
Val =:= cleared ->
<<7038:16>>;
Val =:= canceled ->
<<7039:16>>;
Val =:= 'drive-carefully' ->
<<7169:16>>;
Val =:= 'drive-with-extreme-caution' ->
<<7170:16>>;
Val =:= 'approach-with-care' ->
<<7171:16>>;
Val =:= 'keep-your-distance' ->
<<7172:16>>;
Val =:= 'increase-normal-following-distance' ->
<<7173:16>>;
Val =:= 'test-your-brakes' ->
<<7174:16>>;
Val =:= 'cross-intersection-with-care' ->
<<7175:16>>;
Val =:= 'pass-with-care' ->
<<7176:16>>;
Val =:= 'use-low-beam-headlights' ->
<<7177:16>>;
Val =:= 'use-fog-lights' ->
<<7178:16>>;
Val =:= 'use-hazard-warning-lights' ->
<<7179:16>>;
Val =:= 'do-not-leave-your-vehicle' ->
<<7180:16>>;
Val =:= 'leave-your-vehicle-and-proceed-to-next-safe-place' ->
<<7181:16>>;
Val =:= 'turn-off-engine' ->
<<7182:16>>;
Val =:= 'close-all-windows-turn-off-heater-air-conditioner-and-vents' ->
<<7183:16>>;
Val =:= 'turn-off-air-conditioner-to-prevent-engine-overheating' ->
<<7184:16>>;
Val =:= 'turn-off-mobile-phones-and-two-way-radios' ->
<<7185:16>>;
Val =:= 'prepare-to-stop' ->
<<7186:16>>;
Val =:= 'stop-at-next-rest-area' ->
<<7187:16>>;
Val =:= 'stop-at-next-safe-place' ->
<<7188:16>>;
Val =:= 'only-travel-if-absolutely-necessary' ->
<<7189:16>>;
Val =:= 'drive-to-another-service-area' ->
<<7190:16>>;
Val =:= 'use-through-traffic-lanes' ->
<<7191:16>>;
Val =:= 'use-local-traffic-lanes' ->
<<7192:16>>;
Val =:= 'use-left-hand-parallel-roadway' ->
<<7193:16>>;
Val =:= 'use-right-hand-parallel-roadway' ->
<<7194:16>>;
Val =:= 'use-heavy-vehicle-lane' ->
<<7195:16>>;
Val =:= 'observe-recommended-speed' ->
<<7196:16>>;
Val =:= 'facing-traffic' ->
<<7197:16>>;
Val =:= 'push-button' ->
<<7198:16>>;
Val =:= 'to-cross-street' ->
<<7199:16>>;
Val =:= pass ->
<<7200:16>>;
Val =:= 'be-prepared-to-stop' ->
<<7201:16>>;
Val =:= 'signals-sequenced-for-speed' ->
<<7202:16>>;
Val =:= 'maintain-top-safe-speed' ->
<<7203:16>>;
Val =:= 'evacuate-area-voluntarily' ->
<<7204:16>>;
Val =:= 'shelter-in-place' ->
<<7205:16>>;
Val =:= 'keep-to-the-right' ->
<<7425:16>>;
Val =:= 'keep-to-the-left' ->
<<7426:16>>;
Val =:= 'use-right-lane' ->
<<7427:16>>;
Val =:= 'use-left-lane' ->
<<7428:16>>;
Val =:= 'heavy-vehicles-use-right-lane' ->
<<7429:16>>;
Val =:= 'heavy-vehicles-use-left-lane' ->
<<7430:16>>;
Val =:= 'observe-signals' ->
<<7431:16>>;
Val =:= 'observe-signs' ->
<<7432:16>>;
Val =:= 'no-passing' ->
<<7433:16>>;
Val =:= 'no-smoking' ->
<<7434:16>>;
Val =:= 'no-open-flames' ->
<<7435:16>>;
Val =:= 'use-shoulder-as-lane' ->
<<7436:16>>;
Val =:= 'do-not-drive-on-the-shoulder' ->
<<7437:16>>;
Val =:= 'allow-emergency-vehicles-to-pass' ->
<<7438:16>>;
Val =:= 'clear-a-lane-for-emergency-vehicles' ->
<<7439:16>>;
Val =:= 'pull-over-to-the-edge-of-the-roadway' ->
<<7440:16>>;
Val =:= 'wait-for-escort-vehicle' ->
<<7441:16>>;
Val =:= 'in-emergency-wait-for-police-patrol' ->
<<7442:16>>;
Val =:= 'reduce-your-speed' ->
<<7443:16>>;
Val =:= 'observe-speed-limits' ->
<<7444:16>>;
Val =:= 'check-point' ->
<<7445:16>>;
Val =:= 'entry-requirements' ->
<<7446:16>>;
Val =:= 'insurance-requirements' ->
<<7447:16>>;
Val =:= 'firearms-requirements' ->
<<7448:16>>;
Val =:= 'pet-requirements' ->
<<7449:16>>;
Val =:= 'stay-in-lane' ->
<<7450:16>>;
Val =:= merge ->
<<7451:16>>;
Val =:= 'slower-traffic-keep-right' ->
<<7452:16>>;
Val =:= 'keep-off' ->
<<7453:16>>;
Val =:= 'evacuate-area-immediately' ->
<<7454:16>>;
Val =:= 'shoulder-travel-no-longer-allowed' ->
<<7547:16>>;
Val =:= above ->
<<7681:16>>;
Val =:= below ->
<<7682:16>>;
Val =:= in ->
<<7683:16>>;
Val =:= around ->
<<7684:16>>;
Val =:= 'after' ->
<<7685:16>>;
Val =:= before ->
<<7686:16>>;
Val =:= at ->
<<7687:16>>;
Val =:= on ->
<<7688:16>>;
Val =:= near ->
<<7689:16>>;
Val =:= 'from-the' ->
<<7690:16>>;
Val =:= terminal ->
<<7691:16>>;
Val =:= 'falling-slowly' ->
<<7692:16>>;
Val =:= falling ->
<<7693:16>>;
Val =:= 'falling-quickly' ->
<<7694:16>>;
Val =:= 'rising-slowly' ->
<<7695:16>>;
Val =:= rising ->
<<7696:16>>;
Val =:= 'rising-quickly' ->
<<7697:16>>;
Val =:= steady ->
<<7698:16>>;
Val =:= likely ->
<<7699:16>>;
Val =:= 'changing-to' ->
<<7700:16>>;
Val =:= mostly ->
<<7701:16>>;
Val =:= partly ->
<<7702:16>>;
Val =:= minus ->
<<7703:16>>;
Val =:= 'weather-ended' ->
<<7704:16>>;
Val =:= expected ->
<<7705:16>>;
Val =:= low ->
<<7706:16>>;
Val =:= mid ->
<<7707:16>>;
Val =:= high ->
<<7708:16>>;
Val =:= upper ->
<<7709:16>>;
Val =:= unseasonably ->
<<7710:16>>;
Val =:= reported ->
<<7711:16>>;
Val =:= advice ->
<<7712:16>>;
Val =:= 'due-to' ->
<<7713:16>>;
Val =:= 'proceed-to' ->
<<7714:16>>;
Val =:= 'transferred-to' ->
<<7715:16>>;
Val =:= use ->
<<7716:16>>;
Val =:= affecting ->
<<7717:16>>;
Val =:= blocking ->
<<7718:16>>;
Val =:= connecting ->
<<7719:16>>;
Val =:= finished ->
<<7720:16>>;
Val =:= for ->
<<7721:16>>;
Val =:= 'or' ->
<<7722:16>>;
Val =:= 'and' ->
<<7723:16>>;
Val =:= later ->
<<7724:16>>;
Val =:= level ->
<<7725:16>>;
Val =:= shortly ->
<<7726:16>>;
Val =:= soon ->
<<7727:16>>;
Val =:= service ->
<<7728:16>>;
Val =:= damaged ->
<<7729:16>>;
Val =:= 'out-of-order' ->
<<7730:16>>;
Val =:= vandalism ->
<<7731:16>>;
Val =:= 'on-State-right-of-way' ->
<<7732:16>>;
Val =:= graffiti ->
<<7733:16>>;
Val =:= 'found-property' ->
<<7734:16>>;
Val =:= 'begin-time' ->
<<7735:16>>;
Val =:= added ->
<<7736:16>>;
Val =:= 'end-time' ->
<<7737:16>>;
Val =:= no ->
<<7738:16>>;
Val =:= 'do-not' ->
<<7739:16>>;
Val =:= block ->
<<7740:16>>;
Val =:= except ->
<<7741:16>>;
Val =:= day ->
<<7742:16>>;
Val =:= night ->
<<7743:16>>;
Val =:= 'any-time' ->
<<7744:16>>;
Val =:= has ->
<<7745:16>>;
Val =:= 'may-have' ->
<<7746:16>>;
Val =:= only ->
<<7747:16>>;
Val =:= lifted ->
<<7748:16>>;
Val =:= empty ->
<<7749:16>>;
Val =:= turning ->
<<7750:16>>;
Val =:= 'u-turn' ->
<<7751:16>>;
Val =:= 'wait-for' ->
<<7752:16>>;
Val =:= 'when-flashing' ->
<<7753:16>>;
Val =:= duration ->
<<7754:16>>;
Val =:= cross ->
<<7755:16>>;
Val =:= 'when-wet' ->
<<7756:16>>;
Val =:= must ->
<<7757:16>>;
Val =:= oncoming ->
<<7758:16>>;
Val =:= 'may-exceed' ->
<<7759:16>>;
Val =:= 'to-request' ->
<<7760:16>>;
Val =:= exempt ->
<<7761:16>>;
Val =:= skewed ->
<<7762:16>>;
Val =:= 'when-children-are-present' ->
<<7763:16>>;
Val =:= lower ->
<<7764:16>>;
Val =:= middle ->
<<7765:16>>;
Val =:= major ->
<<7766:16>>;
Val =:= minor ->
<<7767:16>>;
Val =:= 'on-bridges' ->
<<7937:16>>;
Val =:= 'in-tunnels' ->
<<7938:16>>;
Val =:= 'entering-or-leaving-tunnels' ->
<<7939:16>>;
Val =:= 'on-ramps' ->
<<7940:16>>;
Val =:= 'in-road-construction-area' ->
<<7941:16>>;
Val =:= 'around-a-curve' ->
<<7942:16>>;
Val =:= 'on-minor-roads' ->
<<7943:16>>;
Val =:= 'in-the-opposing-lanes' ->
<<7944:16>>;
Val =:= 'adjacent-to-roadway' ->
<<7945:16>>;
Val =:= 'on-bend' ->
<<7946:16>>;
Val =:= 'entire-intersection' ->
<<7947:16>>;
Val =:= 'in-the-median' ->
<<7948:16>>;
Val =:= 'moved-to-side-of-road' ->
<<7949:16>>;
Val =:= 'moved-to-shoulder' ->
<<7950:16>>;
Val =:= 'on-the-roadway' ->
<<7951:16>>;
Val =:= 'in-shaded-areas' ->
<<7952:16>>;
Val =:= 'in-low-lying-areas' ->
<<7953:16>>;
Val =:= 'in-the-downtown-area' ->
<<7954:16>>;
Val =:= 'in-the-inner-city-area' ->
<<7955:16>>;
Val =:= 'in-parts' ->
<<7956:16>>;
Val =:= 'in-some-places' ->
<<7957:16>>;
Val =:= 'in-the-ditch' ->
<<7958:16>>;
Val =:= 'in-the-valley' ->
<<7959:16>>;
Val =:= 'on-hill-top' ->
<<7960:16>>;
Val =:= 'near-the-foothills' ->
<<7961:16>>;
Val =:= 'at-high-altitudes' ->
<<7962:16>>;
Val =:= 'near-the-lake' ->
<<7963:16>>;
Val =:= 'near-the-shore' ->
<<7964:16>>;
Val =:= 'over-the-crest-of-a-hill' ->
<<7965:16>>;
Val =:= 'other-than-on-the-roadway' ->
<<7966:16>>;
Val =:= 'near-the-beach' ->
<<7967:16>>;
Val =:= 'near-beach-access-point' ->
<<7968:16>>;
Val =:= 'lower-level' ->
<<7969:16>>;
Val =:= 'upper-level' ->
<<7970:16>>;
Val =:= airport ->
<<7971:16>>;
Val =:= concourse ->
<<7972:16>>;
Val =:= gate ->
<<7973:16>>;
Val =:= 'baggage-claim' ->
<<7974:16>>;
Val =:= 'customs-point' ->
<<7975:16>>;
Val =:= station ->
<<7976:16>>;
Val =:= platform ->
<<7977:16>>;
Val =:= dock ->
<<7978:16>>;
Val =:= depot ->
<<7979:16>>;
Val =:= 'ev-charging-point' ->
<<7980:16>>;
Val =:= 'information-welcome-point' ->
<<7981:16>>;
Val =:= 'at-rest-area' ->
<<7982:16>>;
Val =:= 'at-service-area' ->
<<7983:16>>;
Val =:= 'at-weigh-station' ->
<<7984:16>>;
Val =:= 'picnic-areas' ->
<<7985:16>>;
Val =:= 'rest-area' ->
<<7986:16>>;
Val =:= 'service-stations' ->
<<7987:16>>;
Val =:= toilets ->
<<7988:16>>;
Val =:= 'on-the-right' ->
<<7989:16>>;
Val =:= 'on-the-left' ->
<<7990:16>>;
Val =:= 'in-the-center' ->
<<7991:16>>;
Val =:= 'in-the-opposite-direction' ->
<<7992:16>>;
Val =:= 'cross-traffic' ->
<<7993:16>>;
Val =:= 'northbound-traffic' ->
<<7994:16>>;
Val =:= 'eastbound-traffic' ->
<<7995:16>>;
Val =:= 'southbound-traffic' ->
<<7996:16>>;
Val =:= 'westbound-traffic' ->
<<7997:16>>;
Val =:= north ->
<<7998:16>>;
Val =:= south ->
<<7999:16>>;
Val =:= east ->
<<8000:16>>;
Val =:= west ->
<<8001:16>>;
Val =:= northeast ->
<<8002:16>>;
Val =:= northwest ->
<<8003:16>>;
Val =:= southeast ->
<<8004:16>>;
Val =:= southwest ->
<<8005:16>>;
Val =:= 'mountain-pass' ->
<<8006:16>>;
Val =:= 'reservation-center' ->
<<8007:16>>;
Val =:= 'nearby-basin' ->
<<8008:16>>;
Val =:= 'on-tracks' ->
<<8009:16>>;
Val =:= dip ->
<<8010:16>>;
Val =:= 'traffic-circle' ->
<<8011:16>>;
Val =:= 'park-and-ride-lot' ->
<<8012:16>>;
Val =:= to ->
<<8014:16>>;
Val =:= by ->
<<8015:16>>;
Val =:= through ->
<<8016:16>>;
Val =:= 'area-of' ->
<<8017:16>>;
Val =:= under ->
<<8018:16>>;
Val =:= over ->
<<8019:16>>;
Val =:= from ->
<<8020:16>>;
Val =:= approaching ->
<<8021:16>>;
Val =:= 'entering-at' ->
<<8022:16>>;
Val =:= 'exiting-at' ->
<<8023:16>>;
Val =:= 'across-tracks' ->
<<8024:16>>;
Val =:= 'in-street' ->
<<8025:16>>;
Val =:= 'on-curve' ->
<<8026:16>>;
Val =:= shoulder ->
<<8027:16>>;
Val =:= crossover ->
<<8028:16>>;
Val =:= 'cross-road' ->
<<8029:16>>;
Val =:= 'side-road' ->
<<8030:16>>;
Val =:= 'bus-stop' ->
<<8031:16>>;
Val =:= intersection ->
<<8032:16>>;
Val =:= 'roadside-park' ->
<<8033:16>>;
Val =:= coast ->
<<8034:16>>;
Val =:= 'all-roadways' ->
<<8193:16>>;
Val =:= 'through-lanes' ->
<<8194:16>>;
Val =:= 'left-lane' ->
<<8195:16>>;
Val =:= 'right-lane' ->
<<8196:16>>;
Val =:= 'center-lane' ->
<<8197:16>>;
Val =:= 'middle-lanes' ->
<<8198:16>>;
Val =:= 'middle-two-lanes' ->
<<8199:16>>;
Val =:= 'right-turning-lanes' ->
<<8200:16>>;
Val =:= 'left-turning-lanes' ->
<<8201:16>>;
Val =:= 'right-exit-ramp' ->
<<8202:16>>;
Val =:= 'right-entrance-ramp' ->
<<8203:16>>;
Val =:= 'left-exit-ramp' ->
<<8204:16>>;
Val =:= 'left-entrance-ramp' ->
<<8205:16>>;
Val =:= 'hard-shoulder' ->
<<8206:16>>;
Val =:= 'soft-shoulder' ->
<<8207:16>>;
Val =:= 'right-shoulder' ->
<<8208:16>>;
Val =:= 'left-shoulder' ->
<<8209:16>>;
Val =:= 'right-hand-parallel-lanes' ->
<<8210:16>>;
Val =:= 'left-hand-parallel-lanes' ->
<<8211:16>>;
Val =:= 'connecting-lanes' ->
<<8212:16>>;
Val =:= 'express-lanes' ->
<<8213:16>>;
Val =:= 'local-lanes' ->
<<8214:16>>;
Val =:= 'toll-lanes' ->
<<8215:16>>;
Val =:= 'electronic-toll-lanes' ->
<<8216:16>>;
Val =:= 'toll-plaza' ->
<<8217:16>>;
Val =:= 'inspection-lane' ->
<<8218:16>>;
Val =:= 'hOV-lanes' ->
<<8219:16>>;
Val =:= 'bus-lanes' ->
<<8220:16>>;
Val =:= 'carpool-lanes' ->
<<8221:16>>;
Val =:= 'truck-lanes' ->
<<8222:16>>;
Val =:= 'emergency-lanes' ->
<<8223:16>>;
Val =:= 'passing-lanes' ->
<<8224:16>>;
Val =:= 'climbing-lanes' ->
<<8225:16>>;
Val =:= 'slow-lane' ->
<<8226:16>>;
Val =:= 'service-road' ->
<<8227:16>>;
Val =:= 'cycle-lane' ->
<<8228:16>>;
Val =:= bridge ->
<<8229:16>>;
Val =:= overpass ->
<<8230:16>>;
Val =:= 'elevated-lanes' ->
<<8231:16>>;
Val =:= underpass ->
<<8232:16>>;
Val =:= tunnel ->
<<8233:16>>;
Val =:= 'escape-ramp' ->
<<8234:16>>;
Val =:= highways ->
<<8235:16>>;
Val =:= 'upper-deck-lanes' ->
<<8236:16>>;
Val =:= 'lower-deck-lanes' ->
<<8237:16>>;
Val =:= 'reversible-lanes' ->
<<8238:16>>;
Val =:= 'right-exit-lanes' ->
<<8239:16>>;
Val =:= 'left-exit-lanes' ->
<<8240:16>>;
Val =:= 'right-merging-lanes' ->
<<8241:16>>;
Val =:= 'left-merging-lanes' ->
<<8242:16>>;
Val =:= 'right-second-exit-ramp' ->
<<8243:16>>;
Val =:= 'left-second-exit-ramp' ->
<<8244:16>>;
Val =:= 'right-second-entrance-ramp' ->
<<8245:16>>;
Val =:= 'left-second-entrance-ramp' ->
<<8246:16>>;
Val =:= 'all-exit-lanes' ->
<<8247:16>>;
Val =:= 'all-entry-lanes' ->
<<8248:16>>;
Val =:= 'either-shoulder' ->
<<8249:16>>;
Val =:= tracks ->
<<8250:16>>;
Val =:= sidewalk ->
<<8251:16>>;
Val =:= median ->
<<8252:16>>;
Val =:= 'shoulder-work' ->
<<8253:16>>;
Val =:= 'detour-where-possible' ->
<<8449:16>>;
Val =:= 'no-detour-available' ->
<<8450:16>>;
Val =:= 'follow-signs' ->
<<8451:16>>;
Val =:= 'follow-detour-signs' ->
<<8452:16>>;
Val =:= 'follow-special-detour-markers' ->
<<8453:16>>;
Val =:= 'do-not-follow-detour-signs' ->
<<8454:16>>;
Val =:= 'detour-in-operation' ->
<<8455:16>>;
Val =:= 'follow-local-detour' ->
<<8456:16>>;
Val =:= 'compulsory-detour-in-operation' ->
<<8457:16>>;
Val =:= 'no-suitable-detour-available' ->
<<8458:16>>;
Val =:= 'detour-is-no-longer-recommended' ->
<<8459:16>>;
Val =:= 'local-drivers-are-recommended-to-avoid-the-area' ->
<<8460:16>>;
Val =:= 'trucks-are-recommended-to-avoid-the-area' ->
<<8461:16>>;
Val =:= 'consider-alternate-route' ->
<<8462:16>>;
Val =:= 'consider-alternate-parking' ->
<<8463:16>>;
Val =:= 'consider-alternate-destination' ->
<<8464:16>>;
Val =:= 'consider-alternate-area' ->
<<8465:16>>;
Val =:= 'snow-route' ->
<<8466:16>>;
Val =:= 'emergency-snow-route' ->
<<8467:16>>;
Val =:= 'evacuation-route' ->
<<8468:16>>;
Val =:= 'truck-route' ->
<<8469:16>>;
Val =:= 'hazardous-materials-route' ->
<<8470:16>>;
Val =:= detour ->
<<8471:16>>;
Val =:= 'square-feet' ->
<<8705:16>>;
Val =:= 'square-meters' ->
<<8706:16>>;
Val =:= acres ->
<<8707:16>>;
Val =:= hectares ->
<<8708:16>>;
Val =:= inches ->
<<8709:16>>;
Val =:= feet ->
<<8710:16>>;
Val =:= mile ->
<<8711:16>>;
Val =:= miles ->
<<8712:16>>;
Val =:= 'nautical-miles' ->
<<8713:16>>;
Val =:= millimeters ->
<<8714:16>>;
Val =:= meters ->
<<8715:16>>;
Val =:= kilometer ->
<<8716:16>>;
Val =:= kilometers ->
<<8717:16>>;
Val =:= 'feet-per-second' ->
<<8718:16>>;
Val =:= 'meters-per-second' ->
<<8719:16>>;
Val =:= mPH ->
<<8720:16>>;
Val =:= kPH ->
<<8721:16>>;
Val =:= knots ->
<<8722:16>>;
Val =:= aM ->
<<8723:16>>;
Val =:= pM ->
<<8724:16>>;
Val =:= weekends ->
<<8725:16>>;
Val =:= holiday ->
<<8726:16>>;
Val =:= seconds ->
<<8727:16>>;
Val =:= minutes ->
<<8728:16>>;
Val =:= hours ->
<<8729:16>>;
Val =:= days ->
<<8730:16>>;
Val =:= weeks ->
<<8731:16>>;
Val =:= months ->
<<8732:16>>;
Val =:= 'degrees-Angle' ->
<<8733:16>>;
Val =:= 'degrees-Celsius' ->
<<8734:16>>;
Val =:= 'degrees-Fahrenheit' ->
<<8735:16>>;
Val =:= grams ->
<<8736:16>>;
Val =:= kilograms ->
<<8737:16>>;
Val =:= ounces ->
<<8738:16>>;
Val =:= pounds ->
<<8739:16>>;
Val =:= tons ->
<<8740:16>>;
Val =:= 'fluid-ounces' ->
<<8741:16>>;
Val =:= gallons ->
<<8742:16>>;
Val =:= milliliters ->
<<8743:16>>;
Val =:= liters ->
<<8744:16>>;
Val =:= 'kilograms-per-lane-mile' ->
<<8745:16>>;
Val =:= 'tons-per-lane-mile' ->
<<8746:16>>;
Val =:= dollar ->
<<8747:16>>;
Val =:= percent ->
<<8748:16>>;
Val =:= 'time-delimiter' ->
<<8749:16>>;
Val =:= dollars ->
<<8750:16>>;
Val =:= 'flight-number' ->
<<8751:16>>;
Val =:= 'person-people' ->
<<8752:16>>;
Val =:= 'response-plan' ->
<<8753:16>>;
Val =:= 'placard-type' ->
<<8754:16>>;
Val =:= 'placard-number' ->
<<8755:16>>;
Val =:= fM ->
<<8756:16>>;
Val =:= grade ->
<<8757:16>>;
Val =:= nSunday ->
<<8758:16>>;
Val =:= nMonday ->
<<8759:16>>;
Val =:= nTuesday ->
<<8760:16>>;
Val =:= nWednesday ->
<<8761:16>>;
Val =:= nThursday ->
<<8762:16>>;
Val =:= nFriday ->
<<8763:16>>;
Val =:= nSaturday ->
<<8764:16>>;
Val =:= weekdays ->
<<8765:16>>;
Val =:= elevation ->
<<8766:16>>;
Val =:= 'other-times' ->
<<8767:16>>;
Val =:= travel ->
<<8961:16>>;
Val =:= transit ->
<<8962:16>>;
Val =:= bus ->
<<8963:16>>;
Val =:= trolleybus ->
<<8964:16>>;
Val =:= rail ->
<<8965:16>>;
Val =:= 'commuter-rail' ->
<<8966:16>>;
Val =:= subway ->
<<8967:16>>;
Val =:= 'rapid-transit' ->
<<8968:16>>;
Val =:= 'light-rail' ->
<<8969:16>>;
Val =:= streetcar ->
<<8970:16>>;
Val =:= 'dial-a-ride' ->
<<8971:16>>;
Val =:= 'park-and-ride' ->
<<8972:16>>;
Val =:= shuttle ->
<<8973:16>>;
Val =:= 'free-shuttle' ->
<<8974:16>>;
Val =:= 'airport-shuttle' ->
<<8975:16>>;
Val =:= taxies ->
<<8976:16>>;
Val =:= ferry ->
<<8977:16>>;
Val =:= 'passenger-ferry' ->
<<8978:16>>;
Val =:= 'vehicle-ferry' ->
<<8979:16>>;
Val =:= 'aerial-tramway' ->
<<8980:16>>;
Val =:= 'automated-guideway' ->
<<8981:16>>;
Val =:= 'cable-cars' ->
<<8982:16>>;
Val =:= monorail ->
<<8983:16>>;
Val =:= 'air-travel' ->
<<8984:16>>;
Val =:= 'hitch-hitching' ->
<<8985:16>>;
Val =:= walk ->
<<8986:16>>;
Val =:= 'all-vehicles' ->
<<9217:16>>;
Val =:= bicycles ->
<<9218:16>>;
Val =:= motorcycles ->
<<9219:16>>;
Val =:= cars ->
<<9220:16>>;
Val =:= 'light-vehicles' ->
<<9221:16>>;
Val =:= 'cars-and-light-vehicles' ->
<<9222:16>>;
Val =:= 'cars-with-trailers' ->
<<9223:16>>;
Val =:= 'cars-with-recreational-trailers' ->
<<9224:16>>;
Val =:= 'vehicles-with-trailers' ->
<<9225:16>>;
Val =:= 'heavy-vehicles' ->
<<9226:16>>;
Val =:= trucks ->
<<9227:16>>;
Val =:= buses ->
<<9228:16>>;
Val =:= 'articulated-buses' ->
<<9229:16>>;
Val =:= 'school-buses' ->
<<9230:16>>;
Val =:= 'vehicles-with-semi-trailers' ->
<<9231:16>>;
Val =:= 'vehicles-with-double-trailers' ->
<<9232:16>>;
Val =:= 'high-profile-vehicles' ->
<<9233:16>>;
Val =:= 'wide-vehicles' ->
<<9234:16>>;
Val =:= 'long-vehicles' ->
<<9235:16>>;
Val =:= 'hazardous-loads' ->
<<9236:16>>;
Val =:= 'exceptional-loads' ->
<<9237:16>>;
Val =:= 'abnormal-loads' ->
<<9238:16>>;
Val =:= convoys ->
<<9239:16>>;
Val =:= 'maintenance-vehicles' ->
<<9240:16>>;
Val =:= 'delivery-vehicles' ->
<<9241:16>>;
Val =:= 'vehicles-with-even-numbered-license-plates' ->
<<9242:16>>;
Val =:= 'vehicles-with-odd-numbered-license-plates' ->
<<9243:16>>;
Val =:= 'vehicles-with-parking-permits' ->
<<9244:16>>;
Val =:= 'vehicles-with-catalytic-converters' ->
<<9245:16>>;
Val =:= 'vehicles-without-catalytic-converters' ->
<<9246:16>>;
Val =:= 'gas-powered-vehicles' ->
<<9247:16>>;
Val =:= 'diesel-powered-vehicles' ->
<<9248:16>>;
Val =:= 'lPG-vehicles' ->
<<9249:16>>;
Val =:= 'military-convoys' ->
<<9250:16>>;
Val =:= 'military-vehicles' ->
<<9251:16>>;
Val =:= 'electric-powered-vehicles' ->
<<9252:16>>;
Val =:= 'hybrid-powered-vehicles' ->
<<9253:16>>;
Val =:= 'inherently-low-emission-vehicles' ->
<<9254:16>>;
Val =:= 'commercial-vehicles' ->
<<9255:16>>;
Val =:= 'runaway-vehicles' ->
<<9256:16>>;
Val =:= 'vehicles-with-lugs' ->
<<9257:16>>;
Val =:= 'motor-driven-cycles' ->
<<9258:16>>;
Val =:= 'recreational-vehicles' ->
<<9259:16>>;
Val =:= 'non-motorized-vehicles' ->
<<9260:16>>;
Val =:= traffic ->
<<9261:16>>;
Val =:= 'through-traffic' ->
<<9473:16>>;
Val =:= 'holiday-traffic' ->
<<9474:16>>;
Val =:= residents ->
<<9475:16>>;
Val =:= visitors ->
<<9476:16>>;
Val =:= 'long-distance-traffic' ->
<<9477:16>>;
Val =:= 'local-traffic' ->
<<9478:16>>;
Val =:= 'regional-traffic' ->
<<9479:16>>;
Val =:= arrivals ->
<<9480:16>>;
Val =:= departures ->
<<9481:16>>;
Val =:= 'airline-travelers' ->
<<9482:16>>;
Val =:= 'commuter-airline-travelers' ->
<<9483:16>>;
Val =:= 'domestic-airline-travelers' ->
<<9484:16>>;
Val =:= 'international-airline-travelers' ->
<<9485:16>>;
Val =:= pedestrians ->
<<9486:16>>;
Val =:= bicyclists ->
<<9487:16>>;
Val =:= 'emergency-vehicle-units' ->
<<9729:16>>;
Val =:= 'federal-law-enforcement-units' ->
<<9730:16>>;
Val =:= 'state-police-units' ->
<<9731:16>>;
Val =:= 'county-police-units' ->
<<9732:16>>;
Val =:= 'local-police-units' ->
<<9733:16>>;
Val =:= 'ambulance-units' ->
<<9734:16>>;
Val =:= 'rescue-units' ->
<<9735:16>>;
Val =:= 'fire-units' ->
<<9736:16>>;
Val =:= 'hAZMAT-units' ->
<<9737:16>>;
Val =:= 'light-tow-unit' ->
<<9738:16>>;
Val =:= 'heavy-tow-unit' ->
<<9739:16>>;
Val =:= 'freeway-service-patrols' ->
<<9740:16>>;
Val =:= 'transportation-response-units' ->
<<9741:16>>;
Val =:= 'private-contractor-response-units' ->
<<9742:16>>;
Val =:= 'private-tow-units' ->
<<9743:16>>;
Val =:= 'ground-fire-suppression' ->
<<9985:16>>;
Val =:= 'heavy-ground-equipment' ->
<<9986:16>>;
Val =:= aircraft ->
<<9988:16>>;
Val =:= 'marine-equipment' ->
<<9989:16>>;
Val =:= 'support-equipment' ->
<<9990:16>>;
Val =:= 'medical-rescue-unit' ->
<<9991:16>>;
Val =:= other ->
<<9993:16>>;
Val =:= 'ground-fire-suppression-other' ->
<<9994:16>>;
Val =:= engine ->
<<9995:16>>;
Val =:= 'truck-or-aerial' ->
<<9996:16>>;
Val =:= quint ->
<<9997:16>>;
Val =:= 'tanker-pumper-combination' ->
<<9998:16>>;
Val =:= 'brush-truck' ->
<<10000:16>>;
Val =:= 'aircraft-rescue-firefighting' ->
<<10001:16>>;
Val =:= 'heavy-ground-equipment-other' ->
<<10004:16>>;
Val =:= 'dozer-or-plow' ->
<<10005:16>>;
Val =:= tractor ->
<<10006:16>>;
Val =:= 'tanker-or-tender' ->
<<10008:16>>;
Val =:= 'aircraft-other' ->
<<10024:16>>;
Val =:= 'aircraft-fixed-wing-tanker' ->
<<10025:16>>;
Val =:= helitanker ->
<<10026:16>>;
Val =:= helicopter ->
<<10027:16>>;
Val =:= 'marine-equipment-other' ->
<<10034:16>>;
Val =:= 'fire-boat-with-pump' ->
<<10035:16>>;
Val =:= 'boat-no-pump' ->
<<10036:16>>;
Val =:= 'support-apparatus-other' ->
<<10044:16>>;
Val =:= 'breathing-apparatus-support' ->
<<10045:16>>;
Val =:= 'light-and-air-unit' ->
<<10046:16>>;
Val =:= 'medical-rescue-unit-other' ->
<<10054:16>>;
Val =:= 'rescue-unit' ->
<<10055:16>>;
Val =:= 'urban-search-rescue-unit' ->
<<10056:16>>;
Val =:= 'high-angle-rescue' ->
<<10057:16>>;
Val =:= 'crash-fire-rescue' ->
<<10058:16>>;
Val =:= 'bLS-unit' ->
<<10059:16>>;
Val =:= 'aLS-unit' ->
<<10060:16>>;
Val =:= 'mobile-command-post' ->
<<10075:16>>;
Val =:= 'chief-officer-car' ->
<<10076:16>>;
Val =:= 'hAZMAT-unit' ->
<<10077:16>>;
Val =:= 'type-i-hand-crew' ->
<<10078:16>>;
Val =:= 'type-ii-hand-crew' ->
<<10079:16>>;
Val =:= 'privately-owned-vehicle' ->
<<10083:16>>;
Val =:= 'other-apparatus-resource' ->
<<10084:16>>;
Val =:= ambulance ->
<<10085:16>>;
Val =:= 'bomb-squad-van' ->
<<10086:16>>;
Val =:= 'combine-harvester' ->
<<10087:16>>;
Val =:= 'construction-vehicle' ->
<<10088:16>>;
Val =:= 'farm-tractor' ->
<<10089:16>>;
Val =:= 'grass-cutting-machines' ->
<<10090:16>>;
Val =:= 'hAZMAT-containment-tow' ->
<<10091:16>>;
Val =:= 'heavy-tow' ->
<<10092:16>>;
Val =:= 'hedge-cutting-machines' ->
<<10093:16>>;
Val =:= 'light-tow' ->
<<10094:16>>;
Val =:= 'mobile-crane' ->
<<10095:16>>;
Val =:= 'refuse-collection-vehicle' ->
<<10096:16>>;
Val =:= 'resurfacing-vehicle' ->
<<10097:16>>;
Val =:= 'road-sweeper' ->
<<10098:16>>;
Val =:= 'roadside-litter-collection-crews' ->
<<10099:16>>;
Val =:= 'salvage-vehicle' ->
<<10100:16>>;
Val =:= 'sand-truck' ->
<<10101:16>>;
Val =:= snowplow ->
<<10102:16>>;
Val =:= 'steam-roller' ->
<<10103:16>>;
Val =:= 'swat-team-van' ->
<<10104:16>>;
Val =:= 'track-laying-vehicle' ->
<<10105:16>>;
Val =:= 'unknown-vehicle' ->
<<10106:16>>;
Val =:= 'white-lining-vehicle' ->
<<10107:16>>;
Val =:= 'dump-truck' ->
<<10108:16>>;
Val =:= 'supervisor-vehicle' ->
<<10109:16>>;
Val =:= 'snow-blower' ->
<<10110:16>>;
Val =:= 'rotary-snow-blower' ->
<<10111:16>>;
Val =:= 'road-grader' ->
<<10112:16>>;
Val =:= 'steam-truck' ->
<<10113:16>>;
Val =:= 'flatbed-tow' ->
<<10114:16>>;
Val =:= 'survey-crews' ->
<<10115:16>>;
Val =:= 'unknown-status' ->
<<10240:16>>;
Val =:= 'ready-for-use' ->
<<10241:16>>;
Val =:= 'working-normally' ->
<<10242:16>>;
Val =:= 'working-autonomously' ->
<<10243:16>>;
Val =:= 'working-incorrectly' ->
<<10244:16>>;
Val =:= 'not-working' ->
<<10245:16>>;
Val =:= 'normal-maintenance' ->
<<10246:16>>;
Val =:= 'in-route-to-use' ->
<<10247:16>>;
Val =:= 'returning-from-use' ->
<<10248:16>>;
Val =:= 'out-of-service' ->
<<10249:16>>;
Val =:= 'off-duty' ->
<<10250:16>>;
Val =:= 'on-patrol' ->
<<10251:16>>;
Val =:= 'on-call' ->
<<10252:16>>;
Val =:= 'on-break' ->
<<10253:16>>;
Val =:= 'mandatory-time-off' ->
<<10254:16>>;
Val =:= 'low-on-fuel' ->
<<10255:16>>;
Val =:= 'low-on-water' ->
<<10256:16>>;
Val =:= 'low-charge' ->
<<10257:16>>;
Val =:= missing ->
<<10258:16>>;
Val =:= none ->
<<10496:16>>;
Val =:= 'light-pole' ->
<<10497:16>>;
Val =:= 'utility-pole' ->
<<10498:16>>;
Val =:= 'gantry-way' ->
<<10499:16>>;
Val =:= 'sign-support' ->
<<10500:16>>;
Val =:= 'signal-pole' ->
<<10501:16>>;
Val =:= 'signage-public' ->
<<10502:16>>;
Val =:= 'signage-private' ->
<<10503:16>>;
Val =:= cones ->
<<10504:16>>;
Val =:= 'cones-post-type' ->
<<10505:16>>;
Val =:= 'cones-glue-post' ->
<<10506:16>>;
Val =:= 'cones-other' ->
<<10507:16>>;
Val =:= barriers ->
<<10508:16>>;
Val =:= 'barrier-Aframe' ->
<<10509:16>>;
Val =:= 'barriers-heavy-duty' ->
<<10510:16>>;
Val =:= 'barricade-type-III' ->
<<10511:16>>;
Val =:= 'barricade-small' ->
<<10512:16>>;
Val =:= 'barricade-lights' ->
<<10513:16>>;
Val =:= beacon ->
<<10514:16>>;
Val =:= 't-stand' ->
<<10515:16>>;
Val =:= 'a-stand' ->
<<10516:16>>;
Val =:= drums ->
<<10517:16>>;
Val =:= 'impact-attenuator' ->
<<10518:16>>;
Val =:= 'barricade-tape' ->
<<10519:16>>;
Val =:= 'safety-fence' ->
<<10520:16>>;
Val =:= 'temp-pavement-markings' ->
<<10521:16>>;
Val =:= 'speed-bumps' ->
<<10522:16>>;
Val =:= 'temp-curbs' ->
<<10523:16>>;
Val =:= 'parking-blocks' ->
<<10524:16>>;
Val =:= 'signboard-fixed' ->
<<10525:16>>;
Val =:= 'signboard-portable' ->
<<10526:16>>;
Val =:= har ->
<<10527:16>>;
Val =:= 'har-AM' ->
<<10528:16>>;
Val =:= 'har-FM' ->
<<10529:16>>;
Val =:= 'har-DSRC' ->
<<10530:16>>;
Val =:= 'traffic-light' ->
<<10531:16>>;
Val =:= 'lane-control-signal' ->
<<10532:16>>;
Val =:= 'traffic-detector' ->
<<10533:16>>;
Val =:= 'vehicle-detector' ->
<<10534:16>>;
Val =:= 'system-alarm' ->
<<10535:16>>;
Val =:= 'arrow-board' ->
<<10536:16>>;
Val =:= 'fixed-VMS' ->
<<10537:16>>;
Val =:= 'mobile-VMS' ->
<<10538:16>>;
Val =:= 'ramp-control' ->
<<10539:16>>;
Val =:= 'gate-control' ->
<<10540:16>>;
Val =:= 'temporary-traffic-light' ->
<<10541:16>>;
Val =:= 'over-height-warning-system' ->
<<10542:16>>;
Val =:= 'over-weight-warning-system' ->
<<10543:16>>;
Val =:= 'emergency-telephones' ->
<<10544:16>>;
Val =:= 'railroad-crossing-equipment' ->
<<10545:16>>;
Val =:= 'tunnel-ventilation' ->
<<10546:16>>;
Val =:= ccTV ->
<<10547:16>>;
Val =:= 'environmental-sensor' ->
<<10548:16>>;
Val =:= switch ->
<<10549:16>>;
Val =:= signal ->
<<10550:16>>;
Val =:= 'third-rail' ->
<<10551:16>>;
Val =:= 'overhead-power' ->
<<10552:16>>;
Val =:= 'concrete-tie' ->
<<10553:16>>;
Val =:= 'wooden-tie' ->
<<10554:16>>;
Val =:= escalator ->
<<10555:16>>;
Val =:= elevator ->
<<10556:16>>;
Val =:= track ->
<<10557:16>>;
Val =:= drawbridge ->
<<10558:16>>;
Val =:= 'manhole-cover' ->
<<10559:16>>;
Val =:= culvert ->
<<10560:16>>;
Val =:= 'snow-poles' ->
<<10561:16>>;
Val =:= 'guide-poles' ->
<<10562:16>>;
Val =:= 'expansion-joint' ->
<<10563:16>>;
Val =:= 'shifted-plate' ->
<<10564:16>>;
Val =:= 'solid-barrier' ->
<<10565:16>>;
Val =:= 'moveable-barrier' ->
<<10566:16>>;
Val =:= 'sand-barrel' ->
<<10567:16>>;
Val =:= 'overhead-sign' ->
<<10568:16>>;
Val =:= 'ground-sign' ->
<<10569:16>>;
Val =:= 'emergency-signal' ->
<<10570:16>>;
Val =:= 'countdown-pedestrian-sign' ->
<<10571:16>>;
Val =:= stripe ->
<<10572:16>>;
Val =:= island ->
<<10573:16>>;
Val =:= 'unknown-transit-problem' ->
<<10753:16>>;
Val =:= 'sleeping-customer' ->
<<10754:16>>;
Val =:= 'assault-on-passenger' ->
<<10755:16>>;
Val =:= 'assault-on-employee' ->
<<10756:16>>;
Val =:= 'broken-seat' ->
<<10757:16>>;
Val =:= 'bus-alarm' ->
<<10758:16>>;
Val =:= 'crime-or-drug-deal' ->
<<10759:16>>;
Val =:= 'eating-on-board' ->
<<10760:16>>;
Val =:= 'equipment-problem-with-air-conditioning' ->
<<10761:16>>;
Val =:= 'equipment-problem-with-air-system' ->
<<10762:16>>;
Val =:= 'equipment-problem-with-brakes' ->
<<10763:16>>;
Val =:= 'equipment-problem-with-chassis-or-suspension' ->
<<10764:16>>;
Val =:= 'equipment-problem-with-cooling-system' ->
<<10765:16>>;
Val =:= 'equipment-problem-with-doors' ->
<<10766:16>>;
Val =:= 'equipment-problem-with-electrical' ->
<<10767:16>>;
Val =:= 'equipment-problem-with-engine' ->
<<10768:16>>;
Val =:= 'equipment-problem-with-exterior-or-body' ->
<<10769:16>>;
Val =:= 'equipment-problem-with-fare-collection' ->
<<10770:16>>;
Val =:= 'equipment-problem-with-fuel-or-exhaust' ->
<<10771:16>>;
Val =:= 'equipment-problem-with-horn' ->
<<10772:16>>;
Val =:= 'equipment-problem-with-interior' ->
<<10773:16>>;
Val =:= 'equipment-problem-with-liftkneeling' ->
<<10774:16>>;
Val =:= 'equipment-problem-with-lights' ->
<<10775:16>>;
Val =:= 'equipment-problem-with-lubrication' ->
<<10776:16>>;
Val =:= 'equipment-problem-with-radio-or-communication' ->
<<10777:16>>;
Val =:= 'equipment-problem-with-signs' ->
<<10778:16>>;
Val =:= 'equipment-problem-with-steering' ->
<<10779:16>>;
Val =:= 'equipment-problem-with-tires' ->
<<10780:16>>;
Val =:= 'equipment-problem-with-transmission' ->
<<10781:16>>;
Val =:= 'equipment-problem-with-unknown-alarm' ->
<<10782:16>>;
Val =:= 'equipment-problem-with-wipers' ->
<<10783:16>>;
Val =:= 'fare-dispute-expired-pass' ->
<<10784:16>>;
Val =:= 'fare-dispute-expired-transfer' ->
<<10785:16>>;
Val =:= 'fare-dispute-expired-upgrade' ->
<<10786:16>>;
Val =:= 'fare-dispute-other' ->
<<10787:16>>;
Val =:= 'fare-dispute-refuses-to-pay' ->
<<10788:16>>;
Val =:= 'lift-passenger-cycle-completed' ->
<<10789:16>>;
Val =:= 'lift-passenger-ready-to-alight' ->
<<10790:16>>;
Val =:= 'lift-passenger-ready-to-board' ->
<<10791:16>>;
Val =:= 'lost-article' ->
<<10792:16>>;
Val =:= 'objects-thrown' ->
<<10793:16>>;
Val =:= 'passenger-accident-alighting' ->
<<10794:16>>;
Val =:= 'passenger-accident-boarding' ->
<<10795:16>>;
Val =:= 'passenger-accident-fallen-on-board' ->
<<10796:16>>;
Val =:= 'passenger-load' ->
<<10797:16>>;
Val =:= 'passenger-accident-other' ->
<<10798:16>>;
Val =:= 'passenger-sick-or-injured' ->
<<10799:16>>;
Val =:= 'right-of-way' ->
<<10800:16>>;
Val =:= theft ->
<<10801:16>>;
Val =:= 'theft-of-service' ->
<<10802:16>>;
Val =:= 'waiting-to-get-relief-for-schedule-break' ->
<<10803:16>>;
Val =:= 'waiting-to-get-relief-after-run-is-finished' ->
<<10804:16>>;
Val =:= 'waiting-to-provide-relief' ->
<<10805:16>>;
Val =:= 'unknown-object' ->
<<11009:16>>;
Val =:= tire ->
<<11010:16>>;
Val =:= rim ->
<<11011:16>>;
Val =:= retread ->
<<11012:16>>;
Val =:= trash ->
<<11013:16>>;
Val =:= cargo ->
<<11014:16>>;
Val =:= diesel ->
<<11015:16>>;
Val =:= gasoline ->
<<11016:16>>;
Val =:= 'anti-freeze' ->
<<11017:16>>;
Val =:= 'seat-belts' ->
<<11018:16>>;
Val =:= 'litter-container' ->
<<11019:16>>;
Val =:= 'all-Terrain-vehicle' ->
<<11020:16>>;
Val =:= seaplane ->
<<11021:16>>;
Val =:= chairlift ->
<<11022:16>>;
Val =:= 'fishing-pier' ->
<<11023:16>>;
Val =:= 'railroad-cross-buck' ->
<<11024:16>>;
Val =:= telephone ->
<<11025:16>>;
Val =:= fallout ->
<<11026:16>>;
Val =:= medical ->
<<11027:16>>;
Val =:= chemical ->
<<11028:16>>;
Val =:= welfare ->
<<11029:16>>;
Val =:= evacuation ->
<<11030:16>>;
Val =:= 'left-arrow-signal' ->
<<11031:16>>;
Val =:= 'ahead-arrow-signal' ->
<<11032:16>>;
Val =:= 'right-arrow-signal' ->
<<11033:16>>;
Val =:= 'green-light-signal' ->
<<11034:16>>;
Val =:= 'green-arrow-signal' ->
<<11035:16>>;
Val =:= 'yellow-light-signal' ->
<<11036:16>>;
Val =:= 'yellow-arrow-signal' ->
<<11037:16>>;
Val =:= 'red-light-signal' ->
<<11038:16>>;
Val =:= 'red-arrow-signal' ->
<<11039:16>>;
Val =:= 'extended-green-signal' ->
<<11040:16>>;
Val =:= 'advance-arrow-signal' ->
<<11041:16>>;
Val =:= 'pedestrian-Signal-Stop' ->
<<11042:16>>;
Val =:= 'pedestrian-Signal-Caution' ->
<<11043:16>>;
Val =:= 'pedestrian-Signal-Walk' ->
<<11044:16>>;
Val =:= 'pedestrian-Signal-Light' ->
<<11045:16>>;
Val =:= 'pedestrian-Signal-Time-Display' ->
<<11046:16>>;
Val =:= train ->
<<11047:16>>;
Val =:= horn ->
<<11048:16>>;
Val =:= deer ->
<<11049:16>>;
Val =:= cattle ->
<<11050:16>>;
Val =:= horse ->
<<11051:16>>;
Val =:= 'golf-cart' ->
<<11052:16>>;
Val =:= 'food-services' ->
<<11053:16>>;
Val =:= 'ambulance-staging-point' ->
<<11054:16>>;
Val =:= 'roadside-table' ->
<<11055:16>>;
Val =:= services ->
<<11056:16>>;
Val =:= 'motorist-services' ->
<<11059:16>>;
Val =:= 'alternative-fuel' ->
<<11060:16>>;
Val =:= 'propane-gas' ->
<<11061:16>>;
Val =:= registration ->
<<11062:16>>;
Val =:= decontamination ->
<<11063:16>>;
Val =:= emergency ->
<<11064:16>>;
Val =:= 'prohibit-None-Allowed-LU-LT-L45-S-R45-RT-RU' ->
<<11264:16>>;
Val =:= 'prohibit-RU-Allowed-LU-LT-L45-S-R45-RT' ->
<<11265:16>>;
Val =:= 'prohibit-RT-Allowed-LU-LT-L45-S-R45-RU' ->
<<11266:16>>;
Val =:= 'prohibit-RT-RU-Allowed-LU-LT-L45-S-R45' ->
<<11267:16>>;
Val =:= 'prohibit-R45-Allowed-LU-LT-L45-S-RT-RU' ->
<<11268:16>>;
Val =:= 'prohibit-R45-RU-Allowed-LU-LT-L45-S-RT' ->
<<11269:16>>;
Val =:= 'prohibit-R45-RT-Allowed-LU-LT-L45-S-RU' ->
<<11270:16>>;
Val =:= 'prohibit-R45-RT-RU-Allowed-LU-LT-L45-S' ->
<<11271:16>>;
Val =:= 'prohibit-S-Allowed-LU-LT-L45-R45-RT-RU' ->
<<11272:16>>;
Val =:= 'prohibit-S-RU-Allowed-LU-LT-L45-R45-RT' ->
<<11273:16>>;
Val =:= 'prohibit-S-RT-Allowed-LU-LT-L45-R45-RU' ->
<<11274:16>>;
Val =:= 'prohibit-S-RT-RU-Allowed-LU-LT-L45-R45' ->
<<11275:16>>;
Val =:= 'prohibit-S-R45-Allowed-LU-LT-L45-RT-RU' ->
<<11276:16>>;
Val =:= 'prohibit-S-R45-RU-Allowed-LU-LT-L45-RT' ->
<<11277:16>>;
Val =:= 'prohibit-S-R45-RT-Allowed-LU-LT-L45-RU' ->
<<11278:16>>;
Val =:= 'prohibit-S-R45-RT-RU-Allowed-LU-LT-L45' ->
<<11279:16>>;
Val =:= 'prohibit-L45-Allowed-LU-LT-S-R45-RT-RU' ->
<<11280:16>>;
Val =:= 'prohibit-L45-RU-Allowed-LU-LT-S-R45-RT' ->
<<11281:16>>;
Val =:= 'prohibit-L45-RT-Allowed-LU-LT-S-R45-RU' ->
<<11282:16>>;
Val =:= 'prohibit-L45-RT-RU-Allowed-LU-LT-S-R45' ->
<<11283:16>>;
Val =:= 'prohibit-L45-R45-Allowed-LU-LT-S-RT-RU' ->
<<11284:16>>;
Val =:= 'prohibit-L45-R45-RU-Allowed-LU-LT-S-RT' ->
<<11285:16>>;
Val =:= 'prohibit-L45-R45-RT-Allowed-LU-LT-S-RU' ->
<<11286:16>>;
Val =:= 'prohibit-L45-R45-RT-RU-Allowed-LU-LT-S' ->
<<11287:16>>;
Val =:= 'prohibit-L45-S-Allowed-LU-LT-R45-RT-RU' ->
<<11288:16>>;
Val =:= 'prohibit-L45-S-RU-Allowed-LU-LT-R45-RT' ->
<<11289:16>>;
Val =:= 'prohibit-L45-S-RT-Allowed-LU-LT-R45-RU' ->
<<11290:16>>;
Val =:= 'prohibit-L45-S-RT-RU-Allowed-LU-LT-R45' ->
<<11291:16>>;
Val =:= 'prohibit-L45-S-R45-Allowed-LU-LT-RT-RU' ->
<<11292:16>>;
Val =:= 'prohibit-L45-S-R45-RU-Allowed-LU-LT-RT' ->
<<11293:16>>;
Val =:= 'prohibit-L45-S-R45-RT-Allowed-LU-LT-RU' ->
<<11294:16>>;
Val =:= 'prohibit-L45-S-R45-RT-RU-Allowed-LU-LT' ->
<<11295:16>>;
Val =:= 'prohibit-LT-Allowed-LU-L45-S-R45-RT-RU' ->
<<11296:16>>;
Val =:= 'prohibit-LT-RU-Allowed-LU-L45-S-R45-RT' ->
<<11297:16>>;
Val =:= 'prohibit-LT-RT-Allowed-LU-L45-S-R45-RU' ->
<<11298:16>>;
Val =:= 'prohibit-LT-RT-RU-Allowed-LU-L45-S-R45' ->
<<11299:16>>;
Val =:= 'prohibit-LT-R45-Allowed-LU-L45-S-RT-RU' ->
<<11300:16>>;
Val =:= 'prohibit-LT-R45-RU-Allowed-LU-L45-S-RT' ->
<<11301:16>>;
Val =:= 'prohibit-LT-R45-RT-Allowed-LU-L45-S-RU' ->
<<11302:16>>;
Val =:= 'prohibit-LT-R45-RT-RU-Allowed-LU-L45-S' ->
<<11303:16>>;
Val =:= 'prohibit-LT-S-Allowed-LU-L45-R45-RT-RU' ->
<<11304:16>>;
Val =:= 'prohibit-LT-S-RU-Allowed-LU-L45-R45-RT' ->
<<11305:16>>;
Val =:= 'prohibit-LT-S-RT-Allowed-LU-L45-R45-RU' ->
<<11306:16>>;
Val =:= 'prohibit-LT-S-RT-RU-Allowed-LU-L45-R45' ->
<<11307:16>>;
Val =:= 'prohibit-LT-S-R45-Allowed-LU-L45-RT-RU' ->
<<11308:16>>;
Val =:= 'prohibit-LT-S-R45-RU-Allowed-LU-L45-RT' ->
<<11309:16>>;
Val =:= 'prohibit-LT-S-R45-RT-Allowed-LU-L45-RU' ->
<<11310:16>>;
Val =:= 'prohibit-LT-S-R45-RT-RU-Allowed-LU-L45' ->
<<11311:16>>;
Val =:= 'prohibit-LT-L45-Allowed-LU-S-R45-RT-RU' ->
<<11312:16>>;
Val =:= 'prohibit-LT-L45-RU-Allowed-LU-S-R45-RT' ->
<<11313:16>>;
Val =:= 'prohibit-LT-L45-RT-Allowed-LU-S-R45-RU' ->
<<11314:16>>;
Val =:= 'prohibit-LT-L45-RT-RU-Allowed-LU-S-R45' ->
<<11315:16>>;
Val =:= 'prohibit-LT-L45-R45-Allowed-LU-S-RT-RU' ->
<<11316:16>>;
Val =:= 'prohibit-LT-L45-R45-RU-Allowed-LU-S-RT' ->
<<11317:16>>;
Val =:= 'prohibit-LT-L45-R45-RT-Allowed-LU-S-RU' ->
<<11318:16>>;
Val =:= 'prohibit-LT-L45-R45-RT-RU-Allowed-LU-S' ->
<<11319:16>>;
Val =:= 'prohibit-LT-L45-S-Allowed-LU-R45-RT-RU' ->
<<11320:16>>;
Val =:= 'prohibit-LT-L45-S-RU-Allowed-LU-R45-RT' ->
<<11321:16>>;
Val =:= 'prohibit-LT-L45-S-RT-Allowed-LU-R45-RU' ->
<<11322:16>>;
Val =:= 'prohibit-LT-L45-S-RT-RU-Allowed-LU-R45' ->
<<11323:16>>;
Val =:= 'prohibit-LT-L45-S-R45-Allowed-LU-RT-RU' ->
<<11324:16>>;
Val =:= 'prohibit-LT-L45-S-R45-RU-Allowed-LU-RT' ->
<<11325:16>>;
Val =:= 'prohibit-LT-L45-S-R45-RT-Allowed-LU-RU' ->
<<11326:16>>;
Val =:= 'prohibit-LT-L45-S-R45-RT-RU-Allowed-LU' ->
<<11327:16>>;
Val =:= 'prohibit-LU-Allowed-LT-L45-S-R45-RT-RU' ->
<<11328:16>>;
Val =:= 'prohibit-LU-RU-Allowed-LT-L45-S-R45-RT' ->
<<11329:16>>;
Val =:= 'prohibit-LU-RT-Allowed-LT-L45-S-R45-RU' ->
<<11330:16>>;
Val =:= 'prohibit-LU-RT-RU-Allowed-LT-L45-S-R45' ->
<<11331:16>>;
Val =:= 'prohibit-LU-R45-Allowed-LT-L45-S-RT-RU' ->
<<11332:16>>;
Val =:= 'prohibit-LU-R45-RU-Allowed-LT-L45-S-RT' ->
<<11333:16>>;
Val =:= 'prohibit-LU-R45-RT-Allowed-LT-L45-S-RU' ->
<<11334:16>>;
Val =:= 'prohibit-LU-R45-RT-RU-Allowed-LT-L45-S' ->
<<11335:16>>;
Val =:= 'prohibit-LU-S-Allowed-LT-L45-R45-RT-RU' ->
<<11336:16>>;
Val =:= 'prohibit-LU-S-RU-Allowed-LT-L45-R45-RT' ->
<<11337:16>>;
Val =:= 'prohibit-LU-S-RT-Allowed-LT-L45-R45-RU' ->
<<11338:16>>;
Val =:= 'prohibit-LU-S-RT-RU-Allowed-LT-L45-R45' ->
<<11339:16>>;
Val =:= 'prohibit-LU-S-R45-Allowed-LT-L45-RT-RU' ->
<<11340:16>>;
Val =:= 'prohibit-LU-S-R45-RU-Allowed-LT-L45-RT' ->
<<11341:16>>;
Val =:= 'prohibit-LU-S-R45-RT-Allowed-LT-L45-RU' ->
<<11342:16>>;
Val =:= 'prohibit-LU-S-R45-RT-RU-Allowed-LT-L45' ->
<<11343:16>>;
Val =:= 'prohibit-LU-L45-Allowed-LT-S-R45-RT-RU' ->
<<11344:16>>;
Val =:= 'prohibit-LU-L45-RU-Allowed-LT-S-R45-RT' ->
<<11345:16>>;
Val =:= 'prohibit-LU-L45-RT-Allowed-LT-S-R45-RU' ->
<<11346:16>>;
Val =:= 'prohibit-LU-L45-RT-RU-Allowed-LT-S-R45' ->
<<11347:16>>;
Val =:= 'prohibit-LU-L45-R45-Allowed-LT-S-RT-RU' ->
<<11348:16>>;
Val =:= 'prohibit-LU-L45-R45-RU-Allowed-LT-S-RT' ->
<<11349:16>>;
Val =:= 'prohibit-LU-L45-R45-RT-Allowed-LT-S-RU' ->
<<11350:16>>;
Val =:= 'prohibit-LU-L45-R45-RT-RU-Allowed-LT-S' ->
<<11351:16>>;
Val =:= 'prohibit-LU-L45-S-Allowed-LT-R45-RT-RU' ->
<<11352:16>>;
Val =:= 'prohibit-LU-L45-S-RU-Allowed-LT-R45-RT' ->
<<11353:16>>;
Val =:= 'prohibit-LU-L45-S-RT-Allowed-LT-R45-RU' ->
<<11354:16>>;
Val =:= 'prohibit-LU-L45-S-RT-RU-Allowed-LT-R45' ->
<<11355:16>>;
Val =:= 'prohibit-LU-L45-S-R45-Allowed-LT-RT-RU' ->
<<11356:16>>;
Val =:= 'prohibit-LU-L45-S-R45-RU-Allowed-LT-RT' ->
<<11357:16>>;
Val =:= 'prohibit-LU-L45-S-R45-RT-Allowed-LT-RU' ->
<<11358:16>>;
Val =:= 'prohibit-LU-L45-S-R45-RT-RU-Allowed-LT' ->
<<11359:16>>;
Val =:= 'prohibit-LU-LT-Allowed-L45-S-R45-RT-RU' ->
<<11360:16>>;
Val =:= 'prohibit-LU-LT-RU-Allowed-L45-S-R45-RT' ->
<<11361:16>>;
Val =:= 'prohibit-LU-LT-RT-Allowed-L45-S-R45-RU' ->
<<11362:16>>;
Val =:= 'prohibit-LU-LT-RT-RU-Allowed-L45-S-R45' ->
<<11363:16>>;
Val =:= 'prohibit-LU-LT-R45-Allowed-L45-S-RT-RU' ->
<<11364:16>>;
Val =:= 'prohibit-LU-LT-R45-RU-Allowed-L45-S-RT' ->
<<11365:16>>;
Val =:= 'prohibit-LU-LT-R45-RT-Allowed-L45-S-RU' ->
<<11366:16>>;
Val =:= 'prohibit-LU-LT-R45-RT-RU-Allowed-L45-S' ->
<<11367:16>>;
Val =:= 'prohibit-LU-LT-S-Allowed-L45-R45-RT-RU' ->
<<11368:16>>;
Val =:= 'prohibit-LU-LT-S-RU-Allowed-L45-R45-RT' ->
<<11369:16>>;
Val =:= 'prohibit-LU-LT-S-RT-Allowed-L45-R45-RU' ->
<<11370:16>>;
Val =:= 'prohibit-LU-LT-S-RT-RU-Allowed-L45-R45' ->
<<11371:16>>;
Val =:= 'prohibit-LU-LT-S-R45-Allowed-L45-RT-RU' ->
<<11372:16>>;
Val =:= 'prohibit-LU-LT-S-R45-RU-Allowed-L45-RT' ->
<<11373:16>>;
Val =:= 'prohibit-LU-LT-S-R45-RT-Allowed-L45-RU' ->
<<11374:16>>;
Val =:= 'prohibit-LU-LT-S-R45-RT-RU-Allowed-L45' ->
<<11375:16>>;
Val =:= 'prohibit-LU-LT-L45-Allowed-S-R45-RT-RU' ->
<<11376:16>>;
Val =:= 'prohibit-LU-LT-L45-RU-Allowed-S-R45-RT' ->
<<11377:16>>;
Val =:= 'prohibit-LU-LT-L45-RT-Allowed-S-R45-RU' ->
<<11378:16>>;
Val =:= 'prohibit-LU-LT-L45-RT-RU-Allowed-S-R45' ->
<<11379:16>>;
Val =:= 'prohibit-LU-LT-L45-R45-Allowed-S-RT-RU' ->
<<11380:16>>;
Val =:= 'prohibit-LU-LT-L45-R45-RU-Allowed-S-RT' ->
<<11381:16>>;
Val =:= 'prohibit-LU-LT-L45-R45-RT-Allowed-S-RU' ->
<<11382:16>>;
Val =:= 'prohibit-LU-LT-L45-R45-RT-RU-Allowed-S' ->
<<11383:16>>;
Val =:= 'prohibit-LU-LT-L45-S-Allowed-R45-RT-RU' ->
<<11384:16>>;
Val =:= 'prohibit-LU-LT-L45-S-RU-Allowed-R45-RT' ->
<<11385:16>>;
Val =:= 'prohibit-LU-LT-L45-S-RT-Allowed-R45-RU' ->
<<11386:16>>;
Val =:= 'prohibit-LU-LT-L45-S-RT-RU-Allowed-R45' ->
<<11387:16>>;
Val =:= 'prohibit-LU-LT-L45-S-R45-Allowed-RT-RU' ->
<<11388:16>>;
Val =:= 'prohibit-LU-LT-L45-S-R45-RU-Allowed-RT' ->
<<11389:16>>;
Val =:= 'prohibit-LU-LT-L45-S-R45-RT-Allowed-RU' ->
<<11390:16>>;
Val =:= 'prohibit-LU-LT-L45-S-R45-RT-RU-Allowed-None' ->
<<11391:16>>;
Val =:= 'n1-16th' ->
<<11521:16>>;
Val =:= 'n1-10th' ->
<<11522:16>>;
Val =:= 'n1-8th' ->
<<11523:16>>;
Val =:= 'n1-4th' ->
<<11524:16>>;
Val =:= 'n1-3rd' ->
<<11525:16>>;
Val =:= 'n1-2' ->
<<11526:16>>;
Val =:= 'n3-4' ->
<<11527:16>>;
Val =:= n300 ->
<<11531:16>>;
Val =:= n350 ->
<<11532:16>>;
Val =:= n400 ->
<<11533:16>>;
Val =:= n450 ->
<<11534:16>>;
Val =:= n500 ->
<<11535:16>>;
Val =:= n550 ->
<<11536:16>>;
Val =:= n600 ->
<<11537:16>>;
Val =:= n650 ->
<<11538:16>>;
Val =:= n700 ->
<<11539:16>>;
Val =:= n750 ->
<<11540:16>>;
Val =:= n800 ->
<<11541:16>>;
Val =:= n850 ->
<<11542:16>>;
Val =:= n900 ->
<<11543:16>>;
Val =:= n950 ->
<<11544:16>>;
Val =:= n1000 ->
<<11545:16>>;
Val =:= n1100 ->
<<11546:16>>;
Val =:= n1200 ->
<<11547:16>>;
Val =:= n1300 ->
<<11548:16>>;
Val =:= n1400 ->
<<11549:16>>;
Val =:= n1500 ->
<<11550:16>>;
Val =:= n1600 ->
<<11551:16>>;
Val =:= n1700 ->
<<11552:16>>;
Val =:= n1800 ->
<<11553:16>>;
Val =:= n1900 ->
<<11554:16>>;
Val =:= n2000 ->
<<11555:16>>;
Val =:= n2100 ->
<<11556:16>>;
Val =:= n2200 ->
<<11557:16>>;
Val =:= n2300 ->
<<11558:16>>;
Val =:= n2400 ->
<<11559:16>>;
Val =:= n2500 ->
<<11560:16>>;
Val =:= n2600 ->
<<11561:16>>;
Val =:= n2700 ->
<<11562:16>>;
Val =:= n2800 ->
<<11563:16>>;
Val =:= n2900 ->
<<11564:16>>;
Val =:= n3000 ->
<<11565:16>>;
Val =:= n3500 ->
<<11566:16>>;
Val =:= n4000 ->
<<11567:16>>;
Val =:= n4500 ->
<<11568:16>>;
Val =:= n5000 ->
<<11569:16>>;
Val =:= n5500 ->
<<11570:16>>;
Val =:= n6000 ->
<<11571:16>>;
Val =:= n6500 ->
<<11572:16>>;
Val =:= n7000 ->
<<11573:16>>;
Val =:= n7500 ->
<<11574:16>>;
Val =:= n8000 ->
<<11575:16>>;
Val =:= n8500 ->
<<11576:16>>;
Val =:= n9000 ->
<<11577:16>>;
Val =:= n9500 ->
<<11578:16>>;
Val =:= n10000 ->
<<11579:16>>;
Val =:= n11000 ->
<<11580:16>>;
Val =:= n12000 ->
<<11581:16>>;
Val =:= n13000 ->
<<11582:16>>;
Val =:= n14000 ->
<<11583:16>>;
Val =:= n15000 ->
<<11584:16>>;
Val =:= n16000 ->
<<11585:16>>;
Val =:= n17000 ->
<<11586:16>>;
Val =:= n18000 ->
<<11587:16>>;
Val =:= n19000 ->
<<11588:16>>;
Val =:= n20000 ->
<<11589:16>>;
Val =:= n21000 ->
<<11590:16>>;
Val =:= n22000 ->
<<11591:16>>;
Val =:= n23000 ->
<<11592:16>>;
Val =:= n24000 ->
<<11593:16>>;
Val =:= n25000 ->
<<11594:16>>;
Val =:= n26000 ->
<<11595:16>>;
Val =:= n27000 ->
<<11596:16>>;
Val =:= n28000 ->
<<11597:16>>;
Val =:= n29000 ->
<<11598:16>>;
Val =:= n30000 ->
<<11599:16>>;
Val =:= n35000 ->
<<11600:16>>;
Val =:= n40000 ->
<<11601:16>>;
Val =:= n45000 ->
<<11602:16>>;
Val =:= n50000 ->
<<11603:16>>;
Val =:= n55000 ->
<<11604:16>>;
Val =:= n60000 ->
<<11605:16>>;
Val =:= n65000 ->
<<11606:16>>;
Val =:= n70000 ->
<<11607:16>>;
Val =:= n75000 ->
<<11608:16>>;
Val =:= n80000 ->
<<11609:16>>;
Val =:= n85000 ->
<<11610:16>>;
Val =:= n90000 ->
<<11611:16>>;
Val =:= n95000 ->
<<11612:16>>;
Val =:= n100000 ->
<<11613:16>>;
Val =:= 'name-follows' ->
<<11777:16>>;
Val =:= freeway ->
<<11778:16>>;
Val =:= 'us-Route' ->
<<11779:16>>;
Val =:= 'state-Route' ->
<<11780:16>>;
Val =:= interstate ->
<<11781:16>>;
Val =:= 'business-Loop' ->
<<11782:16>>;
Val =:= alternative ->
<<11783:16>>;
Val =:= 'county-Route' ->
<<11784:16>>;
Val =:= 'forest-Route' ->
<<11785:16>>;
Val =:= 'farm-to-Market-Route' ->
<<11786:16>>;
Val =:= 'eisenhower-Interstate-System' ->
<<11787:16>>;
Val =:= 'americas-Byways' ->
<<11788:16>>;
Val =:= 'national-Network-Route' ->
<<11789:16>>;
Val =:= 'scenic-Area' ->
<<11790:16>>;
Val =:= 'parking-Area' ->
<<11791:16>>;
Val =:= 'weight-Station' ->
<<11792:16>>;
Val =:= road ->
<<11793:16>>;
Val =:= exit ->
<<11794:16>>;
Val =:= 'historical-route' ->
<<11795:16>>;
Val =:= 'state-line' ->
<<11796:16>>;
Val =:= spur ->
<<11797:16>>;
Val =:= junction ->
<<11798:16>>;
Val =:= 'bicycle-route' ->
<<11799:16>>;
Val =:= 'bicycle-interstate-route' ->
<<11800:16>>;
Val =:= 'national-park' ->
<<11801:16>>;
Val =:= 'bear-viewing-area' ->
<<12033:16>>;
Val =:= 'deer-viewing-area' ->
<<12034:16>>;
Val =:= 'drinking-water' ->
<<12035:16>>;
Val =:= 'environmental-study-area' ->
<<12036:16>>;
Val =:= 'falling-rocks' ->
<<12037:16>>;
Val =:= firearms ->
<<12038:16>>;
Val =:= 'leashed-pets' ->
<<12039:16>>;
Val =:= 'point-of-interest' ->
<<12040:16>>;
Val =:= smoking ->
<<12041:16>>;
Val =:= dog ->
<<12042:16>>;
Val =:= 'tent-camping' ->
<<12043:16>>;
Val =:= 'trailer-camping' ->
<<12044:16>>;
Val =:= 'first-aid' ->
<<12045:16>>;
Val =:= handicapped ->
<<12046:16>>;
Val =:= mechanic ->
<<12047:16>>;
Val =:= 'trailer-sanitary-station' ->
<<12048:16>>;
Val =:= 'viewing-area' ->
<<12049:16>>;
Val =:= campfire ->
<<12050:16>>;
Val =:= locker ->
<<12051:16>>;
Val =:= sleeping ->
<<12052:16>>;
Val =:= trail ->
<<12053:16>>;
Val =:= climbing ->
<<12054:16>>;
Val =:= 'rock-climbing' ->
<<12055:16>>;
Val =:= hunting ->
<<12056:16>>;
Val =:= playground ->
<<12057:16>>;
Val =:= 'rock-collecting' ->
<<12058:16>>;
Val =:= spelunking ->
<<12059:16>>;
Val =:= 'bicycle-trail' ->
<<12060:16>>;
Val =:= 'hiking-trail' ->
<<12061:16>>;
Val =:= 'horse-trail' ->
<<12062:16>>;
Val =:= 'trail-interpretive-auto' ->
<<12063:16>>;
Val =:= 'trail-interpretive-pedestrian' ->
<<12064:16>>;
Val =:= 'trail-road-for-4WD-vehicles' ->
<<12065:16>>;
Val =:= 'trail-for-trail-bikes' ->
<<12066:16>>;
Val =:= archer ->
<<12067:16>>;
Val =:= 'hang-glider' ->
<<12068:16>>;
Val =:= 'boat-tours' ->
<<12069:16>>;
Val =:= canoeing ->
<<12070:16>>;
Val =:= diving ->
<<12071:16>>;
Val =:= 'scuba-diving' ->
<<12072:16>>;
Val =:= fishing ->
<<12073:16>>;
Val =:= 'marine-recreation-area' ->
<<12074:16>>;
Val =:= motorboating ->
<<12075:16>>;
Val =:= 'boat-ramp' ->
<<12076:16>>;
Val =:= rowboating ->
<<12077:16>>;
Val =:= sailboating ->
<<12078:16>>;
Val =:= 'water-skiing' ->
<<12079:16>>;
Val =:= surfing ->
<<12080:16>>;
Val =:= swimming ->
<<12081:16>>;
Val =:= wading ->
<<12082:16>>;
Val =:= 'hand-launch' ->
<<12083:16>>;
Val =:= kayak ->
<<12084:16>>;
Val =:= 'wind-surf' ->
<<12085:16>>;
Val =:= 'ice-skating' ->
<<12086:16>>;
Val =:= 'ski-jumping' ->
<<12087:16>>;
Val =:= bobbing ->
<<12088:16>>;
Val =:= 'cross-country-skiing' ->
<<12089:16>>;
Val =:= 'downhill-skiing' ->
<<12090:16>>;
Val =:= sledding ->
<<12091:16>>;
Val =:= snowmobiling ->
<<12092:16>>;
Val =:= snowshoeing ->
<<12093:16>>;
Val =:= 'winter-recreation-area' ->
<<12094:16>>;
Val =:= 'scenic-overlook' ->
<<12095:16>>;
Val =:= 'regulatory-sign' ->
<<12289:16>>;
Val =:= 'warning-sign' ->
<<12290:16>>;
Val =:= 'information-sign' ->
<<12291:16>>;
Val =:= 'construction-sign' ->
<<12292:16>>;
Val =:= 'guide-sign' ->
<<12293:16>>;
Val =:= stop ->
<<12294:16>>;
Val =:= yield ->
<<12295:16>>;
Val =:= 'to-oncoming-traffic' ->
<<12296:16>>;
Val =:= 'four-way' ->
<<12297:16>>;
Val =:= 'all-way' ->
<<12298:16>>;
Val =:= zone ->
<<12299:16>>;
Val =:= narrows ->
<<12300:16>>;
Val =:= widens ->
<<12301:16>>;
Val =:= reduced ->
<<12302:16>>;
Val =:= combined ->
<<12303:16>>;
Val =:= minimum ->
<<12304:16>>;
Val =:= maximum ->
<<12305:16>>;
Val =:= 'divided-road' ->
<<12306:16>>;
Val =:= 'double-arrow' ->
<<12307:16>>;
Val =:= 'dead-end' ->
<<12308:16>>;
Val =:= 'no-outlet' ->
<<12309:16>>;
Val =:= 'wrong-way' ->
<<12310:16>>;
Val =:= nDetour ->
<<12312:16>>;
Val =:= chevron ->
<<12313:16>>;
Val =:= 'do-not-enter' ->
<<12314:16>>;
Val =:= 't-intersection-to-the-side' ->
<<12315:16>>;
Val =:= 't-intersection-oncoming' ->
<<12316:16>>;
Val =:= 'y-intersection-to-the-side' ->
<<12317:16>>;
Val =:= 'y-intersection-oncoming' ->
<<12318:16>>;
Val =:= 'four-way-divided-highway-crossing' ->
<<12319:16>>;
Val =:= 't-way-divided-highway-crossing' ->
<<12320:16>>;
Val =:= 'light-rail-divided-highway-crossing' ->
<<12321:16>>;
Val =:= 'light-rail-t-divided-highway-crossing' ->
<<12322:16>>;
Val =:= 'side-road-to-right' ->
<<12323:16>>;
Val =:= 'side-road-to-left' ->
<<12324:16>>;
Val =:= 'side-road-to-right-at-angle' ->
<<12325:16>>;
Val =:= 'side-road-to-left-at-angle' ->
<<12326:16>>;
Val =:= 'entering-roadway-merge' ->
<<12327:16>>;
Val =:= 'entering-roadway-added-lane' ->
<<12328:16>>;
Val =:= 'one-way' ->
<<12329:16>>;
Val =:= caution ->
<<12330:16>>;
Val =:= temporary ->
<<12331:16>>;
Val =:= n1 ->
<<12545:16>>;
Val =:= n2 ->
<<12546:16>>;
Val =:= n3 ->
<<12547:16>>;
Val =:= n4 ->
<<12548:16>>;
Val =:= n5 ->
<<12549:16>>;
Val =:= n6 ->
<<12550:16>>;
Val =:= n7 ->
<<12551:16>>;
Val =:= n8 ->
<<12552:16>>;
Val =:= n9 ->
<<12553:16>>;
Val =:= n10 ->
<<12554:16>>;
Val =:= n11 ->
<<12555:16>>;
Val =:= n12 ->
<<12556:16>>;
Val =:= n13 ->
<<12557:16>>;
Val =:= n14 ->
<<12558:16>>;
Val =:= n15 ->
<<12559:16>>;
Val =:= n16 ->
<<12560:16>>;
Val =:= n17 ->
<<12561:16>>;
Val =:= n18 ->
<<12562:16>>;
Val =:= n19 ->
<<12563:16>>;
Val =:= n20 ->
<<12564:16>>;
Val =:= n21 ->
<<12565:16>>;
Val =:= n22 ->
<<12566:16>>;
Val =:= n23 ->
<<12567:16>>;
Val =:= n24 ->
<<12568:16>>;
Val =:= n25 ->
<<12569:16>>;
Val =:= n26 ->
<<12570:16>>;
Val =:= n27 ->
<<12571:16>>;
Val =:= n28 ->
<<12572:16>>;
Val =:= n29 ->
<<12573:16>>;
Val =:= n30 ->
<<12574:16>>;
Val =:= n31 ->
<<12575:16>>;
Val =:= n32 ->
<<12576:16>>;
Val =:= n33 ->
<<12577:16>>;
Val =:= n34 ->
<<12578:16>>;
Val =:= n35 ->
<<12579:16>>;
Val =:= n36 ->
<<12580:16>>;
Val =:= n37 ->
<<12581:16>>;
Val =:= n38 ->
<<12582:16>>;
Val =:= n39 ->
<<12583:16>>;
Val =:= n40 ->
<<12584:16>>;
Val =:= n41 ->
<<12585:16>>;
Val =:= n42 ->
<<12586:16>>;
Val =:= n43 ->
<<12587:16>>;
Val =:= n44 ->
<<12588:16>>;
Val =:= n45 ->
<<12589:16>>;
Val =:= n46 ->
<<12590:16>>;
Val =:= n47 ->
<<12591:16>>;
Val =:= n48 ->
<<12592:16>>;
Val =:= n49 ->
<<12593:16>>;
Val =:= n50 ->
<<12594:16>>;
Val =:= n51 ->
<<12595:16>>;
Val =:= n52 ->
<<12596:16>>;
Val =:= n53 ->
<<12597:16>>;
Val =:= n54 ->
<<12598:16>>;
Val =:= n55 ->
<<12599:16>>;
Val =:= n56 ->
<<12600:16>>;
Val =:= n57 ->
<<12601:16>>;
Val =:= n58 ->
<<12602:16>>;
Val =:= n59 ->
<<12603:16>>;
Val =:= n60 ->
<<12604:16>>;
Val =:= n61 ->
<<12605:16>>;
Val =:= n62 ->
<<12606:16>>;
Val =:= n63 ->
<<12607:16>>;
Val =:= n64 ->
<<12608:16>>;
Val =:= n65 ->
<<12609:16>>;
Val =:= n66 ->
<<12610:16>>;
Val =:= n67 ->
<<12611:16>>;
Val =:= n68 ->
<<12612:16>>;
Val =:= n69 ->
<<12613:16>>;
Val =:= n70 ->
<<12614:16>>;
Val =:= n71 ->
<<12615:16>>;
Val =:= n72 ->
<<12616:16>>;
Val =:= n73 ->
<<12617:16>>;
Val =:= n74 ->
<<12618:16>>;
Val =:= n75 ->
<<12619:16>>;
Val =:= n76 ->
<<12620:16>>;
Val =:= n77 ->
<<12621:16>>;
Val =:= n78 ->
<<12622:16>>;
Val =:= n79 ->
<<12623:16>>;
Val =:= n80 ->
<<12624:16>>;
Val =:= n81 ->
<<12625:16>>;
Val =:= n82 ->
<<12626:16>>;
Val =:= n83 ->
<<12627:16>>;
Val =:= n84 ->
<<12628:16>>;
Val =:= n85 ->
<<12629:16>>;
Val =:= n86 ->
<<12630:16>>;
Val =:= n87 ->
<<12631:16>>;
Val =:= n88 ->
<<12632:16>>;
Val =:= n89 ->
<<12633:16>>;
Val =:= n90 ->
<<12634:16>>;
Val =:= n91 ->
<<12635:16>>;
Val =:= n92 ->
<<12636:16>>;
Val =:= n93 ->
<<12637:16>>;
Val =:= n94 ->
<<12638:16>>;
Val =:= n95 ->
<<12639:16>>;
Val =:= n96 ->
<<12640:16>>;
Val =:= n97 ->
<<12641:16>>;
Val =:= n98 ->
<<12642:16>>;
Val =:= n99 ->
<<12643:16>>;
Val =:= n100 ->
<<12644:16>>;
Val =:= n101 ->
<<12645:16>>;
Val =:= n102 ->
<<12646:16>>;
Val =:= n103 ->
<<12647:16>>;
Val =:= n104 ->
<<12648:16>>;
Val =:= n105 ->
<<12649:16>>;
Val =:= n106 ->
<<12650:16>>;
Val =:= n107 ->
<<12651:16>>;
Val =:= n108 ->
<<12652:16>>;
Val =:= n109 ->
<<12653:16>>;
Val =:= n110 ->
<<12654:16>>;
Val =:= n111 ->
<<12655:16>>;
Val =:= n112 ->
<<12656:16>>;
Val =:= n113 ->
<<12657:16>>;
Val =:= n114 ->
<<12658:16>>;
Val =:= n115 ->
<<12659:16>>;
Val =:= n116 ->
<<12660:16>>;
Val =:= n117 ->
<<12661:16>>;
Val =:= n118 ->
<<12662:16>>;
Val =:= n119 ->
<<12663:16>>;
Val =:= n120 ->
<<12664:16>>;
Val =:= n121 ->
<<12665:16>>;
Val =:= n122 ->
<<12666:16>>;
Val =:= n123 ->
<<12667:16>>;
Val =:= n124 ->
<<12668:16>>;
Val =:= n125 ->
<<12669:16>>;
Val =:= n126 ->
<<12670:16>>;
Val =:= n127 ->
<<12671:16>>;
Val =:= n128 ->
<<12672:16>>;
Val =:= n129 ->
<<12673:16>>;
Val =:= n130 ->
<<12674:16>>;
Val =:= n131 ->
<<12675:16>>;
Val =:= n132 ->
<<12676:16>>;
Val =:= n133 ->
<<12677:16>>;
Val =:= n134 ->
<<12678:16>>;
Val =:= n135 ->
<<12679:16>>;
Val =:= n136 ->
<<12680:16>>;
Val =:= n137 ->
<<12681:16>>;
Val =:= n138 ->
<<12682:16>>;
Val =:= n139 ->
<<12683:16>>;
Val =:= n140 ->
<<12684:16>>;
Val =:= n141 ->
<<12685:16>>;
Val =:= n142 ->
<<12686:16>>;
Val =:= n143 ->
<<12687:16>>;
Val =:= n144 ->
<<12688:16>>;
Val =:= n145 ->
<<12689:16>>;
Val =:= n146 ->
<<12690:16>>;
Val =:= n147 ->
<<12691:16>>;
Val =:= n148 ->
<<12692:16>>;
Val =:= n149 ->
<<12693:16>>;
Val =:= n150 ->
<<12694:16>>;
Val =:= n151 ->
<<12695:16>>;
Val =:= n152 ->
<<12696:16>>;
Val =:= n153 ->
<<12697:16>>;
Val =:= n154 ->
<<12698:16>>;
Val =:= n155 ->
<<12699:16>>;
Val =:= n156 ->
<<12700:16>>;
Val =:= n157 ->
<<12701:16>>;
Val =:= n158 ->
<<12702:16>>;
Val =:= n159 ->
<<12703:16>>;
Val =:= n160 ->
<<12704:16>>;
Val =:= n161 ->
<<12705:16>>;
Val =:= n162 ->
<<12706:16>>;
Val =:= n163 ->
<<12707:16>>;
Val =:= n164 ->
<<12708:16>>;
Val =:= n165 ->
<<12709:16>>;
Val =:= n166 ->
<<12710:16>>;
Val =:= n167 ->
<<12711:16>>;
Val =:= n168 ->
<<12712:16>>;
Val =:= n169 ->
<<12713:16>>;
Val =:= n170 ->
<<12714:16>>;
Val =:= n171 ->
<<12715:16>>;
Val =:= n172 ->
<<12716:16>>;
Val =:= n173 ->
<<12717:16>>;
Val =:= n174 ->
<<12718:16>>;
Val =:= n175 ->
<<12719:16>>;
Val =:= n176 ->
<<12720:16>>;
Val =:= n177 ->
<<12721:16>>;
Val =:= n178 ->
<<12722:16>>;
Val =:= n179 ->
<<12723:16>>;
Val =:= n180 ->
<<12724:16>>;
Val =:= n181 ->
<<12725:16>>;
Val =:= n182 ->
<<12726:16>>;
Val =:= n183 ->
<<12727:16>>;
Val =:= n184 ->
<<12728:16>>;
Val =:= n185 ->
<<12729:16>>;
Val =:= n186 ->
<<12730:16>>;
Val =:= n187 ->
<<12731:16>>;
Val =:= n188 ->
<<12732:16>>;
Val =:= n189 ->
<<12733:16>>;
Val =:= n190 ->
<<12734:16>>;
Val =:= n191 ->
<<12735:16>>;
Val =:= n192 ->
<<12736:16>>;
Val =:= n193 ->
<<12737:16>>;
Val =:= n194 ->
<<12738:16>>;
Val =:= n195 ->
<<12739:16>>;
Val =:= n196 ->
<<12740:16>>;
Val =:= n197 ->
<<12741:16>>;
Val =:= n198 ->
<<12742:16>>;
Val =:= n199 ->
<<12743:16>>;
Val =:= n200 ->
<<12744:16>>;
Val =:= n201 ->
<<12745:16>>;
Val =:= n202 ->
<<12746:16>>;
Val =:= n203 ->
<<12747:16>>;
Val =:= n204 ->
<<12748:16>>;
Val =:= n205 ->
<<12749:16>>;
Val =:= n206 ->
<<12750:16>>;
Val =:= n207 ->
<<12751:16>>;
Val =:= n208 ->
<<12752:16>>;
Val =:= n209 ->
<<12753:16>>;
Val =:= n210 ->
<<12754:16>>;
Val =:= n211 ->
<<12755:16>>;
Val =:= n212 ->
<<12756:16>>;
Val =:= n213 ->
<<12757:16>>;
Val =:= n214 ->
<<12758:16>>;
Val =:= n215 ->
<<12759:16>>;
Val =:= n216 ->
<<12760:16>>;
Val =:= n217 ->
<<12761:16>>;
Val =:= n218 ->
<<12762:16>>;
Val =:= n219 ->
<<12763:16>>;
Val =:= n220 ->
<<12764:16>>;
Val =:= n221 ->
<<12765:16>>;
Val =:= n222 ->
<<12766:16>>;
Val =:= n223 ->
<<12767:16>>;
Val =:= n224 ->
<<12768:16>>;
Val =:= n225 ->
<<12769:16>>;
Val =:= n226 ->
<<12770:16>>;
Val =:= n227 ->
<<12771:16>>;
Val =:= n228 ->
<<12772:16>>;
Val =:= n229 ->
<<12773:16>>;
Val =:= n230 ->
<<12774:16>>;
Val =:= n231 ->
<<12775:16>>;
Val =:= n232 ->
<<12776:16>>;
Val =:= n233 ->
<<12777:16>>;
Val =:= n234 ->
<<12778:16>>;
Val =:= n235 ->
<<12779:16>>;
Val =:= n236 ->
<<12780:16>>;
Val =:= n237 ->
<<12781:16>>;
Val =:= n238 ->
<<12782:16>>;
Val =:= n239 ->
<<12783:16>>;
Val =:= n240 ->
<<12784:16>>;
Val =:= n241 ->
<<12785:16>>;
Val =:= n242 ->
<<12786:16>>;
Val =:= n243 ->
<<12787:16>>;
Val =:= n244 ->
<<12788:16>>;
Val =:= n245 ->
<<12789:16>>;
Val =:= n246 ->
<<12790:16>>;
Val =:= n247 ->
<<12791:16>>;
Val =:= n248 ->
<<12792:16>>;
Val =:= n249 ->
<<12793:16>>;
Val =:= n250 ->
<<12794:16>>;
Val =:= n251 ->
<<12795:16>>;
Val =:= n252 ->
<<12796:16>>;
Val =:= n253 ->
<<12797:16>>;
Val =:= n254 ->
<<12798:16>>;
Val =:= n255 ->
<<12799:16>>;
Val =:= alabama ->
<<12801:16>>;
Val =:= alaska ->
<<12802:16>>;
Val =:= 'american-Samoa' ->
<<12803:16>>;
Val =:= arizona ->
<<12804:16>>;
Val =:= arkansas ->
<<12805:16>>;
Val =:= california ->
<<12806:16>>;
Val =:= colorado ->
<<12807:16>>;
Val =:= connecticut ->
<<12808:16>>;
Val =:= delaware ->
<<12809:16>>;
Val =:= 'district-of-Columbia' ->
<<12810:16>>;
Val =:= florida ->
<<12811:16>>;
Val =:= georgia ->
<<12812:16>>;
Val =:= guam ->
<<12813:16>>;
Val =:= hawaii ->
<<12814:16>>;
Val =:= idaho ->
<<12815:16>>;
Val =:= illinois ->
<<12816:16>>;
Val =:= indiana ->
<<12817:16>>;
Val =:= iowa ->
<<12818:16>>;
Val =:= kansas ->
<<12819:16>>;
Val =:= kentucky ->
<<12820:16>>;
Val =:= louisiana ->
<<12821:16>>;
Val =:= maine ->
<<12822:16>>;
Val =:= maryland ->
<<12823:16>>;
Val =:= massachusetts ->
<<12824:16>>;
Val =:= michigan ->
<<12825:16>>;
Val =:= minnesota ->
<<12826:16>>;
Val =:= mississippi ->
<<12827:16>>;
Val =:= missouri ->
<<12828:16>>;
Val =:= montana ->
<<12829:16>>;
Val =:= nebraska ->
<<12830:16>>;
Val =:= nevada ->
<<12831:16>>;
Val =:= 'new-Hampshire' ->
<<12832:16>>;
Val =:= 'new-Jersey' ->
<<12833:16>>;
Val =:= 'new-Mexico' ->
<<12834:16>>;
Val =:= 'new-York' ->
<<12835:16>>;
Val =:= 'north-Carolina' ->
<<12836:16>>;
Val =:= 'north-Dakota' ->
<<12837:16>>;
Val =:= 'northern-Marianas-Islands' ->
<<12838:16>>;
Val =:= ohio ->
<<12839:16>>;
Val =:= oklahoma ->
<<12840:16>>;
Val =:= oregon ->
<<12841:16>>;
Val =:= pennsylvania ->
<<12842:16>>;
Val =:= 'puerto-rico' ->
<<12843:16>>;
Val =:= 'rhode-Island' ->
<<12844:16>>;
Val =:= 'south-Carolina' ->
<<12845:16>>;
Val =:= 'south-Dakota' ->
<<12846:16>>;
Val =:= tennessee ->
<<12847:16>>;
Val =:= texas ->
<<12848:16>>;
Val =:= utah ->
<<12849:16>>;
Val =:= vermont ->
<<12850:16>>;
Val =:= virginia ->
<<12851:16>>;
Val =:= 'virgin-Islands' ->
<<12852:16>>;
Val =:= washington ->
<<12853:16>>;
Val =:= 'west-Virginia' ->
<<12854:16>>;
Val =:= wisconsin ->
<<12855:16>>;
Val =:= wyoming ->
<<12856:16>>;
Val =:= 'rest-room' ->
<<13057:16>>;
Val =:= 'mens-rest-room' ->
<<13058:16>>;
Val =:= 'womens-rest-room' ->
<<13059:16>>;
Val =:= 'family-rest-room' ->
<<13060:16>>;
Val =:= dam ->
<<13061:16>>;
Val =:= 'fish-hatchery' ->
<<13062:16>>;
Val =:= information ->
<<13063:16>>;
Val =:= lighthouse ->
<<13064:16>>;
Val =:= 'lookout-tower' ->
<<13065:16>>;
Val =:= 'ranger-station' ->
<<13066:16>>;
Val =:= 'grocery-store' ->
<<13068:16>>;
Val =:= lodging ->
<<13069:16>>;
Val =:= 'post-office' ->
<<13070:16>>;
Val =:= 'picnic-shelter' ->
<<13072:16>>;
Val =:= 'group-camping' ->
<<13073:16>>;
Val =:= 'group-picnicking' ->
<<13074:16>>;
Val =:= 'n24-hour-pharmacy' ->
<<13075:16>>;
Val =:= kennel ->
<<13076:16>>;
Val =:= 'laundry-facilities' ->
<<13077:16>>;
Val =:= 'shower-facilities' ->
<<13078:16>>;
Val =:= amphitheater ->
<<13079:16>>;
Val =:= stable ->
<<13080:16>>;
Val =:= hospital ->
<<13081:16>>;
Val =:= 'emergency-medical-service-point' ->
<<13082:16>>;
Val =:= library ->
<<13083:16>>;
Val =:= 'recycling-collection-center' ->
<<13084:16>>;
Val =:= school ->
<<13085:16>>;
Val =:= alley ->
<<13313:16>>;
Val =:= annex ->
<<13314:16>>;
Val =:= arcade ->
<<13315:16>>;
Val =:= avenue ->
<<13316:16>>;
Val =:= bayoo ->
<<13317:16>>;
Val =:= beach ->
<<13318:16>>;
Val =:= bend ->
<<13319:16>>;
Val =:= bluff ->
<<13320:16>>;
Val =:= bottom ->
<<13321:16>>;
Val =:= boulevard ->
<<13322:16>>;
Val =:= branch ->
<<13323:16>>;
Val =:= nBridge ->
<<13324:16>>;
Val =:= brook ->
<<13325:16>>;
Val =:= burg ->
<<13326:16>>;
Val =:= bypass ->
<<13327:16>>;
Val =:= camp ->
<<13328:16>>;
Val =:= canyon ->
<<13329:16>>;
Val =:= cape ->
<<13330:16>>;
Val =:= causeway ->
<<13331:16>>;
Val =:= nCenter ->
<<13332:16>>;
Val =:= circle ->
<<13333:16>>;
Val =:= cliff ->
<<13334:16>>;
Val =:= club ->
<<13335:16>>;
Val =:= common ->
<<13336:16>>;
Val =:= corner ->
<<13337:16>>;
Val =:= course ->
<<13338:16>>;
Val =:= court ->
<<13339:16>>;
Val =:= cove ->
<<13340:16>>;
Val =:= creek ->
<<13341:16>>;
Val =:= crescent ->
<<13342:16>>;
Val =:= crest ->
<<13343:16>>;
Val =:= nCrossing ->
<<13344:16>>;
Val =:= crossroad ->
<<13345:16>>;
Val =:= curve ->
<<13346:16>>;
Val =:= dale ->
<<13347:16>>;
Val =:= nDam ->
<<13348:16>>;
Val =:= divide ->
<<13349:16>>;
Val =:= drive ->
<<13350:16>>;
Val =:= estate ->
<<13351:16>>;
Val =:= expressway ->
<<13352:16>>;
Val =:= extension ->
<<13353:16>>;
Val =:= fall ->
<<13354:16>>;
Val =:= nFerry ->
<<13355:16>>;
Val =:= field ->
<<13356:16>>;
Val =:= flat ->
<<13357:16>>;
Val =:= ford ->
<<13358:16>>;
Val =:= forest ->
<<13359:16>>;
Val =:= forge ->
<<13360:16>>;
Val =:= fork ->
<<13361:16>>;
Val =:= fort ->
<<13362:16>>;
Val =:= nFreeway ->
<<13363:16>>;
Val =:= garden ->
<<13364:16>>;
Val =:= gateway ->
<<13365:16>>;
Val =:= glen ->
<<13366:16>>;
Val =:= green ->
<<13367:16>>;
Val =:= grove ->
<<13368:16>>;
Val =:= harbor ->
<<13369:16>>;
Val =:= haven ->
<<13370:16>>;
Val =:= heights ->
<<13371:16>>;
Val =:= highway ->
<<13372:16>>;
Val =:= nHill ->
<<13373:16>>;
Val =:= hollow ->
<<13374:16>>;
Val =:= inlet ->
<<13375:16>>;
Val =:= nIsland ->
<<13376:16>>;
Val =:= isle ->
<<13377:16>>;
Val =:= nJunction ->
<<13378:16>>;
Val =:= key ->
<<13379:16>>;
Val =:= knoll ->
<<13380:16>>;
Val =:= lake ->
<<13381:16>>;
Val =:= land ->
<<13382:16>>;
Val =:= landing ->
<<13383:16>>;
Val =:= nLane ->
<<13384:16>>;
Val =:= light ->
<<13385:16>>;
Val =:= loaf ->
<<13386:16>>;
Val =:= lock ->
<<13387:16>>;
Val =:= lodge ->
<<13388:16>>;
Val =:= loop ->
<<13389:16>>;
Val =:= mall ->
<<13390:16>>;
Val =:= manor ->
<<13391:16>>;
Val =:= meadow ->
<<13392:16>>;
Val =:= mews ->
<<13393:16>>;
Val =:= mill ->
<<13394:16>>;
Val =:= mission ->
<<13395:16>>;
Val =:= motorway ->
<<13396:16>>;
Val =:= mount ->
<<13397:16>>;
Val =:= mountain ->
<<13398:16>>;
Val =:= neck ->
<<13399:16>>;
Val =:= orchard ->
<<13400:16>>;
Val =:= oval ->
<<13401:16>>;
Val =:= nOverpass ->
<<13402:16>>;
Val =:= park ->
<<13403:16>>;
Val =:= parkway ->
<<13404:16>>;
Val =:= nPass ->
<<13405:16>>;
Val =:= passage ->
<<13406:16>>;
Val =:= path ->
<<13407:16>>;
Val =:= pike ->
<<13408:16>>;
Val =:= pine ->
<<13409:16>>;
Val =:= plains ->
<<13410:16>>;
Val =:= plaza ->
<<13411:16>>;
Val =:= point ->
<<13412:16>>;
Val =:= port ->
<<13413:16>>;
Val =:= prairie ->
<<13414:16>>;
Val =:= radial ->
<<13415:16>>;
Val =:= ramp ->
<<13416:16>>;
Val =:= ranch ->
<<13417:16>>;
Val =:= rapid ->
<<13418:16>>;
Val =:= rest ->
<<13419:16>>;
Val =:= ridge ->
<<13420:16>>;
Val =:= river ->
<<13421:16>>;
Val =:= nRoad ->
<<13422:16>>;
Val =:= route ->
<<13423:16>>;
Val =:= row ->
<<13424:16>>;
Val =:= rue ->
<<13425:16>>;
Val =:= run ->
<<13426:16>>;
Val =:= shoal ->
<<13427:16>>;
Val =:= shore ->
<<13428:16>>;
Val =:= skyway ->
<<13429:16>>;
Val =:= spring ->
<<13430:16>>;
Val =:= nSpur ->
<<13431:16>>;
Val =:= square ->
<<13432:16>>;
Val =:= nStation ->
<<13433:16>>;
Val =:= stravenue ->
<<13434:16>>;
Val =:= stream ->
<<13435:16>>;
Val =:= street ->
<<13436:16>>;
Val =:= summit ->
<<13437:16>>;
Val =:= terrace ->
<<13438:16>>;
Val =:= throughway ->
<<13439:16>>;
Val =:= trace ->
<<13440:16>>;
Val =:= nTrack ->
<<13441:16>>;
Val =:= trafficway ->
<<13442:16>>;
Val =:= nTrail ->
<<13443:16>>;
Val =:= nTunnel ->
<<13444:16>>;
Val =:= turnpike ->
<<13445:16>>;
Val =:= nUnderpass ->
<<13446:16>>;
Val =:= union ->
<<13447:16>>;
Val =:= valley ->
<<13448:16>>;
Val =:= viaduct ->
<<13449:16>>;
Val =:= view ->
<<13450:16>>;
Val =:= village ->
<<13451:16>>;
Val =:= ville ->
<<13452:16>>;
Val =:= vista ->
<<13453:16>>;
Val =:= nWalk ->
<<13454:16>>;
Val =:= wall ->
<<13455:16>>;
Val =:= way ->
<<13456:16>>;
Val =:= well ->
<<13457:16>>;
Val =:= ahead ->
<<13569:16>>;
Val =:= here ->
<<13570:16>>;
Val =:= 'here-to' ->
<<13571:16>>;
Val =:= 'here-to-alley' ->
<<13572:16>>;
Val =:= 'here-to-corner' ->
<<13573:16>>;
Val =:= 'here-to-sign' ->
<<13574:16>>;
Val =:= 'between-signs' ->
<<13575:16>>;
Val =:= 'this-side-of-street' ->
<<13576:16>>;
Val =:= 'this-side-of-sign' ->
<<13577:16>>;
Val =:= right ->
<<13579:16>>;
Val =:= left ->
<<13580:16>>;
Val =:= 'begin-point' ->
<<13581:16>>;
Val =:= next ->
<<13582:16>>;
Val =:= 'ends-end' ->
<<13583:16>>;
Val =:= 'other-Side' ->
<<13584:16>>;
Val =:= crossing ->
<<13585:16>>;
Val =:= crosswalks ->
<<13586:16>>;
Val =:= 'center-strip' ->
<<13587:16>>;
Val =:= lane ->
<<13588:16>>;
Val =:= hill ->
<<13589:16>>;
Val =:= 'both-ways-left-and-right' ->
<<13590:16>>;
Val =:= 'both-ways-45-degree-angle-tilting-right' ->
<<13591:16>>;
Val =:= 'both-ways-45-degree-angle-tilting-left' ->
<<13592:16>>;
Val =:= 'both-directions-of-travel' ->
<<13593:16>>;
Val =:= 'left-turn' ->
<<13594:16>>;
Val =:= 'left-45-degree-arrow' ->
<<13595:16>>;
Val =:= 'left-45-degree-turn' ->
<<13596:16>>;
Val =:= 'ahead-and-to-the-left' ->
<<13597:16>>;
Val =:= 'ahead-and-to-the-left-at-a-45-degree-angle' ->
<<13598:16>>;
Val =:= 'right-turn' ->
<<13599:16>>;
Val =:= 'right-45-degree-arrow' ->
<<13600:16>>;
Val =:= 'right-45-degree-turn' ->
<<13601:16>>;
Val =:= 'ahead-and-to-the-right' ->
<<13602:16>>;
Val =:= 'ahead-and-to-the-right-at-a-45-degree-angle' ->
<<13603:16>>;
Val =:= 'downward-left-45-degree' ->
<<13604:16>>;
Val =:= 'downward-right-45-degree' ->
<<13605:16>>;
Val =:= 'downward-left-and-right-45-degree' ->
<<13606:16>>;
Val =:= 'right-arrow' ->
<<13609:16>>;
Val =:= 'left-arrow' ->
<<13610:16>>;
Val =:= 'starting-start' ->
<<13611:16>>;
Val =:= 'chevron-right' ->
<<13613:16>>;
Val =:= 'chevron-left' ->
<<13614:16>>;
Val =:= 'right-turn-with-junction' ->
<<13615:16>>;
Val =:= 'left-turn-with-junction' ->
<<13616:16>>;
Val =:= 'hairpin-right' ->
<<13617:16>>;
Val =:= 'hairpin-left' ->
<<13618:16>>;
Val =:= 'truck-rollover-right' ->
<<13619:16>>;
Val =:= 'truck-rollover-left' ->
<<13620:16>>;
Val =:= 'n270-degree-turn-right' ->
<<13621:16>>;
Val =:= 'n270-degree-turn-left' ->
<<13622:16>>;
Val =:= 'two-lane-reverse-curve-to-right' ->
<<13623:16>>;
Val =:= 'two-lane-reverse-curve-to-left' ->
<<13624:16>>;
Val =:= 'three-lane-reverse-curve-to-right' ->
<<13625:16>>;
Val =:= 'three-lane-reverse-curve-to-left' ->
<<13626:16>>;
Val =:= 'double-reverse-curve-to-right' ->
<<13627:16>>;
Val =:= 'double-reverse-curve-to-left' ->
<<13628:16>>;
Val =:= 'two-lane-double-reverse-curve-to-right' ->
<<13629:16>>;
Val =:= 'two-lane-double-reverse-curve-to-left' ->
<<13630:16>>;
Val =:= 'three-lane-double-reverse-curve-to-right' ->
<<13631:16>>;
Val =:= 'three-lane-double-reverse-curve-to-left' ->
<<13632:16>>;
Val =:= between ->
<<13633:16>>;
Val =:= shelter ->
<<13634:16>>;
Val =:= center ->
<<13635:16>>;
Val =:= 'reverse-turn-to-right' ->
<<13636:16>>;
Val =:= 'reverse-turn-to-left' ->
<<13637:16>>;
Val =:= 'reverse-curve-to-right' ->
<<13638:16>>;
Val =:= 'reverse-curve-to-left' ->
<<13639:16>>;
Val =:= 'winding-road-to-right' ->
<<13640:16>>;
Val =:= 'winding-road-to-left' ->
<<13641:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_ITIScodes(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
257 -> 'stopped-traffic';
258 -> 'stop-and-go-traffic';
259 -> 'slow-traffic';
260 -> 'heavy-traffic';
261 -> 'traffic-building';
262 -> 'long-queues';
263 -> 'traffic-congestion';
264 -> 'traffic-lighter-than-normal';
265 -> 'traffic-heavier-than-normal';
266 -> 'traffic-much-heavier-than-normal';
267 -> 'current-speed';
268 -> 'speed-limit';
269 -> 'travel-time';
272 -> 'merging-traffic';
273 -> contraflow;
378 -> 'contraflow-canceled';
379 -> 'traffic-flowing-freely';
380 -> 'traffic-easing';
381 -> 'traffic-returned-to-normal';
382 -> 'no-problems-to-report';
383 -> 'traffic-congestion-cleared';
513 -> accident;
514 -> 'serious-accident';
515 -> 'injury-accident';
516 -> 'minor-accident';
517 -> 'multi-vehicle-accident';
518 -> 'numerous-accidents';
519 -> 'accident-involving-a-bicycle';
520 -> 'accident-involving-a-bus';
521 -> 'accident-involving-a-motorcycle';
522 -> 'accident-involving-a-pedestrian';
523 -> 'accident-involving-a-train';
524 -> 'accident-involving-a-truck';
525 -> 'accident-involving-hazardous-materials';
526 -> 'earlier-accident';
527 -> 'medical-emergency';
528 -> 'secondary-accident';
529 -> 'rescue-and-recovery-work-REMOVED';
530 -> 'accident-investigation-work';
531 -> incident;
532 -> 'stalled-vehicle';
533 -> 'abandoned-vehicle';
534 -> 'disabled-vehicle';
535 -> 'disabled-truck';
536 -> 'disabled-semi-trailer';
537 -> 'disabled-bus';
538 -> 'disabled-train';
539 -> 'vehicle-spun-out';
540 -> 'vehicle-on-fire';
541 -> 'vehicle-in-water';
542 -> 'vehicles-slowing-to-look-at-accident';
543 -> 'jackknifed-semi-trailer';
544 -> 'jackknifed-trailer-home';
545 -> 'jackknifed-trailer';
546 -> 'spillage-occurring-from-moving-vehicle';
547 -> 'acid-spill';
548 -> 'chemical-spill';
549 -> 'fuel-spill';
550 -> 'hazardous-materials-spill';
551 -> 'oil-spill';
552 -> 'spilled-load';
553 -> 'toxic-spill';
554 -> 'overturned-vehicle';
555 -> 'overturned-truck';
556 -> 'overturned-semi-trailer';
557 -> 'overturned-bus';
558 -> 'derailed-train';
559 -> 'stuck-vehicle';
560 -> 'truck-stuck-under-bridge';
561 -> 'bus-stuck-under-bridge';
562 -> 'accident-involving-a-semi-trailer';
638 -> 'accident-cleared';
639 -> 'incident-cleared';
769 -> 'closed-to-traffic';
770 -> closed;
771 -> 'closed-ahead';
772 -> 'closed-intermittently';
773 -> 'closed-for-repairs';
774 -> 'closed-for-the-season';
775 -> blocked;
776 -> 'blocked-ahead';
777 -> 'reduced-to-one-lane';
778 -> 'reduced-to-two-lanes';
779 -> 'reduced-to-three-lanes';
780 -> collapse;
781 -> out;
891 -> 'open-to-traffic';
892 -> open;
893 -> 'reopened-to-traffic';
894 -> clearing;
895 -> 'cleared-from-road';
1025 -> 'road-construction';
1026 -> 'major-road-construction';
1027 -> 'long-term-road-construction';
1028 -> 'construction-work';
1029 -> 'paving-operations';
1030 -> 'work-in-the-median';
1031 -> 'road-reconstruction';
1032 -> 'opposing-traffic';
1033 -> 'narrow-lanes';
1034 -> 'construction-traffic-merging';
1035 -> 'single-line-traffic-alternating-directions';
1036 -> 'road-maintenance-operations';
1037 -> 'road-marking-operations';
1038 -> 'bridge-maintenance-operations';
1039 -> 'bridge-construction';
1040 -> 'bridge-demolition-work';
1041 -> blasting;
1042 -> 'avalanche-control-activities';
1043 -> 'water-main-work';
1044 -> 'gas-main-work';
1045 -> 'work-on-underground-cables';
1046 -> 'work-on-underground-services';
1047 -> 'new-road-construction-layout';
1048 -> 'new-road-layout';
1049 -> 'temporary-lane-markings';
1050 -> 'temporary-traffic-lights';
1051 -> 'emergency-maintenance';
1052 -> cracks;
1053 -> bumps;
1054 -> 'storm-drain';
1055 -> 'overgrown-grass';
1056 -> 'overgrown-brushshrubs';
1057 -> 'overgrown-trees';
1058 -> 'crack-REMOVE';
1059 -> 'drop-off';
1060 -> 'seismic-retrofit';
1061 -> 'road-widening';
1062 -> 'utility-work';
1146 -> 'road-maintenance-cleared';
1147 -> 'normal-road-layout-restored';
1148 -> 'road-work-clearance-in-progress';
1149 -> 'road-construction-cleared';
1150 -> 'normal-traffic-lanes-restored';
1151 -> 'road-work-cleared';
1281 -> 'obstruction-on-roadway';
1282 -> 'object-on-roadway';
1283 -> 'objects-falling-from-moving-vehicle';
1284 -> 'debris-on-roadway';
1285 -> 'storm-damage';
1286 -> 'people-on-roadway';
1287 -> 'bicyclists-on-roadway';
1288 -> 'sightseers-obstructing-access';
1289 -> 'large-numbers-of-visitors';
1290 -> 'animal-on-roadway';
1291 -> 'large-animal-on-roadway';
1292 -> 'herd-of-animals-on-roadway';
1293 -> 'animal-struck';
1294 -> 'fallen-trees';
1295 -> 'downed-power-lines';
1296 -> 'downed-cables';
1297 -> subsidence;
1298 -> 'road-surface-collapse';
1299 -> 'pavement-buckled';
1300 -> pothole;
1301 -> flooding;
1302 -> 'broken-water-main';
1303 -> 'collapsed-sewer';
1304 -> 'sewer-overflow';
1305 -> 'gas-leak';
1306 -> snowmelt;
1307 -> mudslide;
1308 -> avalanche;
1309 -> rockfall;
1310 -> landslide;
1311 -> 'over-turned-trees';
1312 -> 'tree-limbs';
1314 -> 'utility-pole-down';
1315 -> 'advertising-signs';
1316 -> 'frost-heave';
1317 -> 'frost-jacking';
1318 -> washboard;
1319 -> 'wash-out';
1406 -> 'clearance-work';
1407 -> 'obstruction-cleared';
1537 -> delays;
1538 -> 'short-delays';
1539 -> 'long-delays';
1540 -> 'very-long-delays';
1541 -> 'delays-of-uncertain-duration';
1542 -> 'delayed-until-further-notice';
1543 -> busy;
1544 -> 'very-busy';
1545 -> crowded;
1546 -> overcrowded;
1547 -> cancellations;
1548 -> 'route-canceled-and-no-replacement';
1549 -> 'service-canceled';
1550 -> 'service-suspended';
1551 -> 'service-withdrawn';
1552 -> 'service-fully-booked';
1553 -> 'all-services-fully-booked';
1554 -> 'next-departure';
1555 -> 'next-arrival';
1556 -> 'very-frequent-service';
1557 -> 'frequent-service';
1558 -> 'fairly-frequent-service';
1559 -> 'regular-service';
1560 -> 'irregular-service';
1561 -> 'not-operating';
1562 -> 'system-busy';
1563 -> 'system-very-busy';
1564 -> 'system-crowded';
1565 -> 'system-overcrowded';
1566 -> 'deleted-travel-time';
1567 -> headway;
1568 -> 'extra-services-in-operation';
1660 -> 'delays-clearing';
1661 -> 'delays-cleared';
1662 -> 'normal-services-resumed';
1663 -> operating;
1793 -> 'vehicle-traveling-wrong-way';
1794 -> 'reckless-driver';
1795 -> 'prohibited-vehicle-on-roadway';
1796 -> 'emergency-vehicles-on-roadway';
1797 -> 'high-speed-emergency-vehicles';
1798 -> 'high-speed-chase';
1918 -> 'dangerous-vehicle-warning-cleared';
1919 -> 'emergency-vehicle-warning-cleared';
2049 -> 'abnormal-load';
2050 -> 'wide-load';
2051 -> 'long-load';
2052 -> 'slow-vehicle';
2053 -> 'farm-equipment';
2054 -> 'horse-drawn-vehicles';
2055 -> 'overheight-load';
2056 -> 'overweight-load';
2057 -> 'tracked-vehicle';
2058 -> 'vehicle-carrying-hazardous-materials';
2059 -> 'slow-moving-maintenance-vehicle';
2060 -> convoy;
2061 -> 'military-convoy';
2062 -> 'refugee-convoy';
2063 -> motorcade;
2064 -> 'mobile-situation-repositioning';
2065 -> 'winter-maintenance-vehicles';
2066 -> snowplows;
2172 -> 'slow-moving-maintenance-vehicle-warning-cleared';
2173 -> 'exceptional-load-warning-cleared';
2174 -> 'hazardous-load-warning-cleared';
2175 -> 'convoy-cleared';
2305 -> 'lane-control-signs-not-working';
2306 -> 'lane-control-signs-working-incorrectly';
2307 -> 'lane-control-signs-operating';
2308 -> 'variable-message-signs-not-working';
2309 -> 'variable-message-signs-working-incorrectly';
2310 -> 'variable-message-signs-operating';
2311 -> 'emergency-telephones-not-working';
2312 -> 'emergency-telephone-number-not-working';
2313 -> 'traffic-lights-not-working';
2314 -> 'traffic-lights-working-incorrectly';
2315 -> 'ramp-control-signals-not-working';
2316 -> 'ramp-control-signals-working-incorrectly';
2317 -> 'temporary-traffic-lights-not-working';
2318 -> 'temporary-traffic-lights-working-incorrectly';
2319 -> 'traffic-signal-control-computer-not-working';
2320 -> 'traffic-signal-timings-changed';
2321 -> 'overheight-warning-system-triggered';
2322 -> 'equipment-failure';
2323 -> 'railroad-crossing-equipment-failure';
2324 -> 'tunnel-ventilation-not-working';
2325 -> 'power-failure';
2326 -> 'widespread-power-outages';
2327 -> 'technical-problems';
2328 -> 'sign-down';
2329 -> 'lines-in-road-faded';
2330 -> 'damaged-light-standard';
2331 -> 'traffic-signal-stuck-on-flash';
2332 -> 'guide-rail';
2333 -> fencing;
2334 -> 'light-standard-hanging-by-wires';
2335 -> 'call-box';
2336 -> 'signal-cabinet';
2337 -> detector;
2338 -> 'improper-use-of-State-vehicle-or-equipment';
2339 -> 'bulb-out';
2340 -> 'not-yet-operational';
2341 -> 'not-yet-installed';
2428 -> 'electronic-signs-repaired';
2429 -> 'emergency-call-facilities-restored';
2430 -> 'traffic-signals-repaired';
2431 -> 'railroad-crossing-equipment-now-working-normally';
2561 -> restrictions;
2562 -> 'ramp-restrictions';
2563 -> 'truck-restriction';
2564 -> 'speed-restriction';
2565 -> 'noise-restriction';
2566 -> 'traffic-regulations-have-been-changed';
2567 -> 'local-access-only';
2568 -> 'no-trailers';
2569 -> 'no-high-profile-vehicles';
2570 -> 'hazardous-materials-truck-restriction';
2571 -> 'no-through-traffic';
2572 -> 'no-motor-vehicles';
2573 -> 'width-limit';
2574 -> 'height-limit';
2575 -> 'length-limit';
2576 -> 'axle-load-limit';
2577 -> 'gross-weight-limit';
2578 -> 'axle-count-limit';
2579 -> 'carpool-lane-available';
2580 -> 'carpool-restrictions-changed';
2581 -> 'hOV-2-no-single-occupant-vehicles';
2582 -> 'hOV-3-no-vehicles-with-less-than-three-occupants';
2583 -> 'bus-lane-available-for-all-vehicles';
2584 -> 'truck-lane-available-for-all-vehicles';
2585 -> 'permits-call-in-basis';
2586 -> 'permits-temporarily-closed';
2587 -> 'permits-closed';
2588 -> 'road-use-permits-required';
2675 -> 'permits-open';
2676 -> 'restrictions-for-high-profile-vehicles-lifted';
2677 -> 'width-limit-lifted';
2678 -> 'height-limit-lifted';
2679 -> 'length-limit-lifted';
2680 -> 'axle-load-limit-lifted';
2681 -> 'weight-limit-lifted';
2682 -> 'axle-count-limit-lifted';
2683 -> 'carpool-restrictions-lifted';
2684 -> 'lane-restrictions-lifted';
2685 -> 'ramp-restrictions-lifted';
2686 -> 'motor-vehicle-restrictions-lifted';
2687 -> 'restrictions-lifted';
2817 -> 'unconfirmed-report';
2818 -> 'initial-response-en-route';
2819 -> 'follow-up-response-en-route';
2820 -> 'initial-response-on-scene';
2821 -> 'follow-up-response-on-scene';
2822 -> 'confirmed-report';
2823 -> 'scene-is-unsecured-at-this-time';
2824 -> 'response-scene-secured';
2825 -> 'rescue-and-recovery-work-in-progress';
2826 -> 'extraction-in-progress';
2827 -> 'clearance-work-in-progress';
2828 -> 'body-removal-operations';
2829 -> 'fire-containment-contained';
2830 -> 'fire-containment-not-contained';
2831 -> 'event-cleared';
2832 -> 'traffic-clearing';
2833 -> 'incident-closed';
3073 -> 'flash-flood';
3074 -> 'major-flood';
3075 -> 'reservoir-failure';
3076 -> 'levee-failure';
3077 -> tsunami;
3078 -> 'tidal-wave';
3079 -> 'volcanic-eruption';
3080 -> 'ash-fall';
3081 -> 'lava-flow';
3082 -> 'serious-fire';
3083 -> 'forest-fire';
3084 -> wildfire;
3085 -> 'building-fire';
3086 -> 'brush-fire';
3087 -> 'grass-fire';
3088 -> 'fire-danger-extreme';
3089 -> 'fire-danger-very-high';
3090 -> 'fire-danger-high';
3091 -> 'fire-danger-medium';
3092 -> 'fire-danger-low';
3093 -> 'earthquake-damage';
3094 -> 'air-crash';
3095 -> 'rail-crash';
3096 -> 'toxic-release';
3097 -> 'toxic-leak';
3098 -> 'radioactive-release';
3099 -> 'radiation-hazard';
3100 -> 'reactor-leakage';
3101 -> explosion;
3102 -> 'major-hazardous-materials-fire';
3103 -> 'major-hazardous-materials-release';
3199 -> 'disaster-cleared';
3329 -> assault;
3330 -> crime;
3331 -> robbery;
3332 -> 'fare-dispute';
3333 -> shooting;
3334 -> 'gunfire-on-roadway';
3335 -> suicide;
3336 -> fight;
3337 -> 'gang-fight';
3338 -> 'person-harassment';
3339 -> 'person-injured';
3340 -> 'unruly-passenger';
3341 -> 'person-intoxicated';
3342 -> 'crowd-control-problem';
3343 -> demonstration;
3344 -> march;
3345 -> 'public-disturbance';
3346 -> riot;
3347 -> 'civil-unrest';
3348 -> 'civil-emergency';
3349 -> strike;
3350 -> 'public-transit-strike';
3351 -> stampede;
3352 -> 'teargas-used';
3353 -> 'security-alert';
3354 -> 'security-incident';
3355 -> checkpoint;
3356 -> 'bomb-alert';
3357 -> 'terrorist-incident';
3358 -> 'high-velocity-shell-fire';
3359 -> 'explosives-in-use';
3360 -> 'air-raid';
3361 -> 'weapons-of-mass-destruction-threat';
3362 -> 'military-operations';
3363 -> 'sick-customer';
3454 -> 'security-problem-cleared';
3455 -> 'traffic-disturbance-cleared';
3585 -> 'sports-event';
3586 -> game;
3587 -> tournament;
3588 -> 'track-and-field-event';
3589 -> 'baseball-game';
3590 -> 'basketball-game';
3591 -> 'boxing-match';
3592 -> 'football-game';
3593 -> 'soccer-game';
3594 -> 'golf-tournament';
3595 -> 'hockey-game';
3596 -> 'tennis-tournament';
3597 -> 'wrestling-match';
3598 -> 'road-race';
3599 -> 'automobile-race';
3600 -> 'bicycle-race';
3601 -> 'race-event';
3602 -> marathon;
3603 -> 'horse-show';
3604 -> rodeo;
3605 -> 'water-sports-event';
3606 -> 'winter-sports-event';
3607 -> 'skating-event';
3608 -> 'dog-sled-race';
3711 -> 'sporting-event-ended';
3841 -> 'major-event';
3842 -> airshow;
3843 -> 'hot-air-ballooning';
3844 -> concert;
3845 -> 'state-occasion';
3846 -> 'vIP-visit';
3847 -> show;
3848 -> festival;
3849 -> exhibition;
3850 -> 'performing-arts';
3851 -> 'outdoor-market';
3852 -> fair;
3853 -> carnival;
3854 -> 'fireworks-display';
3855 -> 'trade-expo';
3856 -> 'movie-filming';
3857 -> 'presidential-visit';
3858 -> parade;
3859 -> procession;
3860 -> 'funeral-procession';
3861 -> crowd;
3862 -> 'holiday-traffic-crowds';
3967 -> 'event-ended';
4097 -> 'normal-parking-restrictions-lifted';
4098 -> 'parking-meter-restrictions-lifted';
4099 -> 'special-parking-restrictions-in-force';
4100 -> 'full-parking-lot';
4101 -> 'full-parking-garage';
4102 -> 'all-parking-lots-full';
4103 -> 'no-parking-spaces-available';
4104 -> 'only-a-few-spaces-available';
4105 -> 'spaces-available';
4106 -> 'no-parking';
4107 -> 'parking-on-one-side-of-street-only';
4108 -> 'parking-on-both-sides-of-street';
4109 -> 'parallel-parking-only';
4110 -> 'parking-meters-not-available';
4111 -> 'use-of-parking-meters-restricted';
4112 -> 'event-parking';
4113 -> 'handicapped-parking';
4114 -> 'long-term-parking';
4115 -> 'overnight-parking';
4116 -> 'short-term-parking';
4117 -> 'parking-by-permit-only';
4118 -> 'emergency-parking-only';
4119 -> 'emergency-stopping-only';
4120 -> parking;
4121 -> stopping;
4122 -> standing;
4123 -> 'tow-away-zone';
4124 -> 'school-zone';
4125 -> 'speed-zone';
4126 -> 'loading-zone';
4127 -> 'state-law';
4128 -> 'van-accessible';
4222 -> 'special-parking-restrictions-lifted';
4223 -> 'no-parking-information-available';
4353 -> 'information-available-on-radio';
4354 -> 'information-available-on-TV';
4355 -> 'call-to-get-information';
4356 -> 'information-available-via-Internet';
4357 -> 'test-message';
4358 -> 'no-information-available';
4359 -> 'null-description';
4360 -> 'information-service-is-being-suspended';
4361 -> 'police-assistance';
4362 -> 'police-monitor-CB';
4363 -> 'emergency-notification';
4364 -> 'in-emergency-dial-911';
4365 -> 'travel-Info-call-511';
4366 -> 'car-pool-information';
4478 -> 'information-service-resumed';
4479 -> 'message-canceled';
4609 -> overcast;
4610 -> cloudy;
4611 -> 'mostly-cloudy';
4612 -> 'partly-cloudy';
4613 -> 'partly-sunny';
4614 -> 'mostly-sunny';
4615 -> sunny;
4616 -> 'fair-skies';
4617 -> 'clear-skies';
4618 -> 'mostly-clear';
4619 -> 'mostly-dry';
4620 -> dry;
4621 -> 'uV-index-very-high';
4622 -> 'uV-index-high';
4623 -> 'uV-index-moderate';
4624 -> 'uV-index-low';
4625 -> 'uV-index-very-low';
4626 -> 'barometric-pressure';
4627 -> 'ozone-alert';
4628 -> 'lighting-unknown';
4629 -> 'artificial-exterior-light';
4630 -> 'artificial-interior-light';
4631 -> darkness;
4632 -> dusk;
4633 -> dawn;
4634 -> moonlight;
4635 -> daylight;
4735 -> 'weather-forecast-withdrawn';
4865 -> 'severe-weather';
4866 -> blizzard;
4867 -> 'heavy-snow';
4868 -> snow;
4869 -> 'light-snow';
4870 -> 'snow-showers';
4871 -> 'winter-storm';
4872 -> 'ice-glaze';
4873 -> 'heavy-frost';
4874 -> frost;
4875 -> 'ice-storm';
4876 -> sleet;
4877 -> 'rain-and-snow-mixed';
4878 -> 'rain-changing-to-snow';
4879 -> 'damaging-hail';
4880 -> hail;
4881 -> thunderstorms;
4882 -> thundershowers;
4883 -> 'extremely-heavy-downpour';
4884 -> 'heavy-rain';
4885 -> rain;
4886 -> 'light-rain';
4887 -> drizzle;
4888 -> showers;
4889 -> dew;
4991 -> 'precipitation-cleared';
5121 -> tornado;
5122 -> hurricane;
5123 -> 'hurricane-force-winds';
5124 -> 'tropical-storm';
5125 -> 'gale-force-winds';
5126 -> 'storm-force-winds';
5127 -> 'strong-winds';
5128 -> 'moderate-winds';
5129 -> 'light-winds';
5130 -> calm;
5131 -> 'gusty-winds';
5132 -> crosswinds;
5133 -> windy;
5246 -> 'strong-winds-have-eased';
5247 -> 'strong-wind-forecast-withdrawn';
5377 -> 'dense-fog';
5378 -> fog;
5379 -> 'patchy-fog';
5380 -> 'freezing-fog';
5381 -> mist;
5382 -> haze;
5383 -> 'visibility-reduced';
5384 -> 'white-out';
5385 -> 'blowing-snow';
5386 -> 'smoke-hazard';
5387 -> 'spray-hazard';
5388 -> 'low-sun-glare';
5389 -> 'snow-glare';
5390 -> 'blowing-dust';
5391 -> 'blowing-sand';
5392 -> 'dust-storms';
5393 -> sandstorms;
5394 -> 'air-quality-good';
5395 -> 'air-quality-fair';
5396 -> 'air-quality-poor';
5397 -> 'air-quality-very-poor';
5398 -> 'severe-exhaust-pollution';
5399 -> 'smog-alert';
5400 -> 'pollen-count-high';
5401 -> 'pollen-count-medium';
5402 -> 'pollen-count-low';
5403 -> 'swarms-of-insects';
5404 -> 'visibility-blocked';
5405 -> 'ice-fog';
5499 -> 'fog-clearing';
5500 -> 'visibility-improved';
5501 -> 'fog-forecast-withdrawn';
5502 -> 'pollution-alert-ended';
5503 -> 'air-quality-improved';
5633 -> 'maximum-temperature';
5634 -> temperature;
5635 -> 'minimum-temperature';
5636 -> 'current-temperature';
5637 -> 'heat-index';
5638 -> 'extreme-heat';
5639 -> hot;
5640 -> hotter;
5641 -> heat;
5642 -> warmer;
5643 -> warm;
5644 -> mild;
5645 -> cool;
5646 -> cooler;
5647 -> cold;
5648 -> colder;
5649 -> 'very-cold';
5650 -> 'extreme-cold';
5651 -> 'wind-chill';
5652 -> dewpoint;
5653 -> 'relative-humidity';
5758 -> 'temperatures-close-to-the-seasonal-norm';
5759 -> 'less-extreme-temperatures';
5889 -> impassable;
5890 -> 'almost-impassable';
5891 -> 'passable-with-care';
5892 -> passable;
5893 -> 'surface-water-hazard';
5894 -> 'danger-of-hydroplaning';
5895 -> 'wet-pavement';
5896 -> 'treated-pavement';
5897 -> slippery;
5898 -> 'mud-on-roadway';
5899 -> 'leaves-on-roadway';
5900 -> 'loose-sand-on-roadway';
5901 -> 'loose-gravel';
5902 -> 'fuel-on-roadway';
5903 -> 'oil-on-roadway';
5904 -> 'road-surface-in-poor-condition';
5905 -> 'melting-tar';
5906 -> ice;
5907 -> 'icy-patches';
5908 -> 'black-ice';
5909 -> 'ice-pellets-on-roadway';
5910 -> 'ice-build-up';
5911 -> 'freezing-rain';
5912 -> 'wet-and-icy-roads';
5913 -> 'melting-snow';
5914 -> slush;
5915 -> 'frozen-slush';
5916 -> 'snow-on-roadway';
5917 -> 'packed-snow';
5918 -> 'packed-snow-patches';
5919 -> 'plowed-snow';
5920 -> 'wet-snow';
5921 -> 'fresh-snow';
5922 -> 'powder-snow';
5923 -> 'granular-snow';
5924 -> 'frozen-snow';
5925 -> 'crusted-snow';
5926 -> 'deep-snow';
5927 -> 'snow-drifts';
5928 -> 'drifting-snow';
5929 -> 'expected-snow-accumulation';
5930 -> 'current-snow-accumulation';
5931 -> 'rough-road';
5932 -> sand;
5933 -> gravel;
5934 -> paved;
5935 -> 'uneven-lanes';
5936 -> 'rough-crossing';
5937 -> 'at-grade-level-crossing';
5938 -> 'low-ground-clearance';
6011 -> 'dry-pavement';
6012 -> 'snow-cleared';
6013 -> 'pavement-conditions-improved';
6014 -> 'skid-hazard-reduced';
6015 -> 'pavement-conditions-cleared';
6145 -> 'winter-equipment-recommended';
6146 -> 'winter-equipment-required';
6147 -> 'snow-chains-recommended';
6148 -> 'snow-chains-required';
6149 -> 'snow-chains-prohibited';
6150 -> 'studded-tires-prohibited';
6151 -> 'snow-tires-recommended';
6152 -> 'snow-tires-required';
6153 -> 'four-wheel-drive-recommended';
6154 -> 'four-wheel-drive-required';
6155 -> 'snow-tires-or-chains-recommended';
6156 -> 'snow-tires-or-chains-required';
6271 -> 'winter-driving-requirements-lifted';
6401 -> 'driving-conditions-good';
6402 -> 'driving-conditions-fair';
6403 -> 'difficult-driving-conditions';
6404 -> 'very-difficult-driving-conditions';
6405 -> 'hazardous-driving-conditions';
6406 -> 'extremely-hazardous-driving-conditions';
6657 -> 'why-not-ride-share';
6658 -> 'is-this-your-no-ride-day';
6659 -> 'why-not-use-transit';
6660 -> 'why-not-park-and-ride';
6661 -> 'why-not-try-paratransit';
6662 -> 'why-not-travel-by-rail';
6663 -> 'why-not-use-the-subway';
6664 -> 'why-not-try-rapid-transit';
6665 -> 'why-not-travel-by-bus';
6666 -> 'your-parking-ticket-covers-the-return-ride';
6667 -> 'avoid-the-rush-hour';
6668 -> 'do-not-allow-unnecessary-gaps';
6669 -> 'follow-the-vehicle-in-front-smoothly';
6670 -> 'do-not-slow-down-unnecessarily';
6671 -> 'watch-for-muggers';
6672 -> 'watch-for-pickpockets';
6673 -> 'watch-for-thieves';
6674 -> 'sorry-for-any-delay';
6675 -> 'thank-you-for-your-understanding';
6676 -> 'we-appreciate-your-patience';
6677 -> 'we-are-grateful-for-your-cooperation';
6678 -> 'share-the-road';
6913 -> risk;
6914 -> watch;
6915 -> warning;
6916 -> alert;
6917 -> danger;
6918 -> 'danger-of-explosion';
6919 -> 'danger-of-fire';
6920 -> 'extra-police-patrols-in-operation';
6921 -> 'look-out-for-vehicles-stopped-under-bridges';
6922 -> 'increased-risk-of-accident';
6923 -> 'rescue-and-recovery-work-in-progress-at-sceneREMOVED';
6924 -> 'police-at-scene';
6925 -> 'emergency-vehicles-at-scene';
6926 -> 'traffic-being-directed-around-accident-area';
6927 -> 'police-directing-traffic';
6928 -> 'rescue-workers-directing-traffic';
6929 -> 'repairs-in-progress';
6930 -> 'pilot-car-in-operation';
6931 -> 'look-out-for-flagger';
6932 -> 'police-checks-in-operation';
6933 -> 'mandatory-speed-limit-in-force';
6934 -> 'speed-limit-in-force-for-heavy-vehicles';
6935 -> lockdown;
6936 -> 'security-check-point';
6937 -> 'truck-check-point';
6938 -> 'single-occupancy-vehicle-check-point';
6939 -> look;
6940 -> 'photo-enforced';
6941 -> 'traffic-laws';
6942 -> 'use-low-gear';
6943 -> 'bridge-ices-before-road';
6944 -> 'speed-checked-by-radar';
6945 -> 'speed-checked-by-aircraft';
6946 -> fines;
6947 -> 'fines-higher';
6948 -> 'fines-doubled';
6949 -> 'fines-tripled';
6950 -> 'behind-you';
6951 -> 'traffic-signs';
6952 -> 'look-out-for-workers';
6953 -> 'ride-with-traffic';
6954 -> 'prepare-to-evacuate-area';
6955 -> avoid;
7033 -> 'evacuation-canceled';
7034 -> 'warning-canceled';
7035 -> 'watch-canceled';
7036 -> 'alert-canceled';
7037 -> ended;
7038 -> cleared;
7039 -> canceled;
7169 -> 'drive-carefully';
7170 -> 'drive-with-extreme-caution';
7171 -> 'approach-with-care';
7172 -> 'keep-your-distance';
7173 -> 'increase-normal-following-distance';
7174 -> 'test-your-brakes';
7175 -> 'cross-intersection-with-care';
7176 -> 'pass-with-care';
7177 -> 'use-low-beam-headlights';
7178 -> 'use-fog-lights';
7179 -> 'use-hazard-warning-lights';
7180 -> 'do-not-leave-your-vehicle';
7181 -> 'leave-your-vehicle-and-proceed-to-next-safe-place';
7182 -> 'turn-off-engine';
7183 -> 'close-all-windows-turn-off-heater-air-conditioner-and-vents';
7184 -> 'turn-off-air-conditioner-to-prevent-engine-overheating';
7185 -> 'turn-off-mobile-phones-and-two-way-radios';
7186 -> 'prepare-to-stop';
7187 -> 'stop-at-next-rest-area';
7188 -> 'stop-at-next-safe-place';
7189 -> 'only-travel-if-absolutely-necessary';
7190 -> 'drive-to-another-service-area';
7191 -> 'use-through-traffic-lanes';
7192 -> 'use-local-traffic-lanes';
7193 -> 'use-left-hand-parallel-roadway';
7194 -> 'use-right-hand-parallel-roadway';
7195 -> 'use-heavy-vehicle-lane';
7196 -> 'observe-recommended-speed';
7197 -> 'facing-traffic';
7198 -> 'push-button';
7199 -> 'to-cross-street';
7200 -> pass;
7201 -> 'be-prepared-to-stop';
7202 -> 'signals-sequenced-for-speed';
7203 -> 'maintain-top-safe-speed';
7204 -> 'evacuate-area-voluntarily';
7205 -> 'shelter-in-place';
7425 -> 'keep-to-the-right';
7426 -> 'keep-to-the-left';
7427 -> 'use-right-lane';
7428 -> 'use-left-lane';
7429 -> 'heavy-vehicles-use-right-lane';
7430 -> 'heavy-vehicles-use-left-lane';
7431 -> 'observe-signals';
7432 -> 'observe-signs';
7433 -> 'no-passing';
7434 -> 'no-smoking';
7435 -> 'no-open-flames';
7436 -> 'use-shoulder-as-lane';
7437 -> 'do-not-drive-on-the-shoulder';
7438 -> 'allow-emergency-vehicles-to-pass';
7439 -> 'clear-a-lane-for-emergency-vehicles';
7440 -> 'pull-over-to-the-edge-of-the-roadway';
7441 -> 'wait-for-escort-vehicle';
7442 -> 'in-emergency-wait-for-police-patrol';
7443 -> 'reduce-your-speed';
7444 -> 'observe-speed-limits';
7445 -> 'check-point';
7446 -> 'entry-requirements';
7447 -> 'insurance-requirements';
7448 -> 'firearms-requirements';
7449 -> 'pet-requirements';
7450 -> 'stay-in-lane';
7451 -> merge;
7452 -> 'slower-traffic-keep-right';
7453 -> 'keep-off';
7454 -> 'evacuate-area-immediately';
7547 -> 'shoulder-travel-no-longer-allowed';
7681 -> above;
7682 -> below;
7683 -> in;
7684 -> around;
7685 -> 'after';
7686 -> before;
7687 -> at;
7688 -> on;
7689 -> near;
7690 -> 'from-the';
7691 -> terminal;
7692 -> 'falling-slowly';
7693 -> falling;
7694 -> 'falling-quickly';
7695 -> 'rising-slowly';
7696 -> rising;
7697 -> 'rising-quickly';
7698 -> steady;
7699 -> likely;
7700 -> 'changing-to';
7701 -> mostly;
7702 -> partly;
7703 -> minus;
7704 -> 'weather-ended';
7705 -> expected;
7706 -> low;
7707 -> mid;
7708 -> high;
7709 -> upper;
7710 -> unseasonably;
7711 -> reported;
7712 -> advice;
7713 -> 'due-to';
7714 -> 'proceed-to';
7715 -> 'transferred-to';
7716 -> use;
7717 -> affecting;
7718 -> blocking;
7719 -> connecting;
7720 -> finished;
7721 -> for;
7722 -> 'or';
7723 -> 'and';
7724 -> later;
7725 -> level;
7726 -> shortly;
7727 -> soon;
7728 -> service;
7729 -> damaged;
7730 -> 'out-of-order';
7731 -> vandalism;
7732 -> 'on-State-right-of-way';
7733 -> graffiti;
7734 -> 'found-property';
7735 -> 'begin-time';
7736 -> added;
7737 -> 'end-time';
7738 -> no;
7739 -> 'do-not';
7740 -> block;
7741 -> except;
7742 -> day;
7743 -> night;
7744 -> 'any-time';
7745 -> has;
7746 -> 'may-have';
7747 -> only;
7748 -> lifted;
7749 -> empty;
7750 -> turning;
7751 -> 'u-turn';
7752 -> 'wait-for';
7753 -> 'when-flashing';
7754 -> duration;
7755 -> cross;
7756 -> 'when-wet';
7757 -> must;
7758 -> oncoming;
7759 -> 'may-exceed';
7760 -> 'to-request';
7761 -> exempt;
7762 -> skewed;
7763 -> 'when-children-are-present';
7764 -> lower;
7765 -> middle;
7766 -> major;
7767 -> minor;
7937 -> 'on-bridges';
7938 -> 'in-tunnels';
7939 -> 'entering-or-leaving-tunnels';
7940 -> 'on-ramps';
7941 -> 'in-road-construction-area';
7942 -> 'around-a-curve';
7943 -> 'on-minor-roads';
7944 -> 'in-the-opposing-lanes';
7945 -> 'adjacent-to-roadway';
7946 -> 'on-bend';
7947 -> 'entire-intersection';
7948 -> 'in-the-median';
7949 -> 'moved-to-side-of-road';
7950 -> 'moved-to-shoulder';
7951 -> 'on-the-roadway';
7952 -> 'in-shaded-areas';
7953 -> 'in-low-lying-areas';
7954 -> 'in-the-downtown-area';
7955 -> 'in-the-inner-city-area';
7956 -> 'in-parts';
7957 -> 'in-some-places';
7958 -> 'in-the-ditch';
7959 -> 'in-the-valley';
7960 -> 'on-hill-top';
7961 -> 'near-the-foothills';
7962 -> 'at-high-altitudes';
7963 -> 'near-the-lake';
7964 -> 'near-the-shore';
7965 -> 'over-the-crest-of-a-hill';
7966 -> 'other-than-on-the-roadway';
7967 -> 'near-the-beach';
7968 -> 'near-beach-access-point';
7969 -> 'lower-level';
7970 -> 'upper-level';
7971 -> airport;
7972 -> concourse;
7973 -> gate;
7974 -> 'baggage-claim';
7975 -> 'customs-point';
7976 -> station;
7977 -> platform;
7978 -> dock;
7979 -> depot;
7980 -> 'ev-charging-point';
7981 -> 'information-welcome-point';
7982 -> 'at-rest-area';
7983 -> 'at-service-area';
7984 -> 'at-weigh-station';
7985 -> 'picnic-areas';
7986 -> 'rest-area';
7987 -> 'service-stations';
7988 -> toilets;
7989 -> 'on-the-right';
7990 -> 'on-the-left';
7991 -> 'in-the-center';
7992 -> 'in-the-opposite-direction';
7993 -> 'cross-traffic';
7994 -> 'northbound-traffic';
7995 -> 'eastbound-traffic';
7996 -> 'southbound-traffic';
7997 -> 'westbound-traffic';
7998 -> north;
7999 -> south;
8000 -> east;
8001 -> west;
8002 -> northeast;
8003 -> northwest;
8004 -> southeast;
8005 -> southwest;
8006 -> 'mountain-pass';
8007 -> 'reservation-center';
8008 -> 'nearby-basin';
8009 -> 'on-tracks';
8010 -> dip;
8011 -> 'traffic-circle';
8012 -> 'park-and-ride-lot';
8014 -> to;
8015 -> by;
8016 -> through;
8017 -> 'area-of';
8018 -> under;
8019 -> over;
8020 -> from;
8021 -> approaching;
8022 -> 'entering-at';
8023 -> 'exiting-at';
8024 -> 'across-tracks';
8025 -> 'in-street';
8026 -> 'on-curve';
8027 -> shoulder;
8028 -> crossover;
8029 -> 'cross-road';
8030 -> 'side-road';
8031 -> 'bus-stop';
8032 -> intersection;
8033 -> 'roadside-park';
8034 -> coast;
8193 -> 'all-roadways';
8194 -> 'through-lanes';
8195 -> 'left-lane';
8196 -> 'right-lane';
8197 -> 'center-lane';
8198 -> 'middle-lanes';
8199 -> 'middle-two-lanes';
8200 -> 'right-turning-lanes';
8201 -> 'left-turning-lanes';
8202 -> 'right-exit-ramp';
8203 -> 'right-entrance-ramp';
8204 -> 'left-exit-ramp';
8205 -> 'left-entrance-ramp';
8206 -> 'hard-shoulder';
8207 -> 'soft-shoulder';
8208 -> 'right-shoulder';
8209 -> 'left-shoulder';
8210 -> 'right-hand-parallel-lanes';
8211 -> 'left-hand-parallel-lanes';
8212 -> 'connecting-lanes';
8213 -> 'express-lanes';
8214 -> 'local-lanes';
8215 -> 'toll-lanes';
8216 -> 'electronic-toll-lanes';
8217 -> 'toll-plaza';
8218 -> 'inspection-lane';
8219 -> 'hOV-lanes';
8220 -> 'bus-lanes';
8221 -> 'carpool-lanes';
8222 -> 'truck-lanes';
8223 -> 'emergency-lanes';
8224 -> 'passing-lanes';
8225 -> 'climbing-lanes';
8226 -> 'slow-lane';
8227 -> 'service-road';
8228 -> 'cycle-lane';
8229 -> bridge;
8230 -> overpass;
8231 -> 'elevated-lanes';
8232 -> underpass;
8233 -> tunnel;
8234 -> 'escape-ramp';
8235 -> highways;
8236 -> 'upper-deck-lanes';
8237 -> 'lower-deck-lanes';
8238 -> 'reversible-lanes';
8239 -> 'right-exit-lanes';
8240 -> 'left-exit-lanes';
8241 -> 'right-merging-lanes';
8242 -> 'left-merging-lanes';
8243 -> 'right-second-exit-ramp';
8244 -> 'left-second-exit-ramp';
8245 -> 'right-second-entrance-ramp';
8246 -> 'left-second-entrance-ramp';
8247 -> 'all-exit-lanes';
8248 -> 'all-entry-lanes';
8249 -> 'either-shoulder';
8250 -> tracks;
8251 -> sidewalk;
8252 -> median;
8253 -> 'shoulder-work';
8449 -> 'detour-where-possible';
8450 -> 'no-detour-available';
8451 -> 'follow-signs';
8452 -> 'follow-detour-signs';
8453 -> 'follow-special-detour-markers';
8454 -> 'do-not-follow-detour-signs';
8455 -> 'detour-in-operation';
8456 -> 'follow-local-detour';
8457 -> 'compulsory-detour-in-operation';
8458 -> 'no-suitable-detour-available';
8459 -> 'detour-is-no-longer-recommended';
8460 -> 'local-drivers-are-recommended-to-avoid-the-area';
8461 -> 'trucks-are-recommended-to-avoid-the-area';
8462 -> 'consider-alternate-route';
8463 -> 'consider-alternate-parking';
8464 -> 'consider-alternate-destination';
8465 -> 'consider-alternate-area';
8466 -> 'snow-route';
8467 -> 'emergency-snow-route';
8468 -> 'evacuation-route';
8469 -> 'truck-route';
8470 -> 'hazardous-materials-route';
8471 -> detour;
8705 -> 'square-feet';
8706 -> 'square-meters';
8707 -> acres;
8708 -> hectares;
8709 -> inches;
8710 -> feet;
8711 -> mile;
8712 -> miles;
8713 -> 'nautical-miles';
8714 -> millimeters;
8715 -> meters;
8716 -> kilometer;
8717 -> kilometers;
8718 -> 'feet-per-second';
8719 -> 'meters-per-second';
8720 -> mPH;
8721 -> kPH;
8722 -> knots;
8723 -> aM;
8724 -> pM;
8725 -> weekends;
8726 -> holiday;
8727 -> seconds;
8728 -> minutes;
8729 -> hours;
8730 -> days;
8731 -> weeks;
8732 -> months;
8733 -> 'degrees-Angle';
8734 -> 'degrees-Celsius';
8735 -> 'degrees-Fahrenheit';
8736 -> grams;
8737 -> kilograms;
8738 -> ounces;
8739 -> pounds;
8740 -> tons;
8741 -> 'fluid-ounces';
8742 -> gallons;
8743 -> milliliters;
8744 -> liters;
8745 -> 'kilograms-per-lane-mile';
8746 -> 'tons-per-lane-mile';
8747 -> dollar;
8748 -> percent;
8749 -> 'time-delimiter';
8750 -> dollars;
8751 -> 'flight-number';
8752 -> 'person-people';
8753 -> 'response-plan';
8754 -> 'placard-type';
8755 -> 'placard-number';
8756 -> fM;
8757 -> grade;
8758 -> nSunday;
8759 -> nMonday;
8760 -> nTuesday;
8761 -> nWednesday;
8762 -> nThursday;
8763 -> nFriday;
8764 -> nSaturday;
8765 -> weekdays;
8766 -> elevation;
8767 -> 'other-times';
8961 -> travel;
8962 -> transit;
8963 -> bus;
8964 -> trolleybus;
8965 -> rail;
8966 -> 'commuter-rail';
8967 -> subway;
8968 -> 'rapid-transit';
8969 -> 'light-rail';
8970 -> streetcar;
8971 -> 'dial-a-ride';
8972 -> 'park-and-ride';
8973 -> shuttle;
8974 -> 'free-shuttle';
8975 -> 'airport-shuttle';
8976 -> taxies;
8977 -> ferry;
8978 -> 'passenger-ferry';
8979 -> 'vehicle-ferry';
8980 -> 'aerial-tramway';
8981 -> 'automated-guideway';
8982 -> 'cable-cars';
8983 -> monorail;
8984 -> 'air-travel';
8985 -> 'hitch-hitching';
8986 -> walk;
9217 -> 'all-vehicles';
9218 -> bicycles;
9219 -> motorcycles;
9220 -> cars;
9221 -> 'light-vehicles';
9222 -> 'cars-and-light-vehicles';
9223 -> 'cars-with-trailers';
9224 -> 'cars-with-recreational-trailers';
9225 -> 'vehicles-with-trailers';
9226 -> 'heavy-vehicles';
9227 -> trucks;
9228 -> buses;
9229 -> 'articulated-buses';
9230 -> 'school-buses';
9231 -> 'vehicles-with-semi-trailers';
9232 -> 'vehicles-with-double-trailers';
9233 -> 'high-profile-vehicles';
9234 -> 'wide-vehicles';
9235 -> 'long-vehicles';
9236 -> 'hazardous-loads';
9237 -> 'exceptional-loads';
9238 -> 'abnormal-loads';
9239 -> convoys;
9240 -> 'maintenance-vehicles';
9241 -> 'delivery-vehicles';
9242 -> 'vehicles-with-even-numbered-license-plates';
9243 -> 'vehicles-with-odd-numbered-license-plates';
9244 -> 'vehicles-with-parking-permits';
9245 -> 'vehicles-with-catalytic-converters';
9246 -> 'vehicles-without-catalytic-converters';
9247 -> 'gas-powered-vehicles';
9248 -> 'diesel-powered-vehicles';
9249 -> 'lPG-vehicles';
9250 -> 'military-convoys';
9251 -> 'military-vehicles';
9252 -> 'electric-powered-vehicles';
9253 -> 'hybrid-powered-vehicles';
9254 -> 'inherently-low-emission-vehicles';
9255 -> 'commercial-vehicles';
9256 -> 'runaway-vehicles';
9257 -> 'vehicles-with-lugs';
9258 -> 'motor-driven-cycles';
9259 -> 'recreational-vehicles';
9260 -> 'non-motorized-vehicles';
9261 -> traffic;
9473 -> 'through-traffic';
9474 -> 'holiday-traffic';
9475 -> residents;
9476 -> visitors;
9477 -> 'long-distance-traffic';
9478 -> 'local-traffic';
9479 -> 'regional-traffic';
9480 -> arrivals;
9481 -> departures;
9482 -> 'airline-travelers';
9483 -> 'commuter-airline-travelers';
9484 -> 'domestic-airline-travelers';
9485 -> 'international-airline-travelers';
9486 -> pedestrians;
9487 -> bicyclists;
9729 -> 'emergency-vehicle-units';
9730 -> 'federal-law-enforcement-units';
9731 -> 'state-police-units';
9732 -> 'county-police-units';
9733 -> 'local-police-units';
9734 -> 'ambulance-units';
9735 -> 'rescue-units';
9736 -> 'fire-units';
9737 -> 'hAZMAT-units';
9738 -> 'light-tow-unit';
9739 -> 'heavy-tow-unit';
9740 -> 'freeway-service-patrols';
9741 -> 'transportation-response-units';
9742 -> 'private-contractor-response-units';
9743 -> 'private-tow-units';
9985 -> 'ground-fire-suppression';
9986 -> 'heavy-ground-equipment';
9988 -> aircraft;
9989 -> 'marine-equipment';
9990 -> 'support-equipment';
9991 -> 'medical-rescue-unit';
9993 -> other;
9994 -> 'ground-fire-suppression-other';
9995 -> engine;
9996 -> 'truck-or-aerial';
9997 -> quint;
9998 -> 'tanker-pumper-combination';
10000 -> 'brush-truck';
10001 -> 'aircraft-rescue-firefighting';
10004 -> 'heavy-ground-equipment-other';
10005 -> 'dozer-or-plow';
10006 -> tractor;
10008 -> 'tanker-or-tender';
10024 -> 'aircraft-other';
10025 -> 'aircraft-fixed-wing-tanker';
10026 -> helitanker;
10027 -> helicopter;
10034 -> 'marine-equipment-other';
10035 -> 'fire-boat-with-pump';
10036 -> 'boat-no-pump';
10044 -> 'support-apparatus-other';
10045 -> 'breathing-apparatus-support';
10046 -> 'light-and-air-unit';
10054 -> 'medical-rescue-unit-other';
10055 -> 'rescue-unit';
10056 -> 'urban-search-rescue-unit';
10057 -> 'high-angle-rescue';
10058 -> 'crash-fire-rescue';
10059 -> 'bLS-unit';
10060 -> 'aLS-unit';
10075 -> 'mobile-command-post';
10076 -> 'chief-officer-car';
10077 -> 'hAZMAT-unit';
10078 -> 'type-i-hand-crew';
10079 -> 'type-ii-hand-crew';
10083 -> 'privately-owned-vehicle';
10084 -> 'other-apparatus-resource';
10085 -> ambulance;
10086 -> 'bomb-squad-van';
10087 -> 'combine-harvester';
10088 -> 'construction-vehicle';
10089 -> 'farm-tractor';
10090 -> 'grass-cutting-machines';
10091 -> 'hAZMAT-containment-tow';
10092 -> 'heavy-tow';
10093 -> 'hedge-cutting-machines';
10094 -> 'light-tow';
10095 -> 'mobile-crane';
10096 -> 'refuse-collection-vehicle';
10097 -> 'resurfacing-vehicle';
10098 -> 'road-sweeper';
10099 -> 'roadside-litter-collection-crews';
10100 -> 'salvage-vehicle';
10101 -> 'sand-truck';
10102 -> snowplow;
10103 -> 'steam-roller';
10104 -> 'swat-team-van';
10105 -> 'track-laying-vehicle';
10106 -> 'unknown-vehicle';
10107 -> 'white-lining-vehicle';
10108 -> 'dump-truck';
10109 -> 'supervisor-vehicle';
10110 -> 'snow-blower';
10111 -> 'rotary-snow-blower';
10112 -> 'road-grader';
10113 -> 'steam-truck';
10114 -> 'flatbed-tow';
10115 -> 'survey-crews';
10240 -> 'unknown-status';
10241 -> 'ready-for-use';
10242 -> 'working-normally';
10243 -> 'working-autonomously';
10244 -> 'working-incorrectly';
10245 -> 'not-working';
10246 -> 'normal-maintenance';
10247 -> 'in-route-to-use';
10248 -> 'returning-from-use';
10249 -> 'out-of-service';
10250 -> 'off-duty';
10251 -> 'on-patrol';
10252 -> 'on-call';
10253 -> 'on-break';
10254 -> 'mandatory-time-off';
10255 -> 'low-on-fuel';
10256 -> 'low-on-water';
10257 -> 'low-charge';
10258 -> missing;
10496 -> none;
10497 -> 'light-pole';
10498 -> 'utility-pole';
10499 -> 'gantry-way';
10500 -> 'sign-support';
10501 -> 'signal-pole';
10502 -> 'signage-public';
10503 -> 'signage-private';
10504 -> cones;
10505 -> 'cones-post-type';
10506 -> 'cones-glue-post';
10507 -> 'cones-other';
10508 -> barriers;
10509 -> 'barrier-Aframe';
10510 -> 'barriers-heavy-duty';
10511 -> 'barricade-type-III';
10512 -> 'barricade-small';
10513 -> 'barricade-lights';
10514 -> beacon;
10515 -> 't-stand';
10516 -> 'a-stand';
10517 -> drums;
10518 -> 'impact-attenuator';
10519 -> 'barricade-tape';
10520 -> 'safety-fence';
10521 -> 'temp-pavement-markings';
10522 -> 'speed-bumps';
10523 -> 'temp-curbs';
10524 -> 'parking-blocks';
10525 -> 'signboard-fixed';
10526 -> 'signboard-portable';
10527 -> har;
10528 -> 'har-AM';
10529 -> 'har-FM';
10530 -> 'har-DSRC';
10531 -> 'traffic-light';
10532 -> 'lane-control-signal';
10533 -> 'traffic-detector';
10534 -> 'vehicle-detector';
10535 -> 'system-alarm';
10536 -> 'arrow-board';
10537 -> 'fixed-VMS';
10538 -> 'mobile-VMS';
10539 -> 'ramp-control';
10540 -> 'gate-control';
10541 -> 'temporary-traffic-light';
10542 -> 'over-height-warning-system';
10543 -> 'over-weight-warning-system';
10544 -> 'emergency-telephones';
10545 -> 'railroad-crossing-equipment';
10546 -> 'tunnel-ventilation';
10547 -> ccTV;
10548 -> 'environmental-sensor';
10549 -> switch;
10550 -> signal;
10551 -> 'third-rail';
10552 -> 'overhead-power';
10553 -> 'concrete-tie';
10554 -> 'wooden-tie';
10555 -> escalator;
10556 -> elevator;
10557 -> track;
10558 -> drawbridge;
10559 -> 'manhole-cover';
10560 -> culvert;
10561 -> 'snow-poles';
10562 -> 'guide-poles';
10563 -> 'expansion-joint';
10564 -> 'shifted-plate';
10565 -> 'solid-barrier';
10566 -> 'moveable-barrier';
10567 -> 'sand-barrel';
10568 -> 'overhead-sign';
10569 -> 'ground-sign';
10570 -> 'emergency-signal';
10571 -> 'countdown-pedestrian-sign';
10572 -> stripe;
10573 -> island;
10753 -> 'unknown-transit-problem';
10754 -> 'sleeping-customer';
10755 -> 'assault-on-passenger';
10756 -> 'assault-on-employee';
10757 -> 'broken-seat';
10758 -> 'bus-alarm';
10759 -> 'crime-or-drug-deal';
10760 -> 'eating-on-board';
10761 -> 'equipment-problem-with-air-conditioning';
10762 -> 'equipment-problem-with-air-system';
10763 -> 'equipment-problem-with-brakes';
10764 -> 'equipment-problem-with-chassis-or-suspension';
10765 -> 'equipment-problem-with-cooling-system';
10766 -> 'equipment-problem-with-doors';
10767 -> 'equipment-problem-with-electrical';
10768 -> 'equipment-problem-with-engine';
10769 -> 'equipment-problem-with-exterior-or-body';
10770 -> 'equipment-problem-with-fare-collection';
10771 -> 'equipment-problem-with-fuel-or-exhaust';
10772 -> 'equipment-problem-with-horn';
10773 -> 'equipment-problem-with-interior';
10774 -> 'equipment-problem-with-liftkneeling';
10775 -> 'equipment-problem-with-lights';
10776 -> 'equipment-problem-with-lubrication';
10777 -> 'equipment-problem-with-radio-or-communication';
10778 -> 'equipment-problem-with-signs';
10779 -> 'equipment-problem-with-steering';
10780 -> 'equipment-problem-with-tires';
10781 -> 'equipment-problem-with-transmission';
10782 -> 'equipment-problem-with-unknown-alarm';
10783 -> 'equipment-problem-with-wipers';
10784 -> 'fare-dispute-expired-pass';
10785 -> 'fare-dispute-expired-transfer';
10786 -> 'fare-dispute-expired-upgrade';
10787 -> 'fare-dispute-other';
10788 -> 'fare-dispute-refuses-to-pay';
10789 -> 'lift-passenger-cycle-completed';
10790 -> 'lift-passenger-ready-to-alight';
10791 -> 'lift-passenger-ready-to-board';
10792 -> 'lost-article';
10793 -> 'objects-thrown';
10794 -> 'passenger-accident-alighting';
10795 -> 'passenger-accident-boarding';
10796 -> 'passenger-accident-fallen-on-board';
10797 -> 'passenger-load';
10798 -> 'passenger-accident-other';
10799 -> 'passenger-sick-or-injured';
10800 -> 'right-of-way';
10801 -> theft;
10802 -> 'theft-of-service';
10803 -> 'waiting-to-get-relief-for-schedule-break';
10804 -> 'waiting-to-get-relief-after-run-is-finished';
10805 -> 'waiting-to-provide-relief';
11009 -> 'unknown-object';
11010 -> tire;
11011 -> rim;
11012 -> retread;
11013 -> trash;
11014 -> cargo;
11015 -> diesel;
11016 -> gasoline;
11017 -> 'anti-freeze';
11018 -> 'seat-belts';
11019 -> 'litter-container';
11020 -> 'all-Terrain-vehicle';
11021 -> seaplane;
11022 -> chairlift;
11023 -> 'fishing-pier';
11024 -> 'railroad-cross-buck';
11025 -> telephone;
11026 -> fallout;
11027 -> medical;
11028 -> chemical;
11029 -> welfare;
11030 -> evacuation;
11031 -> 'left-arrow-signal';
11032 -> 'ahead-arrow-signal';
11033 -> 'right-arrow-signal';
11034 -> 'green-light-signal';
11035 -> 'green-arrow-signal';
11036 -> 'yellow-light-signal';
11037 -> 'yellow-arrow-signal';
11038 -> 'red-light-signal';
11039 -> 'red-arrow-signal';
11040 -> 'extended-green-signal';
11041 -> 'advance-arrow-signal';
11042 -> 'pedestrian-Signal-Stop';
11043 -> 'pedestrian-Signal-Caution';
11044 -> 'pedestrian-Signal-Walk';
11045 -> 'pedestrian-Signal-Light';
11046 -> 'pedestrian-Signal-Time-Display';
11047 -> train;
11048 -> horn;
11049 -> deer;
11050 -> cattle;
11051 -> horse;
11052 -> 'golf-cart';
11053 -> 'food-services';
11054 -> 'ambulance-staging-point';
11055 -> 'roadside-table';
11056 -> services;
11059 -> 'motorist-services';
11060 -> 'alternative-fuel';
11061 -> 'propane-gas';
11062 -> registration;
11063 -> decontamination;
11064 -> emergency;
11264 -> 'prohibit-None-Allowed-LU-LT-L45-S-R45-RT-RU';
11265 -> 'prohibit-RU-Allowed-LU-LT-L45-S-R45-RT';
11266 -> 'prohibit-RT-Allowed-LU-LT-L45-S-R45-RU';
11267 -> 'prohibit-RT-RU-Allowed-LU-LT-L45-S-R45';
11268 -> 'prohibit-R45-Allowed-LU-LT-L45-S-RT-RU';
11269 -> 'prohibit-R45-RU-Allowed-LU-LT-L45-S-RT';
11270 -> 'prohibit-R45-RT-Allowed-LU-LT-L45-S-RU';
11271 -> 'prohibit-R45-RT-RU-Allowed-LU-LT-L45-S';
11272 -> 'prohibit-S-Allowed-LU-LT-L45-R45-RT-RU';
11273 -> 'prohibit-S-RU-Allowed-LU-LT-L45-R45-RT';
11274 -> 'prohibit-S-RT-Allowed-LU-LT-L45-R45-RU';
11275 -> 'prohibit-S-RT-RU-Allowed-LU-LT-L45-R45';
11276 -> 'prohibit-S-R45-Allowed-LU-LT-L45-RT-RU';
11277 -> 'prohibit-S-R45-RU-Allowed-LU-LT-L45-RT';
11278 -> 'prohibit-S-R45-RT-Allowed-LU-LT-L45-RU';
11279 -> 'prohibit-S-R45-RT-RU-Allowed-LU-LT-L45';
11280 -> 'prohibit-L45-Allowed-LU-LT-S-R45-RT-RU';
11281 -> 'prohibit-L45-RU-Allowed-LU-LT-S-R45-RT';
11282 -> 'prohibit-L45-RT-Allowed-LU-LT-S-R45-RU';
11283 -> 'prohibit-L45-RT-RU-Allowed-LU-LT-S-R45';
11284 -> 'prohibit-L45-R45-Allowed-LU-LT-S-RT-RU';
11285 -> 'prohibit-L45-R45-RU-Allowed-LU-LT-S-RT';
11286 -> 'prohibit-L45-R45-RT-Allowed-LU-LT-S-RU';
11287 -> 'prohibit-L45-R45-RT-RU-Allowed-LU-LT-S';
11288 -> 'prohibit-L45-S-Allowed-LU-LT-R45-RT-RU';
11289 -> 'prohibit-L45-S-RU-Allowed-LU-LT-R45-RT';
11290 -> 'prohibit-L45-S-RT-Allowed-LU-LT-R45-RU';
11291 -> 'prohibit-L45-S-RT-RU-Allowed-LU-LT-R45';
11292 -> 'prohibit-L45-S-R45-Allowed-LU-LT-RT-RU';
11293 -> 'prohibit-L45-S-R45-RU-Allowed-LU-LT-RT';
11294 -> 'prohibit-L45-S-R45-RT-Allowed-LU-LT-RU';
11295 -> 'prohibit-L45-S-R45-RT-RU-Allowed-LU-LT';
11296 -> 'prohibit-LT-Allowed-LU-L45-S-R45-RT-RU';
11297 -> 'prohibit-LT-RU-Allowed-LU-L45-S-R45-RT';
11298 -> 'prohibit-LT-RT-Allowed-LU-L45-S-R45-RU';
11299 -> 'prohibit-LT-RT-RU-Allowed-LU-L45-S-R45';
11300 -> 'prohibit-LT-R45-Allowed-LU-L45-S-RT-RU';
11301 -> 'prohibit-LT-R45-RU-Allowed-LU-L45-S-RT';
11302 -> 'prohibit-LT-R45-RT-Allowed-LU-L45-S-RU';
11303 -> 'prohibit-LT-R45-RT-RU-Allowed-LU-L45-S';
11304 -> 'prohibit-LT-S-Allowed-LU-L45-R45-RT-RU';
11305 -> 'prohibit-LT-S-RU-Allowed-LU-L45-R45-RT';
11306 -> 'prohibit-LT-S-RT-Allowed-LU-L45-R45-RU';
11307 -> 'prohibit-LT-S-RT-RU-Allowed-LU-L45-R45';
11308 -> 'prohibit-LT-S-R45-Allowed-LU-L45-RT-RU';
11309 -> 'prohibit-LT-S-R45-RU-Allowed-LU-L45-RT';
11310 -> 'prohibit-LT-S-R45-RT-Allowed-LU-L45-RU';
11311 -> 'prohibit-LT-S-R45-RT-RU-Allowed-LU-L45';
11312 -> 'prohibit-LT-L45-Allowed-LU-S-R45-RT-RU';
11313 -> 'prohibit-LT-L45-RU-Allowed-LU-S-R45-RT';
11314 -> 'prohibit-LT-L45-RT-Allowed-LU-S-R45-RU';
11315 -> 'prohibit-LT-L45-RT-RU-Allowed-LU-S-R45';
11316 -> 'prohibit-LT-L45-R45-Allowed-LU-S-RT-RU';
11317 -> 'prohibit-LT-L45-R45-RU-Allowed-LU-S-RT';
11318 -> 'prohibit-LT-L45-R45-RT-Allowed-LU-S-RU';
11319 -> 'prohibit-LT-L45-R45-RT-RU-Allowed-LU-S';
11320 -> 'prohibit-LT-L45-S-Allowed-LU-R45-RT-RU';
11321 -> 'prohibit-LT-L45-S-RU-Allowed-LU-R45-RT';
11322 -> 'prohibit-LT-L45-S-RT-Allowed-LU-R45-RU';
11323 -> 'prohibit-LT-L45-S-RT-RU-Allowed-LU-R45';
11324 -> 'prohibit-LT-L45-S-R45-Allowed-LU-RT-RU';
11325 -> 'prohibit-LT-L45-S-R45-RU-Allowed-LU-RT';
11326 -> 'prohibit-LT-L45-S-R45-RT-Allowed-LU-RU';
11327 -> 'prohibit-LT-L45-S-R45-RT-RU-Allowed-LU';
11328 -> 'prohibit-LU-Allowed-LT-L45-S-R45-RT-RU';
11329 -> 'prohibit-LU-RU-Allowed-LT-L45-S-R45-RT';
11330 -> 'prohibit-LU-RT-Allowed-LT-L45-S-R45-RU';
11331 -> 'prohibit-LU-RT-RU-Allowed-LT-L45-S-R45';
11332 -> 'prohibit-LU-R45-Allowed-LT-L45-S-RT-RU';
11333 -> 'prohibit-LU-R45-RU-Allowed-LT-L45-S-RT';
11334 -> 'prohibit-LU-R45-RT-Allowed-LT-L45-S-RU';
11335 -> 'prohibit-LU-R45-RT-RU-Allowed-LT-L45-S';
11336 -> 'prohibit-LU-S-Allowed-LT-L45-R45-RT-RU';
11337 -> 'prohibit-LU-S-RU-Allowed-LT-L45-R45-RT';
11338 -> 'prohibit-LU-S-RT-Allowed-LT-L45-R45-RU';
11339 -> 'prohibit-LU-S-RT-RU-Allowed-LT-L45-R45';
11340 -> 'prohibit-LU-S-R45-Allowed-LT-L45-RT-RU';
11341 -> 'prohibit-LU-S-R45-RU-Allowed-LT-L45-RT';
11342 -> 'prohibit-LU-S-R45-RT-Allowed-LT-L45-RU';
11343 -> 'prohibit-LU-S-R45-RT-RU-Allowed-LT-L45';
11344 -> 'prohibit-LU-L45-Allowed-LT-S-R45-RT-RU';
11345 -> 'prohibit-LU-L45-RU-Allowed-LT-S-R45-RT';
11346 -> 'prohibit-LU-L45-RT-Allowed-LT-S-R45-RU';
11347 -> 'prohibit-LU-L45-RT-RU-Allowed-LT-S-R45';
11348 -> 'prohibit-LU-L45-R45-Allowed-LT-S-RT-RU';
11349 -> 'prohibit-LU-L45-R45-RU-Allowed-LT-S-RT';
11350 -> 'prohibit-LU-L45-R45-RT-Allowed-LT-S-RU';
11351 -> 'prohibit-LU-L45-R45-RT-RU-Allowed-LT-S';
11352 -> 'prohibit-LU-L45-S-Allowed-LT-R45-RT-RU';
11353 -> 'prohibit-LU-L45-S-RU-Allowed-LT-R45-RT';
11354 -> 'prohibit-LU-L45-S-RT-Allowed-LT-R45-RU';
11355 -> 'prohibit-LU-L45-S-RT-RU-Allowed-LT-R45';
11356 -> 'prohibit-LU-L45-S-R45-Allowed-LT-RT-RU';
11357 -> 'prohibit-LU-L45-S-R45-RU-Allowed-LT-RT';
11358 -> 'prohibit-LU-L45-S-R45-RT-Allowed-LT-RU';
11359 -> 'prohibit-LU-L45-S-R45-RT-RU-Allowed-LT';
11360 -> 'prohibit-LU-LT-Allowed-L45-S-R45-RT-RU';
11361 -> 'prohibit-LU-LT-RU-Allowed-L45-S-R45-RT';
11362 -> 'prohibit-LU-LT-RT-Allowed-L45-S-R45-RU';
11363 -> 'prohibit-LU-LT-RT-RU-Allowed-L45-S-R45';
11364 -> 'prohibit-LU-LT-R45-Allowed-L45-S-RT-RU';
11365 -> 'prohibit-LU-LT-R45-RU-Allowed-L45-S-RT';
11366 -> 'prohibit-LU-LT-R45-RT-Allowed-L45-S-RU';
11367 -> 'prohibit-LU-LT-R45-RT-RU-Allowed-L45-S';
11368 -> 'prohibit-LU-LT-S-Allowed-L45-R45-RT-RU';
11369 -> 'prohibit-LU-LT-S-RU-Allowed-L45-R45-RT';
11370 -> 'prohibit-LU-LT-S-RT-Allowed-L45-R45-RU';
11371 -> 'prohibit-LU-LT-S-RT-RU-Allowed-L45-R45';
11372 -> 'prohibit-LU-LT-S-R45-Allowed-L45-RT-RU';
11373 -> 'prohibit-LU-LT-S-R45-RU-Allowed-L45-RT';
11374 -> 'prohibit-LU-LT-S-R45-RT-Allowed-L45-RU';
11375 -> 'prohibit-LU-LT-S-R45-RT-RU-Allowed-L45';
11376 -> 'prohibit-LU-LT-L45-Allowed-S-R45-RT-RU';
11377 -> 'prohibit-LU-LT-L45-RU-Allowed-S-R45-RT';
11378 -> 'prohibit-LU-LT-L45-RT-Allowed-S-R45-RU';
11379 -> 'prohibit-LU-LT-L45-RT-RU-Allowed-S-R45';
11380 -> 'prohibit-LU-LT-L45-R45-Allowed-S-RT-RU';
11381 -> 'prohibit-LU-LT-L45-R45-RU-Allowed-S-RT';
11382 -> 'prohibit-LU-LT-L45-R45-RT-Allowed-S-RU';
11383 -> 'prohibit-LU-LT-L45-R45-RT-RU-Allowed-S';
11384 -> 'prohibit-LU-LT-L45-S-Allowed-R45-RT-RU';
11385 -> 'prohibit-LU-LT-L45-S-RU-Allowed-R45-RT';
11386 -> 'prohibit-LU-LT-L45-S-RT-Allowed-R45-RU';
11387 -> 'prohibit-LU-LT-L45-S-RT-RU-Allowed-R45';
11388 -> 'prohibit-LU-LT-L45-S-R45-Allowed-RT-RU';
11389 -> 'prohibit-LU-LT-L45-S-R45-RU-Allowed-RT';
11390 -> 'prohibit-LU-LT-L45-S-R45-RT-Allowed-RU';
11391 -> 'prohibit-LU-LT-L45-S-R45-RT-RU-Allowed-None';
11521 -> 'n1-16th';
11522 -> 'n1-10th';
11523 -> 'n1-8th';
11524 -> 'n1-4th';
11525 -> 'n1-3rd';
11526 -> 'n1-2';
11527 -> 'n3-4';
11531 -> n300;
11532 -> n350;
11533 -> n400;
11534 -> n450;
11535 -> n500;
11536 -> n550;
11537 -> n600;
11538 -> n650;
11539 -> n700;
11540 -> n750;
11541 -> n800;
11542 -> n850;
11543 -> n900;
11544 -> n950;
11545 -> n1000;
11546 -> n1100;
11547 -> n1200;
11548 -> n1300;
11549 -> n1400;
11550 -> n1500;
11551 -> n1600;
11552 -> n1700;
11553 -> n1800;
11554 -> n1900;
11555 -> n2000;
11556 -> n2100;
11557 -> n2200;
11558 -> n2300;
11559 -> n2400;
11560 -> n2500;
11561 -> n2600;
11562 -> n2700;
11563 -> n2800;
11564 -> n2900;
11565 -> n3000;
11566 -> n3500;
11567 -> n4000;
11568 -> n4500;
11569 -> n5000;
11570 -> n5500;
11571 -> n6000;
11572 -> n6500;
11573 -> n7000;
11574 -> n7500;
11575 -> n8000;
11576 -> n8500;
11577 -> n9000;
11578 -> n9500;
11579 -> n10000;
11580 -> n11000;
11581 -> n12000;
11582 -> n13000;
11583 -> n14000;
11584 -> n15000;
11585 -> n16000;
11586 -> n17000;
11587 -> n18000;
11588 -> n19000;
11589 -> n20000;
11590 -> n21000;
11591 -> n22000;
11592 -> n23000;
11593 -> n24000;
11594 -> n25000;
11595 -> n26000;
11596 -> n27000;
11597 -> n28000;
11598 -> n29000;
11599 -> n30000;
11600 -> n35000;
11601 -> n40000;
11602 -> n45000;
11603 -> n50000;
11604 -> n55000;
11605 -> n60000;
11606 -> n65000;
11607 -> n70000;
11608 -> n75000;
11609 -> n80000;
11610 -> n85000;
11611 -> n90000;
11612 -> n95000;
11613 -> n100000;
11777 -> 'name-follows';
11778 -> freeway;
11779 -> 'us-Route';
11780 -> 'state-Route';
11781 -> interstate;
11782 -> 'business-Loop';
11783 -> alternative;
11784 -> 'county-Route';
11785 -> 'forest-Route';
11786 -> 'farm-to-Market-Route';
11787 -> 'eisenhower-Interstate-System';
11788 -> 'americas-Byways';
11789 -> 'national-Network-Route';
11790 -> 'scenic-Area';
11791 -> 'parking-Area';
11792 -> 'weight-Station';
11793 -> road;
11794 -> exit;
11795 -> 'historical-route';
11796 -> 'state-line';
11797 -> spur;
11798 -> junction;
11799 -> 'bicycle-route';
11800 -> 'bicycle-interstate-route';
11801 -> 'national-park';
12033 -> 'bear-viewing-area';
12034 -> 'deer-viewing-area';
12035 -> 'drinking-water';
12036 -> 'environmental-study-area';
12037 -> 'falling-rocks';
12038 -> firearms;
12039 -> 'leashed-pets';
12040 -> 'point-of-interest';
12041 -> smoking;
12042 -> dog;
12043 -> 'tent-camping';
12044 -> 'trailer-camping';
12045 -> 'first-aid';
12046 -> handicapped;
12047 -> mechanic;
12048 -> 'trailer-sanitary-station';
12049 -> 'viewing-area';
12050 -> campfire;
12051 -> locker;
12052 -> sleeping;
12053 -> trail;
12054 -> climbing;
12055 -> 'rock-climbing';
12056 -> hunting;
12057 -> playground;
12058 -> 'rock-collecting';
12059 -> spelunking;
12060 -> 'bicycle-trail';
12061 -> 'hiking-trail';
12062 -> 'horse-trail';
12063 -> 'trail-interpretive-auto';
12064 -> 'trail-interpretive-pedestrian';
12065 -> 'trail-road-for-4WD-vehicles';
12066 -> 'trail-for-trail-bikes';
12067 -> archer;
12068 -> 'hang-glider';
12069 -> 'boat-tours';
12070 -> canoeing;
12071 -> diving;
12072 -> 'scuba-diving';
12073 -> fishing;
12074 -> 'marine-recreation-area';
12075 -> motorboating;
12076 -> 'boat-ramp';
12077 -> rowboating;
12078 -> sailboating;
12079 -> 'water-skiing';
12080 -> surfing;
12081 -> swimming;
12082 -> wading;
12083 -> 'hand-launch';
12084 -> kayak;
12085 -> 'wind-surf';
12086 -> 'ice-skating';
12087 -> 'ski-jumping';
12088 -> bobbing;
12089 -> 'cross-country-skiing';
12090 -> 'downhill-skiing';
12091 -> sledding;
12092 -> snowmobiling;
12093 -> snowshoeing;
12094 -> 'winter-recreation-area';
12095 -> 'scenic-overlook';
12289 -> 'regulatory-sign';
12290 -> 'warning-sign';
12291 -> 'information-sign';
12292 -> 'construction-sign';
12293 -> 'guide-sign';
12294 -> stop;
12295 -> yield;
12296 -> 'to-oncoming-traffic';
12297 -> 'four-way';
12298 -> 'all-way';
12299 -> zone;
12300 -> narrows;
12301 -> widens;
12302 -> reduced;
12303 -> combined;
12304 -> minimum;
12305 -> maximum;
12306 -> 'divided-road';
12307 -> 'double-arrow';
12308 -> 'dead-end';
12309 -> 'no-outlet';
12310 -> 'wrong-way';
12312 -> nDetour;
12313 -> chevron;
12314 -> 'do-not-enter';
12315 -> 't-intersection-to-the-side';
12316 -> 't-intersection-oncoming';
12317 -> 'y-intersection-to-the-side';
12318 -> 'y-intersection-oncoming';
12319 -> 'four-way-divided-highway-crossing';
12320 -> 't-way-divided-highway-crossing';
12321 -> 'light-rail-divided-highway-crossing';
12322 -> 'light-rail-t-divided-highway-crossing';
12323 -> 'side-road-to-right';
12324 -> 'side-road-to-left';
12325 -> 'side-road-to-right-at-angle';
12326 -> 'side-road-to-left-at-angle';
12327 -> 'entering-roadway-merge';
12328 -> 'entering-roadway-added-lane';
12329 -> 'one-way';
12330 -> caution;
12331 -> temporary;
12545 -> n1;
12546 -> n2;
12547 -> n3;
12548 -> n4;
12549 -> n5;
12550 -> n6;
12551 -> n7;
12552 -> n8;
12553 -> n9;
12554 -> n10;
12555 -> n11;
12556 -> n12;
12557 -> n13;
12558 -> n14;
12559 -> n15;
12560 -> n16;
12561 -> n17;
12562 -> n18;
12563 -> n19;
12564 -> n20;
12565 -> n21;
12566 -> n22;
12567 -> n23;
12568 -> n24;
12569 -> n25;
12570 -> n26;
12571 -> n27;
12572 -> n28;
12573 -> n29;
12574 -> n30;
12575 -> n31;
12576 -> n32;
12577 -> n33;
12578 -> n34;
12579 -> n35;
12580 -> n36;
12581 -> n37;
12582 -> n38;
12583 -> n39;
12584 -> n40;
12585 -> n41;
12586 -> n42;
12587 -> n43;
12588 -> n44;
12589 -> n45;
12590 -> n46;
12591 -> n47;
12592 -> n48;
12593 -> n49;
12594 -> n50;
12595 -> n51;
12596 -> n52;
12597 -> n53;
12598 -> n54;
12599 -> n55;
12600 -> n56;
12601 -> n57;
12602 -> n58;
12603 -> n59;
12604 -> n60;
12605 -> n61;
12606 -> n62;
12607 -> n63;
12608 -> n64;
12609 -> n65;
12610 -> n66;
12611 -> n67;
12612 -> n68;
12613 -> n69;
12614 -> n70;
12615 -> n71;
12616 -> n72;
12617 -> n73;
12618 -> n74;
12619 -> n75;
12620 -> n76;
12621 -> n77;
12622 -> n78;
12623 -> n79;
12624 -> n80;
12625 -> n81;
12626 -> n82;
12627 -> n83;
12628 -> n84;
12629 -> n85;
12630 -> n86;
12631 -> n87;
12632 -> n88;
12633 -> n89;
12634 -> n90;
12635 -> n91;
12636 -> n92;
12637 -> n93;
12638 -> n94;
12639 -> n95;
12640 -> n96;
12641 -> n97;
12642 -> n98;
12643 -> n99;
12644 -> n100;
12645 -> n101;
12646 -> n102;
12647 -> n103;
12648 -> n104;
12649 -> n105;
12650 -> n106;
12651 -> n107;
12652 -> n108;
12653 -> n109;
12654 -> n110;
12655 -> n111;
12656 -> n112;
12657 -> n113;
12658 -> n114;
12659 -> n115;
12660 -> n116;
12661 -> n117;
12662 -> n118;
12663 -> n119;
12664 -> n120;
12665 -> n121;
12666 -> n122;
12667 -> n123;
12668 -> n124;
12669 -> n125;
12670 -> n126;
12671 -> n127;
12672 -> n128;
12673 -> n129;
12674 -> n130;
12675 -> n131;
12676 -> n132;
12677 -> n133;
12678 -> n134;
12679 -> n135;
12680 -> n136;
12681 -> n137;
12682 -> n138;
12683 -> n139;
12684 -> n140;
12685 -> n141;
12686 -> n142;
12687 -> n143;
12688 -> n144;
12689 -> n145;
12690 -> n146;
12691 -> n147;
12692 -> n148;
12693 -> n149;
12694 -> n150;
12695 -> n151;
12696 -> n152;
12697 -> n153;
12698 -> n154;
12699 -> n155;
12700 -> n156;
12701 -> n157;
12702 -> n158;
12703 -> n159;
12704 -> n160;
12705 -> n161;
12706 -> n162;
12707 -> n163;
12708 -> n164;
12709 -> n165;
12710 -> n166;
12711 -> n167;
12712 -> n168;
12713 -> n169;
12714 -> n170;
12715 -> n171;
12716 -> n172;
12717 -> n173;
12718 -> n174;
12719 -> n175;
12720 -> n176;
12721 -> n177;
12722 -> n178;
12723 -> n179;
12724 -> n180;
12725 -> n181;
12726 -> n182;
12727 -> n183;
12728 -> n184;
12729 -> n185;
12730 -> n186;
12731 -> n187;
12732 -> n188;
12733 -> n189;
12734 -> n190;
12735 -> n191;
12736 -> n192;
12737 -> n193;
12738 -> n194;
12739 -> n195;
12740 -> n196;
12741 -> n197;
12742 -> n198;
12743 -> n199;
12744 -> n200;
12745 -> n201;
12746 -> n202;
12747 -> n203;
12748 -> n204;
12749 -> n205;
12750 -> n206;
12751 -> n207;
12752 -> n208;
12753 -> n209;
12754 -> n210;
12755 -> n211;
12756 -> n212;
12757 -> n213;
12758 -> n214;
12759 -> n215;
12760 -> n216;
12761 -> n217;
12762 -> n218;
12763 -> n219;
12764 -> n220;
12765 -> n221;
12766 -> n222;
12767 -> n223;
12768 -> n224;
12769 -> n225;
12770 -> n226;
12771 -> n227;
12772 -> n228;
12773 -> n229;
12774 -> n230;
12775 -> n231;
12776 -> n232;
12777 -> n233;
12778 -> n234;
12779 -> n235;
12780 -> n236;
12781 -> n237;
12782 -> n238;
12783 -> n239;
12784 -> n240;
12785 -> n241;
12786 -> n242;
12787 -> n243;
12788 -> n244;
12789 -> n245;
12790 -> n246;
12791 -> n247;
12792 -> n248;
12793 -> n249;
12794 -> n250;
12795 -> n251;
12796 -> n252;
12797 -> n253;
12798 -> n254;
12799 -> n255;
12801 -> alabama;
12802 -> alaska;
12803 -> 'american-Samoa';
12804 -> arizona;
12805 -> arkansas;
12806 -> california;
12807 -> colorado;
12808 -> connecticut;
12809 -> delaware;
12810 -> 'district-of-Columbia';
12811 -> florida;
12812 -> georgia;
12813 -> guam;
12814 -> hawaii;
12815 -> idaho;
12816 -> illinois;
12817 -> indiana;
12818 -> iowa;
12819 -> kansas;
12820 -> kentucky;
12821 -> louisiana;
12822 -> maine;
12823 -> maryland;
12824 -> massachusetts;
12825 -> michigan;
12826 -> minnesota;
12827 -> mississippi;
12828 -> missouri;
12829 -> montana;
12830 -> nebraska;
12831 -> nevada;
12832 -> 'new-Hampshire';
12833 -> 'new-Jersey';
12834 -> 'new-Mexico';
12835 -> 'new-York';
12836 -> 'north-Carolina';
12837 -> 'north-Dakota';
12838 -> 'northern-Marianas-Islands';
12839 -> ohio;
12840 -> oklahoma;
12841 -> oregon;
12842 -> pennsylvania;
12843 -> 'puerto-rico';
12844 -> 'rhode-Island';
12845 -> 'south-Carolina';
12846 -> 'south-Dakota';
12847 -> tennessee;
12848 -> texas;
12849 -> utah;
12850 -> vermont;
12851 -> virginia;
12852 -> 'virgin-Islands';
12853 -> washington;
12854 -> 'west-Virginia';
12855 -> wisconsin;
12856 -> wyoming;
13057 -> 'rest-room';
13058 -> 'mens-rest-room';
13059 -> 'womens-rest-room';
13060 -> 'family-rest-room';
13061 -> dam;
13062 -> 'fish-hatchery';
13063 -> information;
13064 -> lighthouse;
13065 -> 'lookout-tower';
13066 -> 'ranger-station';
13068 -> 'grocery-store';
13069 -> lodging;
13070 -> 'post-office';
13072 -> 'picnic-shelter';
13073 -> 'group-camping';
13074 -> 'group-picnicking';
13075 -> 'n24-hour-pharmacy';
13076 -> kennel;
13077 -> 'laundry-facilities';
13078 -> 'shower-facilities';
13079 -> amphitheater;
13080 -> stable;
13081 -> hospital;
13082 -> 'emergency-medical-service-point';
13083 -> library;
13084 -> 'recycling-collection-center';
13085 -> school;
13313 -> alley;
13314 -> annex;
13315 -> arcade;
13316 -> avenue;
13317 -> bayoo;
13318 -> beach;
13319 -> bend;
13320 -> bluff;
13321 -> bottom;
13322 -> boulevard;
13323 -> branch;
13324 -> nBridge;
13325 -> brook;
13326 -> burg;
13327 -> bypass;
13328 -> camp;
13329 -> canyon;
13330 -> cape;
13331 -> causeway;
13332 -> nCenter;
13333 -> circle;
13334 -> cliff;
13335 -> club;
13336 -> common;
13337 -> corner;
13338 -> course;
13339 -> court;
13340 -> cove;
13341 -> creek;
13342 -> crescent;
13343 -> crest;
13344 -> nCrossing;
13345 -> crossroad;
13346 -> curve;
13347 -> dale;
13348 -> nDam;
13349 -> divide;
13350 -> drive;
13351 -> estate;
13352 -> expressway;
13353 -> extension;
13354 -> fall;
13355 -> nFerry;
13356 -> field;
13357 -> flat;
13358 -> ford;
13359 -> forest;
13360 -> forge;
13361 -> fork;
13362 -> fort;
13363 -> nFreeway;
13364 -> garden;
13365 -> gateway;
13366 -> glen;
13367 -> green;
13368 -> grove;
13369 -> harbor;
13370 -> haven;
13371 -> heights;
13372 -> highway;
13373 -> nHill;
13374 -> hollow;
13375 -> inlet;
13376 -> nIsland;
13377 -> isle;
13378 -> nJunction;
13379 -> key;
13380 -> knoll;
13381 -> lake;
13382 -> land;
13383 -> landing;
13384 -> nLane;
13385 -> light;
13386 -> loaf;
13387 -> lock;
13388 -> lodge;
13389 -> loop;
13390 -> mall;
13391 -> manor;
13392 -> meadow;
13393 -> mews;
13394 -> mill;
13395 -> mission;
13396 -> motorway;
13397 -> mount;
13398 -> mountain;
13399 -> neck;
13400 -> orchard;
13401 -> oval;
13402 -> nOverpass;
13403 -> park;
13404 -> parkway;
13405 -> nPass;
13406 -> passage;
13407 -> path;
13408 -> pike;
13409 -> pine;
13410 -> plains;
13411 -> plaza;
13412 -> point;
13413 -> port;
13414 -> prairie;
13415 -> radial;
13416 -> ramp;
13417 -> ranch;
13418 -> rapid;
13419 -> rest;
13420 -> ridge;
13421 -> river;
13422 -> nRoad;
13423 -> route;
13424 -> row;
13425 -> rue;
13426 -> run;
13427 -> shoal;
13428 -> shore;
13429 -> skyway;
13430 -> spring;
13431 -> nSpur;
13432 -> square;
13433 -> nStation;
13434 -> stravenue;
13435 -> stream;
13436 -> street;
13437 -> summit;
13438 -> terrace;
13439 -> throughway;
13440 -> trace;
13441 -> nTrack;
13442 -> trafficway;
13443 -> nTrail;
13444 -> nTunnel;
13445 -> turnpike;
13446 -> nUnderpass;
13447 -> union;
13448 -> valley;
13449 -> viaduct;
13450 -> view;
13451 -> village;
13452 -> ville;
13453 -> vista;
13454 -> nWalk;
13455 -> wall;
13456 -> way;
13457 -> well;
13569 -> ahead;
13570 -> here;
13571 -> 'here-to';
13572 -> 'here-to-alley';
13573 -> 'here-to-corner';
13574 -> 'here-to-sign';
13575 -> 'between-signs';
13576 -> 'this-side-of-street';
13577 -> 'this-side-of-sign';
13579 -> right;
13580 -> left;
13581 -> 'begin-point';
13582 -> next;
13583 -> 'ends-end';
13584 -> 'other-Side';
13585 -> crossing;
13586 -> crosswalks;
13587 -> 'center-strip';
13588 -> lane;
13589 -> hill;
13590 -> 'both-ways-left-and-right';
13591 -> 'both-ways-45-degree-angle-tilting-right';
13592 -> 'both-ways-45-degree-angle-tilting-left';
13593 -> 'both-directions-of-travel';
13594 -> 'left-turn';
13595 -> 'left-45-degree-arrow';
13596 -> 'left-45-degree-turn';
13597 -> 'ahead-and-to-the-left';
13598 -> 'ahead-and-to-the-left-at-a-45-degree-angle';
13599 -> 'right-turn';
13600 -> 'right-45-degree-arrow';
13601 -> 'right-45-degree-turn';
13602 -> 'ahead-and-to-the-right';
13603 -> 'ahead-and-to-the-right-at-a-45-degree-angle';
13604 -> 'downward-left-45-degree';
13605 -> 'downward-right-45-degree';
13606 -> 'downward-left-and-right-45-degree';
13609 -> 'right-arrow';
13610 -> 'left-arrow';
13611 -> 'starting-start';
13613 -> 'chevron-right';
13614 -> 'chevron-left';
13615 -> 'right-turn-with-junction';
13616 -> 'left-turn-with-junction';
13617 -> 'hairpin-right';
13618 -> 'hairpin-left';
13619 -> 'truck-rollover-right';
13620 -> 'truck-rollover-left';
13621 -> 'n270-degree-turn-right';
13622 -> 'n270-degree-turn-left';
13623 -> 'two-lane-reverse-curve-to-right';
13624 -> 'two-lane-reverse-curve-to-left';
13625 -> 'three-lane-reverse-curve-to-right';
13626 -> 'three-lane-reverse-curve-to-left';
13627 -> 'double-reverse-curve-to-right';
13628 -> 'double-reverse-curve-to-left';
13629 -> 'two-lane-double-reverse-curve-to-right';
13630 -> 'two-lane-double-reverse-curve-to-left';
13631 -> 'three-lane-double-reverse-curve-to-right';
13632 -> 'three-lane-double-reverse-curve-to-left';
13633 -> between;
13634 -> shelter;
13635 -> center;
13636 -> 'reverse-turn-to-right';
13637 -> 'reverse-turn-to-left';
13638 -> 'reverse-curve-to-right';
13639 -> 'reverse-curve-to-left';
13640 -> 'winding-road-to-right';
13641 -> 'winding-road-to-left';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_LaneRoadway(Val) ->
if Val =:= 'all-roadways' ->
<<8193:16>>;
Val =:= 'through-lanes' ->
<<8194:16>>;
Val =:= 'left-lane' ->
<<8195:16>>;
Val =:= 'right-lane' ->
<<8196:16>>;
Val =:= 'center-lane' ->
<<8197:16>>;
Val =:= 'middle-lanes' ->
<<8198:16>>;
Val =:= 'middle-two-lanes' ->
<<8199:16>>;
Val =:= 'right-turning-lanes' ->
<<8200:16>>;
Val =:= 'left-turning-lanes' ->
<<8201:16>>;
Val =:= 'right-exit-ramp' ->
<<8202:16>>;
Val =:= 'right-entrance-ramp' ->
<<8203:16>>;
Val =:= 'left-exit-ramp' ->
<<8204:16>>;
Val =:= 'left-entrance-ramp' ->
<<8205:16>>;
Val =:= 'hard-shoulder' ->
<<8206:16>>;
Val =:= 'soft-shoulder' ->
<<8207:16>>;
Val =:= 'right-shoulder' ->
<<8208:16>>;
Val =:= 'left-shoulder' ->
<<8209:16>>;
Val =:= 'right-hand-parallel-lanes' ->
<<8210:16>>;
Val =:= 'left-hand-parallel-lanes' ->
<<8211:16>>;
Val =:= 'connecting-lanes' ->
<<8212:16>>;
Val =:= 'express-lanes' ->
<<8213:16>>;
Val =:= 'local-lanes' ->
<<8214:16>>;
Val =:= 'toll-lanes' ->
<<8215:16>>;
Val =:= 'electronic-toll-lanes' ->
<<8216:16>>;
Val =:= 'toll-plaza' ->
<<8217:16>>;
Val =:= 'inspection-lane' ->
<<8218:16>>;
Val =:= 'hOV-lanes' ->
<<8219:16>>;
Val =:= 'bus-lanes' ->
<<8220:16>>;
Val =:= 'carpool-lanes' ->
<<8221:16>>;
Val =:= 'truck-lanes' ->
<<8222:16>>;
Val =:= 'emergency-lanes' ->
<<8223:16>>;
Val =:= 'passing-lanes' ->
<<8224:16>>;
Val =:= 'climbing-lanes' ->
<<8225:16>>;
Val =:= 'slow-lane' ->
<<8226:16>>;
Val =:= 'service-road' ->
<<8227:16>>;
Val =:= 'cycle-lane' ->
<<8228:16>>;
Val =:= bridge ->
<<8229:16>>;
Val =:= overpass ->
<<8230:16>>;
Val =:= 'elevated-lanes' ->
<<8231:16>>;
Val =:= underpass ->
<<8232:16>>;
Val =:= tunnel ->
<<8233:16>>;
Val =:= 'escape-ramp' ->
<<8234:16>>;
Val =:= highways ->
<<8235:16>>;
Val =:= 'upper-deck-lanes' ->
<<8236:16>>;
Val =:= 'lower-deck-lanes' ->
<<8237:16>>;
Val =:= 'reversible-lanes' ->
<<8238:16>>;
Val =:= 'right-exit-lanes' ->
<<8239:16>>;
Val =:= 'left-exit-lanes' ->
<<8240:16>>;
Val =:= 'right-merging-lanes' ->
<<8241:16>>;
Val =:= 'left-merging-lanes' ->
<<8242:16>>;
Val =:= 'right-second-exit-ramp' ->
<<8243:16>>;
Val =:= 'left-second-exit-ramp' ->
<<8244:16>>;
Val =:= 'right-second-entrance-ramp' ->
<<8245:16>>;
Val =:= 'left-second-entrance-ramp' ->
<<8246:16>>;
Val =:= 'all-exit-lanes' ->
<<8247:16>>;
Val =:= 'all-entry-lanes' ->
<<8248:16>>;
Val =:= 'either-shoulder' ->
<<8249:16>>;
Val =:= tracks ->
<<8250:16>>;
Val =:= sidewalk ->
<<8251:16>>;
Val =:= median ->
<<8252:16>>;
Val =:= 'shoulder-work' ->
<<8253:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_LaneRoadway(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
8193 -> 'all-roadways';
8194 -> 'through-lanes';
8195 -> 'left-lane';
8196 -> 'right-lane';
8197 -> 'center-lane';
8198 -> 'middle-lanes';
8199 -> 'middle-two-lanes';
8200 -> 'right-turning-lanes';
8201 -> 'left-turning-lanes';
8202 -> 'right-exit-ramp';
8203 -> 'right-entrance-ramp';
8204 -> 'left-exit-ramp';
8205 -> 'left-entrance-ramp';
8206 -> 'hard-shoulder';
8207 -> 'soft-shoulder';
8208 -> 'right-shoulder';
8209 -> 'left-shoulder';
8210 -> 'right-hand-parallel-lanes';
8211 -> 'left-hand-parallel-lanes';
8212 -> 'connecting-lanes';
8213 -> 'express-lanes';
8214 -> 'local-lanes';
8215 -> 'toll-lanes';
8216 -> 'electronic-toll-lanes';
8217 -> 'toll-plaza';
8218 -> 'inspection-lane';
8219 -> 'hOV-lanes';
8220 -> 'bus-lanes';
8221 -> 'carpool-lanes';
8222 -> 'truck-lanes';
8223 -> 'emergency-lanes';
8224 -> 'passing-lanes';
8225 -> 'climbing-lanes';
8226 -> 'slow-lane';
8227 -> 'service-road';
8228 -> 'cycle-lane';
8229 -> bridge;
8230 -> overpass;
8231 -> 'elevated-lanes';
8232 -> underpass;
8233 -> tunnel;
8234 -> 'escape-ramp';
8235 -> highways;
8236 -> 'upper-deck-lanes';
8237 -> 'lower-deck-lanes';
8238 -> 'reversible-lanes';
8239 -> 'right-exit-lanes';
8240 -> 'left-exit-lanes';
8241 -> 'right-merging-lanes';
8242 -> 'left-merging-lanes';
8243 -> 'right-second-exit-ramp';
8244 -> 'left-second-exit-ramp';
8245 -> 'right-second-entrance-ramp';
8246 -> 'left-second-entrance-ramp';
8247 -> 'all-exit-lanes';
8248 -> 'all-entry-lanes';
8249 -> 'either-shoulder';
8250 -> tracks;
8251 -> sidewalk;
8252 -> median;
8253 -> 'shoulder-work';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_LargeNumbers(Val) ->
if Val =:= 'n1-16th' ->
<<11521:16>>;
Val =:= 'n1-10th' ->
<<11522:16>>;
Val =:= 'n1-8th' ->
<<11523:16>>;
Val =:= 'n1-4th' ->
<<11524:16>>;
Val =:= 'n1-3rd' ->
<<11525:16>>;
Val =:= 'n1-2' ->
<<11526:16>>;
Val =:= 'n3-4' ->
<<11527:16>>;
Val =:= n300 ->
<<11531:16>>;
Val =:= n350 ->
<<11532:16>>;
Val =:= n400 ->
<<11533:16>>;
Val =:= n450 ->
<<11534:16>>;
Val =:= n500 ->
<<11535:16>>;
Val =:= n550 ->
<<11536:16>>;
Val =:= n600 ->
<<11537:16>>;
Val =:= n650 ->
<<11538:16>>;
Val =:= n700 ->
<<11539:16>>;
Val =:= n750 ->
<<11540:16>>;
Val =:= n800 ->
<<11541:16>>;
Val =:= n850 ->
<<11542:16>>;
Val =:= n900 ->
<<11543:16>>;
Val =:= n950 ->
<<11544:16>>;
Val =:= n1000 ->
<<11545:16>>;
Val =:= n1100 ->
<<11546:16>>;
Val =:= n1200 ->
<<11547:16>>;
Val =:= n1300 ->
<<11548:16>>;
Val =:= n1400 ->
<<11549:16>>;
Val =:= n1500 ->
<<11550:16>>;
Val =:= n1600 ->
<<11551:16>>;
Val =:= n1700 ->
<<11552:16>>;
Val =:= n1800 ->
<<11553:16>>;
Val =:= n1900 ->
<<11554:16>>;
Val =:= n2000 ->
<<11555:16>>;
Val =:= n2100 ->
<<11556:16>>;
Val =:= n2200 ->
<<11557:16>>;
Val =:= n2300 ->
<<11558:16>>;
Val =:= n2400 ->
<<11559:16>>;
Val =:= n2500 ->
<<11560:16>>;
Val =:= n2600 ->
<<11561:16>>;
Val =:= n2700 ->
<<11562:16>>;
Val =:= n2800 ->
<<11563:16>>;
Val =:= n2900 ->
<<11564:16>>;
Val =:= n3000 ->
<<11565:16>>;
Val =:= n3500 ->
<<11566:16>>;
Val =:= n4000 ->
<<11567:16>>;
Val =:= n4500 ->
<<11568:16>>;
Val =:= n5000 ->
<<11569:16>>;
Val =:= n5500 ->
<<11570:16>>;
Val =:= n6000 ->
<<11571:16>>;
Val =:= n6500 ->
<<11572:16>>;
Val =:= n7000 ->
<<11573:16>>;
Val =:= n7500 ->
<<11574:16>>;
Val =:= n8000 ->
<<11575:16>>;
Val =:= n8500 ->
<<11576:16>>;
Val =:= n9000 ->
<<11577:16>>;
Val =:= n9500 ->
<<11578:16>>;
Val =:= n10000 ->
<<11579:16>>;
Val =:= n11000 ->
<<11580:16>>;
Val =:= n12000 ->
<<11581:16>>;
Val =:= n13000 ->
<<11582:16>>;
Val =:= n14000 ->
<<11583:16>>;
Val =:= n15000 ->
<<11584:16>>;
Val =:= n16000 ->
<<11585:16>>;
Val =:= n17000 ->
<<11586:16>>;
Val =:= n18000 ->
<<11587:16>>;
Val =:= n19000 ->
<<11588:16>>;
Val =:= n20000 ->
<<11589:16>>;
Val =:= n21000 ->
<<11590:16>>;
Val =:= n22000 ->
<<11591:16>>;
Val =:= n23000 ->
<<11592:16>>;
Val =:= n24000 ->
<<11593:16>>;
Val =:= n25000 ->
<<11594:16>>;
Val =:= n26000 ->
<<11595:16>>;
Val =:= n27000 ->
<<11596:16>>;
Val =:= n28000 ->
<<11597:16>>;
Val =:= n29000 ->
<<11598:16>>;
Val =:= n30000 ->
<<11599:16>>;
Val =:= n35000 ->
<<11600:16>>;
Val =:= n40000 ->
<<11601:16>>;
Val =:= n45000 ->
<<11602:16>>;
Val =:= n50000 ->
<<11603:16>>;
Val =:= n55000 ->
<<11604:16>>;
Val =:= n60000 ->
<<11605:16>>;
Val =:= n65000 ->
<<11606:16>>;
Val =:= n70000 ->
<<11607:16>>;
Val =:= n75000 ->
<<11608:16>>;
Val =:= n80000 ->
<<11609:16>>;
Val =:= n85000 ->
<<11610:16>>;
Val =:= n90000 ->
<<11611:16>>;
Val =:= n95000 ->
<<11612:16>>;
Val =:= n100000 ->
<<11613:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_LargeNumbers(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
11521 -> 'n1-16th';
11522 -> 'n1-10th';
11523 -> 'n1-8th';
11524 -> 'n1-4th';
11525 -> 'n1-3rd';
11526 -> 'n1-2';
11527 -> 'n3-4';
11531 -> n300;
11532 -> n350;
11533 -> n400;
11534 -> n450;
11535 -> n500;
11536 -> n550;
11537 -> n600;
11538 -> n650;
11539 -> n700;
11540 -> n750;
11541 -> n800;
11542 -> n850;
11543 -> n900;
11544 -> n950;
11545 -> n1000;
11546 -> n1100;
11547 -> n1200;
11548 -> n1300;
11549 -> n1400;
11550 -> n1500;
11551 -> n1600;
11552 -> n1700;
11553 -> n1800;
11554 -> n1900;
11555 -> n2000;
11556 -> n2100;
11557 -> n2200;
11558 -> n2300;
11559 -> n2400;
11560 -> n2500;
11561 -> n2600;
11562 -> n2700;
11563 -> n2800;
11564 -> n2900;
11565 -> n3000;
11566 -> n3500;
11567 -> n4000;
11568 -> n4500;
11569 -> n5000;
11570 -> n5500;
11571 -> n6000;
11572 -> n6500;
11573 -> n7000;
11574 -> n7500;
11575 -> n8000;
11576 -> n8500;
11577 -> n9000;
11578 -> n9500;
11579 -> n10000;
11580 -> n11000;
11581 -> n12000;
11582 -> n13000;
11583 -> n14000;
11584 -> n15000;
11585 -> n16000;
11586 -> n17000;
11587 -> n18000;
11588 -> n19000;
11589 -> n20000;
11590 -> n21000;
11591 -> n22000;
11592 -> n23000;
11593 -> n24000;
11594 -> n25000;
11595 -> n26000;
11596 -> n27000;
11597 -> n28000;
11598 -> n29000;
11599 -> n30000;
11600 -> n35000;
11601 -> n40000;
11602 -> n45000;
11603 -> n50000;
11604 -> n55000;
11605 -> n60000;
11606 -> n65000;
11607 -> n70000;
11608 -> n75000;
11609 -> n80000;
11610 -> n85000;
11611 -> n90000;
11612 -> n95000;
11613 -> n100000;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_MobileSituation(Val) ->
if Val =:= 'abnormal-load' ->
<<2049:16>>;
Val =:= 'wide-load' ->
<<2050:16>>;
Val =:= 'long-load' ->
<<2051:16>>;
Val =:= 'slow-vehicle' ->
<<2052:16>>;
Val =:= 'farm-equipment' ->
<<2053:16>>;
Val =:= 'horse-drawn-vehicles' ->
<<2054:16>>;
Val =:= 'overheight-load' ->
<<2055:16>>;
Val =:= 'overweight-load' ->
<<2056:16>>;
Val =:= 'tracked-vehicle' ->
<<2057:16>>;
Val =:= 'vehicle-carrying-hazardous-materials' ->
<<2058:16>>;
Val =:= 'slow-moving-maintenance-vehicle' ->
<<2059:16>>;
Val =:= convoy ->
<<2060:16>>;
Val =:= 'military-convoy' ->
<<2061:16>>;
Val =:= 'refugee-convoy' ->
<<2062:16>>;
Val =:= motorcade ->
<<2063:16>>;
Val =:= 'mobile-situation-repositioning' ->
<<2064:16>>;
Val =:= 'winter-maintenance-vehicles' ->
<<2065:16>>;
Val =:= snowplows ->
<<2066:16>>;
Val =:= 'slow-moving-maintenance-vehicle-warning-cleared' ->
<<2172:16>>;
Val =:= 'exceptional-load-warning-cleared' ->
<<2173:16>>;
Val =:= 'hazardous-load-warning-cleared' ->
<<2174:16>>;
Val =:= 'convoy-cleared' ->
<<2175:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_MobileSituation(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
2049 -> 'abnormal-load';
2050 -> 'wide-load';
2051 -> 'long-load';
2052 -> 'slow-vehicle';
2053 -> 'farm-equipment';
2054 -> 'horse-drawn-vehicles';
2055 -> 'overheight-load';
2056 -> 'overweight-load';
2057 -> 'tracked-vehicle';
2058 -> 'vehicle-carrying-hazardous-materials';
2059 -> 'slow-moving-maintenance-vehicle';
2060 -> convoy;
2061 -> 'military-convoy';
2062 -> 'refugee-convoy';
2063 -> motorcade;
2064 -> 'mobile-situation-repositioning';
2065 -> 'winter-maintenance-vehicles';
2066 -> snowplows;
2172 -> 'slow-moving-maintenance-vehicle-warning-cleared';
2173 -> 'exceptional-load-warning-cleared';
2174 -> 'hazardous-load-warning-cleared';
2175 -> 'convoy-cleared';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_MUTCDLocations(Val) ->
if Val =:= ahead ->
<<13569:16>>;
Val =:= here ->
<<13570:16>>;
Val =:= 'here-to' ->
<<13571:16>>;
Val =:= 'here-to-alley' ->
<<13572:16>>;
Val =:= 'here-to-corner' ->
<<13573:16>>;
Val =:= 'here-to-sign' ->
<<13574:16>>;
Val =:= 'between-signs' ->
<<13575:16>>;
Val =:= 'this-side-of-street' ->
<<13576:16>>;
Val =:= 'this-side-of-sign' ->
<<13577:16>>;
Val =:= right ->
<<13579:16>>;
Val =:= left ->
<<13580:16>>;
Val =:= 'begin-point' ->
<<13581:16>>;
Val =:= next ->
<<13582:16>>;
Val =:= 'ends-end' ->
<<13583:16>>;
Val =:= 'other-Side' ->
<<13584:16>>;
Val =:= crossing ->
<<13585:16>>;
Val =:= crosswalks ->
<<13586:16>>;
Val =:= 'center-strip' ->
<<13587:16>>;
Val =:= lane ->
<<13588:16>>;
Val =:= hill ->
<<13589:16>>;
Val =:= 'both-ways-left-and-right' ->
<<13590:16>>;
Val =:= 'both-ways-45-degree-angle-tilting-right' ->
<<13591:16>>;
Val =:= 'both-ways-45-degree-angle-tilting-left' ->
<<13592:16>>;
Val =:= 'both-directions-of-travel' ->
<<13593:16>>;
Val =:= 'left-turn' ->
<<13594:16>>;
Val =:= 'left-45-degree-arrow' ->
<<13595:16>>;
Val =:= 'left-45-degree-turn' ->
<<13596:16>>;
Val =:= 'ahead-and-to-the-left' ->
<<13597:16>>;
Val =:= 'ahead-and-to-the-left-at-a-45-degree-angle' ->
<<13598:16>>;
Val =:= 'right-turn' ->
<<13599:16>>;
Val =:= 'right-45-degree-arrow' ->
<<13600:16>>;
Val =:= 'right-45-degree-turn' ->
<<13601:16>>;
Val =:= 'ahead-and-to-the-right' ->
<<13602:16>>;
Val =:= 'ahead-and-to-the-right-at-a-45-degree-angle' ->
<<13603:16>>;
Val =:= 'downward-left-45-degree' ->
<<13604:16>>;
Val =:= 'downward-right-45-degree' ->
<<13605:16>>;
Val =:= 'downward-left-and-right-45-degree' ->
<<13606:16>>;
Val =:= 'right-arrow' ->
<<13609:16>>;
Val =:= 'left-arrow' ->
<<13610:16>>;
Val =:= 'starting-start' ->
<<13611:16>>;
Val =:= 'chevron-right' ->
<<13613:16>>;
Val =:= 'chevron-left' ->
<<13614:16>>;
Val =:= 'right-turn-with-junction' ->
<<13615:16>>;
Val =:= 'left-turn-with-junction' ->
<<13616:16>>;
Val =:= 'hairpin-right' ->
<<13617:16>>;
Val =:= 'hairpin-left' ->
<<13618:16>>;
Val =:= 'truck-rollover-right' ->
<<13619:16>>;
Val =:= 'truck-rollover-left' ->
<<13620:16>>;
Val =:= 'n270-degree-turn-right' ->
<<13621:16>>;
Val =:= 'n270-degree-turn-left' ->
<<13622:16>>;
Val =:= 'two-lane-reverse-curve-to-right' ->
<<13623:16>>;
Val =:= 'two-lane-reverse-curve-to-left' ->
<<13624:16>>;
Val =:= 'three-lane-reverse-curve-to-right' ->
<<13625:16>>;
Val =:= 'three-lane-reverse-curve-to-left' ->
<<13626:16>>;
Val =:= 'double-reverse-curve-to-right' ->
<<13627:16>>;
Val =:= 'double-reverse-curve-to-left' ->
<<13628:16>>;
Val =:= 'two-lane-double-reverse-curve-to-right' ->
<<13629:16>>;
Val =:= 'two-lane-double-reverse-curve-to-left' ->
<<13630:16>>;
Val =:= 'three-lane-double-reverse-curve-to-right' ->
<<13631:16>>;
Val =:= 'three-lane-double-reverse-curve-to-left' ->
<<13632:16>>;
Val =:= between ->
<<13633:16>>;
Val =:= shelter ->
<<13634:16>>;
Val =:= center ->
<<13635:16>>;
Val =:= 'reverse-turn-to-right' ->
<<13636:16>>;
Val =:= 'reverse-turn-to-left' ->
<<13637:16>>;
Val =:= 'reverse-curve-to-right' ->
<<13638:16>>;
Val =:= 'reverse-curve-to-left' ->
<<13639:16>>;
Val =:= 'winding-road-to-right' ->
<<13640:16>>;
Val =:= 'winding-road-to-left' ->
<<13641:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_MUTCDLocations(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
13569 -> ahead;
13570 -> here;
13571 -> 'here-to';
13572 -> 'here-to-alley';
13573 -> 'here-to-corner';
13574 -> 'here-to-sign';
13575 -> 'between-signs';
13576 -> 'this-side-of-street';
13577 -> 'this-side-of-sign';
13579 -> right;
13580 -> left;
13581 -> 'begin-point';
13582 -> next;
13583 -> 'ends-end';
13584 -> 'other-Side';
13585 -> crossing;
13586 -> crosswalks;
13587 -> 'center-strip';
13588 -> lane;
13589 -> hill;
13590 -> 'both-ways-left-and-right';
13591 -> 'both-ways-45-degree-angle-tilting-right';
13592 -> 'both-ways-45-degree-angle-tilting-left';
13593 -> 'both-directions-of-travel';
13594 -> 'left-turn';
13595 -> 'left-45-degree-arrow';
13596 -> 'left-45-degree-turn';
13597 -> 'ahead-and-to-the-left';
13598 -> 'ahead-and-to-the-left-at-a-45-degree-angle';
13599 -> 'right-turn';
13600 -> 'right-45-degree-arrow';
13601 -> 'right-45-degree-turn';
13602 -> 'ahead-and-to-the-right';
13603 -> 'ahead-and-to-the-right-at-a-45-degree-angle';
13604 -> 'downward-left-45-degree';
13605 -> 'downward-right-45-degree';
13606 -> 'downward-left-and-right-45-degree';
13609 -> 'right-arrow';
13610 -> 'left-arrow';
13611 -> 'starting-start';
13613 -> 'chevron-right';
13614 -> 'chevron-left';
13615 -> 'right-turn-with-junction';
13616 -> 'left-turn-with-junction';
13617 -> 'hairpin-right';
13618 -> 'hairpin-left';
13619 -> 'truck-rollover-right';
13620 -> 'truck-rollover-left';
13621 -> 'n270-degree-turn-right';
13622 -> 'n270-degree-turn-left';
13623 -> 'two-lane-reverse-curve-to-right';
13624 -> 'two-lane-reverse-curve-to-left';
13625 -> 'three-lane-reverse-curve-to-right';
13626 -> 'three-lane-reverse-curve-to-left';
13627 -> 'double-reverse-curve-to-right';
13628 -> 'double-reverse-curve-to-left';
13629 -> 'two-lane-double-reverse-curve-to-right';
13630 -> 'two-lane-double-reverse-curve-to-left';
13631 -> 'three-lane-double-reverse-curve-to-right';
13632 -> 'three-lane-double-reverse-curve-to-left';
13633 -> between;
13634 -> shelter;
13635 -> center;
13636 -> 'reverse-turn-to-right';
13637 -> 'reverse-turn-to-left';
13638 -> 'reverse-curve-to-right';
13639 -> 'reverse-curve-to-left';
13640 -> 'winding-road-to-right';
13641 -> 'winding-road-to-left';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_NamedObjects(Val) ->
if Val =:= 'name-follows' ->
<<11777:16>>;
Val =:= freeway ->
<<11778:16>>;
Val =:= 'us-Route' ->
<<11779:16>>;
Val =:= 'state-Route' ->
<<11780:16>>;
Val =:= interstate ->
<<11781:16>>;
Val =:= 'business-Loop' ->
<<11782:16>>;
Val =:= alternative ->
<<11783:16>>;
Val =:= 'county-Route' ->
<<11784:16>>;
Val =:= 'forest-Route' ->
<<11785:16>>;
Val =:= 'farm-to-Market-Route' ->
<<11786:16>>;
Val =:= 'eisenhower-Interstate-System' ->
<<11787:16>>;
Val =:= 'americas-Byways' ->
<<11788:16>>;
Val =:= 'national-Network-Route' ->
<<11789:16>>;
Val =:= 'scenic-Area' ->
<<11790:16>>;
Val =:= 'parking-Area' ->
<<11791:16>>;
Val =:= 'weight-Station' ->
<<11792:16>>;
Val =:= road ->
<<11793:16>>;
Val =:= exit ->
<<11794:16>>;
Val =:= 'historical-route' ->
<<11795:16>>;
Val =:= 'state-line' ->
<<11796:16>>;
Val =:= spur ->
<<11797:16>>;
Val =:= junction ->
<<11798:16>>;
Val =:= 'bicycle-route' ->
<<11799:16>>;
Val =:= 'bicycle-interstate-route' ->
<<11800:16>>;
Val =:= 'national-park' ->
<<11801:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_NamedObjects(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
11777 -> 'name-follows';
11778 -> freeway;
11779 -> 'us-Route';
11780 -> 'state-Route';
11781 -> interstate;
11782 -> 'business-Loop';
11783 -> alternative;
11784 -> 'county-Route';
11785 -> 'forest-Route';
11786 -> 'farm-to-Market-Route';
11787 -> 'eisenhower-Interstate-System';
11788 -> 'americas-Byways';
11789 -> 'national-Network-Route';
11790 -> 'scenic-Area';
11791 -> 'parking-Area';
11792 -> 'weight-Station';
11793 -> road;
11794 -> exit;
11795 -> 'historical-route';
11796 -> 'state-line';
11797 -> spur;
11798 -> junction;
11799 -> 'bicycle-route';
11800 -> 'bicycle-interstate-route';
11801 -> 'national-park';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Objects(Val) ->
if Val =:= 'unknown-object' ->
<<11009:16>>;
Val =:= tire ->
<<11010:16>>;
Val =:= rim ->
<<11011:16>>;
Val =:= retread ->
<<11012:16>>;
Val =:= trash ->
<<11013:16>>;
Val =:= cargo ->
<<11014:16>>;
Val =:= diesel ->
<<11015:16>>;
Val =:= gasoline ->
<<11016:16>>;
Val =:= 'anti-freeze' ->
<<11017:16>>;
Val =:= 'seat-belts' ->
<<11018:16>>;
Val =:= 'litter-container' ->
<<11019:16>>;
Val =:= 'all-Terrain-vehicle' ->
<<11020:16>>;
Val =:= seaplane ->
<<11021:16>>;
Val =:= chairlift ->
<<11022:16>>;
Val =:= 'fishing-pier' ->
<<11023:16>>;
Val =:= 'railroad-cross-buck' ->
<<11024:16>>;
Val =:= telephone ->
<<11025:16>>;
Val =:= fallout ->
<<11026:16>>;
Val =:= medical ->
<<11027:16>>;
Val =:= chemical ->
<<11028:16>>;
Val =:= welfare ->
<<11029:16>>;
Val =:= evacuation ->
<<11030:16>>;
Val =:= 'left-arrow-signal' ->
<<11031:16>>;
Val =:= 'ahead-arrow-signal' ->
<<11032:16>>;
Val =:= 'right-arrow-signal' ->
<<11033:16>>;
Val =:= 'green-light-signal' ->
<<11034:16>>;
Val =:= 'green-arrow-signal' ->
<<11035:16>>;
Val =:= 'yellow-light-signal' ->
<<11036:16>>;
Val =:= 'yellow-arrow-signal' ->
<<11037:16>>;
Val =:= 'red-light-signal' ->
<<11038:16>>;
Val =:= 'red-arrow-signal' ->
<<11039:16>>;
Val =:= 'extended-green-signal' ->
<<11040:16>>;
Val =:= 'advance-arrow-signal' ->
<<11041:16>>;
Val =:= 'pedestrian-Signal-Stop' ->
<<11042:16>>;
Val =:= 'pedestrian-Signal-Caution' ->
<<11043:16>>;
Val =:= 'pedestrian-Signal-Walk' ->
<<11044:16>>;
Val =:= 'pedestrian-Signal-Light' ->
<<11045:16>>;
Val =:= 'pedestrian-Signal-Time-Display' ->
<<11046:16>>;
Val =:= train ->
<<11047:16>>;
Val =:= horn ->
<<11048:16>>;
Val =:= deer ->
<<11049:16>>;
Val =:= cattle ->
<<11050:16>>;
Val =:= horse ->
<<11051:16>>;
Val =:= 'golf-cart' ->
<<11052:16>>;
Val =:= 'food-services' ->
<<11053:16>>;
Val =:= 'ambulance-staging-point' ->
<<11054:16>>;
Val =:= 'roadside-table' ->
<<11055:16>>;
Val =:= services ->
<<11056:16>>;
Val =:= 'motorist-services' ->
<<11059:16>>;
Val =:= 'alternative-fuel' ->
<<11060:16>>;
Val =:= 'propane-gas' ->
<<11061:16>>;
Val =:= registration ->
<<11062:16>>;
Val =:= decontamination ->
<<11063:16>>;
Val =:= emergency ->
<<11064:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Objects(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
11009 -> 'unknown-object';
11010 -> tire;
11011 -> rim;
11012 -> retread;
11013 -> trash;
11014 -> cargo;
11015 -> diesel;
11016 -> gasoline;
11017 -> 'anti-freeze';
11018 -> 'seat-belts';
11019 -> 'litter-container';
11020 -> 'all-Terrain-vehicle';
11021 -> seaplane;
11022 -> chairlift;
11023 -> 'fishing-pier';
11024 -> 'railroad-cross-buck';
11025 -> telephone;
11026 -> fallout;
11027 -> medical;
11028 -> chemical;
11029 -> welfare;
11030 -> evacuation;
11031 -> 'left-arrow-signal';
11032 -> 'ahead-arrow-signal';
11033 -> 'right-arrow-signal';
11034 -> 'green-light-signal';
11035 -> 'green-arrow-signal';
11036 -> 'yellow-light-signal';
11037 -> 'yellow-arrow-signal';
11038 -> 'red-light-signal';
11039 -> 'red-arrow-signal';
11040 -> 'extended-green-signal';
11041 -> 'advance-arrow-signal';
11042 -> 'pedestrian-Signal-Stop';
11043 -> 'pedestrian-Signal-Caution';
11044 -> 'pedestrian-Signal-Walk';
11045 -> 'pedestrian-Signal-Light';
11046 -> 'pedestrian-Signal-Time-Display';
11047 -> train;
11048 -> horn;
11049 -> deer;
11050 -> cattle;
11051 -> horse;
11052 -> 'golf-cart';
11053 -> 'food-services';
11054 -> 'ambulance-staging-point';
11055 -> 'roadside-table';
11056 -> services;
11059 -> 'motorist-services';
11060 -> 'alternative-fuel';
11061 -> 'propane-gas';
11062 -> registration;
11063 -> decontamination;
11064 -> emergency;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Obstruction(Val) ->
if Val =:= 'obstruction-on-roadway' ->
<<1281:16>>;
Val =:= 'object-on-roadway' ->
<<1282:16>>;
Val =:= 'objects-falling-from-moving-vehicle' ->
<<1283:16>>;
Val =:= 'debris-on-roadway' ->
<<1284:16>>;
Val =:= 'storm-damage' ->
<<1285:16>>;
Val =:= 'people-on-roadway' ->
<<1286:16>>;
Val =:= 'bicyclists-on-roadway' ->
<<1287:16>>;
Val =:= 'sightseers-obstructing-access' ->
<<1288:16>>;
Val =:= 'large-numbers-of-visitors' ->
<<1289:16>>;
Val =:= 'animal-on-roadway' ->
<<1290:16>>;
Val =:= 'large-animal-on-roadway' ->
<<1291:16>>;
Val =:= 'herd-of-animals-on-roadway' ->
<<1292:16>>;
Val =:= 'animal-struck' ->
<<1293:16>>;
Val =:= 'fallen-trees' ->
<<1294:16>>;
Val =:= 'downed-power-lines' ->
<<1295:16>>;
Val =:= 'downed-cables' ->
<<1296:16>>;
Val =:= subsidence ->
<<1297:16>>;
Val =:= 'road-surface-collapse' ->
<<1298:16>>;
Val =:= 'pavement-buckled' ->
<<1299:16>>;
Val =:= pothole ->
<<1300:16>>;
Val =:= flooding ->
<<1301:16>>;
Val =:= 'broken-water-main' ->
<<1302:16>>;
Val =:= 'collapsed-sewer' ->
<<1303:16>>;
Val =:= 'sewer-overflow' ->
<<1304:16>>;
Val =:= 'gas-leak' ->
<<1305:16>>;
Val =:= snowmelt ->
<<1306:16>>;
Val =:= mudslide ->
<<1307:16>>;
Val =:= avalanche ->
<<1308:16>>;
Val =:= rockfall ->
<<1309:16>>;
Val =:= landslide ->
<<1310:16>>;
Val =:= 'over-turned-trees' ->
<<1311:16>>;
Val =:= 'tree-limbs' ->
<<1312:16>>;
Val =:= 'utility-pole-down' ->
<<1314:16>>;
Val =:= 'advertising-signs' ->
<<1315:16>>;
Val =:= 'frost-heave' ->
<<1316:16>>;
Val =:= 'frost-jacking' ->
<<1317:16>>;
Val =:= washboard ->
<<1318:16>>;
Val =:= 'wash-out' ->
<<1319:16>>;
Val =:= 'clearance-work' ->
<<1406:16>>;
Val =:= 'obstruction-cleared' ->
<<1407:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Obstruction(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
1281 -> 'obstruction-on-roadway';
1282 -> 'object-on-roadway';
1283 -> 'objects-falling-from-moving-vehicle';
1284 -> 'debris-on-roadway';
1285 -> 'storm-damage';
1286 -> 'people-on-roadway';
1287 -> 'bicyclists-on-roadway';
1288 -> 'sightseers-obstructing-access';
1289 -> 'large-numbers-of-visitors';
1290 -> 'animal-on-roadway';
1291 -> 'large-animal-on-roadway';
1292 -> 'herd-of-animals-on-roadway';
1293 -> 'animal-struck';
1294 -> 'fallen-trees';
1295 -> 'downed-power-lines';
1296 -> 'downed-cables';
1297 -> subsidence;
1298 -> 'road-surface-collapse';
1299 -> 'pavement-buckled';
1300 -> pothole;
1301 -> flooding;
1302 -> 'broken-water-main';
1303 -> 'collapsed-sewer';
1304 -> 'sewer-overflow';
1305 -> 'gas-leak';
1306 -> snowmelt;
1307 -> mudslide;
1308 -> avalanche;
1309 -> rockfall;
1310 -> landslide;
1311 -> 'over-turned-trees';
1312 -> 'tree-limbs';
1314 -> 'utility-pole-down';
1315 -> 'advertising-signs';
1316 -> 'frost-heave';
1317 -> 'frost-jacking';
1318 -> washboard;
1319 -> 'wash-out';
1406 -> 'clearance-work';
1407 -> 'obstruction-cleared';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_ParkingInformation(Val) ->
if Val =:= 'normal-parking-restrictions-lifted' ->
<<4097:16>>;
Val =:= 'parking-meter-restrictions-lifted' ->
<<4098:16>>;
Val =:= 'special-parking-restrictions-in-force' ->
<<4099:16>>;
Val =:= 'full-parking-lot' ->
<<4100:16>>;
Val =:= 'full-parking-garage' ->
<<4101:16>>;
Val =:= 'all-parking-lots-full' ->
<<4102:16>>;
Val =:= 'no-parking-spaces-available' ->
<<4103:16>>;
Val =:= 'only-a-few-spaces-available' ->
<<4104:16>>;
Val =:= 'spaces-available' ->
<<4105:16>>;
Val =:= 'no-parking' ->
<<4106:16>>;
Val =:= 'parking-on-one-side-of-street-only' ->
<<4107:16>>;
Val =:= 'parking-on-both-sides-of-street' ->
<<4108:16>>;
Val =:= 'parallel-parking-only' ->
<<4109:16>>;
Val =:= 'parking-meters-not-available' ->
<<4110:16>>;
Val =:= 'use-of-parking-meters-restricted' ->
<<4111:16>>;
Val =:= 'event-parking' ->
<<4112:16>>;
Val =:= 'handicapped-parking' ->
<<4113:16>>;
Val =:= 'long-term-parking' ->
<<4114:16>>;
Val =:= 'overnight-parking' ->
<<4115:16>>;
Val =:= 'short-term-parking' ->
<<4116:16>>;
Val =:= 'parking-by-permit-only' ->
<<4117:16>>;
Val =:= 'emergency-parking-only' ->
<<4118:16>>;
Val =:= 'emergency-stopping-only' ->
<<4119:16>>;
Val =:= parking ->
<<4120:16>>;
Val =:= stopping ->
<<4121:16>>;
Val =:= standing ->
<<4122:16>>;
Val =:= 'tow-away-zone' ->
<<4123:16>>;
Val =:= 'school-zone' ->
<<4124:16>>;
Val =:= 'speed-zone' ->
<<4125:16>>;
Val =:= 'loading-zone' ->
<<4126:16>>;
Val =:= 'state-law' ->
<<4127:16>>;
Val =:= 'van-accessible' ->
<<4128:16>>;
Val =:= 'special-parking-restrictions-lifted' ->
<<4222:16>>;
Val =:= 'no-parking-information-available' ->
<<4223:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_ParkingInformation(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
4097 -> 'normal-parking-restrictions-lifted';
4098 -> 'parking-meter-restrictions-lifted';
4099 -> 'special-parking-restrictions-in-force';
4100 -> 'full-parking-lot';
4101 -> 'full-parking-garage';
4102 -> 'all-parking-lots-full';
4103 -> 'no-parking-spaces-available';
4104 -> 'only-a-few-spaces-available';
4105 -> 'spaces-available';
4106 -> 'no-parking';
4107 -> 'parking-on-one-side-of-street-only';
4108 -> 'parking-on-both-sides-of-street';
4109 -> 'parallel-parking-only';
4110 -> 'parking-meters-not-available';
4111 -> 'use-of-parking-meters-restricted';
4112 -> 'event-parking';
4113 -> 'handicapped-parking';
4114 -> 'long-term-parking';
4115 -> 'overnight-parking';
4116 -> 'short-term-parking';
4117 -> 'parking-by-permit-only';
4118 -> 'emergency-parking-only';
4119 -> 'emergency-stopping-only';
4120 -> parking;
4121 -> stopping;
4122 -> standing;
4123 -> 'tow-away-zone';
4124 -> 'school-zone';
4125 -> 'speed-zone';
4126 -> 'loading-zone';
4127 -> 'state-law';
4128 -> 'van-accessible';
4222 -> 'special-parking-restrictions-lifted';
4223 -> 'no-parking-information-available';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_PavementConditions(Val) ->
if Val =:= impassable ->
<<5889:16>>;
Val =:= 'almost-impassable' ->
<<5890:16>>;
Val =:= 'passable-with-care' ->
<<5891:16>>;
Val =:= passable ->
<<5892:16>>;
Val =:= 'surface-water-hazard' ->
<<5893:16>>;
Val =:= 'danger-of-hydroplaning' ->
<<5894:16>>;
Val =:= 'wet-pavement' ->
<<5895:16>>;
Val =:= 'treated-pavement' ->
<<5896:16>>;
Val =:= slippery ->
<<5897:16>>;
Val =:= 'mud-on-roadway' ->
<<5898:16>>;
Val =:= 'leaves-on-roadway' ->
<<5899:16>>;
Val =:= 'loose-sand-on-roadway' ->
<<5900:16>>;
Val =:= 'loose-gravel' ->
<<5901:16>>;
Val =:= 'fuel-on-roadway' ->
<<5902:16>>;
Val =:= 'oil-on-roadway' ->
<<5903:16>>;
Val =:= 'road-surface-in-poor-condition' ->
<<5904:16>>;
Val =:= 'melting-tar' ->
<<5905:16>>;
Val =:= ice ->
<<5906:16>>;
Val =:= 'icy-patches' ->
<<5907:16>>;
Val =:= 'black-ice' ->
<<5908:16>>;
Val =:= 'ice-pellets-on-roadway' ->
<<5909:16>>;
Val =:= 'ice-build-up' ->
<<5910:16>>;
Val =:= 'freezing-rain' ->
<<5911:16>>;
Val =:= 'wet-and-icy-roads' ->
<<5912:16>>;
Val =:= 'melting-snow' ->
<<5913:16>>;
Val =:= slush ->
<<5914:16>>;
Val =:= 'frozen-slush' ->
<<5915:16>>;
Val =:= 'snow-on-roadway' ->
<<5916:16>>;
Val =:= 'packed-snow' ->
<<5917:16>>;
Val =:= 'packed-snow-patches' ->
<<5918:16>>;
Val =:= 'plowed-snow' ->
<<5919:16>>;
Val =:= 'wet-snow' ->
<<5920:16>>;
Val =:= 'fresh-snow' ->
<<5921:16>>;
Val =:= 'powder-snow' ->
<<5922:16>>;
Val =:= 'granular-snow' ->
<<5923:16>>;
Val =:= 'frozen-snow' ->
<<5924:16>>;
Val =:= 'crusted-snow' ->
<<5925:16>>;
Val =:= 'deep-snow' ->
<<5926:16>>;
Val =:= 'snow-drifts' ->
<<5927:16>>;
Val =:= 'drifting-snow' ->
<<5928:16>>;
Val =:= 'expected-snow-accumulation' ->
<<5929:16>>;
Val =:= 'current-snow-accumulation' ->
<<5930:16>>;
Val =:= 'rough-road' ->
<<5931:16>>;
Val =:= sand ->
<<5932:16>>;
Val =:= gravel ->
<<5933:16>>;
Val =:= paved ->
<<5934:16>>;
Val =:= 'uneven-lanes' ->
<<5935:16>>;
Val =:= 'rough-crossing' ->
<<5936:16>>;
Val =:= 'at-grade-level-crossing' ->
<<5937:16>>;
Val =:= 'low-ground-clearance' ->
<<5938:16>>;
Val =:= 'dry-pavement' ->
<<6011:16>>;
Val =:= 'snow-cleared' ->
<<6012:16>>;
Val =:= 'pavement-conditions-improved' ->
<<6013:16>>;
Val =:= 'skid-hazard-reduced' ->
<<6014:16>>;
Val =:= 'pavement-conditions-cleared' ->
<<6015:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_PavementConditions(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
5889 -> impassable;
5890 -> 'almost-impassable';
5891 -> 'passable-with-care';
5892 -> passable;
5893 -> 'surface-water-hazard';
5894 -> 'danger-of-hydroplaning';
5895 -> 'wet-pavement';
5896 -> 'treated-pavement';
5897 -> slippery;
5898 -> 'mud-on-roadway';
5899 -> 'leaves-on-roadway';
5900 -> 'loose-sand-on-roadway';
5901 -> 'loose-gravel';
5902 -> 'fuel-on-roadway';
5903 -> 'oil-on-roadway';
5904 -> 'road-surface-in-poor-condition';
5905 -> 'melting-tar';
5906 -> ice;
5907 -> 'icy-patches';
5908 -> 'black-ice';
5909 -> 'ice-pellets-on-roadway';
5910 -> 'ice-build-up';
5911 -> 'freezing-rain';
5912 -> 'wet-and-icy-roads';
5913 -> 'melting-snow';
5914 -> slush;
5915 -> 'frozen-slush';
5916 -> 'snow-on-roadway';
5917 -> 'packed-snow';
5918 -> 'packed-snow-patches';
5919 -> 'plowed-snow';
5920 -> 'wet-snow';
5921 -> 'fresh-snow';
5922 -> 'powder-snow';
5923 -> 'granular-snow';
5924 -> 'frozen-snow';
5925 -> 'crusted-snow';
5926 -> 'deep-snow';
5927 -> 'snow-drifts';
5928 -> 'drifting-snow';
5929 -> 'expected-snow-accumulation';
5930 -> 'current-snow-accumulation';
5931 -> 'rough-road';
5932 -> sand;
5933 -> gravel;
5934 -> paved;
5935 -> 'uneven-lanes';
5936 -> 'rough-crossing';
5937 -> 'at-grade-level-crossing';
5938 -> 'low-ground-clearance';
6011 -> 'dry-pavement';
6012 -> 'snow-cleared';
6013 -> 'pavement-conditions-improved';
6014 -> 'skid-hazard-reduced';
6015 -> 'pavement-conditions-cleared';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Precipitation(Val) ->
if Val =:= 'severe-weather' ->
<<4865:16>>;
Val =:= blizzard ->
<<4866:16>>;
Val =:= 'heavy-snow' ->
<<4867:16>>;
Val =:= snow ->
<<4868:16>>;
Val =:= 'light-snow' ->
<<4869:16>>;
Val =:= 'snow-showers' ->
<<4870:16>>;
Val =:= 'winter-storm' ->
<<4871:16>>;
Val =:= 'ice-glaze' ->
<<4872:16>>;
Val =:= 'heavy-frost' ->
<<4873:16>>;
Val =:= frost ->
<<4874:16>>;
Val =:= 'ice-storm' ->
<<4875:16>>;
Val =:= sleet ->
<<4876:16>>;
Val =:= 'rain-and-snow-mixed' ->
<<4877:16>>;
Val =:= 'rain-changing-to-snow' ->
<<4878:16>>;
Val =:= 'damaging-hail' ->
<<4879:16>>;
Val =:= hail ->
<<4880:16>>;
Val =:= thunderstorms ->
<<4881:16>>;
Val =:= thundershowers ->
<<4882:16>>;
Val =:= 'extremely-heavy-downpour' ->
<<4883:16>>;
Val =:= 'heavy-rain' ->
<<4884:16>>;
Val =:= rain ->
<<4885:16>>;
Val =:= 'light-rain' ->
<<4886:16>>;
Val =:= drizzle ->
<<4887:16>>;
Val =:= showers ->
<<4888:16>>;
Val =:= dew ->
<<4889:16>>;
Val =:= 'precipitation-cleared' ->
<<4991:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Precipitation(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
4865 -> 'severe-weather';
4866 -> blizzard;
4867 -> 'heavy-snow';
4868 -> snow;
4869 -> 'light-snow';
4870 -> 'snow-showers';
4871 -> 'winter-storm';
4872 -> 'ice-glaze';
4873 -> 'heavy-frost';
4874 -> frost;
4875 -> 'ice-storm';
4876 -> sleet;
4877 -> 'rain-and-snow-mixed';
4878 -> 'rain-changing-to-snow';
4879 -> 'damaging-hail';
4880 -> hail;
4881 -> thunderstorms;
4882 -> thundershowers;
4883 -> 'extremely-heavy-downpour';
4884 -> 'heavy-rain';
4885 -> rain;
4886 -> 'light-rain';
4887 -> drizzle;
4888 -> showers;
4889 -> dew;
4991 -> 'precipitation-cleared';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Qualifiers(Val) ->
if Val =:= above ->
<<7681:16>>;
Val =:= below ->
<<7682:16>>;
Val =:= in ->
<<7683:16>>;
Val =:= around ->
<<7684:16>>;
Val =:= 'after' ->
<<7685:16>>;
Val =:= before ->
<<7686:16>>;
Val =:= at ->
<<7687:16>>;
Val =:= on ->
<<7688:16>>;
Val =:= near ->
<<7689:16>>;
Val =:= 'from-the' ->
<<7690:16>>;
Val =:= terminal ->
<<7691:16>>;
Val =:= 'falling-slowly' ->
<<7692:16>>;
Val =:= falling ->
<<7693:16>>;
Val =:= 'falling-quickly' ->
<<7694:16>>;
Val =:= 'rising-slowly' ->
<<7695:16>>;
Val =:= rising ->
<<7696:16>>;
Val =:= 'rising-quickly' ->
<<7697:16>>;
Val =:= steady ->
<<7698:16>>;
Val =:= likely ->
<<7699:16>>;
Val =:= 'changing-to' ->
<<7700:16>>;
Val =:= mostly ->
<<7701:16>>;
Val =:= partly ->
<<7702:16>>;
Val =:= minus ->
<<7703:16>>;
Val =:= 'weather-ended' ->
<<7704:16>>;
Val =:= expected ->
<<7705:16>>;
Val =:= low ->
<<7706:16>>;
Val =:= mid ->
<<7707:16>>;
Val =:= high ->
<<7708:16>>;
Val =:= upper ->
<<7709:16>>;
Val =:= unseasonably ->
<<7710:16>>;
Val =:= reported ->
<<7711:16>>;
Val =:= advice ->
<<7712:16>>;
Val =:= 'due-to' ->
<<7713:16>>;
Val =:= 'proceed-to' ->
<<7714:16>>;
Val =:= 'transferred-to' ->
<<7715:16>>;
Val =:= use ->
<<7716:16>>;
Val =:= affecting ->
<<7717:16>>;
Val =:= blocking ->
<<7718:16>>;
Val =:= connecting ->
<<7719:16>>;
Val =:= finished ->
<<7720:16>>;
Val =:= for ->
<<7721:16>>;
Val =:= 'or' ->
<<7722:16>>;
Val =:= 'and' ->
<<7723:16>>;
Val =:= later ->
<<7724:16>>;
Val =:= level ->
<<7725:16>>;
Val =:= shortly ->
<<7726:16>>;
Val =:= soon ->
<<7727:16>>;
Val =:= service ->
<<7728:16>>;
Val =:= damaged ->
<<7729:16>>;
Val =:= 'out-of-order' ->
<<7730:16>>;
Val =:= vandalism ->
<<7731:16>>;
Val =:= 'on-State-right-of-way' ->
<<7732:16>>;
Val =:= graffiti ->
<<7733:16>>;
Val =:= 'found-property' ->
<<7734:16>>;
Val =:= 'begin-time' ->
<<7735:16>>;
Val =:= added ->
<<7736:16>>;
Val =:= 'end-time' ->
<<7737:16>>;
Val =:= no ->
<<7738:16>>;
Val =:= 'do-not' ->
<<7739:16>>;
Val =:= block ->
<<7740:16>>;
Val =:= except ->
<<7741:16>>;
Val =:= day ->
<<7742:16>>;
Val =:= night ->
<<7743:16>>;
Val =:= 'any-time' ->
<<7744:16>>;
Val =:= has ->
<<7745:16>>;
Val =:= 'may-have' ->
<<7746:16>>;
Val =:= only ->
<<7747:16>>;
Val =:= lifted ->
<<7748:16>>;
Val =:= empty ->
<<7749:16>>;
Val =:= turning ->
<<7750:16>>;
Val =:= 'u-turn' ->
<<7751:16>>;
Val =:= 'wait-for' ->
<<7752:16>>;
Val =:= 'when-flashing' ->
<<7753:16>>;
Val =:= duration ->
<<7754:16>>;
Val =:= cross ->
<<7755:16>>;
Val =:= 'when-wet' ->
<<7756:16>>;
Val =:= must ->
<<7757:16>>;
Val =:= oncoming ->
<<7758:16>>;
Val =:= 'may-exceed' ->
<<7759:16>>;
Val =:= 'to-request' ->
<<7760:16>>;
Val =:= exempt ->
<<7761:16>>;
Val =:= skewed ->
<<7762:16>>;
Val =:= 'when-children-are-present' ->
<<7763:16>>;
Val =:= lower ->
<<7764:16>>;
Val =:= middle ->
<<7765:16>>;
Val =:= major ->
<<7766:16>>;
Val =:= minor ->
<<7767:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Qualifiers(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
7681 -> above;
7682 -> below;
7683 -> in;
7684 -> around;
7685 -> 'after';
7686 -> before;
7687 -> at;
7688 -> on;
7689 -> near;
7690 -> 'from-the';
7691 -> terminal;
7692 -> 'falling-slowly';
7693 -> falling;
7694 -> 'falling-quickly';
7695 -> 'rising-slowly';
7696 -> rising;
7697 -> 'rising-quickly';
7698 -> steady;
7699 -> likely;
7700 -> 'changing-to';
7701 -> mostly;
7702 -> partly;
7703 -> minus;
7704 -> 'weather-ended';
7705 -> expected;
7706 -> low;
7707 -> mid;
7708 -> high;
7709 -> upper;
7710 -> unseasonably;
7711 -> reported;
7712 -> advice;
7713 -> 'due-to';
7714 -> 'proceed-to';
7715 -> 'transferred-to';
7716 -> use;
7717 -> affecting;
7718 -> blocking;
7719 -> connecting;
7720 -> finished;
7721 -> for;
7722 -> 'or';
7723 -> 'and';
7724 -> later;
7725 -> level;
7726 -> shortly;
7727 -> soon;
7728 -> service;
7729 -> damaged;
7730 -> 'out-of-order';
7731 -> vandalism;
7732 -> 'on-State-right-of-way';
7733 -> graffiti;
7734 -> 'found-property';
7735 -> 'begin-time';
7736 -> added;
7737 -> 'end-time';
7738 -> no;
7739 -> 'do-not';
7740 -> block;
7741 -> except;
7742 -> day;
7743 -> night;
7744 -> 'any-time';
7745 -> has;
7746 -> 'may-have';
7747 -> only;
7748 -> lifted;
7749 -> empty;
7750 -> turning;
7751 -> 'u-turn';
7752 -> 'wait-for';
7753 -> 'when-flashing';
7754 -> duration;
7755 -> cross;
7756 -> 'when-wet';
7757 -> must;
7758 -> oncoming;
7759 -> 'may-exceed';
7760 -> 'to-request';
7761 -> exempt;
7762 -> skewed;
7763 -> 'when-children-are-present';
7764 -> lower;
7765 -> middle;
7766 -> major;
7767 -> minor;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_RecreationalObjectsAndActivities(Val) ->
if Val =:= 'bear-viewing-area' ->
<<12033:16>>;
Val =:= 'deer-viewing-area' ->
<<12034:16>>;
Val =:= 'drinking-water' ->
<<12035:16>>;
Val =:= 'environmental-study-area' ->
<<12036:16>>;
Val =:= 'falling-rocks' ->
<<12037:16>>;
Val =:= firearms ->
<<12038:16>>;
Val =:= 'leashed-pets' ->
<<12039:16>>;
Val =:= 'point-of-interest' ->
<<12040:16>>;
Val =:= smoking ->
<<12041:16>>;
Val =:= dog ->
<<12042:16>>;
Val =:= 'tent-camping' ->
<<12043:16>>;
Val =:= 'trailer-camping' ->
<<12044:16>>;
Val =:= 'first-aid' ->
<<12045:16>>;
Val =:= handicapped ->
<<12046:16>>;
Val =:= mechanic ->
<<12047:16>>;
Val =:= 'trailer-sanitary-station' ->
<<12048:16>>;
Val =:= 'viewing-area' ->
<<12049:16>>;
Val =:= campfire ->
<<12050:16>>;
Val =:= locker ->
<<12051:16>>;
Val =:= sleeping ->
<<12052:16>>;
Val =:= trail ->
<<12053:16>>;
Val =:= climbing ->
<<12054:16>>;
Val =:= 'rock-climbing' ->
<<12055:16>>;
Val =:= hunting ->
<<12056:16>>;
Val =:= playground ->
<<12057:16>>;
Val =:= 'rock-collecting' ->
<<12058:16>>;
Val =:= spelunking ->
<<12059:16>>;
Val =:= 'bicycle-trail' ->
<<12060:16>>;
Val =:= 'hiking-trail' ->
<<12061:16>>;
Val =:= 'horse-trail' ->
<<12062:16>>;
Val =:= 'trail-interpretive-auto' ->
<<12063:16>>;
Val =:= 'trail-interpretive-pedestrian' ->
<<12064:16>>;
Val =:= 'trail-road-for-4WD-vehicles' ->
<<12065:16>>;
Val =:= 'trail-for-trail-bikes' ->
<<12066:16>>;
Val =:= archer ->
<<12067:16>>;
Val =:= 'hang-glider' ->
<<12068:16>>;
Val =:= 'boat-tours' ->
<<12069:16>>;
Val =:= canoeing ->
<<12070:16>>;
Val =:= diving ->
<<12071:16>>;
Val =:= 'scuba-diving' ->
<<12072:16>>;
Val =:= fishing ->
<<12073:16>>;
Val =:= 'marine-recreation-area' ->
<<12074:16>>;
Val =:= motorboating ->
<<12075:16>>;
Val =:= 'boat-ramp' ->
<<12076:16>>;
Val =:= rowboating ->
<<12077:16>>;
Val =:= sailboating ->
<<12078:16>>;
Val =:= 'water-skiing' ->
<<12079:16>>;
Val =:= surfing ->
<<12080:16>>;
Val =:= swimming ->
<<12081:16>>;
Val =:= wading ->
<<12082:16>>;
Val =:= 'hand-launch' ->
<<12083:16>>;
Val =:= kayak ->
<<12084:16>>;
Val =:= 'wind-surf' ->
<<12085:16>>;
Val =:= 'ice-skating' ->
<<12086:16>>;
Val =:= 'ski-jumping' ->
<<12087:16>>;
Val =:= bobbing ->
<<12088:16>>;
Val =:= 'cross-country-skiing' ->
<<12089:16>>;
Val =:= 'downhill-skiing' ->
<<12090:16>>;
Val =:= sledding ->
<<12091:16>>;
Val =:= snowmobiling ->
<<12092:16>>;
Val =:= snowshoeing ->
<<12093:16>>;
Val =:= 'winter-recreation-area' ->
<<12094:16>>;
Val =:= 'scenic-overlook' ->
<<12095:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_RecreationalObjectsAndActivities(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
12033 -> 'bear-viewing-area';
12034 -> 'deer-viewing-area';
12035 -> 'drinking-water';
12036 -> 'environmental-study-area';
12037 -> 'falling-rocks';
12038 -> firearms;
12039 -> 'leashed-pets';
12040 -> 'point-of-interest';
12041 -> smoking;
12042 -> dog;
12043 -> 'tent-camping';
12044 -> 'trailer-camping';
12045 -> 'first-aid';
12046 -> handicapped;
12047 -> mechanic;
12048 -> 'trailer-sanitary-station';
12049 -> 'viewing-area';
12050 -> campfire;
12051 -> locker;
12052 -> sleeping;
12053 -> trail;
12054 -> climbing;
12055 -> 'rock-climbing';
12056 -> hunting;
12057 -> playground;
12058 -> 'rock-collecting';
12059 -> spelunking;
12060 -> 'bicycle-trail';
12061 -> 'hiking-trail';
12062 -> 'horse-trail';
12063 -> 'trail-interpretive-auto';
12064 -> 'trail-interpretive-pedestrian';
12065 -> 'trail-road-for-4WD-vehicles';
12066 -> 'trail-for-trail-bikes';
12067 -> archer;
12068 -> 'hang-glider';
12069 -> 'boat-tours';
12070 -> canoeing;
12071 -> diving;
12072 -> 'scuba-diving';
12073 -> fishing;
12074 -> 'marine-recreation-area';
12075 -> motorboating;
12076 -> 'boat-ramp';
12077 -> rowboating;
12078 -> sailboating;
12079 -> 'water-skiing';
12080 -> surfing;
12081 -> swimming;
12082 -> wading;
12083 -> 'hand-launch';
12084 -> kayak;
12085 -> 'wind-surf';
12086 -> 'ice-skating';
12087 -> 'ski-jumping';
12088 -> bobbing;
12089 -> 'cross-country-skiing';
12090 -> 'downhill-skiing';
12091 -> sledding;
12092 -> snowmobiling;
12093 -> snowshoeing;
12094 -> 'winter-recreation-area';
12095 -> 'scenic-overlook';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_RegulatoryAndWarningSigns(Val) ->
if Val =:= 'regulatory-sign' ->
<<12289:16>>;
Val =:= 'warning-sign' ->
<<12290:16>>;
Val =:= 'information-sign' ->
<<12291:16>>;
Val =:= 'construction-sign' ->
<<12292:16>>;
Val =:= 'guide-sign' ->
<<12293:16>>;
Val =:= stop ->
<<12294:16>>;
Val =:= yield ->
<<12295:16>>;
Val =:= 'to-oncoming-traffic' ->
<<12296:16>>;
Val =:= 'four-way' ->
<<12297:16>>;
Val =:= 'all-way' ->
<<12298:16>>;
Val =:= zone ->
<<12299:16>>;
Val =:= narrows ->
<<12300:16>>;
Val =:= widens ->
<<12301:16>>;
Val =:= reduced ->
<<12302:16>>;
Val =:= combined ->
<<12303:16>>;
Val =:= minimum ->
<<12304:16>>;
Val =:= maximum ->
<<12305:16>>;
Val =:= 'divided-road' ->
<<12306:16>>;
Val =:= 'double-arrow' ->
<<12307:16>>;
Val =:= 'dead-end' ->
<<12308:16>>;
Val =:= 'no-outlet' ->
<<12309:16>>;
Val =:= 'wrong-way' ->
<<12310:16>>;
Val =:= nDetour ->
<<12312:16>>;
Val =:= chevron ->
<<12313:16>>;
Val =:= 'do-not-enter' ->
<<12314:16>>;
Val =:= 't-intersection-to-the-side' ->
<<12315:16>>;
Val =:= 't-intersection-oncoming' ->
<<12316:16>>;
Val =:= 'y-intersection-to-the-side' ->
<<12317:16>>;
Val =:= 'y-intersection-oncoming' ->
<<12318:16>>;
Val =:= 'four-way-divided-highway-crossing' ->
<<12319:16>>;
Val =:= 't-way-divided-highway-crossing' ->
<<12320:16>>;
Val =:= 'light-rail-divided-highway-crossing' ->
<<12321:16>>;
Val =:= 'light-rail-t-divided-highway-crossing' ->
<<12322:16>>;
Val =:= 'side-road-to-right' ->
<<12323:16>>;
Val =:= 'side-road-to-left' ->
<<12324:16>>;
Val =:= 'side-road-to-right-at-angle' ->
<<12325:16>>;
Val =:= 'side-road-to-left-at-angle' ->
<<12326:16>>;
Val =:= 'entering-roadway-merge' ->
<<12327:16>>;
Val =:= 'entering-roadway-added-lane' ->
<<12328:16>>;
Val =:= 'one-way' ->
<<12329:16>>;
Val =:= caution ->
<<12330:16>>;
Val =:= temporary ->
<<12331:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_RegulatoryAndWarningSigns(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
12289 -> 'regulatory-sign';
12290 -> 'warning-sign';
12291 -> 'information-sign';
12292 -> 'construction-sign';
12293 -> 'guide-sign';
12294 -> stop;
12295 -> yield;
12296 -> 'to-oncoming-traffic';
12297 -> 'four-way';
12298 -> 'all-way';
12299 -> zone;
12300 -> narrows;
12301 -> widens;
12302 -> reduced;
12303 -> combined;
12304 -> minimum;
12305 -> maximum;
12306 -> 'divided-road';
12307 -> 'double-arrow';
12308 -> 'dead-end';
12309 -> 'no-outlet';
12310 -> 'wrong-way';
12312 -> nDetour;
12313 -> chevron;
12314 -> 'do-not-enter';
12315 -> 't-intersection-to-the-side';
12316 -> 't-intersection-oncoming';
12317 -> 'y-intersection-to-the-side';
12318 -> 'y-intersection-oncoming';
12319 -> 'four-way-divided-highway-crossing';
12320 -> 't-way-divided-highway-crossing';
12321 -> 'light-rail-divided-highway-crossing';
12322 -> 'light-rail-t-divided-highway-crossing';
12323 -> 'side-road-to-right';
12324 -> 'side-road-to-left';
12325 -> 'side-road-to-right-at-angle';
12326 -> 'side-road-to-left-at-angle';
12327 -> 'entering-roadway-merge';
12328 -> 'entering-roadway-added-lane';
12329 -> 'one-way';
12330 -> caution;
12331 -> temporary;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_ResponderGroupAffected(Val) ->
if Val =:= 'emergency-vehicle-units' ->
<<9729:16>>;
Val =:= 'federal-law-enforcement-units' ->
<<9730:16>>;
Val =:= 'state-police-units' ->
<<9731:16>>;
Val =:= 'county-police-units' ->
<<9732:16>>;
Val =:= 'local-police-units' ->
<<9733:16>>;
Val =:= 'ambulance-units' ->
<<9734:16>>;
Val =:= 'rescue-units' ->
<<9735:16>>;
Val =:= 'fire-units' ->
<<9736:16>>;
Val =:= 'hAZMAT-units' ->
<<9737:16>>;
Val =:= 'light-tow-unit' ->
<<9738:16>>;
Val =:= 'heavy-tow-unit' ->
<<9739:16>>;
Val =:= 'freeway-service-patrols' ->
<<9740:16>>;
Val =:= 'transportation-response-units' ->
<<9741:16>>;
Val =:= 'private-contractor-response-units' ->
<<9742:16>>;
Val =:= 'private-tow-units' ->
<<9743:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_ResponderGroupAffected(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
9729 -> 'emergency-vehicle-units';
9730 -> 'federal-law-enforcement-units';
9731 -> 'state-police-units';
9732 -> 'county-police-units';
9733 -> 'local-police-units';
9734 -> 'ambulance-units';
9735 -> 'rescue-units';
9736 -> 'fire-units';
9737 -> 'hAZMAT-units';
9738 -> 'light-tow-unit';
9739 -> 'heavy-tow-unit';
9740 -> 'freeway-service-patrols';
9741 -> 'transportation-response-units';
9742 -> 'private-contractor-response-units';
9743 -> 'private-tow-units';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_RestrictionClass(Val) ->
if Val =:= restrictions ->
<<2561:16>>;
Val =:= 'ramp-restrictions' ->
<<2562:16>>;
Val =:= 'truck-restriction' ->
<<2563:16>>;
Val =:= 'speed-restriction' ->
<<2564:16>>;
Val =:= 'noise-restriction' ->
<<2565:16>>;
Val =:= 'traffic-regulations-have-been-changed' ->
<<2566:16>>;
Val =:= 'local-access-only' ->
<<2567:16>>;
Val =:= 'no-trailers' ->
<<2568:16>>;
Val =:= 'no-high-profile-vehicles' ->
<<2569:16>>;
Val =:= 'hazardous-materials-truck-restriction' ->
<<2570:16>>;
Val =:= 'no-through-traffic' ->
<<2571:16>>;
Val =:= 'no-motor-vehicles' ->
<<2572:16>>;
Val =:= 'width-limit' ->
<<2573:16>>;
Val =:= 'height-limit' ->
<<2574:16>>;
Val =:= 'length-limit' ->
<<2575:16>>;
Val =:= 'axle-load-limit' ->
<<2576:16>>;
Val =:= 'gross-weight-limit' ->
<<2577:16>>;
Val =:= 'axle-count-limit' ->
<<2578:16>>;
Val =:= 'carpool-lane-available' ->
<<2579:16>>;
Val =:= 'carpool-restrictions-changed' ->
<<2580:16>>;
Val =:= 'hOV-2-no-single-occupant-vehicles' ->
<<2581:16>>;
Val =:= 'hOV-3-no-vehicles-with-less-than-three-occupants' ->
<<2582:16>>;
Val =:= 'bus-lane-available-for-all-vehicles' ->
<<2583:16>>;
Val =:= 'truck-lane-available-for-all-vehicles' ->
<<2584:16>>;
Val =:= 'permits-call-in-basis' ->
<<2585:16>>;
Val =:= 'permits-temporarily-closed' ->
<<2586:16>>;
Val =:= 'permits-closed' ->
<<2587:16>>;
Val =:= 'road-use-permits-required' ->
<<2588:16>>;
Val =:= 'permits-open' ->
<<2675:16>>;
Val =:= 'restrictions-for-high-profile-vehicles-lifted' ->
<<2676:16>>;
Val =:= 'width-limit-lifted' ->
<<2677:16>>;
Val =:= 'height-limit-lifted' ->
<<2678:16>>;
Val =:= 'length-limit-lifted' ->
<<2679:16>>;
Val =:= 'axle-load-limit-lifted' ->
<<2680:16>>;
Val =:= 'weight-limit-lifted' ->
<<2681:16>>;
Val =:= 'axle-count-limit-lifted' ->
<<2682:16>>;
Val =:= 'carpool-restrictions-lifted' ->
<<2683:16>>;
Val =:= 'lane-restrictions-lifted' ->
<<2684:16>>;
Val =:= 'ramp-restrictions-lifted' ->
<<2685:16>>;
Val =:= 'motor-vehicle-restrictions-lifted' ->
<<2686:16>>;
Val =:= 'restrictions-lifted' ->
<<2687:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_RestrictionClass(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
2561 -> restrictions;
2562 -> 'ramp-restrictions';
2563 -> 'truck-restriction';
2564 -> 'speed-restriction';
2565 -> 'noise-restriction';
2566 -> 'traffic-regulations-have-been-changed';
2567 -> 'local-access-only';
2568 -> 'no-trailers';
2569 -> 'no-high-profile-vehicles';
2570 -> 'hazardous-materials-truck-restriction';
2571 -> 'no-through-traffic';
2572 -> 'no-motor-vehicles';
2573 -> 'width-limit';
2574 -> 'height-limit';
2575 -> 'length-limit';
2576 -> 'axle-load-limit';
2577 -> 'gross-weight-limit';
2578 -> 'axle-count-limit';
2579 -> 'carpool-lane-available';
2580 -> 'carpool-restrictions-changed';
2581 -> 'hOV-2-no-single-occupant-vehicles';
2582 -> 'hOV-3-no-vehicles-with-less-than-three-occupants';
2583 -> 'bus-lane-available-for-all-vehicles';
2584 -> 'truck-lane-available-for-all-vehicles';
2585 -> 'permits-call-in-basis';
2586 -> 'permits-temporarily-closed';
2587 -> 'permits-closed';
2588 -> 'road-use-permits-required';
2675 -> 'permits-open';
2676 -> 'restrictions-for-high-profile-vehicles-lifted';
2677 -> 'width-limit-lifted';
2678 -> 'height-limit-lifted';
2679 -> 'length-limit-lifted';
2680 -> 'axle-load-limit-lifted';
2681 -> 'weight-limit-lifted';
2682 -> 'axle-count-limit-lifted';
2683 -> 'carpool-restrictions-lifted';
2684 -> 'lane-restrictions-lifted';
2685 -> 'ramp-restrictions-lifted';
2686 -> 'motor-vehicle-restrictions-lifted';
2687 -> 'restrictions-lifted';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_RoadsideAssets(Val) ->
if Val =:= none ->
<<10496:16>>;
Val =:= 'light-pole' ->
<<10497:16>>;
Val =:= 'utility-pole' ->
<<10498:16>>;
Val =:= 'gantry-way' ->
<<10499:16>>;
Val =:= 'sign-support' ->
<<10500:16>>;
Val =:= 'signal-pole' ->
<<10501:16>>;
Val =:= 'signage-public' ->
<<10502:16>>;
Val =:= 'signage-private' ->
<<10503:16>>;
Val =:= cones ->
<<10504:16>>;
Val =:= 'cones-post-type' ->
<<10505:16>>;
Val =:= 'cones-glue-post' ->
<<10506:16>>;
Val =:= 'cones-other' ->
<<10507:16>>;
Val =:= barriers ->
<<10508:16>>;
Val =:= 'barrier-Aframe' ->
<<10509:16>>;
Val =:= 'barriers-heavy-duty' ->
<<10510:16>>;
Val =:= 'barricade-type-III' ->
<<10511:16>>;
Val =:= 'barricade-small' ->
<<10512:16>>;
Val =:= 'barricade-lights' ->
<<10513:16>>;
Val =:= beacon ->
<<10514:16>>;
Val =:= 't-stand' ->
<<10515:16>>;
Val =:= 'a-stand' ->
<<10516:16>>;
Val =:= drums ->
<<10517:16>>;
Val =:= 'impact-attenuator' ->
<<10518:16>>;
Val =:= 'barricade-tape' ->
<<10519:16>>;
Val =:= 'safety-fence' ->
<<10520:16>>;
Val =:= 'temp-pavement-markings' ->
<<10521:16>>;
Val =:= 'speed-bumps' ->
<<10522:16>>;
Val =:= 'temp-curbs' ->
<<10523:16>>;
Val =:= 'parking-blocks' ->
<<10524:16>>;
Val =:= 'signboard-fixed' ->
<<10525:16>>;
Val =:= 'signboard-portable' ->
<<10526:16>>;
Val =:= har ->
<<10527:16>>;
Val =:= 'har-AM' ->
<<10528:16>>;
Val =:= 'har-FM' ->
<<10529:16>>;
Val =:= 'har-DSRC' ->
<<10530:16>>;
Val =:= 'traffic-light' ->
<<10531:16>>;
Val =:= 'lane-control-signal' ->
<<10532:16>>;
Val =:= 'traffic-detector' ->
<<10533:16>>;
Val =:= 'vehicle-detector' ->
<<10534:16>>;
Val =:= 'system-alarm' ->
<<10535:16>>;
Val =:= 'arrow-board' ->
<<10536:16>>;
Val =:= 'fixed-VMS' ->
<<10537:16>>;
Val =:= 'mobile-VMS' ->
<<10538:16>>;
Val =:= 'ramp-control' ->
<<10539:16>>;
Val =:= 'gate-control' ->
<<10540:16>>;
Val =:= 'temporary-traffic-light' ->
<<10541:16>>;
Val =:= 'over-height-warning-system' ->
<<10542:16>>;
Val =:= 'over-weight-warning-system' ->
<<10543:16>>;
Val =:= 'emergency-telephones' ->
<<10544:16>>;
Val =:= 'railroad-crossing-equipment' ->
<<10545:16>>;
Val =:= 'tunnel-ventilation' ->
<<10546:16>>;
Val =:= ccTV ->
<<10547:16>>;
Val =:= 'environmental-sensor' ->
<<10548:16>>;
Val =:= switch ->
<<10549:16>>;
Val =:= signal ->
<<10550:16>>;
Val =:= 'third-rail' ->
<<10551:16>>;
Val =:= 'overhead-power' ->
<<10552:16>>;
Val =:= 'concrete-tie' ->
<<10553:16>>;
Val =:= 'wooden-tie' ->
<<10554:16>>;
Val =:= escalator ->
<<10555:16>>;
Val =:= elevator ->
<<10556:16>>;
Val =:= track ->
<<10557:16>>;
Val =:= drawbridge ->
<<10558:16>>;
Val =:= 'manhole-cover' ->
<<10559:16>>;
Val =:= culvert ->
<<10560:16>>;
Val =:= 'snow-poles' ->
<<10561:16>>;
Val =:= 'guide-poles' ->
<<10562:16>>;
Val =:= 'expansion-joint' ->
<<10563:16>>;
Val =:= 'shifted-plate' ->
<<10564:16>>;
Val =:= 'solid-barrier' ->
<<10565:16>>;
Val =:= 'moveable-barrier' ->
<<10566:16>>;
Val =:= 'sand-barrel' ->
<<10567:16>>;
Val =:= 'overhead-sign' ->
<<10568:16>>;
Val =:= 'ground-sign' ->
<<10569:16>>;
Val =:= 'emergency-signal' ->
<<10570:16>>;
Val =:= 'countdown-pedestrian-sign' ->
<<10571:16>>;
Val =:= stripe ->
<<10572:16>>;
Val =:= island ->
<<10573:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_RoadsideAssets(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
10496 -> none;
10497 -> 'light-pole';
10498 -> 'utility-pole';
10499 -> 'gantry-way';
10500 -> 'sign-support';
10501 -> 'signal-pole';
10502 -> 'signage-public';
10503 -> 'signage-private';
10504 -> cones;
10505 -> 'cones-post-type';
10506 -> 'cones-glue-post';
10507 -> 'cones-other';
10508 -> barriers;
10509 -> 'barrier-Aframe';
10510 -> 'barriers-heavy-duty';
10511 -> 'barricade-type-III';
10512 -> 'barricade-small';
10513 -> 'barricade-lights';
10514 -> beacon;
10515 -> 't-stand';
10516 -> 'a-stand';
10517 -> drums;
10518 -> 'impact-attenuator';
10519 -> 'barricade-tape';
10520 -> 'safety-fence';
10521 -> 'temp-pavement-markings';
10522 -> 'speed-bumps';
10523 -> 'temp-curbs';
10524 -> 'parking-blocks';
10525 -> 'signboard-fixed';
10526 -> 'signboard-portable';
10527 -> har;
10528 -> 'har-AM';
10529 -> 'har-FM';
10530 -> 'har-DSRC';
10531 -> 'traffic-light';
10532 -> 'lane-control-signal';
10533 -> 'traffic-detector';
10534 -> 'vehicle-detector';
10535 -> 'system-alarm';
10536 -> 'arrow-board';
10537 -> 'fixed-VMS';
10538 -> 'mobile-VMS';
10539 -> 'ramp-control';
10540 -> 'gate-control';
10541 -> 'temporary-traffic-light';
10542 -> 'over-height-warning-system';
10543 -> 'over-weight-warning-system';
10544 -> 'emergency-telephones';
10545 -> 'railroad-crossing-equipment';
10546 -> 'tunnel-ventilation';
10547 -> ccTV;
10548 -> 'environmental-sensor';
10549 -> switch;
10550 -> signal;
10551 -> 'third-rail';
10552 -> 'overhead-power';
10553 -> 'concrete-tie';
10554 -> 'wooden-tie';
10555 -> escalator;
10556 -> elevator;
10557 -> track;
10558 -> drawbridge;
10559 -> 'manhole-cover';
10560 -> culvert;
10561 -> 'snow-poles';
10562 -> 'guide-poles';
10563 -> 'expansion-joint';
10564 -> 'shifted-plate';
10565 -> 'solid-barrier';
10566 -> 'moveable-barrier';
10567 -> 'sand-barrel';
10568 -> 'overhead-sign';
10569 -> 'ground-sign';
10570 -> 'emergency-signal';
10571 -> 'countdown-pedestrian-sign';
10572 -> stripe;
10573 -> island;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Roadwork(Val) ->
if Val =:= 'road-construction' ->
<<1025:16>>;
Val =:= 'major-road-construction' ->
<<1026:16>>;
Val =:= 'long-term-road-construction' ->
<<1027:16>>;
Val =:= 'construction-work' ->
<<1028:16>>;
Val =:= 'paving-operations' ->
<<1029:16>>;
Val =:= 'work-in-the-median' ->
<<1030:16>>;
Val =:= 'road-reconstruction' ->
<<1031:16>>;
Val =:= 'opposing-traffic' ->
<<1032:16>>;
Val =:= 'narrow-lanes' ->
<<1033:16>>;
Val =:= 'construction-traffic-merging' ->
<<1034:16>>;
Val =:= 'single-line-traffic-alternating-directions' ->
<<1035:16>>;
Val =:= 'road-maintenance-operations' ->
<<1036:16>>;
Val =:= 'road-marking-operations' ->
<<1037:16>>;
Val =:= 'bridge-maintenance-operations' ->
<<1038:16>>;
Val =:= 'bridge-construction' ->
<<1039:16>>;
Val =:= 'bridge-demolition-work' ->
<<1040:16>>;
Val =:= blasting ->
<<1041:16>>;
Val =:= 'avalanche-control-activities' ->
<<1042:16>>;
Val =:= 'water-main-work' ->
<<1043:16>>;
Val =:= 'gas-main-work' ->
<<1044:16>>;
Val =:= 'work-on-underground-cables' ->
<<1045:16>>;
Val =:= 'work-on-underground-services' ->
<<1046:16>>;
Val =:= 'new-road-construction-layout' ->
<<1047:16>>;
Val =:= 'new-road-layout' ->
<<1048:16>>;
Val =:= 'temporary-lane-markings' ->
<<1049:16>>;
Val =:= 'temporary-traffic-lights' ->
<<1050:16>>;
Val =:= 'emergency-maintenance' ->
<<1051:16>>;
Val =:= cracks ->
<<1052:16>>;
Val =:= bumps ->
<<1053:16>>;
Val =:= 'storm-drain' ->
<<1054:16>>;
Val =:= 'overgrown-grass' ->
<<1055:16>>;
Val =:= 'overgrown-brushshrubs' ->
<<1056:16>>;
Val =:= 'overgrown-trees' ->
<<1057:16>>;
Val =:= 'crack-REMOVE' ->
<<1058:16>>;
Val =:= 'drop-off' ->
<<1059:16>>;
Val =:= 'seismic-retrofit' ->
<<1060:16>>;
Val =:= 'road-widening' ->
<<1061:16>>;
Val =:= 'utility-work' ->
<<1062:16>>;
Val =:= 'road-maintenance-cleared' ->
<<1146:16>>;
Val =:= 'normal-road-layout-restored' ->
<<1147:16>>;
Val =:= 'road-work-clearance-in-progress' ->
<<1148:16>>;
Val =:= 'road-construction-cleared' ->
<<1149:16>>;
Val =:= 'normal-traffic-lanes-restored' ->
<<1150:16>>;
Val =:= 'road-work-cleared' ->
<<1151:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Roadwork(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
1025 -> 'road-construction';
1026 -> 'major-road-construction';
1027 -> 'long-term-road-construction';
1028 -> 'construction-work';
1029 -> 'paving-operations';
1030 -> 'work-in-the-median';
1031 -> 'road-reconstruction';
1032 -> 'opposing-traffic';
1033 -> 'narrow-lanes';
1034 -> 'construction-traffic-merging';
1035 -> 'single-line-traffic-alternating-directions';
1036 -> 'road-maintenance-operations';
1037 -> 'road-marking-operations';
1038 -> 'bridge-maintenance-operations';
1039 -> 'bridge-construction';
1040 -> 'bridge-demolition-work';
1041 -> blasting;
1042 -> 'avalanche-control-activities';
1043 -> 'water-main-work';
1044 -> 'gas-main-work';
1045 -> 'work-on-underground-cables';
1046 -> 'work-on-underground-services';
1047 -> 'new-road-construction-layout';
1048 -> 'new-road-layout';
1049 -> 'temporary-lane-markings';
1050 -> 'temporary-traffic-lights';
1051 -> 'emergency-maintenance';
1052 -> cracks;
1053 -> bumps;
1054 -> 'storm-drain';
1055 -> 'overgrown-grass';
1056 -> 'overgrown-brushshrubs';
1057 -> 'overgrown-trees';
1058 -> 'crack-REMOVE';
1059 -> 'drop-off';
1060 -> 'seismic-retrofit';
1061 -> 'road-widening';
1062 -> 'utility-work';
1146 -> 'road-maintenance-cleared';
1147 -> 'normal-road-layout-restored';
1148 -> 'road-work-clearance-in-progress';
1149 -> 'road-construction-cleared';
1150 -> 'normal-traffic-lanes-restored';
1151 -> 'road-work-cleared';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_SmallNumbers(Val) ->
if Val =:= n1 ->
<<12545:16>>;
Val =:= n2 ->
<<12546:16>>;
Val =:= n3 ->
<<12547:16>>;
Val =:= n4 ->
<<12548:16>>;
Val =:= n5 ->
<<12549:16>>;
Val =:= n6 ->
<<12550:16>>;
Val =:= n7 ->
<<12551:16>>;
Val =:= n8 ->
<<12552:16>>;
Val =:= n9 ->
<<12553:16>>;
Val =:= n10 ->
<<12554:16>>;
Val =:= n11 ->
<<12555:16>>;
Val =:= n12 ->
<<12556:16>>;
Val =:= n13 ->
<<12557:16>>;
Val =:= n14 ->
<<12558:16>>;
Val =:= n15 ->
<<12559:16>>;
Val =:= n16 ->
<<12560:16>>;
Val =:= n17 ->
<<12561:16>>;
Val =:= n18 ->
<<12562:16>>;
Val =:= n19 ->
<<12563:16>>;
Val =:= n20 ->
<<12564:16>>;
Val =:= n21 ->
<<12565:16>>;
Val =:= n22 ->
<<12566:16>>;
Val =:= n23 ->
<<12567:16>>;
Val =:= n24 ->
<<12568:16>>;
Val =:= n25 ->
<<12569:16>>;
Val =:= n26 ->
<<12570:16>>;
Val =:= n27 ->
<<12571:16>>;
Val =:= n28 ->
<<12572:16>>;
Val =:= n29 ->
<<12573:16>>;
Val =:= n30 ->
<<12574:16>>;
Val =:= n31 ->
<<12575:16>>;
Val =:= n32 ->
<<12576:16>>;
Val =:= n33 ->
<<12577:16>>;
Val =:= n34 ->
<<12578:16>>;
Val =:= n35 ->
<<12579:16>>;
Val =:= n36 ->
<<12580:16>>;
Val =:= n37 ->
<<12581:16>>;
Val =:= n38 ->
<<12582:16>>;
Val =:= n39 ->
<<12583:16>>;
Val =:= n40 ->
<<12584:16>>;
Val =:= n41 ->
<<12585:16>>;
Val =:= n42 ->
<<12586:16>>;
Val =:= n43 ->
<<12587:16>>;
Val =:= n44 ->
<<12588:16>>;
Val =:= n45 ->
<<12589:16>>;
Val =:= n46 ->
<<12590:16>>;
Val =:= n47 ->
<<12591:16>>;
Val =:= n48 ->
<<12592:16>>;
Val =:= n49 ->
<<12593:16>>;
Val =:= n50 ->
<<12594:16>>;
Val =:= n51 ->
<<12595:16>>;
Val =:= n52 ->
<<12596:16>>;
Val =:= n53 ->
<<12597:16>>;
Val =:= n54 ->
<<12598:16>>;
Val =:= n55 ->
<<12599:16>>;
Val =:= n56 ->
<<12600:16>>;
Val =:= n57 ->
<<12601:16>>;
Val =:= n58 ->
<<12602:16>>;
Val =:= n59 ->
<<12603:16>>;
Val =:= n60 ->
<<12604:16>>;
Val =:= n61 ->
<<12605:16>>;
Val =:= n62 ->
<<12606:16>>;
Val =:= n63 ->
<<12607:16>>;
Val =:= n64 ->
<<12608:16>>;
Val =:= n65 ->
<<12609:16>>;
Val =:= n66 ->
<<12610:16>>;
Val =:= n67 ->
<<12611:16>>;
Val =:= n68 ->
<<12612:16>>;
Val =:= n69 ->
<<12613:16>>;
Val =:= n70 ->
<<12614:16>>;
Val =:= n71 ->
<<12615:16>>;
Val =:= n72 ->
<<12616:16>>;
Val =:= n73 ->
<<12617:16>>;
Val =:= n74 ->
<<12618:16>>;
Val =:= n75 ->
<<12619:16>>;
Val =:= n76 ->
<<12620:16>>;
Val =:= n77 ->
<<12621:16>>;
Val =:= n78 ->
<<12622:16>>;
Val =:= n79 ->
<<12623:16>>;
Val =:= n80 ->
<<12624:16>>;
Val =:= n81 ->
<<12625:16>>;
Val =:= n82 ->
<<12626:16>>;
Val =:= n83 ->
<<12627:16>>;
Val =:= n84 ->
<<12628:16>>;
Val =:= n85 ->
<<12629:16>>;
Val =:= n86 ->
<<12630:16>>;
Val =:= n87 ->
<<12631:16>>;
Val =:= n88 ->
<<12632:16>>;
Val =:= n89 ->
<<12633:16>>;
Val =:= n90 ->
<<12634:16>>;
Val =:= n91 ->
<<12635:16>>;
Val =:= n92 ->
<<12636:16>>;
Val =:= n93 ->
<<12637:16>>;
Val =:= n94 ->
<<12638:16>>;
Val =:= n95 ->
<<12639:16>>;
Val =:= n96 ->
<<12640:16>>;
Val =:= n97 ->
<<12641:16>>;
Val =:= n98 ->
<<12642:16>>;
Val =:= n99 ->
<<12643:16>>;
Val =:= n100 ->
<<12644:16>>;
Val =:= n101 ->
<<12645:16>>;
Val =:= n102 ->
<<12646:16>>;
Val =:= n103 ->
<<12647:16>>;
Val =:= n104 ->
<<12648:16>>;
Val =:= n105 ->
<<12649:16>>;
Val =:= n106 ->
<<12650:16>>;
Val =:= n107 ->
<<12651:16>>;
Val =:= n108 ->
<<12652:16>>;
Val =:= n109 ->
<<12653:16>>;
Val =:= n110 ->
<<12654:16>>;
Val =:= n111 ->
<<12655:16>>;
Val =:= n112 ->
<<12656:16>>;
Val =:= n113 ->
<<12657:16>>;
Val =:= n114 ->
<<12658:16>>;
Val =:= n115 ->
<<12659:16>>;
Val =:= n116 ->
<<12660:16>>;
Val =:= n117 ->
<<12661:16>>;
Val =:= n118 ->
<<12662:16>>;
Val =:= n119 ->
<<12663:16>>;
Val =:= n120 ->
<<12664:16>>;
Val =:= n121 ->
<<12665:16>>;
Val =:= n122 ->
<<12666:16>>;
Val =:= n123 ->
<<12667:16>>;
Val =:= n124 ->
<<12668:16>>;
Val =:= n125 ->
<<12669:16>>;
Val =:= n126 ->
<<12670:16>>;
Val =:= n127 ->
<<12671:16>>;
Val =:= n128 ->
<<12672:16>>;
Val =:= n129 ->
<<12673:16>>;
Val =:= n130 ->
<<12674:16>>;
Val =:= n131 ->
<<12675:16>>;
Val =:= n132 ->
<<12676:16>>;
Val =:= n133 ->
<<12677:16>>;
Val =:= n134 ->
<<12678:16>>;
Val =:= n135 ->
<<12679:16>>;
Val =:= n136 ->
<<12680:16>>;
Val =:= n137 ->
<<12681:16>>;
Val =:= n138 ->
<<12682:16>>;
Val =:= n139 ->
<<12683:16>>;
Val =:= n140 ->
<<12684:16>>;
Val =:= n141 ->
<<12685:16>>;
Val =:= n142 ->
<<12686:16>>;
Val =:= n143 ->
<<12687:16>>;
Val =:= n144 ->
<<12688:16>>;
Val =:= n145 ->
<<12689:16>>;
Val =:= n146 ->
<<12690:16>>;
Val =:= n147 ->
<<12691:16>>;
Val =:= n148 ->
<<12692:16>>;
Val =:= n149 ->
<<12693:16>>;
Val =:= n150 ->
<<12694:16>>;
Val =:= n151 ->
<<12695:16>>;
Val =:= n152 ->
<<12696:16>>;
Val =:= n153 ->
<<12697:16>>;
Val =:= n154 ->
<<12698:16>>;
Val =:= n155 ->
<<12699:16>>;
Val =:= n156 ->
<<12700:16>>;
Val =:= n157 ->
<<12701:16>>;
Val =:= n158 ->
<<12702:16>>;
Val =:= n159 ->
<<12703:16>>;
Val =:= n160 ->
<<12704:16>>;
Val =:= n161 ->
<<12705:16>>;
Val =:= n162 ->
<<12706:16>>;
Val =:= n163 ->
<<12707:16>>;
Val =:= n164 ->
<<12708:16>>;
Val =:= n165 ->
<<12709:16>>;
Val =:= n166 ->
<<12710:16>>;
Val =:= n167 ->
<<12711:16>>;
Val =:= n168 ->
<<12712:16>>;
Val =:= n169 ->
<<12713:16>>;
Val =:= n170 ->
<<12714:16>>;
Val =:= n171 ->
<<12715:16>>;
Val =:= n172 ->
<<12716:16>>;
Val =:= n173 ->
<<12717:16>>;
Val =:= n174 ->
<<12718:16>>;
Val =:= n175 ->
<<12719:16>>;
Val =:= n176 ->
<<12720:16>>;
Val =:= n177 ->
<<12721:16>>;
Val =:= n178 ->
<<12722:16>>;
Val =:= n179 ->
<<12723:16>>;
Val =:= n180 ->
<<12724:16>>;
Val =:= n181 ->
<<12725:16>>;
Val =:= n182 ->
<<12726:16>>;
Val =:= n183 ->
<<12727:16>>;
Val =:= n184 ->
<<12728:16>>;
Val =:= n185 ->
<<12729:16>>;
Val =:= n186 ->
<<12730:16>>;
Val =:= n187 ->
<<12731:16>>;
Val =:= n188 ->
<<12732:16>>;
Val =:= n189 ->
<<12733:16>>;
Val =:= n190 ->
<<12734:16>>;
Val =:= n191 ->
<<12735:16>>;
Val =:= n192 ->
<<12736:16>>;
Val =:= n193 ->
<<12737:16>>;
Val =:= n194 ->
<<12738:16>>;
Val =:= n195 ->
<<12739:16>>;
Val =:= n196 ->
<<12740:16>>;
Val =:= n197 ->
<<12741:16>>;
Val =:= n198 ->
<<12742:16>>;
Val =:= n199 ->
<<12743:16>>;
Val =:= n200 ->
<<12744:16>>;
Val =:= n201 ->
<<12745:16>>;
Val =:= n202 ->
<<12746:16>>;
Val =:= n203 ->
<<12747:16>>;
Val =:= n204 ->
<<12748:16>>;
Val =:= n205 ->
<<12749:16>>;
Val =:= n206 ->
<<12750:16>>;
Val =:= n207 ->
<<12751:16>>;
Val =:= n208 ->
<<12752:16>>;
Val =:= n209 ->
<<12753:16>>;
Val =:= n210 ->
<<12754:16>>;
Val =:= n211 ->
<<12755:16>>;
Val =:= n212 ->
<<12756:16>>;
Val =:= n213 ->
<<12757:16>>;
Val =:= n214 ->
<<12758:16>>;
Val =:= n215 ->
<<12759:16>>;
Val =:= n216 ->
<<12760:16>>;
Val =:= n217 ->
<<12761:16>>;
Val =:= n218 ->
<<12762:16>>;
Val =:= n219 ->
<<12763:16>>;
Val =:= n220 ->
<<12764:16>>;
Val =:= n221 ->
<<12765:16>>;
Val =:= n222 ->
<<12766:16>>;
Val =:= n223 ->
<<12767:16>>;
Val =:= n224 ->
<<12768:16>>;
Val =:= n225 ->
<<12769:16>>;
Val =:= n226 ->
<<12770:16>>;
Val =:= n227 ->
<<12771:16>>;
Val =:= n228 ->
<<12772:16>>;
Val =:= n229 ->
<<12773:16>>;
Val =:= n230 ->
<<12774:16>>;
Val =:= n231 ->
<<12775:16>>;
Val =:= n232 ->
<<12776:16>>;
Val =:= n233 ->
<<12777:16>>;
Val =:= n234 ->
<<12778:16>>;
Val =:= n235 ->
<<12779:16>>;
Val =:= n236 ->
<<12780:16>>;
Val =:= n237 ->
<<12781:16>>;
Val =:= n238 ->
<<12782:16>>;
Val =:= n239 ->
<<12783:16>>;
Val =:= n240 ->
<<12784:16>>;
Val =:= n241 ->
<<12785:16>>;
Val =:= n242 ->
<<12786:16>>;
Val =:= n243 ->
<<12787:16>>;
Val =:= n244 ->
<<12788:16>>;
Val =:= n245 ->
<<12789:16>>;
Val =:= n246 ->
<<12790:16>>;
Val =:= n247 ->
<<12791:16>>;
Val =:= n248 ->
<<12792:16>>;
Val =:= n249 ->
<<12793:16>>;
Val =:= n250 ->
<<12794:16>>;
Val =:= n251 ->
<<12795:16>>;
Val =:= n252 ->
<<12796:16>>;
Val =:= n253 ->
<<12797:16>>;
Val =:= n254 ->
<<12798:16>>;
Val =:= n255 ->
<<12799:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_SmallNumbers(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
12545 -> n1;
12546 -> n2;
12547 -> n3;
12548 -> n4;
12549 -> n5;
12550 -> n6;
12551 -> n7;
12552 -> n8;
12553 -> n9;
12554 -> n10;
12555 -> n11;
12556 -> n12;
12557 -> n13;
12558 -> n14;
12559 -> n15;
12560 -> n16;
12561 -> n17;
12562 -> n18;
12563 -> n19;
12564 -> n20;
12565 -> n21;
12566 -> n22;
12567 -> n23;
12568 -> n24;
12569 -> n25;
12570 -> n26;
12571 -> n27;
12572 -> n28;
12573 -> n29;
12574 -> n30;
12575 -> n31;
12576 -> n32;
12577 -> n33;
12578 -> n34;
12579 -> n35;
12580 -> n36;
12581 -> n37;
12582 -> n38;
12583 -> n39;
12584 -> n40;
12585 -> n41;
12586 -> n42;
12587 -> n43;
12588 -> n44;
12589 -> n45;
12590 -> n46;
12591 -> n47;
12592 -> n48;
12593 -> n49;
12594 -> n50;
12595 -> n51;
12596 -> n52;
12597 -> n53;
12598 -> n54;
12599 -> n55;
12600 -> n56;
12601 -> n57;
12602 -> n58;
12603 -> n59;
12604 -> n60;
12605 -> n61;
12606 -> n62;
12607 -> n63;
12608 -> n64;
12609 -> n65;
12610 -> n66;
12611 -> n67;
12612 -> n68;
12613 -> n69;
12614 -> n70;
12615 -> n71;
12616 -> n72;
12617 -> n73;
12618 -> n74;
12619 -> n75;
12620 -> n76;
12621 -> n77;
12622 -> n78;
12623 -> n79;
12624 -> n80;
12625 -> n81;
12626 -> n82;
12627 -> n83;
12628 -> n84;
12629 -> n85;
12630 -> n86;
12631 -> n87;
12632 -> n88;
12633 -> n89;
12634 -> n90;
12635 -> n91;
12636 -> n92;
12637 -> n93;
12638 -> n94;
12639 -> n95;
12640 -> n96;
12641 -> n97;
12642 -> n98;
12643 -> n99;
12644 -> n100;
12645 -> n101;
12646 -> n102;
12647 -> n103;
12648 -> n104;
12649 -> n105;
12650 -> n106;
12651 -> n107;
12652 -> n108;
12653 -> n109;
12654 -> n110;
12655 -> n111;
12656 -> n112;
12657 -> n113;
12658 -> n114;
12659 -> n115;
12660 -> n116;
12661 -> n117;
12662 -> n118;
12663 -> n119;
12664 -> n120;
12665 -> n121;
12666 -> n122;
12667 -> n123;
12668 -> n124;
12669 -> n125;
12670 -> n126;
12671 -> n127;
12672 -> n128;
12673 -> n129;
12674 -> n130;
12675 -> n131;
12676 -> n132;
12677 -> n133;
12678 -> n134;
12679 -> n135;
12680 -> n136;
12681 -> n137;
12682 -> n138;
12683 -> n139;
12684 -> n140;
12685 -> n141;
12686 -> n142;
12687 -> n143;
12688 -> n144;
12689 -> n145;
12690 -> n146;
12691 -> n147;
12692 -> n148;
12693 -> n149;
12694 -> n150;
12695 -> n151;
12696 -> n152;
12697 -> n153;
12698 -> n154;
12699 -> n155;
12700 -> n156;
12701 -> n157;
12702 -> n158;
12703 -> n159;
12704 -> n160;
12705 -> n161;
12706 -> n162;
12707 -> n163;
12708 -> n164;
12709 -> n165;
12710 -> n166;
12711 -> n167;
12712 -> n168;
12713 -> n169;
12714 -> n170;
12715 -> n171;
12716 -> n172;
12717 -> n173;
12718 -> n174;
12719 -> n175;
12720 -> n176;
12721 -> n177;
12722 -> n178;
12723 -> n179;
12724 -> n180;
12725 -> n181;
12726 -> n182;
12727 -> n183;
12728 -> n184;
12729 -> n185;
12730 -> n186;
12731 -> n187;
12732 -> n188;
12733 -> n189;
12734 -> n190;
12735 -> n191;
12736 -> n192;
12737 -> n193;
12738 -> n194;
12739 -> n195;
12740 -> n196;
12741 -> n197;
12742 -> n198;
12743 -> n199;
12744 -> n200;
12745 -> n201;
12746 -> n202;
12747 -> n203;
12748 -> n204;
12749 -> n205;
12750 -> n206;
12751 -> n207;
12752 -> n208;
12753 -> n209;
12754 -> n210;
12755 -> n211;
12756 -> n212;
12757 -> n213;
12758 -> n214;
12759 -> n215;
12760 -> n216;
12761 -> n217;
12762 -> n218;
12763 -> n219;
12764 -> n220;
12765 -> n221;
12766 -> n222;
12767 -> n223;
12768 -> n224;
12769 -> n225;
12770 -> n226;
12771 -> n227;
12772 -> n228;
12773 -> n229;
12774 -> n230;
12775 -> n231;
12776 -> n232;
12777 -> n233;
12778 -> n234;
12779 -> n235;
12780 -> n236;
12781 -> n237;
12782 -> n238;
12783 -> n239;
12784 -> n240;
12785 -> n241;
12786 -> n242;
12787 -> n243;
12788 -> n244;
12789 -> n245;
12790 -> n246;
12791 -> n247;
12792 -> n248;
12793 -> n249;
12794 -> n250;
12795 -> n251;
12796 -> n252;
12797 -> n253;
12798 -> n254;
12799 -> n255;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_SpecialEvents(Val) ->
if Val =:= 'major-event' ->
<<3841:16>>;
Val =:= airshow ->
<<3842:16>>;
Val =:= 'hot-air-ballooning' ->
<<3843:16>>;
Val =:= concert ->
<<3844:16>>;
Val =:= 'state-occasion' ->
<<3845:16>>;
Val =:= 'vIP-visit' ->
<<3846:16>>;
Val =:= show ->
<<3847:16>>;
Val =:= festival ->
<<3848:16>>;
Val =:= exhibition ->
<<3849:16>>;
Val =:= 'performing-arts' ->
<<3850:16>>;
Val =:= 'outdoor-market' ->
<<3851:16>>;
Val =:= fair ->
<<3852:16>>;
Val =:= carnival ->
<<3853:16>>;
Val =:= 'fireworks-display' ->
<<3854:16>>;
Val =:= 'trade-expo' ->
<<3855:16>>;
Val =:= 'movie-filming' ->
<<3856:16>>;
Val =:= 'presidential-visit' ->
<<3857:16>>;
Val =:= parade ->
<<3858:16>>;
Val =:= procession ->
<<3859:16>>;
Val =:= 'funeral-procession' ->
<<3860:16>>;
Val =:= crowd ->
<<3861:16>>;
Val =:= 'holiday-traffic-crowds' ->
<<3862:16>>;
Val =:= 'event-ended' ->
<<3967:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_SpecialEvents(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
3841 -> 'major-event';
3842 -> airshow;
3843 -> 'hot-air-ballooning';
3844 -> concert;
3845 -> 'state-occasion';
3846 -> 'vIP-visit';
3847 -> show;
3848 -> festival;
3849 -> exhibition;
3850 -> 'performing-arts';
3851 -> 'outdoor-market';
3852 -> fair;
3853 -> carnival;
3854 -> 'fireworks-display';
3855 -> 'trade-expo';
3856 -> 'movie-filming';
3857 -> 'presidential-visit';
3858 -> parade;
3859 -> procession;
3860 -> 'funeral-procession';
3861 -> crowd;
3862 -> 'holiday-traffic-crowds';
3967 -> 'event-ended';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_SportingEvents(Val) ->
if Val =:= 'sports-event' ->
<<3585:16>>;
Val =:= game ->
<<3586:16>>;
Val =:= tournament ->
<<3587:16>>;
Val =:= 'track-and-field-event' ->
<<3588:16>>;
Val =:= 'baseball-game' ->
<<3589:16>>;
Val =:= 'basketball-game' ->
<<3590:16>>;
Val =:= 'boxing-match' ->
<<3591:16>>;
Val =:= 'football-game' ->
<<3592:16>>;
Val =:= 'soccer-game' ->
<<3593:16>>;
Val =:= 'golf-tournament' ->
<<3594:16>>;
Val =:= 'hockey-game' ->
<<3595:16>>;
Val =:= 'tennis-tournament' ->
<<3596:16>>;
Val =:= 'wrestling-match' ->
<<3597:16>>;
Val =:= 'road-race' ->
<<3598:16>>;
Val =:= 'automobile-race' ->
<<3599:16>>;
Val =:= 'bicycle-race' ->
<<3600:16>>;
Val =:= 'race-event' ->
<<3601:16>>;
Val =:= marathon ->
<<3602:16>>;
Val =:= 'horse-show' ->
<<3603:16>>;
Val =:= rodeo ->
<<3604:16>>;
Val =:= 'water-sports-event' ->
<<3605:16>>;
Val =:= 'winter-sports-event' ->
<<3606:16>>;
Val =:= 'skating-event' ->
<<3607:16>>;
Val =:= 'dog-sled-race' ->
<<3608:16>>;
Val =:= 'sporting-event-ended' ->
<<3711:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_SportingEvents(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
3585 -> 'sports-event';
3586 -> game;
3587 -> tournament;
3588 -> 'track-and-field-event';
3589 -> 'baseball-game';
3590 -> 'basketball-game';
3591 -> 'boxing-match';
3592 -> 'football-game';
3593 -> 'soccer-game';
3594 -> 'golf-tournament';
3595 -> 'hockey-game';
3596 -> 'tennis-tournament';
3597 -> 'wrestling-match';
3598 -> 'road-race';
3599 -> 'automobile-race';
3600 -> 'bicycle-race';
3601 -> 'race-event';
3602 -> marathon;
3603 -> 'horse-show';
3604 -> rodeo;
3605 -> 'water-sports-event';
3606 -> 'winter-sports-event';
3607 -> 'skating-event';
3608 -> 'dog-sled-race';
3711 -> 'sporting-event-ended';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_StatesAndTerritories(Val) ->
if Val =:= alabama ->
<<12801:16>>;
Val =:= alaska ->
<<12802:16>>;
Val =:= 'american-Samoa' ->
<<12803:16>>;
Val =:= arizona ->
<<12804:16>>;
Val =:= arkansas ->
<<12805:16>>;
Val =:= california ->
<<12806:16>>;
Val =:= colorado ->
<<12807:16>>;
Val =:= connecticut ->
<<12808:16>>;
Val =:= delaware ->
<<12809:16>>;
Val =:= 'district-of-Columbia' ->
<<12810:16>>;
Val =:= florida ->
<<12811:16>>;
Val =:= georgia ->
<<12812:16>>;
Val =:= guam ->
<<12813:16>>;
Val =:= hawaii ->
<<12814:16>>;
Val =:= idaho ->
<<12815:16>>;
Val =:= illinois ->
<<12816:16>>;
Val =:= indiana ->
<<12817:16>>;
Val =:= iowa ->
<<12818:16>>;
Val =:= kansas ->
<<12819:16>>;
Val =:= kentucky ->
<<12820:16>>;
Val =:= louisiana ->
<<12821:16>>;
Val =:= maine ->
<<12822:16>>;
Val =:= maryland ->
<<12823:16>>;
Val =:= massachusetts ->
<<12824:16>>;
Val =:= michigan ->
<<12825:16>>;
Val =:= minnesota ->
<<12826:16>>;
Val =:= mississippi ->
<<12827:16>>;
Val =:= missouri ->
<<12828:16>>;
Val =:= montana ->
<<12829:16>>;
Val =:= nebraska ->
<<12830:16>>;
Val =:= nevada ->
<<12831:16>>;
Val =:= 'new-Hampshire' ->
<<12832:16>>;
Val =:= 'new-Jersey' ->
<<12833:16>>;
Val =:= 'new-Mexico' ->
<<12834:16>>;
Val =:= 'new-York' ->
<<12835:16>>;
Val =:= 'north-Carolina' ->
<<12836:16>>;
Val =:= 'north-Dakota' ->
<<12837:16>>;
Val =:= 'northern-Marianas-Islands' ->
<<12838:16>>;
Val =:= ohio ->
<<12839:16>>;
Val =:= oklahoma ->
<<12840:16>>;
Val =:= oregon ->
<<12841:16>>;
Val =:= pennsylvania ->
<<12842:16>>;
Val =:= 'puerto-rico' ->
<<12843:16>>;
Val =:= 'rhode-Island' ->
<<12844:16>>;
Val =:= 'south-Carolina' ->
<<12845:16>>;
Val =:= 'south-Dakota' ->
<<12846:16>>;
Val =:= tennessee ->
<<12847:16>>;
Val =:= texas ->
<<12848:16>>;
Val =:= utah ->
<<12849:16>>;
Val =:= vermont ->
<<12850:16>>;
Val =:= virginia ->
<<12851:16>>;
Val =:= 'virgin-Islands' ->
<<12852:16>>;
Val =:= washington ->
<<12853:16>>;
Val =:= 'west-Virginia' ->
<<12854:16>>;
Val =:= wisconsin ->
<<12855:16>>;
Val =:= wyoming ->
<<12856:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_StatesAndTerritories(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
12801 -> alabama;
12802 -> alaska;
12803 -> 'american-Samoa';
12804 -> arizona;
12805 -> arkansas;
12806 -> california;
12807 -> colorado;
12808 -> connecticut;
12809 -> delaware;
12810 -> 'district-of-Columbia';
12811 -> florida;
12812 -> georgia;
12813 -> guam;
12814 -> hawaii;
12815 -> idaho;
12816 -> illinois;
12817 -> indiana;
12818 -> iowa;
12819 -> kansas;
12820 -> kentucky;
12821 -> louisiana;
12822 -> maine;
12823 -> maryland;
12824 -> massachusetts;
12825 -> michigan;
12826 -> minnesota;
12827 -> mississippi;
12828 -> missouri;
12829 -> montana;
12830 -> nebraska;
12831 -> nevada;
12832 -> 'new-Hampshire';
12833 -> 'new-Jersey';
12834 -> 'new-Mexico';
12835 -> 'new-York';
12836 -> 'north-Carolina';
12837 -> 'north-Dakota';
12838 -> 'northern-Marianas-Islands';
12839 -> ohio;
12840 -> oklahoma;
12841 -> oregon;
12842 -> pennsylvania;
12843 -> 'puerto-rico';
12844 -> 'rhode-Island';
12845 -> 'south-Carolina';
12846 -> 'south-Dakota';
12847 -> tennessee;
12848 -> texas;
12849 -> utah;
12850 -> vermont;
12851 -> virginia;
12852 -> 'virgin-Islands';
12853 -> washington;
12854 -> 'west-Virginia';
12855 -> wisconsin;
12856 -> wyoming;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_StreetSuffixes(Val) ->
if Val =:= alley ->
<<13313:16>>;
Val =:= annex ->
<<13314:16>>;
Val =:= arcade ->
<<13315:16>>;
Val =:= avenue ->
<<13316:16>>;
Val =:= bayoo ->
<<13317:16>>;
Val =:= beach ->
<<13318:16>>;
Val =:= bend ->
<<13319:16>>;
Val =:= bluff ->
<<13320:16>>;
Val =:= bottom ->
<<13321:16>>;
Val =:= boulevard ->
<<13322:16>>;
Val =:= branch ->
<<13323:16>>;
Val =:= nBridge ->
<<13324:16>>;
Val =:= brook ->
<<13325:16>>;
Val =:= burg ->
<<13326:16>>;
Val =:= bypass ->
<<13327:16>>;
Val =:= camp ->
<<13328:16>>;
Val =:= canyon ->
<<13329:16>>;
Val =:= cape ->
<<13330:16>>;
Val =:= causeway ->
<<13331:16>>;
Val =:= nCenter ->
<<13332:16>>;
Val =:= circle ->
<<13333:16>>;
Val =:= cliff ->
<<13334:16>>;
Val =:= club ->
<<13335:16>>;
Val =:= common ->
<<13336:16>>;
Val =:= corner ->
<<13337:16>>;
Val =:= course ->
<<13338:16>>;
Val =:= court ->
<<13339:16>>;
Val =:= cove ->
<<13340:16>>;
Val =:= creek ->
<<13341:16>>;
Val =:= crescent ->
<<13342:16>>;
Val =:= crest ->
<<13343:16>>;
Val =:= nCrossing ->
<<13344:16>>;
Val =:= crossroad ->
<<13345:16>>;
Val =:= curve ->
<<13346:16>>;
Val =:= dale ->
<<13347:16>>;
Val =:= nDam ->
<<13348:16>>;
Val =:= divide ->
<<13349:16>>;
Val =:= drive ->
<<13350:16>>;
Val =:= estate ->
<<13351:16>>;
Val =:= expressway ->
<<13352:16>>;
Val =:= extension ->
<<13353:16>>;
Val =:= fall ->
<<13354:16>>;
Val =:= nFerry ->
<<13355:16>>;
Val =:= field ->
<<13356:16>>;
Val =:= flat ->
<<13357:16>>;
Val =:= ford ->
<<13358:16>>;
Val =:= forest ->
<<13359:16>>;
Val =:= forge ->
<<13360:16>>;
Val =:= fork ->
<<13361:16>>;
Val =:= fort ->
<<13362:16>>;
Val =:= nFreeway ->
<<13363:16>>;
Val =:= garden ->
<<13364:16>>;
Val =:= gateway ->
<<13365:16>>;
Val =:= glen ->
<<13366:16>>;
Val =:= green ->
<<13367:16>>;
Val =:= grove ->
<<13368:16>>;
Val =:= harbor ->
<<13369:16>>;
Val =:= haven ->
<<13370:16>>;
Val =:= heights ->
<<13371:16>>;
Val =:= highway ->
<<13372:16>>;
Val =:= nHill ->
<<13373:16>>;
Val =:= hollow ->
<<13374:16>>;
Val =:= inlet ->
<<13375:16>>;
Val =:= nIsland ->
<<13376:16>>;
Val =:= isle ->
<<13377:16>>;
Val =:= nJunction ->
<<13378:16>>;
Val =:= key ->
<<13379:16>>;
Val =:= knoll ->
<<13380:16>>;
Val =:= lake ->
<<13381:16>>;
Val =:= land ->
<<13382:16>>;
Val =:= landing ->
<<13383:16>>;
Val =:= nLane ->
<<13384:16>>;
Val =:= light ->
<<13385:16>>;
Val =:= loaf ->
<<13386:16>>;
Val =:= lock ->
<<13387:16>>;
Val =:= lodge ->
<<13388:16>>;
Val =:= loop ->
<<13389:16>>;
Val =:= mall ->
<<13390:16>>;
Val =:= manor ->
<<13391:16>>;
Val =:= meadow ->
<<13392:16>>;
Val =:= mews ->
<<13393:16>>;
Val =:= mill ->
<<13394:16>>;
Val =:= mission ->
<<13395:16>>;
Val =:= motorway ->
<<13396:16>>;
Val =:= mount ->
<<13397:16>>;
Val =:= mountain ->
<<13398:16>>;
Val =:= neck ->
<<13399:16>>;
Val =:= orchard ->
<<13400:16>>;
Val =:= oval ->
<<13401:16>>;
Val =:= nOverpass ->
<<13402:16>>;
Val =:= park ->
<<13403:16>>;
Val =:= parkway ->
<<13404:16>>;
Val =:= nPass ->
<<13405:16>>;
Val =:= passage ->
<<13406:16>>;
Val =:= path ->
<<13407:16>>;
Val =:= pike ->
<<13408:16>>;
Val =:= pine ->
<<13409:16>>;
Val =:= plains ->
<<13410:16>>;
Val =:= plaza ->
<<13411:16>>;
Val =:= point ->
<<13412:16>>;
Val =:= port ->
<<13413:16>>;
Val =:= prairie ->
<<13414:16>>;
Val =:= radial ->
<<13415:16>>;
Val =:= ramp ->
<<13416:16>>;
Val =:= ranch ->
<<13417:16>>;
Val =:= rapid ->
<<13418:16>>;
Val =:= rest ->
<<13419:16>>;
Val =:= ridge ->
<<13420:16>>;
Val =:= river ->
<<13421:16>>;
Val =:= nRoad ->
<<13422:16>>;
Val =:= route ->
<<13423:16>>;
Val =:= row ->
<<13424:16>>;
Val =:= rue ->
<<13425:16>>;
Val =:= run ->
<<13426:16>>;
Val =:= shoal ->
<<13427:16>>;
Val =:= shore ->
<<13428:16>>;
Val =:= skyway ->
<<13429:16>>;
Val =:= spring ->
<<13430:16>>;
Val =:= nSpur ->
<<13431:16>>;
Val =:= square ->
<<13432:16>>;
Val =:= nStation ->
<<13433:16>>;
Val =:= stravenue ->
<<13434:16>>;
Val =:= stream ->
<<13435:16>>;
Val =:= street ->
<<13436:16>>;
Val =:= summit ->
<<13437:16>>;
Val =:= terrace ->
<<13438:16>>;
Val =:= throughway ->
<<13439:16>>;
Val =:= trace ->
<<13440:16>>;
Val =:= nTrack ->
<<13441:16>>;
Val =:= trafficway ->
<<13442:16>>;
Val =:= nTrail ->
<<13443:16>>;
Val =:= nTunnel ->
<<13444:16>>;
Val =:= turnpike ->
<<13445:16>>;
Val =:= nUnderpass ->
<<13446:16>>;
Val =:= union ->
<<13447:16>>;
Val =:= valley ->
<<13448:16>>;
Val =:= viaduct ->
<<13449:16>>;
Val =:= view ->
<<13450:16>>;
Val =:= village ->
<<13451:16>>;
Val =:= ville ->
<<13452:16>>;
Val =:= vista ->
<<13453:16>>;
Val =:= nWalk ->
<<13454:16>>;
Val =:= wall ->
<<13455:16>>;
Val =:= way ->
<<13456:16>>;
Val =:= well ->
<<13457:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_StreetSuffixes(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
13313 -> alley;
13314 -> annex;
13315 -> arcade;
13316 -> avenue;
13317 -> bayoo;
13318 -> beach;
13319 -> bend;
13320 -> bluff;
13321 -> bottom;
13322 -> boulevard;
13323 -> branch;
13324 -> nBridge;
13325 -> brook;
13326 -> burg;
13327 -> bypass;
13328 -> camp;
13329 -> canyon;
13330 -> cape;
13331 -> causeway;
13332 -> nCenter;
13333 -> circle;
13334 -> cliff;
13335 -> club;
13336 -> common;
13337 -> corner;
13338 -> course;
13339 -> court;
13340 -> cove;
13341 -> creek;
13342 -> crescent;
13343 -> crest;
13344 -> nCrossing;
13345 -> crossroad;
13346 -> curve;
13347 -> dale;
13348 -> nDam;
13349 -> divide;
13350 -> drive;
13351 -> estate;
13352 -> expressway;
13353 -> extension;
13354 -> fall;
13355 -> nFerry;
13356 -> field;
13357 -> flat;
13358 -> ford;
13359 -> forest;
13360 -> forge;
13361 -> fork;
13362 -> fort;
13363 -> nFreeway;
13364 -> garden;
13365 -> gateway;
13366 -> glen;
13367 -> green;
13368 -> grove;
13369 -> harbor;
13370 -> haven;
13371 -> heights;
13372 -> highway;
13373 -> nHill;
13374 -> hollow;
13375 -> inlet;
13376 -> nIsland;
13377 -> isle;
13378 -> nJunction;
13379 -> key;
13380 -> knoll;
13381 -> lake;
13382 -> land;
13383 -> landing;
13384 -> nLane;
13385 -> light;
13386 -> loaf;
13387 -> lock;
13388 -> lodge;
13389 -> loop;
13390 -> mall;
13391 -> manor;
13392 -> meadow;
13393 -> mews;
13394 -> mill;
13395 -> mission;
13396 -> motorway;
13397 -> mount;
13398 -> mountain;
13399 -> neck;
13400 -> orchard;
13401 -> oval;
13402 -> nOverpass;
13403 -> park;
13404 -> parkway;
13405 -> nPass;
13406 -> passage;
13407 -> path;
13408 -> pike;
13409 -> pine;
13410 -> plains;
13411 -> plaza;
13412 -> point;
13413 -> port;
13414 -> prairie;
13415 -> radial;
13416 -> ramp;
13417 -> ranch;
13418 -> rapid;
13419 -> rest;
13420 -> ridge;
13421 -> river;
13422 -> nRoad;
13423 -> route;
13424 -> row;
13425 -> rue;
13426 -> run;
13427 -> shoal;
13428 -> shore;
13429 -> skyway;
13430 -> spring;
13431 -> nSpur;
13432 -> square;
13433 -> nStation;
13434 -> stravenue;
13435 -> stream;
13436 -> street;
13437 -> summit;
13438 -> terrace;
13439 -> throughway;
13440 -> trace;
13441 -> nTrack;
13442 -> trafficway;
13443 -> nTrail;
13444 -> nTunnel;
13445 -> turnpike;
13446 -> nUnderpass;
13447 -> union;
13448 -> valley;
13449 -> viaduct;
13450 -> view;
13451 -> village;
13452 -> ville;
13453 -> vista;
13454 -> nWalk;
13455 -> wall;
13456 -> way;
13457 -> well;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Structures(Val) ->
if Val =:= 'rest-room' ->
<<13057:16>>;
Val =:= 'mens-rest-room' ->
<<13058:16>>;
Val =:= 'womens-rest-room' ->
<<13059:16>>;
Val =:= 'family-rest-room' ->
<<13060:16>>;
Val =:= dam ->
<<13061:16>>;
Val =:= 'fish-hatchery' ->
<<13062:16>>;
Val =:= information ->
<<13063:16>>;
Val =:= lighthouse ->
<<13064:16>>;
Val =:= 'lookout-tower' ->
<<13065:16>>;
Val =:= 'ranger-station' ->
<<13066:16>>;
Val =:= 'grocery-store' ->
<<13068:16>>;
Val =:= lodging ->
<<13069:16>>;
Val =:= 'post-office' ->
<<13070:16>>;
Val =:= 'picnic-shelter' ->
<<13072:16>>;
Val =:= 'group-camping' ->
<<13073:16>>;
Val =:= 'group-picnicking' ->
<<13074:16>>;
Val =:= 'n24-hour-pharmacy' ->
<<13075:16>>;
Val =:= kennel ->
<<13076:16>>;
Val =:= 'laundry-facilities' ->
<<13077:16>>;
Val =:= 'shower-facilities' ->
<<13078:16>>;
Val =:= amphitheater ->
<<13079:16>>;
Val =:= stable ->
<<13080:16>>;
Val =:= hospital ->
<<13081:16>>;
Val =:= 'emergency-medical-service-point' ->
<<13082:16>>;
Val =:= library ->
<<13083:16>>;
Val =:= 'recycling-collection-center' ->
<<13084:16>>;
Val =:= school ->
<<13085:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Structures(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
13057 -> 'rest-room';
13058 -> 'mens-rest-room';
13059 -> 'womens-rest-room';
13060 -> 'family-rest-room';
13061 -> dam;
13062 -> 'fish-hatchery';
13063 -> information;
13064 -> lighthouse;
13065 -> 'lookout-tower';
13066 -> 'ranger-station';
13068 -> 'grocery-store';
13069 -> lodging;
13070 -> 'post-office';
13072 -> 'picnic-shelter';
13073 -> 'group-camping';
13074 -> 'group-picnicking';
13075 -> 'n24-hour-pharmacy';
13076 -> kennel;
13077 -> 'laundry-facilities';
13078 -> 'shower-facilities';
13079 -> amphitheater;
13080 -> stable;
13081 -> hospital;
13082 -> 'emergency-medical-service-point';
13083 -> library;
13084 -> 'recycling-collection-center';
13085 -> school;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_SuggestionAdvice(Val) ->
if Val =:= 'why-not-ride-share' ->
<<6657:16>>;
Val =:= 'is-this-your-no-ride-day' ->
<<6658:16>>;
Val =:= 'why-not-use-transit' ->
<<6659:16>>;
Val =:= 'why-not-park-and-ride' ->
<<6660:16>>;
Val =:= 'why-not-try-paratransit' ->
<<6661:16>>;
Val =:= 'why-not-travel-by-rail' ->
<<6662:16>>;
Val =:= 'why-not-use-the-subway' ->
<<6663:16>>;
Val =:= 'why-not-try-rapid-transit' ->
<<6664:16>>;
Val =:= 'why-not-travel-by-bus' ->
<<6665:16>>;
Val =:= 'your-parking-ticket-covers-the-return-ride' ->
<<6666:16>>;
Val =:= 'avoid-the-rush-hour' ->
<<6667:16>>;
Val =:= 'do-not-allow-unnecessary-gaps' ->
<<6668:16>>;
Val =:= 'follow-the-vehicle-in-front-smoothly' ->
<<6669:16>>;
Val =:= 'do-not-slow-down-unnecessarily' ->
<<6670:16>>;
Val =:= 'watch-for-muggers' ->
<<6671:16>>;
Val =:= 'watch-for-pickpockets' ->
<<6672:16>>;
Val =:= 'watch-for-thieves' ->
<<6673:16>>;
Val =:= 'sorry-for-any-delay' ->
<<6674:16>>;
Val =:= 'thank-you-for-your-understanding' ->
<<6675:16>>;
Val =:= 'we-appreciate-your-patience' ->
<<6676:16>>;
Val =:= 'we-are-grateful-for-your-cooperation' ->
<<6677:16>>;
Val =:= 'share-the-road' ->
<<6678:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_SuggestionAdvice(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
6657 -> 'why-not-ride-share';
6658 -> 'is-this-your-no-ride-day';
6659 -> 'why-not-use-transit';
6660 -> 'why-not-park-and-ride';
6661 -> 'why-not-try-paratransit';
6662 -> 'why-not-travel-by-rail';
6663 -> 'why-not-use-the-subway';
6664 -> 'why-not-try-rapid-transit';
6665 -> 'why-not-travel-by-bus';
6666 -> 'your-parking-ticket-covers-the-return-ride';
6667 -> 'avoid-the-rush-hour';
6668 -> 'do-not-allow-unnecessary-gaps';
6669 -> 'follow-the-vehicle-in-front-smoothly';
6670 -> 'do-not-slow-down-unnecessarily';
6671 -> 'watch-for-muggers';
6672 -> 'watch-for-pickpockets';
6673 -> 'watch-for-thieves';
6674 -> 'sorry-for-any-delay';
6675 -> 'thank-you-for-your-understanding';
6676 -> 'we-appreciate-your-patience';
6677 -> 'we-are-grateful-for-your-cooperation';
6678 -> 'share-the-road';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Temperature(Val) ->
if Val =:= 'maximum-temperature' ->
<<5633:16>>;
Val =:= temperature ->
<<5634:16>>;
Val =:= 'minimum-temperature' ->
<<5635:16>>;
Val =:= 'current-temperature' ->
<<5636:16>>;
Val =:= 'heat-index' ->
<<5637:16>>;
Val =:= 'extreme-heat' ->
<<5638:16>>;
Val =:= hot ->
<<5639:16>>;
Val =:= hotter ->
<<5640:16>>;
Val =:= heat ->
<<5641:16>>;
Val =:= warmer ->
<<5642:16>>;
Val =:= warm ->
<<5643:16>>;
Val =:= mild ->
<<5644:16>>;
Val =:= cool ->
<<5645:16>>;
Val =:= cooler ->
<<5646:16>>;
Val =:= cold ->
<<5647:16>>;
Val =:= colder ->
<<5648:16>>;
Val =:= 'very-cold' ->
<<5649:16>>;
Val =:= 'extreme-cold' ->
<<5650:16>>;
Val =:= 'wind-chill' ->
<<5651:16>>;
Val =:= dewpoint ->
<<5652:16>>;
Val =:= 'relative-humidity' ->
<<5653:16>>;
Val =:= 'temperatures-close-to-the-seasonal-norm' ->
<<5758:16>>;
Val =:= 'less-extreme-temperatures' ->
<<5759:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Temperature(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
5633 -> 'maximum-temperature';
5634 -> temperature;
5635 -> 'minimum-temperature';
5636 -> 'current-temperature';
5637 -> 'heat-index';
5638 -> 'extreme-heat';
5639 -> hot;
5640 -> hotter;
5641 -> heat;
5642 -> warmer;
5643 -> warm;
5644 -> mild;
5645 -> cool;
5646 -> cooler;
5647 -> cold;
5648 -> colder;
5649 -> 'very-cold';
5650 -> 'extreme-cold';
5651 -> 'wind-chill';
5652 -> dewpoint;
5653 -> 'relative-humidity';
5758 -> 'temperatures-close-to-the-seasonal-norm';
5759 -> 'less-extreme-temperatures';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_TrafficConditions(Val) ->
if Val =:= 'stopped-traffic' ->
<<257:16>>;
Val =:= 'stop-and-go-traffic' ->
<<258:16>>;
Val =:= 'slow-traffic' ->
<<259:16>>;
Val =:= 'heavy-traffic' ->
<<260:16>>;
Val =:= 'traffic-building' ->
<<261:16>>;
Val =:= 'long-queues' ->
<<262:16>>;
Val =:= 'traffic-congestion' ->
<<263:16>>;
Val =:= 'traffic-lighter-than-normal' ->
<<264:16>>;
Val =:= 'traffic-heavier-than-normal' ->
<<265:16>>;
Val =:= 'traffic-much-heavier-than-normal' ->
<<266:16>>;
Val =:= 'current-speed' ->
<<267:16>>;
Val =:= 'speed-limit' ->
<<268:16>>;
Val =:= 'travel-time' ->
<<269:16>>;
Val =:= 'merging-traffic' ->
<<272:16>>;
Val =:= contraflow ->
<<273:16>>;
Val =:= 'contraflow-canceled' ->
<<378:16>>;
Val =:= 'traffic-flowing-freely' ->
<<379:16>>;
Val =:= 'traffic-easing' ->
<<380:16>>;
Val =:= 'traffic-returned-to-normal' ->
<<381:16>>;
Val =:= 'no-problems-to-report' ->
<<382:16>>;
Val =:= 'traffic-congestion-cleared' ->
<<383:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_TrafficConditions(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
257 -> 'stopped-traffic';
258 -> 'stop-and-go-traffic';
259 -> 'slow-traffic';
260 -> 'heavy-traffic';
261 -> 'traffic-building';
262 -> 'long-queues';
263 -> 'traffic-congestion';
264 -> 'traffic-lighter-than-normal';
265 -> 'traffic-heavier-than-normal';
266 -> 'traffic-much-heavier-than-normal';
267 -> 'current-speed';
268 -> 'speed-limit';
269 -> 'travel-time';
272 -> 'merging-traffic';
273 -> contraflow;
378 -> 'contraflow-canceled';
379 -> 'traffic-flowing-freely';
380 -> 'traffic-easing';
381 -> 'traffic-returned-to-normal';
382 -> 'no-problems-to-report';
383 -> 'traffic-congestion-cleared';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_TransitMode(Val) ->
if Val =:= travel ->
<<8961:16>>;
Val =:= transit ->
<<8962:16>>;
Val =:= bus ->
<<8963:16>>;
Val =:= trolleybus ->
<<8964:16>>;
Val =:= rail ->
<<8965:16>>;
Val =:= 'commuter-rail' ->
<<8966:16>>;
Val =:= subway ->
<<8967:16>>;
Val =:= 'rapid-transit' ->
<<8968:16>>;
Val =:= 'light-rail' ->
<<8969:16>>;
Val =:= streetcar ->
<<8970:16>>;
Val =:= 'dial-a-ride' ->
<<8971:16>>;
Val =:= 'park-and-ride' ->
<<8972:16>>;
Val =:= shuttle ->
<<8973:16>>;
Val =:= 'free-shuttle' ->
<<8974:16>>;
Val =:= 'airport-shuttle' ->
<<8975:16>>;
Val =:= taxies ->
<<8976:16>>;
Val =:= ferry ->
<<8977:16>>;
Val =:= 'passenger-ferry' ->
<<8978:16>>;
Val =:= 'vehicle-ferry' ->
<<8979:16>>;
Val =:= 'aerial-tramway' ->
<<8980:16>>;
Val =:= 'automated-guideway' ->
<<8981:16>>;
Val =:= 'cable-cars' ->
<<8982:16>>;
Val =:= monorail ->
<<8983:16>>;
Val =:= 'air-travel' ->
<<8984:16>>;
Val =:= 'hitch-hitching' ->
<<8985:16>>;
Val =:= walk ->
<<8986:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_TransitMode(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
8961 -> travel;
8962 -> transit;
8963 -> bus;
8964 -> trolleybus;
8965 -> rail;
8966 -> 'commuter-rail';
8967 -> subway;
8968 -> 'rapid-transit';
8969 -> 'light-rail';
8970 -> streetcar;
8971 -> 'dial-a-ride';
8972 -> 'park-and-ride';
8973 -> shuttle;
8974 -> 'free-shuttle';
8975 -> 'airport-shuttle';
8976 -> taxies;
8977 -> ferry;
8978 -> 'passenger-ferry';
8979 -> 'vehicle-ferry';
8980 -> 'aerial-tramway';
8981 -> 'automated-guideway';
8982 -> 'cable-cars';
8983 -> monorail;
8984 -> 'air-travel';
8985 -> 'hitch-hitching';
8986 -> walk;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_TransitOperations(Val) ->
if Val =:= 'unknown-transit-problem' ->
<<10753:16>>;
Val =:= 'sleeping-customer' ->
<<10754:16>>;
Val =:= 'assault-on-passenger' ->
<<10755:16>>;
Val =:= 'assault-on-employee' ->
<<10756:16>>;
Val =:= 'broken-seat' ->
<<10757:16>>;
Val =:= 'bus-alarm' ->
<<10758:16>>;
Val =:= 'crime-or-drug-deal' ->
<<10759:16>>;
Val =:= 'eating-on-board' ->
<<10760:16>>;
Val =:= 'equipment-problem-with-air-conditioning' ->
<<10761:16>>;
Val =:= 'equipment-problem-with-air-system' ->
<<10762:16>>;
Val =:= 'equipment-problem-with-brakes' ->
<<10763:16>>;
Val =:= 'equipment-problem-with-chassis-or-suspension' ->
<<10764:16>>;
Val =:= 'equipment-problem-with-cooling-system' ->
<<10765:16>>;
Val =:= 'equipment-problem-with-doors' ->
<<10766:16>>;
Val =:= 'equipment-problem-with-electrical' ->
<<10767:16>>;
Val =:= 'equipment-problem-with-engine' ->
<<10768:16>>;
Val =:= 'equipment-problem-with-exterior-or-body' ->
<<10769:16>>;
Val =:= 'equipment-problem-with-fare-collection' ->
<<10770:16>>;
Val =:= 'equipment-problem-with-fuel-or-exhaust' ->
<<10771:16>>;
Val =:= 'equipment-problem-with-horn' ->
<<10772:16>>;
Val =:= 'equipment-problem-with-interior' ->
<<10773:16>>;
Val =:= 'equipment-problem-with-liftkneeling' ->
<<10774:16>>;
Val =:= 'equipment-problem-with-lights' ->
<<10775:16>>;
Val =:= 'equipment-problem-with-lubrication' ->
<<10776:16>>;
Val =:= 'equipment-problem-with-radio-or-communication' ->
<<10777:16>>;
Val =:= 'equipment-problem-with-signs' ->
<<10778:16>>;
Val =:= 'equipment-problem-with-steering' ->
<<10779:16>>;
Val =:= 'equipment-problem-with-tires' ->
<<10780:16>>;
Val =:= 'equipment-problem-with-transmission' ->
<<10781:16>>;
Val =:= 'equipment-problem-with-unknown-alarm' ->
<<10782:16>>;
Val =:= 'equipment-problem-with-wipers' ->
<<10783:16>>;
Val =:= 'fare-dispute-expired-pass' ->
<<10784:16>>;
Val =:= 'fare-dispute-expired-transfer' ->
<<10785:16>>;
Val =:= 'fare-dispute-expired-upgrade' ->
<<10786:16>>;
Val =:= 'fare-dispute-other' ->
<<10787:16>>;
Val =:= 'fare-dispute-refuses-to-pay' ->
<<10788:16>>;
Val =:= 'lift-passenger-cycle-completed' ->
<<10789:16>>;
Val =:= 'lift-passenger-ready-to-alight' ->
<<10790:16>>;
Val =:= 'lift-passenger-ready-to-board' ->
<<10791:16>>;
Val =:= 'lost-article' ->
<<10792:16>>;
Val =:= 'objects-thrown' ->
<<10793:16>>;
Val =:= 'passenger-accident-alighting' ->
<<10794:16>>;
Val =:= 'passenger-accident-boarding' ->
<<10795:16>>;
Val =:= 'passenger-accident-fallen-on-board' ->
<<10796:16>>;
Val =:= 'passenger-load' ->
<<10797:16>>;
Val =:= 'passenger-accident-other' ->
<<10798:16>>;
Val =:= 'passenger-sick-or-injured' ->
<<10799:16>>;
Val =:= 'right-of-way' ->
<<10800:16>>;
Val =:= theft ->
<<10801:16>>;
Val =:= 'theft-of-service' ->
<<10802:16>>;
Val =:= 'waiting-to-get-relief-for-schedule-break' ->
<<10803:16>>;
Val =:= 'waiting-to-get-relief-after-run-is-finished' ->
<<10804:16>>;
Val =:= 'waiting-to-provide-relief' ->
<<10805:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_TransitOperations(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
10753 -> 'unknown-transit-problem';
10754 -> 'sleeping-customer';
10755 -> 'assault-on-passenger';
10756 -> 'assault-on-employee';
10757 -> 'broken-seat';
10758 -> 'bus-alarm';
10759 -> 'crime-or-drug-deal';
10760 -> 'eating-on-board';
10761 -> 'equipment-problem-with-air-conditioning';
10762 -> 'equipment-problem-with-air-system';
10763 -> 'equipment-problem-with-brakes';
10764 -> 'equipment-problem-with-chassis-or-suspension';
10765 -> 'equipment-problem-with-cooling-system';
10766 -> 'equipment-problem-with-doors';
10767 -> 'equipment-problem-with-electrical';
10768 -> 'equipment-problem-with-engine';
10769 -> 'equipment-problem-with-exterior-or-body';
10770 -> 'equipment-problem-with-fare-collection';
10771 -> 'equipment-problem-with-fuel-or-exhaust';
10772 -> 'equipment-problem-with-horn';
10773 -> 'equipment-problem-with-interior';
10774 -> 'equipment-problem-with-liftkneeling';
10775 -> 'equipment-problem-with-lights';
10776 -> 'equipment-problem-with-lubrication';
10777 -> 'equipment-problem-with-radio-or-communication';
10778 -> 'equipment-problem-with-signs';
10779 -> 'equipment-problem-with-steering';
10780 -> 'equipment-problem-with-tires';
10781 -> 'equipment-problem-with-transmission';
10782 -> 'equipment-problem-with-unknown-alarm';
10783 -> 'equipment-problem-with-wipers';
10784 -> 'fare-dispute-expired-pass';
10785 -> 'fare-dispute-expired-transfer';
10786 -> 'fare-dispute-expired-upgrade';
10787 -> 'fare-dispute-other';
10788 -> 'fare-dispute-refuses-to-pay';
10789 -> 'lift-passenger-cycle-completed';
10790 -> 'lift-passenger-ready-to-alight';
10791 -> 'lift-passenger-ready-to-board';
10792 -> 'lost-article';
10793 -> 'objects-thrown';
10794 -> 'passenger-accident-alighting';
10795 -> 'passenger-accident-boarding';
10796 -> 'passenger-accident-fallen-on-board';
10797 -> 'passenger-load';
10798 -> 'passenger-accident-other';
10799 -> 'passenger-sick-or-injured';
10800 -> 'right-of-way';
10801 -> theft;
10802 -> 'theft-of-service';
10803 -> 'waiting-to-get-relief-for-schedule-break';
10804 -> 'waiting-to-get-relief-after-run-is-finished';
10805 -> 'waiting-to-provide-relief';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_TravelerGroupAffected(Val) ->
if Val =:= 'through-traffic' ->
<<9473:16>>;
Val =:= 'holiday-traffic' ->
<<9474:16>>;
Val =:= residents ->
<<9475:16>>;
Val =:= visitors ->
<<9476:16>>;
Val =:= 'long-distance-traffic' ->
<<9477:16>>;
Val =:= 'local-traffic' ->
<<9478:16>>;
Val =:= 'regional-traffic' ->
<<9479:16>>;
Val =:= arrivals ->
<<9480:16>>;
Val =:= departures ->
<<9481:16>>;
Val =:= 'airline-travelers' ->
<<9482:16>>;
Val =:= 'commuter-airline-travelers' ->
<<9483:16>>;
Val =:= 'domestic-airline-travelers' ->
<<9484:16>>;
Val =:= 'international-airline-travelers' ->
<<9485:16>>;
Val =:= pedestrians ->
<<9486:16>>;
Val =:= bicyclists ->
<<9487:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_TravelerGroupAffected(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
9473 -> 'through-traffic';
9474 -> 'holiday-traffic';
9475 -> residents;
9476 -> visitors;
9477 -> 'long-distance-traffic';
9478 -> 'local-traffic';
9479 -> 'regional-traffic';
9480 -> arrivals;
9481 -> departures;
9482 -> 'airline-travelers';
9483 -> 'commuter-airline-travelers';
9484 -> 'domestic-airline-travelers';
9485 -> 'international-airline-travelers';
9486 -> pedestrians;
9487 -> bicyclists;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Units(Val) ->
if Val =:= 'square-feet' ->
<<8705:16>>;
Val =:= 'square-meters' ->
<<8706:16>>;
Val =:= acres ->
<<8707:16>>;
Val =:= hectares ->
<<8708:16>>;
Val =:= inches ->
<<8709:16>>;
Val =:= feet ->
<<8710:16>>;
Val =:= mile ->
<<8711:16>>;
Val =:= miles ->
<<8712:16>>;
Val =:= 'nautical-miles' ->
<<8713:16>>;
Val =:= millimeters ->
<<8714:16>>;
Val =:= meters ->
<<8715:16>>;
Val =:= kilometer ->
<<8716:16>>;
Val =:= kilometers ->
<<8717:16>>;
Val =:= 'feet-per-second' ->
<<8718:16>>;
Val =:= 'meters-per-second' ->
<<8719:16>>;
Val =:= mPH ->
<<8720:16>>;
Val =:= kPH ->
<<8721:16>>;
Val =:= knots ->
<<8722:16>>;
Val =:= aM ->
<<8723:16>>;
Val =:= pM ->
<<8724:16>>;
Val =:= weekends ->
<<8725:16>>;
Val =:= holiday ->
<<8726:16>>;
Val =:= seconds ->
<<8727:16>>;
Val =:= minutes ->
<<8728:16>>;
Val =:= hours ->
<<8729:16>>;
Val =:= days ->
<<8730:16>>;
Val =:= weeks ->
<<8731:16>>;
Val =:= months ->
<<8732:16>>;
Val =:= 'degrees-Angle' ->
<<8733:16>>;
Val =:= 'degrees-Celsius' ->
<<8734:16>>;
Val =:= 'degrees-Fahrenheit' ->
<<8735:16>>;
Val =:= grams ->
<<8736:16>>;
Val =:= kilograms ->
<<8737:16>>;
Val =:= ounces ->
<<8738:16>>;
Val =:= pounds ->
<<8739:16>>;
Val =:= tons ->
<<8740:16>>;
Val =:= 'fluid-ounces' ->
<<8741:16>>;
Val =:= gallons ->
<<8742:16>>;
Val =:= milliliters ->
<<8743:16>>;
Val =:= liters ->
<<8744:16>>;
Val =:= 'kilograms-per-lane-mile' ->
<<8745:16>>;
Val =:= 'tons-per-lane-mile' ->
<<8746:16>>;
Val =:= dollar ->
<<8747:16>>;
Val =:= percent ->
<<8748:16>>;
Val =:= 'time-delimiter' ->
<<8749:16>>;
Val =:= dollars ->
<<8750:16>>;
Val =:= 'flight-number' ->
<<8751:16>>;
Val =:= 'person-people' ->
<<8752:16>>;
Val =:= 'response-plan' ->
<<8753:16>>;
Val =:= 'placard-type' ->
<<8754:16>>;
Val =:= 'placard-number' ->
<<8755:16>>;
Val =:= fM ->
<<8756:16>>;
Val =:= grade ->
<<8757:16>>;
Val =:= nSunday ->
<<8758:16>>;
Val =:= nMonday ->
<<8759:16>>;
Val =:= nTuesday ->
<<8760:16>>;
Val =:= nWednesday ->
<<8761:16>>;
Val =:= nThursday ->
<<8762:16>>;
Val =:= nFriday ->
<<8763:16>>;
Val =:= nSaturday ->
<<8764:16>>;
Val =:= weekdays ->
<<8765:16>>;
Val =:= elevation ->
<<8766:16>>;
Val =:= 'other-times' ->
<<8767:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Units(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
8705 -> 'square-feet';
8706 -> 'square-meters';
8707 -> acres;
8708 -> hectares;
8709 -> inches;
8710 -> feet;
8711 -> mile;
8712 -> miles;
8713 -> 'nautical-miles';
8714 -> millimeters;
8715 -> meters;
8716 -> kilometer;
8717 -> kilometers;
8718 -> 'feet-per-second';
8719 -> 'meters-per-second';
8720 -> mPH;
8721 -> kPH;
8722 -> knots;
8723 -> aM;
8724 -> pM;
8725 -> weekends;
8726 -> holiday;
8727 -> seconds;
8728 -> minutes;
8729 -> hours;
8730 -> days;
8731 -> weeks;
8732 -> months;
8733 -> 'degrees-Angle';
8734 -> 'degrees-Celsius';
8735 -> 'degrees-Fahrenheit';
8736 -> grams;
8737 -> kilograms;
8738 -> ounces;
8739 -> pounds;
8740 -> tons;
8741 -> 'fluid-ounces';
8742 -> gallons;
8743 -> milliliters;
8744 -> liters;
8745 -> 'kilograms-per-lane-mile';
8746 -> 'tons-per-lane-mile';
8747 -> dollar;
8748 -> percent;
8749 -> 'time-delimiter';
8750 -> dollars;
8751 -> 'flight-number';
8752 -> 'person-people';
8753 -> 'response-plan';
8754 -> 'placard-type';
8755 -> 'placard-number';
8756 -> fM;
8757 -> grade;
8758 -> nSunday;
8759 -> nMonday;
8760 -> nTuesday;
8761 -> nWednesday;
8762 -> nThursday;
8763 -> nFriday;
8764 -> nSaturday;
8765 -> weekdays;
8766 -> elevation;
8767 -> 'other-times';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_UnusualDriving(Val) ->
if Val =:= 'vehicle-traveling-wrong-way' ->
<<1793:16>>;
Val =:= 'reckless-driver' ->
<<1794:16>>;
Val =:= 'prohibited-vehicle-on-roadway' ->
<<1795:16>>;
Val =:= 'emergency-vehicles-on-roadway' ->
<<1796:16>>;
Val =:= 'high-speed-emergency-vehicles' ->
<<1797:16>>;
Val =:= 'high-speed-chase' ->
<<1798:16>>;
Val =:= 'dangerous-vehicle-warning-cleared' ->
<<1918:16>>;
Val =:= 'emergency-vehicle-warning-cleared' ->
<<1919:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_UnusualDriving(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
1793 -> 'vehicle-traveling-wrong-way';
1794 -> 'reckless-driver';
1795 -> 'prohibited-vehicle-on-roadway';
1796 -> 'emergency-vehicles-on-roadway';
1797 -> 'high-speed-emergency-vehicles';
1798 -> 'high-speed-chase';
1918 -> 'dangerous-vehicle-warning-cleared';
1919 -> 'emergency-vehicle-warning-cleared';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_ValidManeuvers(Val) ->
if Val =:= 'prohibit-None-Allowed-LU-LT-L45-S-R45-RT-RU' ->
<<11264:16>>;
Val =:= 'prohibit-RU-Allowed-LU-LT-L45-S-R45-RT' ->
<<11265:16>>;
Val =:= 'prohibit-RT-Allowed-LU-LT-L45-S-R45-RU' ->
<<11266:16>>;
Val =:= 'prohibit-RT-RU-Allowed-LU-LT-L45-S-R45' ->
<<11267:16>>;
Val =:= 'prohibit-R45-Allowed-LU-LT-L45-S-RT-RU' ->
<<11268:16>>;
Val =:= 'prohibit-R45-RU-Allowed-LU-LT-L45-S-RT' ->
<<11269:16>>;
Val =:= 'prohibit-R45-RT-Allowed-LU-LT-L45-S-RU' ->
<<11270:16>>;
Val =:= 'prohibit-R45-RT-RU-Allowed-LU-LT-L45-S' ->
<<11271:16>>;
Val =:= 'prohibit-S-Allowed-LU-LT-L45-R45-RT-RU' ->
<<11272:16>>;
Val =:= 'prohibit-S-RU-Allowed-LU-LT-L45-R45-RT' ->
<<11273:16>>;
Val =:= 'prohibit-S-RT-Allowed-LU-LT-L45-R45-RU' ->
<<11274:16>>;
Val =:= 'prohibit-S-RT-RU-Allowed-LU-LT-L45-R45' ->
<<11275:16>>;
Val =:= 'prohibit-S-R45-Allowed-LU-LT-L45-RT-RU' ->
<<11276:16>>;
Val =:= 'prohibit-S-R45-RU-Allowed-LU-LT-L45-RT' ->
<<11277:16>>;
Val =:= 'prohibit-S-R45-RT-Allowed-LU-LT-L45-RU' ->
<<11278:16>>;
Val =:= 'prohibit-S-R45-RT-RU-Allowed-LU-LT-L45' ->
<<11279:16>>;
Val =:= 'prohibit-L45-Allowed-LU-LT-S-R45-RT-RU' ->
<<11280:16>>;
Val =:= 'prohibit-L45-RU-Allowed-LU-LT-S-R45-RT' ->
<<11281:16>>;
Val =:= 'prohibit-L45-RT-Allowed-LU-LT-S-R45-RU' ->
<<11282:16>>;
Val =:= 'prohibit-L45-RT-RU-Allowed-LU-LT-S-R45' ->
<<11283:16>>;
Val =:= 'prohibit-L45-R45-Allowed-LU-LT-S-RT-RU' ->
<<11284:16>>;
Val =:= 'prohibit-L45-R45-RU-Allowed-LU-LT-S-RT' ->
<<11285:16>>;
Val =:= 'prohibit-L45-R45-RT-Allowed-LU-LT-S-RU' ->
<<11286:16>>;
Val =:= 'prohibit-L45-R45-RT-RU-Allowed-LU-LT-S' ->
<<11287:16>>;
Val =:= 'prohibit-L45-S-Allowed-LU-LT-R45-RT-RU' ->
<<11288:16>>;
Val =:= 'prohibit-L45-S-RU-Allowed-LU-LT-R45-RT' ->
<<11289:16>>;
Val =:= 'prohibit-L45-S-RT-Allowed-LU-LT-R45-RU' ->
<<11290:16>>;
Val =:= 'prohibit-L45-S-RT-RU-Allowed-LU-LT-R45' ->
<<11291:16>>;
Val =:= 'prohibit-L45-S-R45-Allowed-LU-LT-RT-RU' ->
<<11292:16>>;
Val =:= 'prohibit-L45-S-R45-RU-Allowed-LU-LT-RT' ->
<<11293:16>>;
Val =:= 'prohibit-L45-S-R45-RT-Allowed-LU-LT-RU' ->
<<11294:16>>;
Val =:= 'prohibit-L45-S-R45-RT-RU-Allowed-LU-LT' ->
<<11295:16>>;
Val =:= 'prohibit-LT-Allowed-LU-L45-S-R45-RT-RU' ->
<<11296:16>>;
Val =:= 'prohibit-LT-RU-Allowed-LU-L45-S-R45-RT' ->
<<11297:16>>;
Val =:= 'prohibit-LT-RT-Allowed-LU-L45-S-R45-RU' ->
<<11298:16>>;
Val =:= 'prohibit-LT-RT-RU-Allowed-LU-L45-S-R45' ->
<<11299:16>>;
Val =:= 'prohibit-LT-R45-Allowed-LU-L45-S-RT-RU' ->
<<11300:16>>;
Val =:= 'prohibit-LT-R45-RU-Allowed-LU-L45-S-RT' ->
<<11301:16>>;
Val =:= 'prohibit-LT-R45-RT-Allowed-LU-L45-S-RU' ->
<<11302:16>>;
Val =:= 'prohibit-LT-R45-RT-RU-Allowed-LU-L45-S' ->
<<11303:16>>;
Val =:= 'prohibit-LT-S-Allowed-LU-L45-R45-RT-RU' ->
<<11304:16>>;
Val =:= 'prohibit-LT-S-RU-Allowed-LU-L45-R45-RT' ->
<<11305:16>>;
Val =:= 'prohibit-LT-S-RT-Allowed-LU-L45-R45-RU' ->
<<11306:16>>;
Val =:= 'prohibit-LT-S-RT-RU-Allowed-LU-L45-R45' ->
<<11307:16>>;
Val =:= 'prohibit-LT-S-R45-Allowed-LU-L45-RT-RU' ->
<<11308:16>>;
Val =:= 'prohibit-LT-S-R45-RU-Allowed-LU-L45-RT' ->
<<11309:16>>;
Val =:= 'prohibit-LT-S-R45-RT-Allowed-LU-L45-RU' ->
<<11310:16>>;
Val =:= 'prohibit-LT-S-R45-RT-RU-Allowed-LU-L45' ->
<<11311:16>>;
Val =:= 'prohibit-LT-L45-Allowed-LU-S-R45-RT-RU' ->
<<11312:16>>;
Val =:= 'prohibit-LT-L45-RU-Allowed-LU-S-R45-RT' ->
<<11313:16>>;
Val =:= 'prohibit-LT-L45-RT-Allowed-LU-S-R45-RU' ->
<<11314:16>>;
Val =:= 'prohibit-LT-L45-RT-RU-Allowed-LU-S-R45' ->
<<11315:16>>;
Val =:= 'prohibit-LT-L45-R45-Allowed-LU-S-RT-RU' ->
<<11316:16>>;
Val =:= 'prohibit-LT-L45-R45-RU-Allowed-LU-S-RT' ->
<<11317:16>>;
Val =:= 'prohibit-LT-L45-R45-RT-Allowed-LU-S-RU' ->
<<11318:16>>;
Val =:= 'prohibit-LT-L45-R45-RT-RU-Allowed-LU-S' ->
<<11319:16>>;
Val =:= 'prohibit-LT-L45-S-Allowed-LU-R45-RT-RU' ->
<<11320:16>>;
Val =:= 'prohibit-LT-L45-S-RU-Allowed-LU-R45-RT' ->
<<11321:16>>;
Val =:= 'prohibit-LT-L45-S-RT-Allowed-LU-R45-RU' ->
<<11322:16>>;
Val =:= 'prohibit-LT-L45-S-RT-RU-Allowed-LU-R45' ->
<<11323:16>>;
Val =:= 'prohibit-LT-L45-S-R45-Allowed-LU-RT-RU' ->
<<11324:16>>;
Val =:= 'prohibit-LT-L45-S-R45-RU-Allowed-LU-RT' ->
<<11325:16>>;
Val =:= 'prohibit-LT-L45-S-R45-RT-Allowed-LU-RU' ->
<<11326:16>>;
Val =:= 'prohibit-LT-L45-S-R45-RT-RU-Allowed-LU' ->
<<11327:16>>;
Val =:= 'prohibit-LU-Allowed-LT-L45-S-R45-RT-RU' ->
<<11328:16>>;
Val =:= 'prohibit-LU-RU-Allowed-LT-L45-S-R45-RT' ->
<<11329:16>>;
Val =:= 'prohibit-LU-RT-Allowed-LT-L45-S-R45-RU' ->
<<11330:16>>;
Val =:= 'prohibit-LU-RT-RU-Allowed-LT-L45-S-R45' ->
<<11331:16>>;
Val =:= 'prohibit-LU-R45-Allowed-LT-L45-S-RT-RU' ->
<<11332:16>>;
Val =:= 'prohibit-LU-R45-RU-Allowed-LT-L45-S-RT' ->
<<11333:16>>;
Val =:= 'prohibit-LU-R45-RT-Allowed-LT-L45-S-RU' ->
<<11334:16>>;
Val =:= 'prohibit-LU-R45-RT-RU-Allowed-LT-L45-S' ->
<<11335:16>>;
Val =:= 'prohibit-LU-S-Allowed-LT-L45-R45-RT-RU' ->
<<11336:16>>;
Val =:= 'prohibit-LU-S-RU-Allowed-LT-L45-R45-RT' ->
<<11337:16>>;
Val =:= 'prohibit-LU-S-RT-Allowed-LT-L45-R45-RU' ->
<<11338:16>>;
Val =:= 'prohibit-LU-S-RT-RU-Allowed-LT-L45-R45' ->
<<11339:16>>;
Val =:= 'prohibit-LU-S-R45-Allowed-LT-L45-RT-RU' ->
<<11340:16>>;
Val =:= 'prohibit-LU-S-R45-RU-Allowed-LT-L45-RT' ->
<<11341:16>>;
Val =:= 'prohibit-LU-S-R45-RT-Allowed-LT-L45-RU' ->
<<11342:16>>;
Val =:= 'prohibit-LU-S-R45-RT-RU-Allowed-LT-L45' ->
<<11343:16>>;
Val =:= 'prohibit-LU-L45-Allowed-LT-S-R45-RT-RU' ->
<<11344:16>>;
Val =:= 'prohibit-LU-L45-RU-Allowed-LT-S-R45-RT' ->
<<11345:16>>;
Val =:= 'prohibit-LU-L45-RT-Allowed-LT-S-R45-RU' ->
<<11346:16>>;
Val =:= 'prohibit-LU-L45-RT-RU-Allowed-LT-S-R45' ->
<<11347:16>>;
Val =:= 'prohibit-LU-L45-R45-Allowed-LT-S-RT-RU' ->
<<11348:16>>;
Val =:= 'prohibit-LU-L45-R45-RU-Allowed-LT-S-RT' ->
<<11349:16>>;
Val =:= 'prohibit-LU-L45-R45-RT-Allowed-LT-S-RU' ->
<<11350:16>>;
Val =:= 'prohibit-LU-L45-R45-RT-RU-Allowed-LT-S' ->
<<11351:16>>;
Val =:= 'prohibit-LU-L45-S-Allowed-LT-R45-RT-RU' ->
<<11352:16>>;
Val =:= 'prohibit-LU-L45-S-RU-Allowed-LT-R45-RT' ->
<<11353:16>>;
Val =:= 'prohibit-LU-L45-S-RT-Allowed-LT-R45-RU' ->
<<11354:16>>;
Val =:= 'prohibit-LU-L45-S-RT-RU-Allowed-LT-R45' ->
<<11355:16>>;
Val =:= 'prohibit-LU-L45-S-R45-Allowed-LT-RT-RU' ->
<<11356:16>>;
Val =:= 'prohibit-LU-L45-S-R45-RU-Allowed-LT-RT' ->
<<11357:16>>;
Val =:= 'prohibit-LU-L45-S-R45-RT-Allowed-LT-RU' ->
<<11358:16>>;
Val =:= 'prohibit-LU-L45-S-R45-RT-RU-Allowed-LT' ->
<<11359:16>>;
Val =:= 'prohibit-LU-LT-Allowed-L45-S-R45-RT-RU' ->
<<11360:16>>;
Val =:= 'prohibit-LU-LT-RU-Allowed-L45-S-R45-RT' ->
<<11361:16>>;
Val =:= 'prohibit-LU-LT-RT-Allowed-L45-S-R45-RU' ->
<<11362:16>>;
Val =:= 'prohibit-LU-LT-RT-RU-Allowed-L45-S-R45' ->
<<11363:16>>;
Val =:= 'prohibit-LU-LT-R45-Allowed-L45-S-RT-RU' ->
<<11364:16>>;
Val =:= 'prohibit-LU-LT-R45-RU-Allowed-L45-S-RT' ->
<<11365:16>>;
Val =:= 'prohibit-LU-LT-R45-RT-Allowed-L45-S-RU' ->
<<11366:16>>;
Val =:= 'prohibit-LU-LT-R45-RT-RU-Allowed-L45-S' ->
<<11367:16>>;
Val =:= 'prohibit-LU-LT-S-Allowed-L45-R45-RT-RU' ->
<<11368:16>>;
Val =:= 'prohibit-LU-LT-S-RU-Allowed-L45-R45-RT' ->
<<11369:16>>;
Val =:= 'prohibit-LU-LT-S-RT-Allowed-L45-R45-RU' ->
<<11370:16>>;
Val =:= 'prohibit-LU-LT-S-RT-RU-Allowed-L45-R45' ->
<<11371:16>>;
Val =:= 'prohibit-LU-LT-S-R45-Allowed-L45-RT-RU' ->
<<11372:16>>;
Val =:= 'prohibit-LU-LT-S-R45-RU-Allowed-L45-RT' ->
<<11373:16>>;
Val =:= 'prohibit-LU-LT-S-R45-RT-Allowed-L45-RU' ->
<<11374:16>>;
Val =:= 'prohibit-LU-LT-S-R45-RT-RU-Allowed-L45' ->
<<11375:16>>;
Val =:= 'prohibit-LU-LT-L45-Allowed-S-R45-RT-RU' ->
<<11376:16>>;
Val =:= 'prohibit-LU-LT-L45-RU-Allowed-S-R45-RT' ->
<<11377:16>>;
Val =:= 'prohibit-LU-LT-L45-RT-Allowed-S-R45-RU' ->
<<11378:16>>;
Val =:= 'prohibit-LU-LT-L45-RT-RU-Allowed-S-R45' ->
<<11379:16>>;
Val =:= 'prohibit-LU-LT-L45-R45-Allowed-S-RT-RU' ->
<<11380:16>>;
Val =:= 'prohibit-LU-LT-L45-R45-RU-Allowed-S-RT' ->
<<11381:16>>;
Val =:= 'prohibit-LU-LT-L45-R45-RT-Allowed-S-RU' ->
<<11382:16>>;
Val =:= 'prohibit-LU-LT-L45-R45-RT-RU-Allowed-S' ->
<<11383:16>>;
Val =:= 'prohibit-LU-LT-L45-S-Allowed-R45-RT-RU' ->
<<11384:16>>;
Val =:= 'prohibit-LU-LT-L45-S-RU-Allowed-R45-RT' ->
<<11385:16>>;
Val =:= 'prohibit-LU-LT-L45-S-RT-Allowed-R45-RU' ->
<<11386:16>>;
Val =:= 'prohibit-LU-LT-L45-S-RT-RU-Allowed-R45' ->
<<11387:16>>;
Val =:= 'prohibit-LU-LT-L45-S-R45-Allowed-RT-RU' ->
<<11388:16>>;
Val =:= 'prohibit-LU-LT-L45-S-R45-RU-Allowed-RT' ->
<<11389:16>>;
Val =:= 'prohibit-LU-LT-L45-S-R45-RT-Allowed-RU' ->
<<11390:16>>;
Val =:= 'prohibit-LU-LT-L45-S-R45-RT-RU-Allowed-None' ->
<<11391:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_ValidManeuvers(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
11264 -> 'prohibit-None-Allowed-LU-LT-L45-S-R45-RT-RU';
11265 -> 'prohibit-RU-Allowed-LU-LT-L45-S-R45-RT';
11266 -> 'prohibit-RT-Allowed-LU-LT-L45-S-R45-RU';
11267 -> 'prohibit-RT-RU-Allowed-LU-LT-L45-S-R45';
11268 -> 'prohibit-R45-Allowed-LU-LT-L45-S-RT-RU';
11269 -> 'prohibit-R45-RU-Allowed-LU-LT-L45-S-RT';
11270 -> 'prohibit-R45-RT-Allowed-LU-LT-L45-S-RU';
11271 -> 'prohibit-R45-RT-RU-Allowed-LU-LT-L45-S';
11272 -> 'prohibit-S-Allowed-LU-LT-L45-R45-RT-RU';
11273 -> 'prohibit-S-RU-Allowed-LU-LT-L45-R45-RT';
11274 -> 'prohibit-S-RT-Allowed-LU-LT-L45-R45-RU';
11275 -> 'prohibit-S-RT-RU-Allowed-LU-LT-L45-R45';
11276 -> 'prohibit-S-R45-Allowed-LU-LT-L45-RT-RU';
11277 -> 'prohibit-S-R45-RU-Allowed-LU-LT-L45-RT';
11278 -> 'prohibit-S-R45-RT-Allowed-LU-LT-L45-RU';
11279 -> 'prohibit-S-R45-RT-RU-Allowed-LU-LT-L45';
11280 -> 'prohibit-L45-Allowed-LU-LT-S-R45-RT-RU';
11281 -> 'prohibit-L45-RU-Allowed-LU-LT-S-R45-RT';
11282 -> 'prohibit-L45-RT-Allowed-LU-LT-S-R45-RU';
11283 -> 'prohibit-L45-RT-RU-Allowed-LU-LT-S-R45';
11284 -> 'prohibit-L45-R45-Allowed-LU-LT-S-RT-RU';
11285 -> 'prohibit-L45-R45-RU-Allowed-LU-LT-S-RT';
11286 -> 'prohibit-L45-R45-RT-Allowed-LU-LT-S-RU';
11287 -> 'prohibit-L45-R45-RT-RU-Allowed-LU-LT-S';
11288 -> 'prohibit-L45-S-Allowed-LU-LT-R45-RT-RU';
11289 -> 'prohibit-L45-S-RU-Allowed-LU-LT-R45-RT';
11290 -> 'prohibit-L45-S-RT-Allowed-LU-LT-R45-RU';
11291 -> 'prohibit-L45-S-RT-RU-Allowed-LU-LT-R45';
11292 -> 'prohibit-L45-S-R45-Allowed-LU-LT-RT-RU';
11293 -> 'prohibit-L45-S-R45-RU-Allowed-LU-LT-RT';
11294 -> 'prohibit-L45-S-R45-RT-Allowed-LU-LT-RU';
11295 -> 'prohibit-L45-S-R45-RT-RU-Allowed-LU-LT';
11296 -> 'prohibit-LT-Allowed-LU-L45-S-R45-RT-RU';
11297 -> 'prohibit-LT-RU-Allowed-LU-L45-S-R45-RT';
11298 -> 'prohibit-LT-RT-Allowed-LU-L45-S-R45-RU';
11299 -> 'prohibit-LT-RT-RU-Allowed-LU-L45-S-R45';
11300 -> 'prohibit-LT-R45-Allowed-LU-L45-S-RT-RU';
11301 -> 'prohibit-LT-R45-RU-Allowed-LU-L45-S-RT';
11302 -> 'prohibit-LT-R45-RT-Allowed-LU-L45-S-RU';
11303 -> 'prohibit-LT-R45-RT-RU-Allowed-LU-L45-S';
11304 -> 'prohibit-LT-S-Allowed-LU-L45-R45-RT-RU';
11305 -> 'prohibit-LT-S-RU-Allowed-LU-L45-R45-RT';
11306 -> 'prohibit-LT-S-RT-Allowed-LU-L45-R45-RU';
11307 -> 'prohibit-LT-S-RT-RU-Allowed-LU-L45-R45';
11308 -> 'prohibit-LT-S-R45-Allowed-LU-L45-RT-RU';
11309 -> 'prohibit-LT-S-R45-RU-Allowed-LU-L45-RT';
11310 -> 'prohibit-LT-S-R45-RT-Allowed-LU-L45-RU';
11311 -> 'prohibit-LT-S-R45-RT-RU-Allowed-LU-L45';
11312 -> 'prohibit-LT-L45-Allowed-LU-S-R45-RT-RU';
11313 -> 'prohibit-LT-L45-RU-Allowed-LU-S-R45-RT';
11314 -> 'prohibit-LT-L45-RT-Allowed-LU-S-R45-RU';
11315 -> 'prohibit-LT-L45-RT-RU-Allowed-LU-S-R45';
11316 -> 'prohibit-LT-L45-R45-Allowed-LU-S-RT-RU';
11317 -> 'prohibit-LT-L45-R45-RU-Allowed-LU-S-RT';
11318 -> 'prohibit-LT-L45-R45-RT-Allowed-LU-S-RU';
11319 -> 'prohibit-LT-L45-R45-RT-RU-Allowed-LU-S';
11320 -> 'prohibit-LT-L45-S-Allowed-LU-R45-RT-RU';
11321 -> 'prohibit-LT-L45-S-RU-Allowed-LU-R45-RT';
11322 -> 'prohibit-LT-L45-S-RT-Allowed-LU-R45-RU';
11323 -> 'prohibit-LT-L45-S-RT-RU-Allowed-LU-R45';
11324 -> 'prohibit-LT-L45-S-R45-Allowed-LU-RT-RU';
11325 -> 'prohibit-LT-L45-S-R45-RU-Allowed-LU-RT';
11326 -> 'prohibit-LT-L45-S-R45-RT-Allowed-LU-RU';
11327 -> 'prohibit-LT-L45-S-R45-RT-RU-Allowed-LU';
11328 -> 'prohibit-LU-Allowed-LT-L45-S-R45-RT-RU';
11329 -> 'prohibit-LU-RU-Allowed-LT-L45-S-R45-RT';
11330 -> 'prohibit-LU-RT-Allowed-LT-L45-S-R45-RU';
11331 -> 'prohibit-LU-RT-RU-Allowed-LT-L45-S-R45';
11332 -> 'prohibit-LU-R45-Allowed-LT-L45-S-RT-RU';
11333 -> 'prohibit-LU-R45-RU-Allowed-LT-L45-S-RT';
11334 -> 'prohibit-LU-R45-RT-Allowed-LT-L45-S-RU';
11335 -> 'prohibit-LU-R45-RT-RU-Allowed-LT-L45-S';
11336 -> 'prohibit-LU-S-Allowed-LT-L45-R45-RT-RU';
11337 -> 'prohibit-LU-S-RU-Allowed-LT-L45-R45-RT';
11338 -> 'prohibit-LU-S-RT-Allowed-LT-L45-R45-RU';
11339 -> 'prohibit-LU-S-RT-RU-Allowed-LT-L45-R45';
11340 -> 'prohibit-LU-S-R45-Allowed-LT-L45-RT-RU';
11341 -> 'prohibit-LU-S-R45-RU-Allowed-LT-L45-RT';
11342 -> 'prohibit-LU-S-R45-RT-Allowed-LT-L45-RU';
11343 -> 'prohibit-LU-S-R45-RT-RU-Allowed-LT-L45';
11344 -> 'prohibit-LU-L45-Allowed-LT-S-R45-RT-RU';
11345 -> 'prohibit-LU-L45-RU-Allowed-LT-S-R45-RT';
11346 -> 'prohibit-LU-L45-RT-Allowed-LT-S-R45-RU';
11347 -> 'prohibit-LU-L45-RT-RU-Allowed-LT-S-R45';
11348 -> 'prohibit-LU-L45-R45-Allowed-LT-S-RT-RU';
11349 -> 'prohibit-LU-L45-R45-RU-Allowed-LT-S-RT';
11350 -> 'prohibit-LU-L45-R45-RT-Allowed-LT-S-RU';
11351 -> 'prohibit-LU-L45-R45-RT-RU-Allowed-LT-S';
11352 -> 'prohibit-LU-L45-S-Allowed-LT-R45-RT-RU';
11353 -> 'prohibit-LU-L45-S-RU-Allowed-LT-R45-RT';
11354 -> 'prohibit-LU-L45-S-RT-Allowed-LT-R45-RU';
11355 -> 'prohibit-LU-L45-S-RT-RU-Allowed-LT-R45';
11356 -> 'prohibit-LU-L45-S-R45-Allowed-LT-RT-RU';
11357 -> 'prohibit-LU-L45-S-R45-RU-Allowed-LT-RT';
11358 -> 'prohibit-LU-L45-S-R45-RT-Allowed-LT-RU';
11359 -> 'prohibit-LU-L45-S-R45-RT-RU-Allowed-LT';
11360 -> 'prohibit-LU-LT-Allowed-L45-S-R45-RT-RU';
11361 -> 'prohibit-LU-LT-RU-Allowed-L45-S-R45-RT';
11362 -> 'prohibit-LU-LT-RT-Allowed-L45-S-R45-RU';
11363 -> 'prohibit-LU-LT-RT-RU-Allowed-L45-S-R45';
11364 -> 'prohibit-LU-LT-R45-Allowed-L45-S-RT-RU';
11365 -> 'prohibit-LU-LT-R45-RU-Allowed-L45-S-RT';
11366 -> 'prohibit-LU-LT-R45-RT-Allowed-L45-S-RU';
11367 -> 'prohibit-LU-LT-R45-RT-RU-Allowed-L45-S';
11368 -> 'prohibit-LU-LT-S-Allowed-L45-R45-RT-RU';
11369 -> 'prohibit-LU-LT-S-RU-Allowed-L45-R45-RT';
11370 -> 'prohibit-LU-LT-S-RT-Allowed-L45-R45-RU';
11371 -> 'prohibit-LU-LT-S-RT-RU-Allowed-L45-R45';
11372 -> 'prohibit-LU-LT-S-R45-Allowed-L45-RT-RU';
11373 -> 'prohibit-LU-LT-S-R45-RU-Allowed-L45-RT';
11374 -> 'prohibit-LU-LT-S-R45-RT-Allowed-L45-RU';
11375 -> 'prohibit-LU-LT-S-R45-RT-RU-Allowed-L45';
11376 -> 'prohibit-LU-LT-L45-Allowed-S-R45-RT-RU';
11377 -> 'prohibit-LU-LT-L45-RU-Allowed-S-R45-RT';
11378 -> 'prohibit-LU-LT-L45-RT-Allowed-S-R45-RU';
11379 -> 'prohibit-LU-LT-L45-RT-RU-Allowed-S-R45';
11380 -> 'prohibit-LU-LT-L45-R45-Allowed-S-RT-RU';
11381 -> 'prohibit-LU-LT-L45-R45-RU-Allowed-S-RT';
11382 -> 'prohibit-LU-LT-L45-R45-RT-Allowed-S-RU';
11383 -> 'prohibit-LU-LT-L45-R45-RT-RU-Allowed-S';
11384 -> 'prohibit-LU-LT-L45-S-Allowed-R45-RT-RU';
11385 -> 'prohibit-LU-LT-L45-S-RU-Allowed-R45-RT';
11386 -> 'prohibit-LU-LT-L45-S-RT-Allowed-R45-RU';
11387 -> 'prohibit-LU-LT-L45-S-RT-RU-Allowed-R45';
11388 -> 'prohibit-LU-LT-L45-S-R45-Allowed-RT-RU';
11389 -> 'prohibit-LU-LT-L45-S-R45-RU-Allowed-RT';
11390 -> 'prohibit-LU-LT-L45-S-R45-RT-Allowed-RU';
11391 -> 'prohibit-LU-LT-L45-S-R45-RT-RU-Allowed-None';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_VehicleGroupAffected(Val) ->
if Val =:= 'all-vehicles' ->
<<9217:16>>;
Val =:= bicycles ->
<<9218:16>>;
Val =:= motorcycles ->
<<9219:16>>;
Val =:= cars ->
<<9220:16>>;
Val =:= 'light-vehicles' ->
<<9221:16>>;
Val =:= 'cars-and-light-vehicles' ->
<<9222:16>>;
Val =:= 'cars-with-trailers' ->
<<9223:16>>;
Val =:= 'cars-with-recreational-trailers' ->
<<9224:16>>;
Val =:= 'vehicles-with-trailers' ->
<<9225:16>>;
Val =:= 'heavy-vehicles' ->
<<9226:16>>;
Val =:= trucks ->
<<9227:16>>;
Val =:= buses ->
<<9228:16>>;
Val =:= 'articulated-buses' ->
<<9229:16>>;
Val =:= 'school-buses' ->
<<9230:16>>;
Val =:= 'vehicles-with-semi-trailers' ->
<<9231:16>>;
Val =:= 'vehicles-with-double-trailers' ->
<<9232:16>>;
Val =:= 'high-profile-vehicles' ->
<<9233:16>>;
Val =:= 'wide-vehicles' ->
<<9234:16>>;
Val =:= 'long-vehicles' ->
<<9235:16>>;
Val =:= 'hazardous-loads' ->
<<9236:16>>;
Val =:= 'exceptional-loads' ->
<<9237:16>>;
Val =:= 'abnormal-loads' ->
<<9238:16>>;
Val =:= convoys ->
<<9239:16>>;
Val =:= 'maintenance-vehicles' ->
<<9240:16>>;
Val =:= 'delivery-vehicles' ->
<<9241:16>>;
Val =:= 'vehicles-with-even-numbered-license-plates' ->
<<9242:16>>;
Val =:= 'vehicles-with-odd-numbered-license-plates' ->
<<9243:16>>;
Val =:= 'vehicles-with-parking-permits' ->
<<9244:16>>;
Val =:= 'vehicles-with-catalytic-converters' ->
<<9245:16>>;
Val =:= 'vehicles-without-catalytic-converters' ->
<<9246:16>>;
Val =:= 'gas-powered-vehicles' ->
<<9247:16>>;
Val =:= 'diesel-powered-vehicles' ->
<<9248:16>>;
Val =:= 'lPG-vehicles' ->
<<9249:16>>;
Val =:= 'military-convoys' ->
<<9250:16>>;
Val =:= 'military-vehicles' ->
<<9251:16>>;
Val =:= 'electric-powered-vehicles' ->
<<9252:16>>;
Val =:= 'hybrid-powered-vehicles' ->
<<9253:16>>;
Val =:= 'inherently-low-emission-vehicles' ->
<<9254:16>>;
Val =:= 'commercial-vehicles' ->
<<9255:16>>;
Val =:= 'runaway-vehicles' ->
<<9256:16>>;
Val =:= 'vehicles-with-lugs' ->
<<9257:16>>;
Val =:= 'motor-driven-cycles' ->
<<9258:16>>;
Val =:= 'recreational-vehicles' ->
<<9259:16>>;
Val =:= 'non-motorized-vehicles' ->
<<9260:16>>;
Val =:= traffic ->
<<9261:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_VehicleGroupAffected(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
9217 -> 'all-vehicles';
9218 -> bicycles;
9219 -> motorcycles;
9220 -> cars;
9221 -> 'light-vehicles';
9222 -> 'cars-and-light-vehicles';
9223 -> 'cars-with-trailers';
9224 -> 'cars-with-recreational-trailers';
9225 -> 'vehicles-with-trailers';
9226 -> 'heavy-vehicles';
9227 -> trucks;
9228 -> buses;
9229 -> 'articulated-buses';
9230 -> 'school-buses';
9231 -> 'vehicles-with-semi-trailers';
9232 -> 'vehicles-with-double-trailers';
9233 -> 'high-profile-vehicles';
9234 -> 'wide-vehicles';
9235 -> 'long-vehicles';
9236 -> 'hazardous-loads';
9237 -> 'exceptional-loads';
9238 -> 'abnormal-loads';
9239 -> convoys;
9240 -> 'maintenance-vehicles';
9241 -> 'delivery-vehicles';
9242 -> 'vehicles-with-even-numbered-license-plates';
9243 -> 'vehicles-with-odd-numbered-license-plates';
9244 -> 'vehicles-with-parking-permits';
9245 -> 'vehicles-with-catalytic-converters';
9246 -> 'vehicles-without-catalytic-converters';
9247 -> 'gas-powered-vehicles';
9248 -> 'diesel-powered-vehicles';
9249 -> 'lPG-vehicles';
9250 -> 'military-convoys';
9251 -> 'military-vehicles';
9252 -> 'electric-powered-vehicles';
9253 -> 'hybrid-powered-vehicles';
9254 -> 'inherently-low-emission-vehicles';
9255 -> 'commercial-vehicles';
9256 -> 'runaway-vehicles';
9257 -> 'vehicles-with-lugs';
9258 -> 'motor-driven-cycles';
9259 -> 'recreational-vehicles';
9260 -> 'non-motorized-vehicles';
9261 -> traffic;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_VisibilityAndAirQuality(Val) ->
if Val =:= 'dense-fog' ->
<<5377:16>>;
Val =:= fog ->
<<5378:16>>;
Val =:= 'patchy-fog' ->
<<5379:16>>;
Val =:= 'freezing-fog' ->
<<5380:16>>;
Val =:= mist ->
<<5381:16>>;
Val =:= haze ->
<<5382:16>>;
Val =:= 'visibility-reduced' ->
<<5383:16>>;
Val =:= 'white-out' ->
<<5384:16>>;
Val =:= 'blowing-snow' ->
<<5385:16>>;
Val =:= 'smoke-hazard' ->
<<5386:16>>;
Val =:= 'spray-hazard' ->
<<5387:16>>;
Val =:= 'low-sun-glare' ->
<<5388:16>>;
Val =:= 'snow-glare' ->
<<5389:16>>;
Val =:= 'blowing-dust' ->
<<5390:16>>;
Val =:= 'blowing-sand' ->
<<5391:16>>;
Val =:= 'dust-storms' ->
<<5392:16>>;
Val =:= sandstorms ->
<<5393:16>>;
Val =:= 'air-quality-good' ->
<<5394:16>>;
Val =:= 'air-quality-fair' ->
<<5395:16>>;
Val =:= 'air-quality-poor' ->
<<5396:16>>;
Val =:= 'air-quality-very-poor' ->
<<5397:16>>;
Val =:= 'severe-exhaust-pollution' ->
<<5398:16>>;
Val =:= 'smog-alert' ->
<<5399:16>>;
Val =:= 'pollen-count-high' ->
<<5400:16>>;
Val =:= 'pollen-count-medium' ->
<<5401:16>>;
Val =:= 'pollen-count-low' ->
<<5402:16>>;
Val =:= 'swarms-of-insects' ->
<<5403:16>>;
Val =:= 'visibility-blocked' ->
<<5404:16>>;
Val =:= 'ice-fog' ->
<<5405:16>>;
Val =:= 'fog-clearing' ->
<<5499:16>>;
Val =:= 'visibility-improved' ->
<<5500:16>>;
Val =:= 'fog-forecast-withdrawn' ->
<<5501:16>>;
Val =:= 'pollution-alert-ended' ->
<<5502:16>>;
Val =:= 'air-quality-improved' ->
<<5503:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_VisibilityAndAirQuality(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
5377 -> 'dense-fog';
5378 -> fog;
5379 -> 'patchy-fog';
5380 -> 'freezing-fog';
5381 -> mist;
5382 -> haze;
5383 -> 'visibility-reduced';
5384 -> 'white-out';
5385 -> 'blowing-snow';
5386 -> 'smoke-hazard';
5387 -> 'spray-hazard';
5388 -> 'low-sun-glare';
5389 -> 'snow-glare';
5390 -> 'blowing-dust';
5391 -> 'blowing-sand';
5392 -> 'dust-storms';
5393 -> sandstorms;
5394 -> 'air-quality-good';
5395 -> 'air-quality-fair';
5396 -> 'air-quality-poor';
5397 -> 'air-quality-very-poor';
5398 -> 'severe-exhaust-pollution';
5399 -> 'smog-alert';
5400 -> 'pollen-count-high';
5401 -> 'pollen-count-medium';
5402 -> 'pollen-count-low';
5403 -> 'swarms-of-insects';
5404 -> 'visibility-blocked';
5405 -> 'ice-fog';
5499 -> 'fog-clearing';
5500 -> 'visibility-improved';
5501 -> 'fog-forecast-withdrawn';
5502 -> 'pollution-alert-ended';
5503 -> 'air-quality-improved';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_WarningAdvice(Val) ->
if Val =:= risk ->
<<6913:16>>;
Val =:= watch ->
<<6914:16>>;
Val =:= warning ->
<<6915:16>>;
Val =:= alert ->
<<6916:16>>;
Val =:= danger ->
<<6917:16>>;
Val =:= 'danger-of-explosion' ->
<<6918:16>>;
Val =:= 'danger-of-fire' ->
<<6919:16>>;
Val =:= 'extra-police-patrols-in-operation' ->
<<6920:16>>;
Val =:= 'look-out-for-vehicles-stopped-under-bridges' ->
<<6921:16>>;
Val =:= 'increased-risk-of-accident' ->
<<6922:16>>;
Val =:= 'rescue-and-recovery-work-in-progress-at-sceneREMOVED' ->
<<6923:16>>;
Val =:= 'police-at-scene' ->
<<6924:16>>;
Val =:= 'emergency-vehicles-at-scene' ->
<<6925:16>>;
Val =:= 'traffic-being-directed-around-accident-area' ->
<<6926:16>>;
Val =:= 'police-directing-traffic' ->
<<6927:16>>;
Val =:= 'rescue-workers-directing-traffic' ->
<<6928:16>>;
Val =:= 'repairs-in-progress' ->
<<6929:16>>;
Val =:= 'pilot-car-in-operation' ->
<<6930:16>>;
Val =:= 'look-out-for-flagger' ->
<<6931:16>>;
Val =:= 'police-checks-in-operation' ->
<<6932:16>>;
Val =:= 'mandatory-speed-limit-in-force' ->
<<6933:16>>;
Val =:= 'speed-limit-in-force-for-heavy-vehicles' ->
<<6934:16>>;
Val =:= lockdown ->
<<6935:16>>;
Val =:= 'security-check-point' ->
<<6936:16>>;
Val =:= 'truck-check-point' ->
<<6937:16>>;
Val =:= 'single-occupancy-vehicle-check-point' ->
<<6938:16>>;
Val =:= look ->
<<6939:16>>;
Val =:= 'photo-enforced' ->
<<6940:16>>;
Val =:= 'traffic-laws' ->
<<6941:16>>;
Val =:= 'use-low-gear' ->
<<6942:16>>;
Val =:= 'bridge-ices-before-road' ->
<<6943:16>>;
Val =:= 'speed-checked-by-radar' ->
<<6944:16>>;
Val =:= 'speed-checked-by-aircraft' ->
<<6945:16>>;
Val =:= fines ->
<<6946:16>>;
Val =:= 'fines-higher' ->
<<6947:16>>;
Val =:= 'fines-doubled' ->
<<6948:16>>;
Val =:= 'fines-tripled' ->
<<6949:16>>;
Val =:= 'behind-you' ->
<<6950:16>>;
Val =:= 'traffic-signs' ->
<<6951:16>>;
Val =:= 'look-out-for-workers' ->
<<6952:16>>;
Val =:= 'ride-with-traffic' ->
<<6953:16>>;
Val =:= 'prepare-to-evacuate-area' ->
<<6954:16>>;
Val =:= avoid ->
<<6955:16>>;
Val =:= 'evacuation-canceled' ->
<<7033:16>>;
Val =:= 'warning-canceled' ->
<<7034:16>>;
Val =:= 'watch-canceled' ->
<<7035:16>>;
Val =:= 'alert-canceled' ->
<<7036:16>>;
Val =:= ended ->
<<7037:16>>;
Val =:= cleared ->
<<7038:16>>;
Val =:= canceled ->
<<7039:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_WarningAdvice(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
6913 -> risk;
6914 -> watch;
6915 -> warning;
6916 -> alert;
6917 -> danger;
6918 -> 'danger-of-explosion';
6919 -> 'danger-of-fire';
6920 -> 'extra-police-patrols-in-operation';
6921 -> 'look-out-for-vehicles-stopped-under-bridges';
6922 -> 'increased-risk-of-accident';
6923 -> 'rescue-and-recovery-work-in-progress-at-sceneREMOVED';
6924 -> 'police-at-scene';
6925 -> 'emergency-vehicles-at-scene';
6926 -> 'traffic-being-directed-around-accident-area';
6927 -> 'police-directing-traffic';
6928 -> 'rescue-workers-directing-traffic';
6929 -> 'repairs-in-progress';
6930 -> 'pilot-car-in-operation';
6931 -> 'look-out-for-flagger';
6932 -> 'police-checks-in-operation';
6933 -> 'mandatory-speed-limit-in-force';
6934 -> 'speed-limit-in-force-for-heavy-vehicles';
6935 -> lockdown;
6936 -> 'security-check-point';
6937 -> 'truck-check-point';
6938 -> 'single-occupancy-vehicle-check-point';
6939 -> look;
6940 -> 'photo-enforced';
6941 -> 'traffic-laws';
6942 -> 'use-low-gear';
6943 -> 'bridge-ices-before-road';
6944 -> 'speed-checked-by-radar';
6945 -> 'speed-checked-by-aircraft';
6946 -> fines;
6947 -> 'fines-higher';
6948 -> 'fines-doubled';
6949 -> 'fines-tripled';
6950 -> 'behind-you';
6951 -> 'traffic-signs';
6952 -> 'look-out-for-workers';
6953 -> 'ride-with-traffic';
6954 -> 'prepare-to-evacuate-area';
6955 -> avoid;
7033 -> 'evacuation-canceled';
7034 -> 'warning-canceled';
7035 -> 'watch-canceled';
7036 -> 'alert-canceled';
7037 -> ended;
7038 -> cleared;
7039 -> canceled;
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_WeatherConditions(Val) ->
if Val =:= overcast ->
<<4609:16>>;
Val =:= cloudy ->
<<4610:16>>;
Val =:= 'mostly-cloudy' ->
<<4611:16>>;
Val =:= 'partly-cloudy' ->
<<4612:16>>;
Val =:= 'partly-sunny' ->
<<4613:16>>;
Val =:= 'mostly-sunny' ->
<<4614:16>>;
Val =:= sunny ->
<<4615:16>>;
Val =:= 'fair-skies' ->
<<4616:16>>;
Val =:= 'clear-skies' ->
<<4617:16>>;
Val =:= 'mostly-clear' ->
<<4618:16>>;
Val =:= 'mostly-dry' ->
<<4619:16>>;
Val =:= dry ->
<<4620:16>>;
Val =:= 'uV-index-very-high' ->
<<4621:16>>;
Val =:= 'uV-index-high' ->
<<4622:16>>;
Val =:= 'uV-index-moderate' ->
<<4623:16>>;
Val =:= 'uV-index-low' ->
<<4624:16>>;
Val =:= 'uV-index-very-low' ->
<<4625:16>>;
Val =:= 'barometric-pressure' ->
<<4626:16>>;
Val =:= 'ozone-alert' ->
<<4627:16>>;
Val =:= 'lighting-unknown' ->
<<4628:16>>;
Val =:= 'artificial-exterior-light' ->
<<4629:16>>;
Val =:= 'artificial-interior-light' ->
<<4630:16>>;
Val =:= darkness ->
<<4631:16>>;
Val =:= dusk ->
<<4632:16>>;
Val =:= dawn ->
<<4633:16>>;
Val =:= moonlight ->
<<4634:16>>;
Val =:= daylight ->
<<4635:16>>;
Val =:= 'weather-forecast-withdrawn' ->
<<4735:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_WeatherConditions(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
4609 -> overcast;
4610 -> cloudy;
4611 -> 'mostly-cloudy';
4612 -> 'partly-cloudy';
4613 -> 'partly-sunny';
4614 -> 'mostly-sunny';
4615 -> sunny;
4616 -> 'fair-skies';
4617 -> 'clear-skies';
4618 -> 'mostly-clear';
4619 -> 'mostly-dry';
4620 -> dry;
4621 -> 'uV-index-very-high';
4622 -> 'uV-index-high';
4623 -> 'uV-index-moderate';
4624 -> 'uV-index-low';
4625 -> 'uV-index-very-low';
4626 -> 'barometric-pressure';
4627 -> 'ozone-alert';
4628 -> 'lighting-unknown';
4629 -> 'artificial-exterior-light';
4630 -> 'artificial-interior-light';
4631 -> darkness;
4632 -> dusk;
4633 -> dawn;
4634 -> moonlight;
4635 -> daylight;
4735 -> 'weather-forecast-withdrawn';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_Winds(Val) ->
if Val =:= tornado ->
<<5121:16>>;
Val =:= hurricane ->
<<5122:16>>;
Val =:= 'hurricane-force-winds' ->
<<5123:16>>;
Val =:= 'tropical-storm' ->
<<5124:16>>;
Val =:= 'gale-force-winds' ->
<<5125:16>>;
Val =:= 'storm-force-winds' ->
<<5126:16>>;
Val =:= 'strong-winds' ->
<<5127:16>>;
Val =:= 'moderate-winds' ->
<<5128:16>>;
Val =:= 'light-winds' ->
<<5129:16>>;
Val =:= calm ->
<<5130:16>>;
Val =:= 'gusty-winds' ->
<<5131:16>>;
Val =:= crosswinds ->
<<5132:16>>;
Val =:= windy ->
<<5133:16>>;
Val =:= 'strong-winds-have-eased' ->
<<5246:16>>;
Val =:= 'strong-wind-forecast-withdrawn' ->
<<5247:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_Winds(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
5121 -> tornado;
5122 -> hurricane;
5123 -> 'hurricane-force-winds';
5124 -> 'tropical-storm';
5125 -> 'gale-force-winds';
5126 -> 'storm-force-winds';
5127 -> 'strong-winds';
5128 -> 'moderate-winds';
5129 -> 'light-winds';
5130 -> calm;
5131 -> 'gusty-winds';
5132 -> crosswinds;
5133 -> windy;
5246 -> 'strong-winds-have-eased';
5247 -> 'strong-wind-forecast-withdrawn';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_WinterDrivingIndex(Val) ->
if Val =:= 'driving-conditions-good' ->
<<6401:16>>;
Val =:= 'driving-conditions-fair' ->
<<6402:16>>;
Val =:= 'difficult-driving-conditions' ->
<<6403:16>>;
Val =:= 'very-difficult-driving-conditions' ->
<<6404:16>>;
Val =:= 'hazardous-driving-conditions' ->
<<6405:16>>;
Val =:= 'extremely-hazardous-driving-conditions' ->
<<6406:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_WinterDrivingIndex(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
6401 -> 'driving-conditions-good';
6402 -> 'driving-conditions-fair';
6403 -> 'difficult-driving-conditions';
6404 -> 'very-difficult-driving-conditions';
6405 -> 'hazardous-driving-conditions';
6406 -> 'extremely-hazardous-driving-conditions';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_WinterDrivingRestrictions(Val) ->
if Val =:= 'winter-equipment-recommended' ->
<<6145:16>>;
Val =:= 'winter-equipment-required' ->
<<6146:16>>;
Val =:= 'snow-chains-recommended' ->
<<6147:16>>;
Val =:= 'snow-chains-required' ->
<<6148:16>>;
Val =:= 'snow-chains-prohibited' ->
<<6149:16>>;
Val =:= 'studded-tires-prohibited' ->
<<6150:16>>;
Val =:= 'snow-tires-recommended' ->
<<6151:16>>;
Val =:= 'snow-tires-required' ->
<<6152:16>>;
Val =:= 'four-wheel-drive-recommended' ->
<<6153:16>>;
Val =:= 'four-wheel-drive-required' ->
<<6154:16>>;
Val =:= 'snow-tires-or-chains-recommended' ->
<<6155:16>>;
Val =:= 'snow-tires-or-chains-required' ->
<<6156:16>>;
Val =:= 'winter-driving-requirements-lifted' ->
<<6271:16>>;
Val bsr 16 =:= 0 ->
<<Val:16>>;
true ->
exit({error,{asn1,{illegal_integer,Val}}})
end.


dec_WinterDrivingRestrictions(Bytes) ->
begin
<<V1@V0:16,V1@Buf1/bitstring>> = Bytes,
V1@Int2 = case V1@V0 of
6145 -> 'winter-equipment-recommended';
6146 -> 'winter-equipment-required';
6147 -> 'snow-chains-recommended';
6148 -> 'snow-chains-required';
6149 -> 'snow-chains-prohibited';
6150 -> 'studded-tires-prohibited';
6151 -> 'snow-tires-recommended';
6152 -> 'snow-tires-required';
6153 -> 'four-wheel-drive-recommended';
6154 -> 'four-wheel-drive-required';
6155 -> 'snow-tires-or-chains-recommended';
6156 -> 'snow-tires-or-chains-required';
6271 -> 'winter-driving-requirements-lifted';
_ -> V1@V0
end,
{V1@Int2,V1@Buf1}
end.

enc_ITISEventType(Val) ->
{ChoiceTag,ChoiceVal} = Val,
if ChoiceTag =:= trafficConditions ->
if ChoiceVal =:= 'stopped-traffic' ->
<<0:6,257:16>>;
ChoiceVal =:= 'stop-and-go-traffic' ->
<<0:6,258:16>>;
ChoiceVal =:= 'slow-traffic' ->
<<0:6,259:16>>;
ChoiceVal =:= 'heavy-traffic' ->
<<0:6,260:16>>;
ChoiceVal =:= 'traffic-building' ->
<<0:6,261:16>>;
ChoiceVal =:= 'long-queues' ->
<<0:6,262:16>>;
ChoiceVal =:= 'traffic-congestion' ->
<<0:6,263:16>>;
ChoiceVal =:= 'traffic-lighter-than-normal' ->
<<0:6,264:16>>;
ChoiceVal =:= 'traffic-heavier-than-normal' ->
<<0:6,265:16>>;
ChoiceVal =:= 'traffic-much-heavier-than-normal' ->
<<0:6,266:16>>;
ChoiceVal =:= 'current-speed' ->
<<0:6,267:16>>;
ChoiceVal =:= 'speed-limit' ->
<<0:6,268:16>>;
ChoiceVal =:= 'travel-time' ->
<<0:6,269:16>>;
ChoiceVal =:= 'merging-traffic' ->
<<0:6,272:16>>;
ChoiceVal =:= contraflow ->
<<0:6,273:16>>;
ChoiceVal =:= 'contraflow-canceled' ->
<<0:6,378:16>>;
ChoiceVal =:= 'traffic-flowing-freely' ->
<<0:6,379:16>>;
ChoiceVal =:= 'traffic-easing' ->
<<0:6,380:16>>;
ChoiceVal =:= 'traffic-returned-to-normal' ->
<<0:6,381:16>>;
ChoiceVal =:= 'no-problems-to-report' ->
<<0:6,382:16>>;
ChoiceVal =:= 'traffic-congestion-cleared' ->
<<0:6,383:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<0:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= accidentsAndIncidents ->
if ChoiceVal =:= accident ->
<<1:6,513:16>>;
ChoiceVal =:= 'serious-accident' ->
<<1:6,514:16>>;
ChoiceVal =:= 'injury-accident' ->
<<1:6,515:16>>;
ChoiceVal =:= 'minor-accident' ->
<<1:6,516:16>>;
ChoiceVal =:= 'multi-vehicle-accident' ->
<<1:6,517:16>>;
ChoiceVal =:= 'numerous-accidents' ->
<<1:6,518:16>>;
ChoiceVal =:= 'accident-involving-a-bicycle' ->
<<1:6,519:16>>;
ChoiceVal =:= 'accident-involving-a-bus' ->
<<1:6,520:16>>;
ChoiceVal =:= 'accident-involving-a-motorcycle' ->
<<1:6,521:16>>;
ChoiceVal =:= 'accident-involving-a-pedestrian' ->
<<1:6,522:16>>;
ChoiceVal =:= 'accident-involving-a-train' ->
<<1:6,523:16>>;
ChoiceVal =:= 'accident-involving-a-truck' ->
<<1:6,524:16>>;
ChoiceVal =:= 'accident-involving-hazardous-materials' ->
<<1:6,525:16>>;
ChoiceVal =:= 'earlier-accident' ->
<<1:6,526:16>>;
ChoiceVal =:= 'medical-emergency' ->
<<1:6,527:16>>;
ChoiceVal =:= 'secondary-accident' ->
<<1:6,528:16>>;
ChoiceVal =:= 'rescue-and-recovery-work-REMOVED' ->
<<1:6,529:16>>;
ChoiceVal =:= 'accident-investigation-work' ->
<<1:6,530:16>>;
ChoiceVal =:= incident ->
<<1:6,531:16>>;
ChoiceVal =:= 'stalled-vehicle' ->
<<1:6,532:16>>;
ChoiceVal =:= 'abandoned-vehicle' ->
<<1:6,533:16>>;
ChoiceVal =:= 'disabled-vehicle' ->
<<1:6,534:16>>;
ChoiceVal =:= 'disabled-truck' ->
<<1:6,535:16>>;
ChoiceVal =:= 'disabled-semi-trailer' ->
<<1:6,536:16>>;
ChoiceVal =:= 'disabled-bus' ->
<<1:6,537:16>>;
ChoiceVal =:= 'disabled-train' ->
<<1:6,538:16>>;
ChoiceVal =:= 'vehicle-spun-out' ->
<<1:6,539:16>>;
ChoiceVal =:= 'vehicle-on-fire' ->
<<1:6,540:16>>;
ChoiceVal =:= 'vehicle-in-water' ->
<<1:6,541:16>>;
ChoiceVal =:= 'vehicles-slowing-to-look-at-accident' ->
<<1:6,542:16>>;
ChoiceVal =:= 'jackknifed-semi-trailer' ->
<<1:6,543:16>>;
ChoiceVal =:= 'jackknifed-trailer-home' ->
<<1:6,544:16>>;
ChoiceVal =:= 'jackknifed-trailer' ->
<<1:6,545:16>>;
ChoiceVal =:= 'spillage-occurring-from-moving-vehicle' ->
<<1:6,546:16>>;
ChoiceVal =:= 'acid-spill' ->
<<1:6,547:16>>;
ChoiceVal =:= 'chemical-spill' ->
<<1:6,548:16>>;
ChoiceVal =:= 'fuel-spill' ->
<<1:6,549:16>>;
ChoiceVal =:= 'hazardous-materials-spill' ->
<<1:6,550:16>>;
ChoiceVal =:= 'oil-spill' ->
<<1:6,551:16>>;
ChoiceVal =:= 'spilled-load' ->
<<1:6,552:16>>;
ChoiceVal =:= 'toxic-spill' ->
<<1:6,553:16>>;
ChoiceVal =:= 'overturned-vehicle' ->
<<1:6,554:16>>;
ChoiceVal =:= 'overturned-truck' ->
<<1:6,555:16>>;
ChoiceVal =:= 'overturned-semi-trailer' ->
<<1:6,556:16>>;
ChoiceVal =:= 'overturned-bus' ->
<<1:6,557:16>>;
ChoiceVal =:= 'derailed-train' ->
<<1:6,558:16>>;
ChoiceVal =:= 'stuck-vehicle' ->
<<1:6,559:16>>;
ChoiceVal =:= 'truck-stuck-under-bridge' ->
<<1:6,560:16>>;
ChoiceVal =:= 'bus-stuck-under-bridge' ->
<<1:6,561:16>>;
ChoiceVal =:= 'accident-involving-a-semi-trailer' ->
<<1:6,562:16>>;
ChoiceVal =:= 'accident-cleared' ->
<<1:6,638:16>>;
ChoiceVal =:= 'incident-cleared' ->
<<1:6,639:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<1:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= closures ->
if ChoiceVal =:= 'closed-to-traffic' ->
<<2:6,769:16>>;
ChoiceVal =:= closed ->
<<2:6,770:16>>;
ChoiceVal =:= 'closed-ahead' ->
<<2:6,771:16>>;
ChoiceVal =:= 'closed-intermittently' ->
<<2:6,772:16>>;
ChoiceVal =:= 'closed-for-repairs' ->
<<2:6,773:16>>;
ChoiceVal =:= 'closed-for-the-season' ->
<<2:6,774:16>>;
ChoiceVal =:= blocked ->
<<2:6,775:16>>;
ChoiceVal =:= 'blocked-ahead' ->
<<2:6,776:16>>;
ChoiceVal =:= 'reduced-to-one-lane' ->
<<2:6,777:16>>;
ChoiceVal =:= 'reduced-to-two-lanes' ->
<<2:6,778:16>>;
ChoiceVal =:= 'reduced-to-three-lanes' ->
<<2:6,779:16>>;
ChoiceVal =:= collapse ->
<<2:6,780:16>>;
ChoiceVal =:= out ->
<<2:6,781:16>>;
ChoiceVal =:= 'open-to-traffic' ->
<<2:6,891:16>>;
ChoiceVal =:= open ->
<<2:6,892:16>>;
ChoiceVal =:= 'reopened-to-traffic' ->
<<2:6,893:16>>;
ChoiceVal =:= clearing ->
<<2:6,894:16>>;
ChoiceVal =:= 'cleared-from-road' ->
<<2:6,895:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<2:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= roadwork ->
if ChoiceVal =:= 'road-construction' ->
<<3:6,1025:16>>;
ChoiceVal =:= 'major-road-construction' ->
<<3:6,1026:16>>;
ChoiceVal =:= 'long-term-road-construction' ->
<<3:6,1027:16>>;
ChoiceVal =:= 'construction-work' ->
<<3:6,1028:16>>;
ChoiceVal =:= 'paving-operations' ->
<<3:6,1029:16>>;
ChoiceVal =:= 'work-in-the-median' ->
<<3:6,1030:16>>;
ChoiceVal =:= 'road-reconstruction' ->
<<3:6,1031:16>>;
ChoiceVal =:= 'opposing-traffic' ->
<<3:6,1032:16>>;
ChoiceVal =:= 'narrow-lanes' ->
<<3:6,1033:16>>;
ChoiceVal =:= 'construction-traffic-merging' ->
<<3:6,1034:16>>;
ChoiceVal =:= 'single-line-traffic-alternating-directions' ->
<<3:6,1035:16>>;
ChoiceVal =:= 'road-maintenance-operations' ->
<<3:6,1036:16>>;
ChoiceVal =:= 'road-marking-operations' ->
<<3:6,1037:16>>;
ChoiceVal =:= 'bridge-maintenance-operations' ->
<<3:6,1038:16>>;
ChoiceVal =:= 'bridge-construction' ->
<<3:6,1039:16>>;
ChoiceVal =:= 'bridge-demolition-work' ->
<<3:6,1040:16>>;
ChoiceVal =:= blasting ->
<<3:6,1041:16>>;
ChoiceVal =:= 'avalanche-control-activities' ->
<<3:6,1042:16>>;
ChoiceVal =:= 'water-main-work' ->
<<3:6,1043:16>>;
ChoiceVal =:= 'gas-main-work' ->
<<3:6,1044:16>>;
ChoiceVal =:= 'work-on-underground-cables' ->
<<3:6,1045:16>>;
ChoiceVal =:= 'work-on-underground-services' ->
<<3:6,1046:16>>;
ChoiceVal =:= 'new-road-construction-layout' ->
<<3:6,1047:16>>;
ChoiceVal =:= 'new-road-layout' ->
<<3:6,1048:16>>;
ChoiceVal =:= 'temporary-lane-markings' ->
<<3:6,1049:16>>;
ChoiceVal =:= 'temporary-traffic-lights' ->
<<3:6,1050:16>>;
ChoiceVal =:= 'emergency-maintenance' ->
<<3:6,1051:16>>;
ChoiceVal =:= cracks ->
<<3:6,1052:16>>;
ChoiceVal =:= bumps ->
<<3:6,1053:16>>;
ChoiceVal =:= 'storm-drain' ->
<<3:6,1054:16>>;
ChoiceVal =:= 'overgrown-grass' ->
<<3:6,1055:16>>;
ChoiceVal =:= 'overgrown-brushshrubs' ->
<<3:6,1056:16>>;
ChoiceVal =:= 'overgrown-trees' ->
<<3:6,1057:16>>;
ChoiceVal =:= 'crack-REMOVE' ->
<<3:6,1058:16>>;
ChoiceVal =:= 'drop-off' ->
<<3:6,1059:16>>;
ChoiceVal =:= 'seismic-retrofit' ->
<<3:6,1060:16>>;
ChoiceVal =:= 'road-widening' ->
<<3:6,1061:16>>;
ChoiceVal =:= 'utility-work' ->
<<3:6,1062:16>>;
ChoiceVal =:= 'road-maintenance-cleared' ->
<<3:6,1146:16>>;
ChoiceVal =:= 'normal-road-layout-restored' ->
<<3:6,1147:16>>;
ChoiceVal =:= 'road-work-clearance-in-progress' ->
<<3:6,1148:16>>;
ChoiceVal =:= 'road-construction-cleared' ->
<<3:6,1149:16>>;
ChoiceVal =:= 'normal-traffic-lanes-restored' ->
<<3:6,1150:16>>;
ChoiceVal =:= 'road-work-cleared' ->
<<3:6,1151:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<3:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= obstruction ->
if ChoiceVal =:= 'obstruction-on-roadway' ->
<<4:6,1281:16>>;
ChoiceVal =:= 'object-on-roadway' ->
<<4:6,1282:16>>;
ChoiceVal =:= 'objects-falling-from-moving-vehicle' ->
<<4:6,1283:16>>;
ChoiceVal =:= 'debris-on-roadway' ->
<<4:6,1284:16>>;
ChoiceVal =:= 'storm-damage' ->
<<4:6,1285:16>>;
ChoiceVal =:= 'people-on-roadway' ->
<<4:6,1286:16>>;
ChoiceVal =:= 'bicyclists-on-roadway' ->
<<4:6,1287:16>>;
ChoiceVal =:= 'sightseers-obstructing-access' ->
<<4:6,1288:16>>;
ChoiceVal =:= 'large-numbers-of-visitors' ->
<<4:6,1289:16>>;
ChoiceVal =:= 'animal-on-roadway' ->
<<4:6,1290:16>>;
ChoiceVal =:= 'large-animal-on-roadway' ->
<<4:6,1291:16>>;
ChoiceVal =:= 'herd-of-animals-on-roadway' ->
<<4:6,1292:16>>;
ChoiceVal =:= 'animal-struck' ->
<<4:6,1293:16>>;
ChoiceVal =:= 'fallen-trees' ->
<<4:6,1294:16>>;
ChoiceVal =:= 'downed-power-lines' ->
<<4:6,1295:16>>;
ChoiceVal =:= 'downed-cables' ->
<<4:6,1296:16>>;
ChoiceVal =:= subsidence ->
<<4:6,1297:16>>;
ChoiceVal =:= 'road-surface-collapse' ->
<<4:6,1298:16>>;
ChoiceVal =:= 'pavement-buckled' ->
<<4:6,1299:16>>;
ChoiceVal =:= pothole ->
<<4:6,1300:16>>;
ChoiceVal =:= flooding ->
<<4:6,1301:16>>;
ChoiceVal =:= 'broken-water-main' ->
<<4:6,1302:16>>;
ChoiceVal =:= 'collapsed-sewer' ->
<<4:6,1303:16>>;
ChoiceVal =:= 'sewer-overflow' ->
<<4:6,1304:16>>;
ChoiceVal =:= 'gas-leak' ->
<<4:6,1305:16>>;
ChoiceVal =:= snowmelt ->
<<4:6,1306:16>>;
ChoiceVal =:= mudslide ->
<<4:6,1307:16>>;
ChoiceVal =:= avalanche ->
<<4:6,1308:16>>;
ChoiceVal =:= rockfall ->
<<4:6,1309:16>>;
ChoiceVal =:= landslide ->
<<4:6,1310:16>>;
ChoiceVal =:= 'over-turned-trees' ->
<<4:6,1311:16>>;
ChoiceVal =:= 'tree-limbs' ->
<<4:6,1312:16>>;
ChoiceVal =:= 'utility-pole-down' ->
<<4:6,1314:16>>;
ChoiceVal =:= 'advertising-signs' ->
<<4:6,1315:16>>;
ChoiceVal =:= 'frost-heave' ->
<<4:6,1316:16>>;
ChoiceVal =:= 'frost-jacking' ->
<<4:6,1317:16>>;
ChoiceVal =:= washboard ->
<<4:6,1318:16>>;
ChoiceVal =:= 'wash-out' ->
<<4:6,1319:16>>;
ChoiceVal =:= 'clearance-work' ->
<<4:6,1406:16>>;
ChoiceVal =:= 'obstruction-cleared' ->
<<4:6,1407:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<4:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= delayStatusCancellation ->
if ChoiceVal =:= delays ->
<<5:6,1537:16>>;
ChoiceVal =:= 'short-delays' ->
<<5:6,1538:16>>;
ChoiceVal =:= 'long-delays' ->
<<5:6,1539:16>>;
ChoiceVal =:= 'very-long-delays' ->
<<5:6,1540:16>>;
ChoiceVal =:= 'delays-of-uncertain-duration' ->
<<5:6,1541:16>>;
ChoiceVal =:= 'delayed-until-further-notice' ->
<<5:6,1542:16>>;
ChoiceVal =:= busy ->
<<5:6,1543:16>>;
ChoiceVal =:= 'very-busy' ->
<<5:6,1544:16>>;
ChoiceVal =:= crowded ->
<<5:6,1545:16>>;
ChoiceVal =:= overcrowded ->
<<5:6,1546:16>>;
ChoiceVal =:= cancellations ->
<<5:6,1547:16>>;
ChoiceVal =:= 'route-canceled-and-no-replacement' ->
<<5:6,1548:16>>;
ChoiceVal =:= 'service-canceled' ->
<<5:6,1549:16>>;
ChoiceVal =:= 'service-suspended' ->
<<5:6,1550:16>>;
ChoiceVal =:= 'service-withdrawn' ->
<<5:6,1551:16>>;
ChoiceVal =:= 'service-fully-booked' ->
<<5:6,1552:16>>;
ChoiceVal =:= 'all-services-fully-booked' ->
<<5:6,1553:16>>;
ChoiceVal =:= 'next-departure' ->
<<5:6,1554:16>>;
ChoiceVal =:= 'next-arrival' ->
<<5:6,1555:16>>;
ChoiceVal =:= 'very-frequent-service' ->
<<5:6,1556:16>>;
ChoiceVal =:= 'frequent-service' ->
<<5:6,1557:16>>;
ChoiceVal =:= 'fairly-frequent-service' ->
<<5:6,1558:16>>;
ChoiceVal =:= 'regular-service' ->
<<5:6,1559:16>>;
ChoiceVal =:= 'irregular-service' ->
<<5:6,1560:16>>;
ChoiceVal =:= 'not-operating' ->
<<5:6,1561:16>>;
ChoiceVal =:= 'system-busy' ->
<<5:6,1562:16>>;
ChoiceVal =:= 'system-very-busy' ->
<<5:6,1563:16>>;
ChoiceVal =:= 'system-crowded' ->
<<5:6,1564:16>>;
ChoiceVal =:= 'system-overcrowded' ->
<<5:6,1565:16>>;
ChoiceVal =:= 'deleted-travel-time' ->
<<5:6,1566:16>>;
ChoiceVal =:= headway ->
<<5:6,1567:16>>;
ChoiceVal =:= 'extra-services-in-operation' ->
<<5:6,1568:16>>;
ChoiceVal =:= 'delays-clearing' ->
<<5:6,1660:16>>;
ChoiceVal =:= 'delays-cleared' ->
<<5:6,1661:16>>;
ChoiceVal =:= 'normal-services-resumed' ->
<<5:6,1662:16>>;
ChoiceVal =:= operating ->
<<5:6,1663:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<5:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= unusualDriving ->
if ChoiceVal =:= 'vehicle-traveling-wrong-way' ->
<<6:6,1793:16>>;
ChoiceVal =:= 'reckless-driver' ->
<<6:6,1794:16>>;
ChoiceVal =:= 'prohibited-vehicle-on-roadway' ->
<<6:6,1795:16>>;
ChoiceVal =:= 'emergency-vehicles-on-roadway' ->
<<6:6,1796:16>>;
ChoiceVal =:= 'high-speed-emergency-vehicles' ->
<<6:6,1797:16>>;
ChoiceVal =:= 'high-speed-chase' ->
<<6:6,1798:16>>;
ChoiceVal =:= 'dangerous-vehicle-warning-cleared' ->
<<6:6,1918:16>>;
ChoiceVal =:= 'emergency-vehicle-warning-cleared' ->
<<6:6,1919:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<6:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= mobileSituation ->
if ChoiceVal =:= 'abnormal-load' ->
<<7:6,2049:16>>;
ChoiceVal =:= 'wide-load' ->
<<7:6,2050:16>>;
ChoiceVal =:= 'long-load' ->
<<7:6,2051:16>>;
ChoiceVal =:= 'slow-vehicle' ->
<<7:6,2052:16>>;
ChoiceVal =:= 'farm-equipment' ->
<<7:6,2053:16>>;
ChoiceVal =:= 'horse-drawn-vehicles' ->
<<7:6,2054:16>>;
ChoiceVal =:= 'overheight-load' ->
<<7:6,2055:16>>;
ChoiceVal =:= 'overweight-load' ->
<<7:6,2056:16>>;
ChoiceVal =:= 'tracked-vehicle' ->
<<7:6,2057:16>>;
ChoiceVal =:= 'vehicle-carrying-hazardous-materials' ->
<<7:6,2058:16>>;
ChoiceVal =:= 'slow-moving-maintenance-vehicle' ->
<<7:6,2059:16>>;
ChoiceVal =:= convoy ->
<<7:6,2060:16>>;
ChoiceVal =:= 'military-convoy' ->
<<7:6,2061:16>>;
ChoiceVal =:= 'refugee-convoy' ->
<<7:6,2062:16>>;
ChoiceVal =:= motorcade ->
<<7:6,2063:16>>;
ChoiceVal =:= 'mobile-situation-repositioning' ->
<<7:6,2064:16>>;
ChoiceVal =:= 'winter-maintenance-vehicles' ->
<<7:6,2065:16>>;
ChoiceVal =:= snowplows ->
<<7:6,2066:16>>;
ChoiceVal =:= 'slow-moving-maintenance-vehicle-warning-cleared' ->
<<7:6,2172:16>>;
ChoiceVal =:= 'exceptional-load-warning-cleared' ->
<<7:6,2173:16>>;
ChoiceVal =:= 'hazardous-load-warning-cleared' ->
<<7:6,2174:16>>;
ChoiceVal =:= 'convoy-cleared' ->
<<7:6,2175:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<7:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= deviceStatus ->
if ChoiceVal =:= 'lane-control-signs-not-working' ->
<<8:6,2305:16>>;
ChoiceVal =:= 'lane-control-signs-working-incorrectly' ->
<<8:6,2306:16>>;
ChoiceVal =:= 'lane-control-signs-operating' ->
<<8:6,2307:16>>;
ChoiceVal =:= 'variable-message-signs-not-working' ->
<<8:6,2308:16>>;
ChoiceVal =:= 'variable-message-signs-working-incorrectly' ->
<<8:6,2309:16>>;
ChoiceVal =:= 'variable-message-signs-operating' ->
<<8:6,2310:16>>;
ChoiceVal =:= 'emergency-telephones-not-working' ->
<<8:6,2311:16>>;
ChoiceVal =:= 'emergency-telephone-number-not-working' ->
<<8:6,2312:16>>;
ChoiceVal =:= 'traffic-lights-not-working' ->
<<8:6,2313:16>>;
ChoiceVal =:= 'traffic-lights-working-incorrectly' ->
<<8:6,2314:16>>;
ChoiceVal =:= 'ramp-control-signals-not-working' ->
<<8:6,2315:16>>;
ChoiceVal =:= 'ramp-control-signals-working-incorrectly' ->
<<8:6,2316:16>>;
ChoiceVal =:= 'temporary-traffic-lights-not-working' ->
<<8:6,2317:16>>;
ChoiceVal =:= 'temporary-traffic-lights-working-incorrectly' ->
<<8:6,2318:16>>;
ChoiceVal =:= 'traffic-signal-control-computer-not-working' ->
<<8:6,2319:16>>;
ChoiceVal =:= 'traffic-signal-timings-changed' ->
<<8:6,2320:16>>;
ChoiceVal =:= 'overheight-warning-system-triggered' ->
<<8:6,2321:16>>;
ChoiceVal =:= 'equipment-failure' ->
<<8:6,2322:16>>;
ChoiceVal =:= 'railroad-crossing-equipment-failure' ->
<<8:6,2323:16>>;
ChoiceVal =:= 'tunnel-ventilation-not-working' ->
<<8:6,2324:16>>;
ChoiceVal =:= 'power-failure' ->
<<8:6,2325:16>>;
ChoiceVal =:= 'widespread-power-outages' ->
<<8:6,2326:16>>;
ChoiceVal =:= 'technical-problems' ->
<<8:6,2327:16>>;
ChoiceVal =:= 'sign-down' ->
<<8:6,2328:16>>;
ChoiceVal =:= 'lines-in-road-faded' ->
<<8:6,2329:16>>;
ChoiceVal =:= 'damaged-light-standard' ->
<<8:6,2330:16>>;
ChoiceVal =:= 'traffic-signal-stuck-on-flash' ->
<<8:6,2331:16>>;
ChoiceVal =:= 'guide-rail' ->
<<8:6,2332:16>>;
ChoiceVal =:= fencing ->
<<8:6,2333:16>>;
ChoiceVal =:= 'light-standard-hanging-by-wires' ->
<<8:6,2334:16>>;
ChoiceVal =:= 'call-box' ->
<<8:6,2335:16>>;
ChoiceVal =:= 'signal-cabinet' ->
<<8:6,2336:16>>;
ChoiceVal =:= detector ->
<<8:6,2337:16>>;
ChoiceVal =:= 'improper-use-of-State-vehicle-or-equipment' ->
<<8:6,2338:16>>;
ChoiceVal =:= 'bulb-out' ->
<<8:6,2339:16>>;
ChoiceVal =:= 'not-yet-operational' ->
<<8:6,2340:16>>;
ChoiceVal =:= 'not-yet-installed' ->
<<8:6,2341:16>>;
ChoiceVal =:= 'electronic-signs-repaired' ->
<<8:6,2428:16>>;
ChoiceVal =:= 'emergency-call-facilities-restored' ->
<<8:6,2429:16>>;
ChoiceVal =:= 'traffic-signals-repaired' ->
<<8:6,2430:16>>;
ChoiceVal =:= 'railroad-crossing-equipment-now-working-normally' ->
<<8:6,2431:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<8:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= restrictionClass ->
if ChoiceVal =:= restrictions ->
<<9:6,2561:16>>;
ChoiceVal =:= 'ramp-restrictions' ->
<<9:6,2562:16>>;
ChoiceVal =:= 'truck-restriction' ->
<<9:6,2563:16>>;
ChoiceVal =:= 'speed-restriction' ->
<<9:6,2564:16>>;
ChoiceVal =:= 'noise-restriction' ->
<<9:6,2565:16>>;
ChoiceVal =:= 'traffic-regulations-have-been-changed' ->
<<9:6,2566:16>>;
ChoiceVal =:= 'local-access-only' ->
<<9:6,2567:16>>;
ChoiceVal =:= 'no-trailers' ->
<<9:6,2568:16>>;
ChoiceVal =:= 'no-high-profile-vehicles' ->
<<9:6,2569:16>>;
ChoiceVal =:= 'hazardous-materials-truck-restriction' ->
<<9:6,2570:16>>;
ChoiceVal =:= 'no-through-traffic' ->
<<9:6,2571:16>>;
ChoiceVal =:= 'no-motor-vehicles' ->
<<9:6,2572:16>>;
ChoiceVal =:= 'width-limit' ->
<<9:6,2573:16>>;
ChoiceVal =:= 'height-limit' ->
<<9:6,2574:16>>;
ChoiceVal =:= 'length-limit' ->
<<9:6,2575:16>>;
ChoiceVal =:= 'axle-load-limit' ->
<<9:6,2576:16>>;
ChoiceVal =:= 'gross-weight-limit' ->
<<9:6,2577:16>>;
ChoiceVal =:= 'axle-count-limit' ->
<<9:6,2578:16>>;
ChoiceVal =:= 'carpool-lane-available' ->
<<9:6,2579:16>>;
ChoiceVal =:= 'carpool-restrictions-changed' ->
<<9:6,2580:16>>;
ChoiceVal =:= 'hOV-2-no-single-occupant-vehicles' ->
<<9:6,2581:16>>;
ChoiceVal =:= 'hOV-3-no-vehicles-with-less-than-three-occupants' ->
<<9:6,2582:16>>;
ChoiceVal =:= 'bus-lane-available-for-all-vehicles' ->
<<9:6,2583:16>>;
ChoiceVal =:= 'truck-lane-available-for-all-vehicles' ->
<<9:6,2584:16>>;
ChoiceVal =:= 'permits-call-in-basis' ->
<<9:6,2585:16>>;
ChoiceVal =:= 'permits-temporarily-closed' ->
<<9:6,2586:16>>;
ChoiceVal =:= 'permits-closed' ->
<<9:6,2587:16>>;
ChoiceVal =:= 'road-use-permits-required' ->
<<9:6,2588:16>>;
ChoiceVal =:= 'permits-open' ->
<<9:6,2675:16>>;
ChoiceVal =:= 'restrictions-for-high-profile-vehicles-lifted' ->
<<9:6,2676:16>>;
ChoiceVal =:= 'width-limit-lifted' ->
<<9:6,2677:16>>;
ChoiceVal =:= 'height-limit-lifted' ->
<<9:6,2678:16>>;
ChoiceVal =:= 'length-limit-lifted' ->
<<9:6,2679:16>>;
ChoiceVal =:= 'axle-load-limit-lifted' ->
<<9:6,2680:16>>;
ChoiceVal =:= 'weight-limit-lifted' ->
<<9:6,2681:16>>;
ChoiceVal =:= 'axle-count-limit-lifted' ->
<<9:6,2682:16>>;
ChoiceVal =:= 'carpool-restrictions-lifted' ->
<<9:6,2683:16>>;
ChoiceVal =:= 'lane-restrictions-lifted' ->
<<9:6,2684:16>>;
ChoiceVal =:= 'ramp-restrictions-lifted' ->
<<9:6,2685:16>>;
ChoiceVal =:= 'motor-vehicle-restrictions-lifted' ->
<<9:6,2686:16>>;
ChoiceVal =:= 'restrictions-lifted' ->
<<9:6,2687:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<9:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= incidentResponseStatus ->
if ChoiceVal =:= 'unconfirmed-report' ->
<<10:6,2817:16>>;
ChoiceVal =:= 'initial-response-en-route' ->
<<10:6,2818:16>>;
ChoiceVal =:= 'follow-up-response-en-route' ->
<<10:6,2819:16>>;
ChoiceVal =:= 'initial-response-on-scene' ->
<<10:6,2820:16>>;
ChoiceVal =:= 'follow-up-response-on-scene' ->
<<10:6,2821:16>>;
ChoiceVal =:= 'confirmed-report' ->
<<10:6,2822:16>>;
ChoiceVal =:= 'scene-is-unsecured-at-this-time' ->
<<10:6,2823:16>>;
ChoiceVal =:= 'response-scene-secured' ->
<<10:6,2824:16>>;
ChoiceVal =:= 'rescue-and-recovery-work-in-progress' ->
<<10:6,2825:16>>;
ChoiceVal =:= 'extraction-in-progress' ->
<<10:6,2826:16>>;
ChoiceVal =:= 'clearance-work-in-progress' ->
<<10:6,2827:16>>;
ChoiceVal =:= 'body-removal-operations' ->
<<10:6,2828:16>>;
ChoiceVal =:= 'fire-containment-contained' ->
<<10:6,2829:16>>;
ChoiceVal =:= 'fire-containment-not-contained' ->
<<10:6,2830:16>>;
ChoiceVal =:= 'event-cleared' ->
<<10:6,2831:16>>;
ChoiceVal =:= 'traffic-clearing' ->
<<10:6,2832:16>>;
ChoiceVal =:= 'incident-closed' ->
<<10:6,2833:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<10:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= disasters ->
if ChoiceVal =:= 'flash-flood' ->
<<11:6,3073:16>>;
ChoiceVal =:= 'major-flood' ->
<<11:6,3074:16>>;
ChoiceVal =:= 'reservoir-failure' ->
<<11:6,3075:16>>;
ChoiceVal =:= 'levee-failure' ->
<<11:6,3076:16>>;
ChoiceVal =:= tsunami ->
<<11:6,3077:16>>;
ChoiceVal =:= 'tidal-wave' ->
<<11:6,3078:16>>;
ChoiceVal =:= 'volcanic-eruption' ->
<<11:6,3079:16>>;
ChoiceVal =:= 'ash-fall' ->
<<11:6,3080:16>>;
ChoiceVal =:= 'lava-flow' ->
<<11:6,3081:16>>;
ChoiceVal =:= 'serious-fire' ->
<<11:6,3082:16>>;
ChoiceVal =:= 'forest-fire' ->
<<11:6,3083:16>>;
ChoiceVal =:= wildfire ->
<<11:6,3084:16>>;
ChoiceVal =:= 'building-fire' ->
<<11:6,3085:16>>;
ChoiceVal =:= 'brush-fire' ->
<<11:6,3086:16>>;
ChoiceVal =:= 'grass-fire' ->
<<11:6,3087:16>>;
ChoiceVal =:= 'fire-danger-extreme' ->
<<11:6,3088:16>>;
ChoiceVal =:= 'fire-danger-very-high' ->
<<11:6,3089:16>>;
ChoiceVal =:= 'fire-danger-high' ->
<<11:6,3090:16>>;
ChoiceVal =:= 'fire-danger-medium' ->
<<11:6,3091:16>>;
ChoiceVal =:= 'fire-danger-low' ->
<<11:6,3092:16>>;
ChoiceVal =:= 'earthquake-damage' ->
<<11:6,3093:16>>;
ChoiceVal =:= 'air-crash' ->
<<11:6,3094:16>>;
ChoiceVal =:= 'rail-crash' ->
<<11:6,3095:16>>;
ChoiceVal =:= 'toxic-release' ->
<<11:6,3096:16>>;
ChoiceVal =:= 'toxic-leak' ->
<<11:6,3097:16>>;
ChoiceVal =:= 'radioactive-release' ->
<<11:6,3098:16>>;
ChoiceVal =:= 'radiation-hazard' ->
<<11:6,3099:16>>;
ChoiceVal =:= 'reactor-leakage' ->
<<11:6,3100:16>>;
ChoiceVal =:= explosion ->
<<11:6,3101:16>>;
ChoiceVal =:= 'major-hazardous-materials-fire' ->
<<11:6,3102:16>>;
ChoiceVal =:= 'major-hazardous-materials-release' ->
<<11:6,3103:16>>;
ChoiceVal =:= 'disaster-cleared' ->
<<11:6,3199:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<11:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= disturbances ->
if ChoiceVal =:= assault ->
<<12:6,3329:16>>;
ChoiceVal =:= crime ->
<<12:6,3330:16>>;
ChoiceVal =:= robbery ->
<<12:6,3331:16>>;
ChoiceVal =:= 'fare-dispute' ->
<<12:6,3332:16>>;
ChoiceVal =:= shooting ->
<<12:6,3333:16>>;
ChoiceVal =:= 'gunfire-on-roadway' ->
<<12:6,3334:16>>;
ChoiceVal =:= suicide ->
<<12:6,3335:16>>;
ChoiceVal =:= fight ->
<<12:6,3336:16>>;
ChoiceVal =:= 'gang-fight' ->
<<12:6,3337:16>>;
ChoiceVal =:= 'person-harassment' ->
<<12:6,3338:16>>;
ChoiceVal =:= 'person-injured' ->
<<12:6,3339:16>>;
ChoiceVal =:= 'unruly-passenger' ->
<<12:6,3340:16>>;
ChoiceVal =:= 'person-intoxicated' ->
<<12:6,3341:16>>;
ChoiceVal =:= 'crowd-control-problem' ->
<<12:6,3342:16>>;
ChoiceVal =:= demonstration ->
<<12:6,3343:16>>;
ChoiceVal =:= march ->
<<12:6,3344:16>>;
ChoiceVal =:= 'public-disturbance' ->
<<12:6,3345:16>>;
ChoiceVal =:= riot ->
<<12:6,3346:16>>;
ChoiceVal =:= 'civil-unrest' ->
<<12:6,3347:16>>;
ChoiceVal =:= 'civil-emergency' ->
<<12:6,3348:16>>;
ChoiceVal =:= strike ->
<<12:6,3349:16>>;
ChoiceVal =:= 'public-transit-strike' ->
<<12:6,3350:16>>;
ChoiceVal =:= stampede ->
<<12:6,3351:16>>;
ChoiceVal =:= 'teargas-used' ->
<<12:6,3352:16>>;
ChoiceVal =:= 'security-alert' ->
<<12:6,3353:16>>;
ChoiceVal =:= 'security-incident' ->
<<12:6,3354:16>>;
ChoiceVal =:= checkpoint ->
<<12:6,3355:16>>;
ChoiceVal =:= 'bomb-alert' ->
<<12:6,3356:16>>;
ChoiceVal =:= 'terrorist-incident' ->
<<12:6,3357:16>>;
ChoiceVal =:= 'high-velocity-shell-fire' ->
<<12:6,3358:16>>;
ChoiceVal =:= 'explosives-in-use' ->
<<12:6,3359:16>>;
ChoiceVal =:= 'air-raid' ->
<<12:6,3360:16>>;
ChoiceVal =:= 'weapons-of-mass-destruction-threat' ->
<<12:6,3361:16>>;
ChoiceVal =:= 'military-operations' ->
<<12:6,3362:16>>;
ChoiceVal =:= 'sick-customer' ->
<<12:6,3363:16>>;
ChoiceVal =:= 'security-problem-cleared' ->
<<12:6,3454:16>>;
ChoiceVal =:= 'traffic-disturbance-cleared' ->
<<12:6,3455:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<12:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= sportingEvents ->
if ChoiceVal =:= 'sports-event' ->
<<13:6,3585:16>>;
ChoiceVal =:= game ->
<<13:6,3586:16>>;
ChoiceVal =:= tournament ->
<<13:6,3587:16>>;
ChoiceVal =:= 'track-and-field-event' ->
<<13:6,3588:16>>;
ChoiceVal =:= 'baseball-game' ->
<<13:6,3589:16>>;
ChoiceVal =:= 'basketball-game' ->
<<13:6,3590:16>>;
ChoiceVal =:= 'boxing-match' ->
<<13:6,3591:16>>;
ChoiceVal =:= 'football-game' ->
<<13:6,3592:16>>;
ChoiceVal =:= 'soccer-game' ->
<<13:6,3593:16>>;
ChoiceVal =:= 'golf-tournament' ->
<<13:6,3594:16>>;
ChoiceVal =:= 'hockey-game' ->
<<13:6,3595:16>>;
ChoiceVal =:= 'tennis-tournament' ->
<<13:6,3596:16>>;
ChoiceVal =:= 'wrestling-match' ->
<<13:6,3597:16>>;
ChoiceVal =:= 'road-race' ->
<<13:6,3598:16>>;
ChoiceVal =:= 'automobile-race' ->
<<13:6,3599:16>>;
ChoiceVal =:= 'bicycle-race' ->
<<13:6,3600:16>>;
ChoiceVal =:= 'race-event' ->
<<13:6,3601:16>>;
ChoiceVal =:= marathon ->
<<13:6,3602:16>>;
ChoiceVal =:= 'horse-show' ->
<<13:6,3603:16>>;
ChoiceVal =:= rodeo ->
<<13:6,3604:16>>;
ChoiceVal =:= 'water-sports-event' ->
<<13:6,3605:16>>;
ChoiceVal =:= 'winter-sports-event' ->
<<13:6,3606:16>>;
ChoiceVal =:= 'skating-event' ->
<<13:6,3607:16>>;
ChoiceVal =:= 'dog-sled-race' ->
<<13:6,3608:16>>;
ChoiceVal =:= 'sporting-event-ended' ->
<<13:6,3711:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<13:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= specialEvents ->
if ChoiceVal =:= 'major-event' ->
<<14:6,3841:16>>;
ChoiceVal =:= airshow ->
<<14:6,3842:16>>;
ChoiceVal =:= 'hot-air-ballooning' ->
<<14:6,3843:16>>;
ChoiceVal =:= concert ->
<<14:6,3844:16>>;
ChoiceVal =:= 'state-occasion' ->
<<14:6,3845:16>>;
ChoiceVal =:= 'vIP-visit' ->
<<14:6,3846:16>>;
ChoiceVal =:= show ->
<<14:6,3847:16>>;
ChoiceVal =:= festival ->
<<14:6,3848:16>>;
ChoiceVal =:= exhibition ->
<<14:6,3849:16>>;
ChoiceVal =:= 'performing-arts' ->
<<14:6,3850:16>>;
ChoiceVal =:= 'outdoor-market' ->
<<14:6,3851:16>>;
ChoiceVal =:= fair ->
<<14:6,3852:16>>;
ChoiceVal =:= carnival ->
<<14:6,3853:16>>;
ChoiceVal =:= 'fireworks-display' ->
<<14:6,3854:16>>;
ChoiceVal =:= 'trade-expo' ->
<<14:6,3855:16>>;
ChoiceVal =:= 'movie-filming' ->
<<14:6,3856:16>>;
ChoiceVal =:= 'presidential-visit' ->
<<14:6,3857:16>>;
ChoiceVal =:= parade ->
<<14:6,3858:16>>;
ChoiceVal =:= procession ->
<<14:6,3859:16>>;
ChoiceVal =:= 'funeral-procession' ->
<<14:6,3860:16>>;
ChoiceVal =:= crowd ->
<<14:6,3861:16>>;
ChoiceVal =:= 'holiday-traffic-crowds' ->
<<14:6,3862:16>>;
ChoiceVal =:= 'event-ended' ->
<<14:6,3967:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<14:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= parkingInformation ->
if ChoiceVal =:= 'normal-parking-restrictions-lifted' ->
<<15:6,4097:16>>;
ChoiceVal =:= 'parking-meter-restrictions-lifted' ->
<<15:6,4098:16>>;
ChoiceVal =:= 'special-parking-restrictions-in-force' ->
<<15:6,4099:16>>;
ChoiceVal =:= 'full-parking-lot' ->
<<15:6,4100:16>>;
ChoiceVal =:= 'full-parking-garage' ->
<<15:6,4101:16>>;
ChoiceVal =:= 'all-parking-lots-full' ->
<<15:6,4102:16>>;
ChoiceVal =:= 'no-parking-spaces-available' ->
<<15:6,4103:16>>;
ChoiceVal =:= 'only-a-few-spaces-available' ->
<<15:6,4104:16>>;
ChoiceVal =:= 'spaces-available' ->
<<15:6,4105:16>>;
ChoiceVal =:= 'no-parking' ->
<<15:6,4106:16>>;
ChoiceVal =:= 'parking-on-one-side-of-street-only' ->
<<15:6,4107:16>>;
ChoiceVal =:= 'parking-on-both-sides-of-street' ->
<<15:6,4108:16>>;
ChoiceVal =:= 'parallel-parking-only' ->
<<15:6,4109:16>>;
ChoiceVal =:= 'parking-meters-not-available' ->
<<15:6,4110:16>>;
ChoiceVal =:= 'use-of-parking-meters-restricted' ->
<<15:6,4111:16>>;
ChoiceVal =:= 'event-parking' ->
<<15:6,4112:16>>;
ChoiceVal =:= 'handicapped-parking' ->
<<15:6,4113:16>>;
ChoiceVal =:= 'long-term-parking' ->
<<15:6,4114:16>>;
ChoiceVal =:= 'overnight-parking' ->
<<15:6,4115:16>>;
ChoiceVal =:= 'short-term-parking' ->
<<15:6,4116:16>>;
ChoiceVal =:= 'parking-by-permit-only' ->
<<15:6,4117:16>>;
ChoiceVal =:= 'emergency-parking-only' ->
<<15:6,4118:16>>;
ChoiceVal =:= 'emergency-stopping-only' ->
<<15:6,4119:16>>;
ChoiceVal =:= parking ->
<<15:6,4120:16>>;
ChoiceVal =:= stopping ->
<<15:6,4121:16>>;
ChoiceVal =:= standing ->
<<15:6,4122:16>>;
ChoiceVal =:= 'tow-away-zone' ->
<<15:6,4123:16>>;
ChoiceVal =:= 'school-zone' ->
<<15:6,4124:16>>;
ChoiceVal =:= 'speed-zone' ->
<<15:6,4125:16>>;
ChoiceVal =:= 'loading-zone' ->
<<15:6,4126:16>>;
ChoiceVal =:= 'state-law' ->
<<15:6,4127:16>>;
ChoiceVal =:= 'van-accessible' ->
<<15:6,4128:16>>;
ChoiceVal =:= 'special-parking-restrictions-lifted' ->
<<15:6,4222:16>>;
ChoiceVal =:= 'no-parking-information-available' ->
<<15:6,4223:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<15:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= systemInformation ->
if ChoiceVal =:= 'information-available-on-radio' ->
<<16:6,4353:16>>;
ChoiceVal =:= 'information-available-on-TV' ->
<<16:6,4354:16>>;
ChoiceVal =:= 'call-to-get-information' ->
<<16:6,4355:16>>;
ChoiceVal =:= 'information-available-via-Internet' ->
<<16:6,4356:16>>;
ChoiceVal =:= 'test-message' ->
<<16:6,4357:16>>;
ChoiceVal =:= 'no-information-available' ->
<<16:6,4358:16>>;
ChoiceVal =:= 'null-description' ->
<<16:6,4359:16>>;
ChoiceVal =:= 'information-service-is-being-suspended' ->
<<16:6,4360:16>>;
ChoiceVal =:= 'police-assistance' ->
<<16:6,4361:16>>;
ChoiceVal =:= 'police-monitor-CB' ->
<<16:6,4362:16>>;
ChoiceVal =:= 'emergency-notification' ->
<<16:6,4363:16>>;
ChoiceVal =:= 'in-emergency-dial-911' ->
<<16:6,4364:16>>;
ChoiceVal =:= 'travel-Info-call-511' ->
<<16:6,4365:16>>;
ChoiceVal =:= 'car-pool-information' ->
<<16:6,4366:16>>;
ChoiceVal =:= 'information-service-resumed' ->
<<16:6,4478:16>>;
ChoiceVal =:= 'message-canceled' ->
<<16:6,4479:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<16:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= weatherConditions ->
if ChoiceVal =:= overcast ->
<<17:6,4609:16>>;
ChoiceVal =:= cloudy ->
<<17:6,4610:16>>;
ChoiceVal =:= 'mostly-cloudy' ->
<<17:6,4611:16>>;
ChoiceVal =:= 'partly-cloudy' ->
<<17:6,4612:16>>;
ChoiceVal =:= 'partly-sunny' ->
<<17:6,4613:16>>;
ChoiceVal =:= 'mostly-sunny' ->
<<17:6,4614:16>>;
ChoiceVal =:= sunny ->
<<17:6,4615:16>>;
ChoiceVal =:= 'fair-skies' ->
<<17:6,4616:16>>;
ChoiceVal =:= 'clear-skies' ->
<<17:6,4617:16>>;
ChoiceVal =:= 'mostly-clear' ->
<<17:6,4618:16>>;
ChoiceVal =:= 'mostly-dry' ->
<<17:6,4619:16>>;
ChoiceVal =:= dry ->
<<17:6,4620:16>>;
ChoiceVal =:= 'uV-index-very-high' ->
<<17:6,4621:16>>;
ChoiceVal =:= 'uV-index-high' ->
<<17:6,4622:16>>;
ChoiceVal =:= 'uV-index-moderate' ->
<<17:6,4623:16>>;
ChoiceVal =:= 'uV-index-low' ->
<<17:6,4624:16>>;
ChoiceVal =:= 'uV-index-very-low' ->
<<17:6,4625:16>>;
ChoiceVal =:= 'barometric-pressure' ->
<<17:6,4626:16>>;
ChoiceVal =:= 'ozone-alert' ->
<<17:6,4627:16>>;
ChoiceVal =:= 'lighting-unknown' ->
<<17:6,4628:16>>;
ChoiceVal =:= 'artificial-exterior-light' ->
<<17:6,4629:16>>;
ChoiceVal =:= 'artificial-interior-light' ->
<<17:6,4630:16>>;
ChoiceVal =:= darkness ->
<<17:6,4631:16>>;
ChoiceVal =:= dusk ->
<<17:6,4632:16>>;
ChoiceVal =:= dawn ->
<<17:6,4633:16>>;
ChoiceVal =:= moonlight ->
<<17:6,4634:16>>;
ChoiceVal =:= daylight ->
<<17:6,4635:16>>;
ChoiceVal =:= 'weather-forecast-withdrawn' ->
<<17:6,4735:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<17:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= precipitation ->
if ChoiceVal =:= 'severe-weather' ->
<<18:6,4865:16>>;
ChoiceVal =:= blizzard ->
<<18:6,4866:16>>;
ChoiceVal =:= 'heavy-snow' ->
<<18:6,4867:16>>;
ChoiceVal =:= snow ->
<<18:6,4868:16>>;
ChoiceVal =:= 'light-snow' ->
<<18:6,4869:16>>;
ChoiceVal =:= 'snow-showers' ->
<<18:6,4870:16>>;
ChoiceVal =:= 'winter-storm' ->
<<18:6,4871:16>>;
ChoiceVal =:= 'ice-glaze' ->
<<18:6,4872:16>>;
ChoiceVal =:= 'heavy-frost' ->
<<18:6,4873:16>>;
ChoiceVal =:= frost ->
<<18:6,4874:16>>;
ChoiceVal =:= 'ice-storm' ->
<<18:6,4875:16>>;
ChoiceVal =:= sleet ->
<<18:6,4876:16>>;
ChoiceVal =:= 'rain-and-snow-mixed' ->
<<18:6,4877:16>>;
ChoiceVal =:= 'rain-changing-to-snow' ->
<<18:6,4878:16>>;
ChoiceVal =:= 'damaging-hail' ->
<<18:6,4879:16>>;
ChoiceVal =:= hail ->
<<18:6,4880:16>>;
ChoiceVal =:= thunderstorms ->
<<18:6,4881:16>>;
ChoiceVal =:= thundershowers ->
<<18:6,4882:16>>;
ChoiceVal =:= 'extremely-heavy-downpour' ->
<<18:6,4883:16>>;
ChoiceVal =:= 'heavy-rain' ->
<<18:6,4884:16>>;
ChoiceVal =:= rain ->
<<18:6,4885:16>>;
ChoiceVal =:= 'light-rain' ->
<<18:6,4886:16>>;
ChoiceVal =:= drizzle ->
<<18:6,4887:16>>;
ChoiceVal =:= showers ->
<<18:6,4888:16>>;
ChoiceVal =:= dew ->
<<18:6,4889:16>>;
ChoiceVal =:= 'precipitation-cleared' ->
<<18:6,4991:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<18:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= winds ->
if ChoiceVal =:= tornado ->
<<19:6,5121:16>>;
ChoiceVal =:= hurricane ->
<<19:6,5122:16>>;
ChoiceVal =:= 'hurricane-force-winds' ->
<<19:6,5123:16>>;
ChoiceVal =:= 'tropical-storm' ->
<<19:6,5124:16>>;
ChoiceVal =:= 'gale-force-winds' ->
<<19:6,5125:16>>;
ChoiceVal =:= 'storm-force-winds' ->
<<19:6,5126:16>>;
ChoiceVal =:= 'strong-winds' ->
<<19:6,5127:16>>;
ChoiceVal =:= 'moderate-winds' ->
<<19:6,5128:16>>;
ChoiceVal =:= 'light-winds' ->
<<19:6,5129:16>>;
ChoiceVal =:= calm ->
<<19:6,5130:16>>;
ChoiceVal =:= 'gusty-winds' ->
<<19:6,5131:16>>;
ChoiceVal =:= crosswinds ->
<<19:6,5132:16>>;
ChoiceVal =:= windy ->
<<19:6,5133:16>>;
ChoiceVal =:= 'strong-winds-have-eased' ->
<<19:6,5246:16>>;
ChoiceVal =:= 'strong-wind-forecast-withdrawn' ->
<<19:6,5247:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<19:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= visibilityAndAirQuality ->
if ChoiceVal =:= 'dense-fog' ->
<<20:6,5377:16>>;
ChoiceVal =:= fog ->
<<20:6,5378:16>>;
ChoiceVal =:= 'patchy-fog' ->
<<20:6,5379:16>>;
ChoiceVal =:= 'freezing-fog' ->
<<20:6,5380:16>>;
ChoiceVal =:= mist ->
<<20:6,5381:16>>;
ChoiceVal =:= haze ->
<<20:6,5382:16>>;
ChoiceVal =:= 'visibility-reduced' ->
<<20:6,5383:16>>;
ChoiceVal =:= 'white-out' ->
<<20:6,5384:16>>;
ChoiceVal =:= 'blowing-snow' ->
<<20:6,5385:16>>;
ChoiceVal =:= 'smoke-hazard' ->
<<20:6,5386:16>>;
ChoiceVal =:= 'spray-hazard' ->
<<20:6,5387:16>>;
ChoiceVal =:= 'low-sun-glare' ->
<<20:6,5388:16>>;
ChoiceVal =:= 'snow-glare' ->
<<20:6,5389:16>>;
ChoiceVal =:= 'blowing-dust' ->
<<20:6,5390:16>>;
ChoiceVal =:= 'blowing-sand' ->
<<20:6,5391:16>>;
ChoiceVal =:= 'dust-storms' ->
<<20:6,5392:16>>;
ChoiceVal =:= sandstorms ->
<<20:6,5393:16>>;
ChoiceVal =:= 'air-quality-good' ->
<<20:6,5394:16>>;
ChoiceVal =:= 'air-quality-fair' ->
<<20:6,5395:16>>;
ChoiceVal =:= 'air-quality-poor' ->
<<20:6,5396:16>>;
ChoiceVal =:= 'air-quality-very-poor' ->
<<20:6,5397:16>>;
ChoiceVal =:= 'severe-exhaust-pollution' ->
<<20:6,5398:16>>;
ChoiceVal =:= 'smog-alert' ->
<<20:6,5399:16>>;
ChoiceVal =:= 'pollen-count-high' ->
<<20:6,5400:16>>;
ChoiceVal =:= 'pollen-count-medium' ->
<<20:6,5401:16>>;
ChoiceVal =:= 'pollen-count-low' ->
<<20:6,5402:16>>;
ChoiceVal =:= 'swarms-of-insects' ->
<<20:6,5403:16>>;
ChoiceVal =:= 'visibility-blocked' ->
<<20:6,5404:16>>;
ChoiceVal =:= 'ice-fog' ->
<<20:6,5405:16>>;
ChoiceVal =:= 'fog-clearing' ->
<<20:6,5499:16>>;
ChoiceVal =:= 'visibility-improved' ->
<<20:6,5500:16>>;
ChoiceVal =:= 'fog-forecast-withdrawn' ->
<<20:6,5501:16>>;
ChoiceVal =:= 'pollution-alert-ended' ->
<<20:6,5502:16>>;
ChoiceVal =:= 'air-quality-improved' ->
<<20:6,5503:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<20:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= temperature ->
if ChoiceVal =:= 'maximum-temperature' ->
<<21:6,5633:16>>;
ChoiceVal =:= temperature ->
<<21:6,5634:16>>;
ChoiceVal =:= 'minimum-temperature' ->
<<21:6,5635:16>>;
ChoiceVal =:= 'current-temperature' ->
<<21:6,5636:16>>;
ChoiceVal =:= 'heat-index' ->
<<21:6,5637:16>>;
ChoiceVal =:= 'extreme-heat' ->
<<21:6,5638:16>>;
ChoiceVal =:= hot ->
<<21:6,5639:16>>;
ChoiceVal =:= hotter ->
<<21:6,5640:16>>;
ChoiceVal =:= heat ->
<<21:6,5641:16>>;
ChoiceVal =:= warmer ->
<<21:6,5642:16>>;
ChoiceVal =:= warm ->
<<21:6,5643:16>>;
ChoiceVal =:= mild ->
<<21:6,5644:16>>;
ChoiceVal =:= cool ->
<<21:6,5645:16>>;
ChoiceVal =:= cooler ->
<<21:6,5646:16>>;
ChoiceVal =:= cold ->
<<21:6,5647:16>>;
ChoiceVal =:= colder ->
<<21:6,5648:16>>;
ChoiceVal =:= 'very-cold' ->
<<21:6,5649:16>>;
ChoiceVal =:= 'extreme-cold' ->
<<21:6,5650:16>>;
ChoiceVal =:= 'wind-chill' ->
<<21:6,5651:16>>;
ChoiceVal =:= dewpoint ->
<<21:6,5652:16>>;
ChoiceVal =:= 'relative-humidity' ->
<<21:6,5653:16>>;
ChoiceVal =:= 'temperatures-close-to-the-seasonal-norm' ->
<<21:6,5758:16>>;
ChoiceVal =:= 'less-extreme-temperatures' ->
<<21:6,5759:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<21:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= pavementConditions ->
if ChoiceVal =:= impassable ->
<<22:6,5889:16>>;
ChoiceVal =:= 'almost-impassable' ->
<<22:6,5890:16>>;
ChoiceVal =:= 'passable-with-care' ->
<<22:6,5891:16>>;
ChoiceVal =:= passable ->
<<22:6,5892:16>>;
ChoiceVal =:= 'surface-water-hazard' ->
<<22:6,5893:16>>;
ChoiceVal =:= 'danger-of-hydroplaning' ->
<<22:6,5894:16>>;
ChoiceVal =:= 'wet-pavement' ->
<<22:6,5895:16>>;
ChoiceVal =:= 'treated-pavement' ->
<<22:6,5896:16>>;
ChoiceVal =:= slippery ->
<<22:6,5897:16>>;
ChoiceVal =:= 'mud-on-roadway' ->
<<22:6,5898:16>>;
ChoiceVal =:= 'leaves-on-roadway' ->
<<22:6,5899:16>>;
ChoiceVal =:= 'loose-sand-on-roadway' ->
<<22:6,5900:16>>;
ChoiceVal =:= 'loose-gravel' ->
<<22:6,5901:16>>;
ChoiceVal =:= 'fuel-on-roadway' ->
<<22:6,5902:16>>;
ChoiceVal =:= 'oil-on-roadway' ->
<<22:6,5903:16>>;
ChoiceVal =:= 'road-surface-in-poor-condition' ->
<<22:6,5904:16>>;
ChoiceVal =:= 'melting-tar' ->
<<22:6,5905:16>>;
ChoiceVal =:= ice ->
<<22:6,5906:16>>;
ChoiceVal =:= 'icy-patches' ->
<<22:6,5907:16>>;
ChoiceVal =:= 'black-ice' ->
<<22:6,5908:16>>;
ChoiceVal =:= 'ice-pellets-on-roadway' ->
<<22:6,5909:16>>;
ChoiceVal =:= 'ice-build-up' ->
<<22:6,5910:16>>;
ChoiceVal =:= 'freezing-rain' ->
<<22:6,5911:16>>;
ChoiceVal =:= 'wet-and-icy-roads' ->
<<22:6,5912:16>>;
ChoiceVal =:= 'melting-snow' ->
<<22:6,5913:16>>;
ChoiceVal =:= slush ->
<<22:6,5914:16>>;
ChoiceVal =:= 'frozen-slush' ->
<<22:6,5915:16>>;
ChoiceVal =:= 'snow-on-roadway' ->
<<22:6,5916:16>>;
ChoiceVal =:= 'packed-snow' ->
<<22:6,5917:16>>;
ChoiceVal =:= 'packed-snow-patches' ->
<<22:6,5918:16>>;
ChoiceVal =:= 'plowed-snow' ->
<<22:6,5919:16>>;
ChoiceVal =:= 'wet-snow' ->
<<22:6,5920:16>>;
ChoiceVal =:= 'fresh-snow' ->
<<22:6,5921:16>>;
ChoiceVal =:= 'powder-snow' ->
<<22:6,5922:16>>;
ChoiceVal =:= 'granular-snow' ->
<<22:6,5923:16>>;
ChoiceVal =:= 'frozen-snow' ->
<<22:6,5924:16>>;
ChoiceVal =:= 'crusted-snow' ->
<<22:6,5925:16>>;
ChoiceVal =:= 'deep-snow' ->
<<22:6,5926:16>>;
ChoiceVal =:= 'snow-drifts' ->
<<22:6,5927:16>>;
ChoiceVal =:= 'drifting-snow' ->
<<22:6,5928:16>>;
ChoiceVal =:= 'expected-snow-accumulation' ->
<<22:6,5929:16>>;
ChoiceVal =:= 'current-snow-accumulation' ->
<<22:6,5930:16>>;
ChoiceVal =:= 'rough-road' ->
<<22:6,5931:16>>;
ChoiceVal =:= sand ->
<<22:6,5932:16>>;
ChoiceVal =:= gravel ->
<<22:6,5933:16>>;
ChoiceVal =:= paved ->
<<22:6,5934:16>>;
ChoiceVal =:= 'uneven-lanes' ->
<<22:6,5935:16>>;
ChoiceVal =:= 'rough-crossing' ->
<<22:6,5936:16>>;
ChoiceVal =:= 'at-grade-level-crossing' ->
<<22:6,5937:16>>;
ChoiceVal =:= 'low-ground-clearance' ->
<<22:6,5938:16>>;
ChoiceVal =:= 'dry-pavement' ->
<<22:6,6011:16>>;
ChoiceVal =:= 'snow-cleared' ->
<<22:6,6012:16>>;
ChoiceVal =:= 'pavement-conditions-improved' ->
<<22:6,6013:16>>;
ChoiceVal =:= 'skid-hazard-reduced' ->
<<22:6,6014:16>>;
ChoiceVal =:= 'pavement-conditions-cleared' ->
<<22:6,6015:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<22:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= winterDrivingRestrictions ->
if ChoiceVal =:= 'winter-equipment-recommended' ->
<<23:6,6145:16>>;
ChoiceVal =:= 'winter-equipment-required' ->
<<23:6,6146:16>>;
ChoiceVal =:= 'snow-chains-recommended' ->
<<23:6,6147:16>>;
ChoiceVal =:= 'snow-chains-required' ->
<<23:6,6148:16>>;
ChoiceVal =:= 'snow-chains-prohibited' ->
<<23:6,6149:16>>;
ChoiceVal =:= 'studded-tires-prohibited' ->
<<23:6,6150:16>>;
ChoiceVal =:= 'snow-tires-recommended' ->
<<23:6,6151:16>>;
ChoiceVal =:= 'snow-tires-required' ->
<<23:6,6152:16>>;
ChoiceVal =:= 'four-wheel-drive-recommended' ->
<<23:6,6153:16>>;
ChoiceVal =:= 'four-wheel-drive-required' ->
<<23:6,6154:16>>;
ChoiceVal =:= 'snow-tires-or-chains-recommended' ->
<<23:6,6155:16>>;
ChoiceVal =:= 'snow-tires-or-chains-required' ->
<<23:6,6156:16>>;
ChoiceVal =:= 'winter-driving-requirements-lifted' ->
<<23:6,6271:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<23:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= winterDrivingIndex ->
if ChoiceVal =:= 'driving-conditions-good' ->
<<24:6,6401:16>>;
ChoiceVal =:= 'driving-conditions-fair' ->
<<24:6,6402:16>>;
ChoiceVal =:= 'difficult-driving-conditions' ->
<<24:6,6403:16>>;
ChoiceVal =:= 'very-difficult-driving-conditions' ->
<<24:6,6404:16>>;
ChoiceVal =:= 'hazardous-driving-conditions' ->
<<24:6,6405:16>>;
ChoiceVal =:= 'extremely-hazardous-driving-conditions' ->
<<24:6,6406:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<24:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= suggestionAdvice ->
if ChoiceVal =:= 'why-not-ride-share' ->
<<25:6,6657:16>>;
ChoiceVal =:= 'is-this-your-no-ride-day' ->
<<25:6,6658:16>>;
ChoiceVal =:= 'why-not-use-transit' ->
<<25:6,6659:16>>;
ChoiceVal =:= 'why-not-park-and-ride' ->
<<25:6,6660:16>>;
ChoiceVal =:= 'why-not-try-paratransit' ->
<<25:6,6661:16>>;
ChoiceVal =:= 'why-not-travel-by-rail' ->
<<25:6,6662:16>>;
ChoiceVal =:= 'why-not-use-the-subway' ->
<<25:6,6663:16>>;
ChoiceVal =:= 'why-not-try-rapid-transit' ->
<<25:6,6664:16>>;
ChoiceVal =:= 'why-not-travel-by-bus' ->
<<25:6,6665:16>>;
ChoiceVal =:= 'your-parking-ticket-covers-the-return-ride' ->
<<25:6,6666:16>>;
ChoiceVal =:= 'avoid-the-rush-hour' ->
<<25:6,6667:16>>;
ChoiceVal =:= 'do-not-allow-unnecessary-gaps' ->
<<25:6,6668:16>>;
ChoiceVal =:= 'follow-the-vehicle-in-front-smoothly' ->
<<25:6,6669:16>>;
ChoiceVal =:= 'do-not-slow-down-unnecessarily' ->
<<25:6,6670:16>>;
ChoiceVal =:= 'watch-for-muggers' ->
<<25:6,6671:16>>;
ChoiceVal =:= 'watch-for-pickpockets' ->
<<25:6,6672:16>>;
ChoiceVal =:= 'watch-for-thieves' ->
<<25:6,6673:16>>;
ChoiceVal =:= 'sorry-for-any-delay' ->
<<25:6,6674:16>>;
ChoiceVal =:= 'thank-you-for-your-understanding' ->
<<25:6,6675:16>>;
ChoiceVal =:= 'we-appreciate-your-patience' ->
<<25:6,6676:16>>;
ChoiceVal =:= 'we-are-grateful-for-your-cooperation' ->
<<25:6,6677:16>>;
ChoiceVal =:= 'share-the-road' ->
<<25:6,6678:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<25:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= warningAdvice ->
if ChoiceVal =:= risk ->
<<26:6,6913:16>>;
ChoiceVal =:= watch ->
<<26:6,6914:16>>;
ChoiceVal =:= warning ->
<<26:6,6915:16>>;
ChoiceVal =:= alert ->
<<26:6,6916:16>>;
ChoiceVal =:= danger ->
<<26:6,6917:16>>;
ChoiceVal =:= 'danger-of-explosion' ->
<<26:6,6918:16>>;
ChoiceVal =:= 'danger-of-fire' ->
<<26:6,6919:16>>;
ChoiceVal =:= 'extra-police-patrols-in-operation' ->
<<26:6,6920:16>>;
ChoiceVal =:= 'look-out-for-vehicles-stopped-under-bridges' ->
<<26:6,6921:16>>;
ChoiceVal =:= 'increased-risk-of-accident' ->
<<26:6,6922:16>>;
ChoiceVal =:= 'rescue-and-recovery-work-in-progress-at-sceneREMOVED' ->
<<26:6,6923:16>>;
ChoiceVal =:= 'police-at-scene' ->
<<26:6,6924:16>>;
ChoiceVal =:= 'emergency-vehicles-at-scene' ->
<<26:6,6925:16>>;
ChoiceVal =:= 'traffic-being-directed-around-accident-area' ->
<<26:6,6926:16>>;
ChoiceVal =:= 'police-directing-traffic' ->
<<26:6,6927:16>>;
ChoiceVal =:= 'rescue-workers-directing-traffic' ->
<<26:6,6928:16>>;
ChoiceVal =:= 'repairs-in-progress' ->
<<26:6,6929:16>>;
ChoiceVal =:= 'pilot-car-in-operation' ->
<<26:6,6930:16>>;
ChoiceVal =:= 'look-out-for-flagger' ->
<<26:6,6931:16>>;
ChoiceVal =:= 'police-checks-in-operation' ->
<<26:6,6932:16>>;
ChoiceVal =:= 'mandatory-speed-limit-in-force' ->
<<26:6,6933:16>>;
ChoiceVal =:= 'speed-limit-in-force-for-heavy-vehicles' ->
<<26:6,6934:16>>;
ChoiceVal =:= lockdown ->
<<26:6,6935:16>>;
ChoiceVal =:= 'security-check-point' ->
<<26:6,6936:16>>;
ChoiceVal =:= 'truck-check-point' ->
<<26:6,6937:16>>;
ChoiceVal =:= 'single-occupancy-vehicle-check-point' ->
<<26:6,6938:16>>;
ChoiceVal =:= look ->
<<26:6,6939:16>>;
ChoiceVal =:= 'photo-enforced' ->
<<26:6,6940:16>>;
ChoiceVal =:= 'traffic-laws' ->
<<26:6,6941:16>>;
ChoiceVal =:= 'use-low-gear' ->
<<26:6,6942:16>>;
ChoiceVal =:= 'bridge-ices-before-road' ->
<<26:6,6943:16>>;
ChoiceVal =:= 'speed-checked-by-radar' ->
<<26:6,6944:16>>;
ChoiceVal =:= 'speed-checked-by-aircraft' ->
<<26:6,6945:16>>;
ChoiceVal =:= fines ->
<<26:6,6946:16>>;
ChoiceVal =:= 'fines-higher' ->
<<26:6,6947:16>>;
ChoiceVal =:= 'fines-doubled' ->
<<26:6,6948:16>>;
ChoiceVal =:= 'fines-tripled' ->
<<26:6,6949:16>>;
ChoiceVal =:= 'behind-you' ->
<<26:6,6950:16>>;
ChoiceVal =:= 'traffic-signs' ->
<<26:6,6951:16>>;
ChoiceVal =:= 'look-out-for-workers' ->
<<26:6,6952:16>>;
ChoiceVal =:= 'ride-with-traffic' ->
<<26:6,6953:16>>;
ChoiceVal =:= 'prepare-to-evacuate-area' ->
<<26:6,6954:16>>;
ChoiceVal =:= avoid ->
<<26:6,6955:16>>;
ChoiceVal =:= 'evacuation-canceled' ->
<<26:6,7033:16>>;
ChoiceVal =:= 'warning-canceled' ->
<<26:6,7034:16>>;
ChoiceVal =:= 'watch-canceled' ->
<<26:6,7035:16>>;
ChoiceVal =:= 'alert-canceled' ->
<<26:6,7036:16>>;
ChoiceVal =:= ended ->
<<26:6,7037:16>>;
ChoiceVal =:= cleared ->
<<26:6,7038:16>>;
ChoiceVal =:= canceled ->
<<26:6,7039:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<26:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= adviceInstructionsRecommendations ->
if ChoiceVal =:= 'drive-carefully' ->
<<27:6,7169:16>>;
ChoiceVal =:= 'drive-with-extreme-caution' ->
<<27:6,7170:16>>;
ChoiceVal =:= 'approach-with-care' ->
<<27:6,7171:16>>;
ChoiceVal =:= 'keep-your-distance' ->
<<27:6,7172:16>>;
ChoiceVal =:= 'increase-normal-following-distance' ->
<<27:6,7173:16>>;
ChoiceVal =:= 'test-your-brakes' ->
<<27:6,7174:16>>;
ChoiceVal =:= 'cross-intersection-with-care' ->
<<27:6,7175:16>>;
ChoiceVal =:= 'pass-with-care' ->
<<27:6,7176:16>>;
ChoiceVal =:= 'use-low-beam-headlights' ->
<<27:6,7177:16>>;
ChoiceVal =:= 'use-fog-lights' ->
<<27:6,7178:16>>;
ChoiceVal =:= 'use-hazard-warning-lights' ->
<<27:6,7179:16>>;
ChoiceVal =:= 'do-not-leave-your-vehicle' ->
<<27:6,7180:16>>;
ChoiceVal =:= 'leave-your-vehicle-and-proceed-to-next-safe-place' ->
<<27:6,7181:16>>;
ChoiceVal =:= 'turn-off-engine' ->
<<27:6,7182:16>>;
ChoiceVal =:= 'close-all-windows-turn-off-heater-air-conditioner-and-vents' ->
<<27:6,7183:16>>;
ChoiceVal =:= 'turn-off-air-conditioner-to-prevent-engine-overheating' ->
<<27:6,7184:16>>;
ChoiceVal =:= 'turn-off-mobile-phones-and-two-way-radios' ->
<<27:6,7185:16>>;
ChoiceVal =:= 'prepare-to-stop' ->
<<27:6,7186:16>>;
ChoiceVal =:= 'stop-at-next-rest-area' ->
<<27:6,7187:16>>;
ChoiceVal =:= 'stop-at-next-safe-place' ->
<<27:6,7188:16>>;
ChoiceVal =:= 'only-travel-if-absolutely-necessary' ->
<<27:6,7189:16>>;
ChoiceVal =:= 'drive-to-another-service-area' ->
<<27:6,7190:16>>;
ChoiceVal =:= 'use-through-traffic-lanes' ->
<<27:6,7191:16>>;
ChoiceVal =:= 'use-local-traffic-lanes' ->
<<27:6,7192:16>>;
ChoiceVal =:= 'use-left-hand-parallel-roadway' ->
<<27:6,7193:16>>;
ChoiceVal =:= 'use-right-hand-parallel-roadway' ->
<<27:6,7194:16>>;
ChoiceVal =:= 'use-heavy-vehicle-lane' ->
<<27:6,7195:16>>;
ChoiceVal =:= 'observe-recommended-speed' ->
<<27:6,7196:16>>;
ChoiceVal =:= 'facing-traffic' ->
<<27:6,7197:16>>;
ChoiceVal =:= 'push-button' ->
<<27:6,7198:16>>;
ChoiceVal =:= 'to-cross-street' ->
<<27:6,7199:16>>;
ChoiceVal =:= pass ->
<<27:6,7200:16>>;
ChoiceVal =:= 'be-prepared-to-stop' ->
<<27:6,7201:16>>;
ChoiceVal =:= 'signals-sequenced-for-speed' ->
<<27:6,7202:16>>;
ChoiceVal =:= 'maintain-top-safe-speed' ->
<<27:6,7203:16>>;
ChoiceVal =:= 'evacuate-area-voluntarily' ->
<<27:6,7204:16>>;
ChoiceVal =:= 'shelter-in-place' ->
<<27:6,7205:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<27:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= adviceInstructionsMandatory ->
if ChoiceVal =:= 'keep-to-the-right' ->
<<28:6,7425:16>>;
ChoiceVal =:= 'keep-to-the-left' ->
<<28:6,7426:16>>;
ChoiceVal =:= 'use-right-lane' ->
<<28:6,7427:16>>;
ChoiceVal =:= 'use-left-lane' ->
<<28:6,7428:16>>;
ChoiceVal =:= 'heavy-vehicles-use-right-lane' ->
<<28:6,7429:16>>;
ChoiceVal =:= 'heavy-vehicles-use-left-lane' ->
<<28:6,7430:16>>;
ChoiceVal =:= 'observe-signals' ->
<<28:6,7431:16>>;
ChoiceVal =:= 'observe-signs' ->
<<28:6,7432:16>>;
ChoiceVal =:= 'no-passing' ->
<<28:6,7433:16>>;
ChoiceVal =:= 'no-smoking' ->
<<28:6,7434:16>>;
ChoiceVal =:= 'no-open-flames' ->
<<28:6,7435:16>>;
ChoiceVal =:= 'use-shoulder-as-lane' ->
<<28:6,7436:16>>;
ChoiceVal =:= 'do-not-drive-on-the-shoulder' ->
<<28:6,7437:16>>;
ChoiceVal =:= 'allow-emergency-vehicles-to-pass' ->
<<28:6,7438:16>>;
ChoiceVal =:= 'clear-a-lane-for-emergency-vehicles' ->
<<28:6,7439:16>>;
ChoiceVal =:= 'pull-over-to-the-edge-of-the-roadway' ->
<<28:6,7440:16>>;
ChoiceVal =:= 'wait-for-escort-vehicle' ->
<<28:6,7441:16>>;
ChoiceVal =:= 'in-emergency-wait-for-police-patrol' ->
<<28:6,7442:16>>;
ChoiceVal =:= 'reduce-your-speed' ->
<<28:6,7443:16>>;
ChoiceVal =:= 'observe-speed-limits' ->
<<28:6,7444:16>>;
ChoiceVal =:= 'check-point' ->
<<28:6,7445:16>>;
ChoiceVal =:= 'entry-requirements' ->
<<28:6,7446:16>>;
ChoiceVal =:= 'insurance-requirements' ->
<<28:6,7447:16>>;
ChoiceVal =:= 'firearms-requirements' ->
<<28:6,7448:16>>;
ChoiceVal =:= 'pet-requirements' ->
<<28:6,7449:16>>;
ChoiceVal =:= 'stay-in-lane' ->
<<28:6,7450:16>>;
ChoiceVal =:= merge ->
<<28:6,7451:16>>;
ChoiceVal =:= 'slower-traffic-keep-right' ->
<<28:6,7452:16>>;
ChoiceVal =:= 'keep-off' ->
<<28:6,7453:16>>;
ChoiceVal =:= 'evacuate-area-immediately' ->
<<28:6,7454:16>>;
ChoiceVal =:= 'shoulder-travel-no-longer-allowed' ->
<<28:6,7547:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<28:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= laneRoadway ->
if ChoiceVal =:= 'all-roadways' ->
<<29:6,8193:16>>;
ChoiceVal =:= 'through-lanes' ->
<<29:6,8194:16>>;
ChoiceVal =:= 'left-lane' ->
<<29:6,8195:16>>;
ChoiceVal =:= 'right-lane' ->
<<29:6,8196:16>>;
ChoiceVal =:= 'center-lane' ->
<<29:6,8197:16>>;
ChoiceVal =:= 'middle-lanes' ->
<<29:6,8198:16>>;
ChoiceVal =:= 'middle-two-lanes' ->
<<29:6,8199:16>>;
ChoiceVal =:= 'right-turning-lanes' ->
<<29:6,8200:16>>;
ChoiceVal =:= 'left-turning-lanes' ->
<<29:6,8201:16>>;
ChoiceVal =:= 'right-exit-ramp' ->
<<29:6,8202:16>>;
ChoiceVal =:= 'right-entrance-ramp' ->
<<29:6,8203:16>>;
ChoiceVal =:= 'left-exit-ramp' ->
<<29:6,8204:16>>;
ChoiceVal =:= 'left-entrance-ramp' ->
<<29:6,8205:16>>;
ChoiceVal =:= 'hard-shoulder' ->
<<29:6,8206:16>>;
ChoiceVal =:= 'soft-shoulder' ->
<<29:6,8207:16>>;
ChoiceVal =:= 'right-shoulder' ->
<<29:6,8208:16>>;
ChoiceVal =:= 'left-shoulder' ->
<<29:6,8209:16>>;
ChoiceVal =:= 'right-hand-parallel-lanes' ->
<<29:6,8210:16>>;
ChoiceVal =:= 'left-hand-parallel-lanes' ->
<<29:6,8211:16>>;
ChoiceVal =:= 'connecting-lanes' ->
<<29:6,8212:16>>;
ChoiceVal =:= 'express-lanes' ->
<<29:6,8213:16>>;
ChoiceVal =:= 'local-lanes' ->
<<29:6,8214:16>>;
ChoiceVal =:= 'toll-lanes' ->
<<29:6,8215:16>>;
ChoiceVal =:= 'electronic-toll-lanes' ->
<<29:6,8216:16>>;
ChoiceVal =:= 'toll-plaza' ->
<<29:6,8217:16>>;
ChoiceVal =:= 'inspection-lane' ->
<<29:6,8218:16>>;
ChoiceVal =:= 'hOV-lanes' ->
<<29:6,8219:16>>;
ChoiceVal =:= 'bus-lanes' ->
<<29:6,8220:16>>;
ChoiceVal =:= 'carpool-lanes' ->
<<29:6,8221:16>>;
ChoiceVal =:= 'truck-lanes' ->
<<29:6,8222:16>>;
ChoiceVal =:= 'emergency-lanes' ->
<<29:6,8223:16>>;
ChoiceVal =:= 'passing-lanes' ->
<<29:6,8224:16>>;
ChoiceVal =:= 'climbing-lanes' ->
<<29:6,8225:16>>;
ChoiceVal =:= 'slow-lane' ->
<<29:6,8226:16>>;
ChoiceVal =:= 'service-road' ->
<<29:6,8227:16>>;
ChoiceVal =:= 'cycle-lane' ->
<<29:6,8228:16>>;
ChoiceVal =:= bridge ->
<<29:6,8229:16>>;
ChoiceVal =:= overpass ->
<<29:6,8230:16>>;
ChoiceVal =:= 'elevated-lanes' ->
<<29:6,8231:16>>;
ChoiceVal =:= underpass ->
<<29:6,8232:16>>;
ChoiceVal =:= tunnel ->
<<29:6,8233:16>>;
ChoiceVal =:= 'escape-ramp' ->
<<29:6,8234:16>>;
ChoiceVal =:= highways ->
<<29:6,8235:16>>;
ChoiceVal =:= 'upper-deck-lanes' ->
<<29:6,8236:16>>;
ChoiceVal =:= 'lower-deck-lanes' ->
<<29:6,8237:16>>;
ChoiceVal =:= 'reversible-lanes' ->
<<29:6,8238:16>>;
ChoiceVal =:= 'right-exit-lanes' ->
<<29:6,8239:16>>;
ChoiceVal =:= 'left-exit-lanes' ->
<<29:6,8240:16>>;
ChoiceVal =:= 'right-merging-lanes' ->
<<29:6,8241:16>>;
ChoiceVal =:= 'left-merging-lanes' ->
<<29:6,8242:16>>;
ChoiceVal =:= 'right-second-exit-ramp' ->
<<29:6,8243:16>>;
ChoiceVal =:= 'left-second-exit-ramp' ->
<<29:6,8244:16>>;
ChoiceVal =:= 'right-second-entrance-ramp' ->
<<29:6,8245:16>>;
ChoiceVal =:= 'left-second-entrance-ramp' ->
<<29:6,8246:16>>;
ChoiceVal =:= 'all-exit-lanes' ->
<<29:6,8247:16>>;
ChoiceVal =:= 'all-entry-lanes' ->
<<29:6,8248:16>>;
ChoiceVal =:= 'either-shoulder' ->
<<29:6,8249:16>>;
ChoiceVal =:= tracks ->
<<29:6,8250:16>>;
ChoiceVal =:= sidewalk ->
<<29:6,8251:16>>;
ChoiceVal =:= median ->
<<29:6,8252:16>>;
ChoiceVal =:= 'shoulder-work' ->
<<29:6,8253:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<29:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= alternateRoute ->
if ChoiceVal =:= 'detour-where-possible' ->
<<30:6,8449:16>>;
ChoiceVal =:= 'no-detour-available' ->
<<30:6,8450:16>>;
ChoiceVal =:= 'follow-signs' ->
<<30:6,8451:16>>;
ChoiceVal =:= 'follow-detour-signs' ->
<<30:6,8452:16>>;
ChoiceVal =:= 'follow-special-detour-markers' ->
<<30:6,8453:16>>;
ChoiceVal =:= 'do-not-follow-detour-signs' ->
<<30:6,8454:16>>;
ChoiceVal =:= 'detour-in-operation' ->
<<30:6,8455:16>>;
ChoiceVal =:= 'follow-local-detour' ->
<<30:6,8456:16>>;
ChoiceVal =:= 'compulsory-detour-in-operation' ->
<<30:6,8457:16>>;
ChoiceVal =:= 'no-suitable-detour-available' ->
<<30:6,8458:16>>;
ChoiceVal =:= 'detour-is-no-longer-recommended' ->
<<30:6,8459:16>>;
ChoiceVal =:= 'local-drivers-are-recommended-to-avoid-the-area' ->
<<30:6,8460:16>>;
ChoiceVal =:= 'trucks-are-recommended-to-avoid-the-area' ->
<<30:6,8461:16>>;
ChoiceVal =:= 'consider-alternate-route' ->
<<30:6,8462:16>>;
ChoiceVal =:= 'consider-alternate-parking' ->
<<30:6,8463:16>>;
ChoiceVal =:= 'consider-alternate-destination' ->
<<30:6,8464:16>>;
ChoiceVal =:= 'consider-alternate-area' ->
<<30:6,8465:16>>;
ChoiceVal =:= 'snow-route' ->
<<30:6,8466:16>>;
ChoiceVal =:= 'emergency-snow-route' ->
<<30:6,8467:16>>;
ChoiceVal =:= 'evacuation-route' ->
<<30:6,8468:16>>;
ChoiceVal =:= 'truck-route' ->
<<30:6,8469:16>>;
ChoiceVal =:= 'hazardous-materials-route' ->
<<30:6,8470:16>>;
ChoiceVal =:= detour ->
<<30:6,8471:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<30:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= transitMode ->
if ChoiceVal =:= travel ->
<<31:6,8961:16>>;
ChoiceVal =:= transit ->
<<31:6,8962:16>>;
ChoiceVal =:= bus ->
<<31:6,8963:16>>;
ChoiceVal =:= trolleybus ->
<<31:6,8964:16>>;
ChoiceVal =:= rail ->
<<31:6,8965:16>>;
ChoiceVal =:= 'commuter-rail' ->
<<31:6,8966:16>>;
ChoiceVal =:= subway ->
<<31:6,8967:16>>;
ChoiceVal =:= 'rapid-transit' ->
<<31:6,8968:16>>;
ChoiceVal =:= 'light-rail' ->
<<31:6,8969:16>>;
ChoiceVal =:= streetcar ->
<<31:6,8970:16>>;
ChoiceVal =:= 'dial-a-ride' ->
<<31:6,8971:16>>;
ChoiceVal =:= 'park-and-ride' ->
<<31:6,8972:16>>;
ChoiceVal =:= shuttle ->
<<31:6,8973:16>>;
ChoiceVal =:= 'free-shuttle' ->
<<31:6,8974:16>>;
ChoiceVal =:= 'airport-shuttle' ->
<<31:6,8975:16>>;
ChoiceVal =:= taxies ->
<<31:6,8976:16>>;
ChoiceVal =:= ferry ->
<<31:6,8977:16>>;
ChoiceVal =:= 'passenger-ferry' ->
<<31:6,8978:16>>;
ChoiceVal =:= 'vehicle-ferry' ->
<<31:6,8979:16>>;
ChoiceVal =:= 'aerial-tramway' ->
<<31:6,8980:16>>;
ChoiceVal =:= 'automated-guideway' ->
<<31:6,8981:16>>;
ChoiceVal =:= 'cable-cars' ->
<<31:6,8982:16>>;
ChoiceVal =:= monorail ->
<<31:6,8983:16>>;
ChoiceVal =:= 'air-travel' ->
<<31:6,8984:16>>;
ChoiceVal =:= 'hitch-hitching' ->
<<31:6,8985:16>>;
ChoiceVal =:= walk ->
<<31:6,8986:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<31:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= vehicleGroupAffected ->
if ChoiceVal =:= 'all-vehicles' ->
<<32:6,9217:16>>;
ChoiceVal =:= bicycles ->
<<32:6,9218:16>>;
ChoiceVal =:= motorcycles ->
<<32:6,9219:16>>;
ChoiceVal =:= cars ->
<<32:6,9220:16>>;
ChoiceVal =:= 'light-vehicles' ->
<<32:6,9221:16>>;
ChoiceVal =:= 'cars-and-light-vehicles' ->
<<32:6,9222:16>>;
ChoiceVal =:= 'cars-with-trailers' ->
<<32:6,9223:16>>;
ChoiceVal =:= 'cars-with-recreational-trailers' ->
<<32:6,9224:16>>;
ChoiceVal =:= 'vehicles-with-trailers' ->
<<32:6,9225:16>>;
ChoiceVal =:= 'heavy-vehicles' ->
<<32:6,9226:16>>;
ChoiceVal =:= trucks ->
<<32:6,9227:16>>;
ChoiceVal =:= buses ->
<<32:6,9228:16>>;
ChoiceVal =:= 'articulated-buses' ->
<<32:6,9229:16>>;
ChoiceVal =:= 'school-buses' ->
<<32:6,9230:16>>;
ChoiceVal =:= 'vehicles-with-semi-trailers' ->
<<32:6,9231:16>>;
ChoiceVal =:= 'vehicles-with-double-trailers' ->
<<32:6,9232:16>>;
ChoiceVal =:= 'high-profile-vehicles' ->
<<32:6,9233:16>>;
ChoiceVal =:= 'wide-vehicles' ->
<<32:6,9234:16>>;
ChoiceVal =:= 'long-vehicles' ->
<<32:6,9235:16>>;
ChoiceVal =:= 'hazardous-loads' ->
<<32:6,9236:16>>;
ChoiceVal =:= 'exceptional-loads' ->
<<32:6,9237:16>>;
ChoiceVal =:= 'abnormal-loads' ->
<<32:6,9238:16>>;
ChoiceVal =:= convoys ->
<<32:6,9239:16>>;
ChoiceVal =:= 'maintenance-vehicles' ->
<<32:6,9240:16>>;
ChoiceVal =:= 'delivery-vehicles' ->
<<32:6,9241:16>>;
ChoiceVal =:= 'vehicles-with-even-numbered-license-plates' ->
<<32:6,9242:16>>;
ChoiceVal =:= 'vehicles-with-odd-numbered-license-plates' ->
<<32:6,9243:16>>;
ChoiceVal =:= 'vehicles-with-parking-permits' ->
<<32:6,9244:16>>;
ChoiceVal =:= 'vehicles-with-catalytic-converters' ->
<<32:6,9245:16>>;
ChoiceVal =:= 'vehicles-without-catalytic-converters' ->
<<32:6,9246:16>>;
ChoiceVal =:= 'gas-powered-vehicles' ->
<<32:6,9247:16>>;
ChoiceVal =:= 'diesel-powered-vehicles' ->
<<32:6,9248:16>>;
ChoiceVal =:= 'lPG-vehicles' ->
<<32:6,9249:16>>;
ChoiceVal =:= 'military-convoys' ->
<<32:6,9250:16>>;
ChoiceVal =:= 'military-vehicles' ->
<<32:6,9251:16>>;
ChoiceVal =:= 'electric-powered-vehicles' ->
<<32:6,9252:16>>;
ChoiceVal =:= 'hybrid-powered-vehicles' ->
<<32:6,9253:16>>;
ChoiceVal =:= 'inherently-low-emission-vehicles' ->
<<32:6,9254:16>>;
ChoiceVal =:= 'commercial-vehicles' ->
<<32:6,9255:16>>;
ChoiceVal =:= 'runaway-vehicles' ->
<<32:6,9256:16>>;
ChoiceVal =:= 'vehicles-with-lugs' ->
<<32:6,9257:16>>;
ChoiceVal =:= 'motor-driven-cycles' ->
<<32:6,9258:16>>;
ChoiceVal =:= 'recreational-vehicles' ->
<<32:6,9259:16>>;
ChoiceVal =:= 'non-motorized-vehicles' ->
<<32:6,9260:16>>;
ChoiceVal =:= traffic ->
<<32:6,9261:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<32:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= travelerGroupAffected ->
if ChoiceVal =:= 'through-traffic' ->
<<33:6,9473:16>>;
ChoiceVal =:= 'holiday-traffic' ->
<<33:6,9474:16>>;
ChoiceVal =:= residents ->
<<33:6,9475:16>>;
ChoiceVal =:= visitors ->
<<33:6,9476:16>>;
ChoiceVal =:= 'long-distance-traffic' ->
<<33:6,9477:16>>;
ChoiceVal =:= 'local-traffic' ->
<<33:6,9478:16>>;
ChoiceVal =:= 'regional-traffic' ->
<<33:6,9479:16>>;
ChoiceVal =:= arrivals ->
<<33:6,9480:16>>;
ChoiceVal =:= departures ->
<<33:6,9481:16>>;
ChoiceVal =:= 'airline-travelers' ->
<<33:6,9482:16>>;
ChoiceVal =:= 'commuter-airline-travelers' ->
<<33:6,9483:16>>;
ChoiceVal =:= 'domestic-airline-travelers' ->
<<33:6,9484:16>>;
ChoiceVal =:= 'international-airline-travelers' ->
<<33:6,9485:16>>;
ChoiceVal =:= pedestrians ->
<<33:6,9486:16>>;
ChoiceVal =:= bicyclists ->
<<33:6,9487:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<33:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= responderGroupAffected ->
if ChoiceVal =:= 'emergency-vehicle-units' ->
<<34:6,9729:16>>;
ChoiceVal =:= 'federal-law-enforcement-units' ->
<<34:6,9730:16>>;
ChoiceVal =:= 'state-police-units' ->
<<34:6,9731:16>>;
ChoiceVal =:= 'county-police-units' ->
<<34:6,9732:16>>;
ChoiceVal =:= 'local-police-units' ->
<<34:6,9733:16>>;
ChoiceVal =:= 'ambulance-units' ->
<<34:6,9734:16>>;
ChoiceVal =:= 'rescue-units' ->
<<34:6,9735:16>>;
ChoiceVal =:= 'fire-units' ->
<<34:6,9736:16>>;
ChoiceVal =:= 'hAZMAT-units' ->
<<34:6,9737:16>>;
ChoiceVal =:= 'light-tow-unit' ->
<<34:6,9738:16>>;
ChoiceVal =:= 'heavy-tow-unit' ->
<<34:6,9739:16>>;
ChoiceVal =:= 'freeway-service-patrols' ->
<<34:6,9740:16>>;
ChoiceVal =:= 'transportation-response-units' ->
<<34:6,9741:16>>;
ChoiceVal =:= 'private-contractor-response-units' ->
<<34:6,9742:16>>;
ChoiceVal =:= 'private-tow-units' ->
<<34:6,9743:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<34:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= incidentResponseEquipment ->
if ChoiceVal =:= 'ground-fire-suppression' ->
<<35:6,9985:16>>;
ChoiceVal =:= 'heavy-ground-equipment' ->
<<35:6,9986:16>>;
ChoiceVal =:= aircraft ->
<<35:6,9988:16>>;
ChoiceVal =:= 'marine-equipment' ->
<<35:6,9989:16>>;
ChoiceVal =:= 'support-equipment' ->
<<35:6,9990:16>>;
ChoiceVal =:= 'medical-rescue-unit' ->
<<35:6,9991:16>>;
ChoiceVal =:= other ->
<<35:6,9993:16>>;
ChoiceVal =:= 'ground-fire-suppression-other' ->
<<35:6,9994:16>>;
ChoiceVal =:= engine ->
<<35:6,9995:16>>;
ChoiceVal =:= 'truck-or-aerial' ->
<<35:6,9996:16>>;
ChoiceVal =:= quint ->
<<35:6,9997:16>>;
ChoiceVal =:= 'tanker-pumper-combination' ->
<<35:6,9998:16>>;
ChoiceVal =:= 'brush-truck' ->
<<35:6,10000:16>>;
ChoiceVal =:= 'aircraft-rescue-firefighting' ->
<<35:6,10001:16>>;
ChoiceVal =:= 'heavy-ground-equipment-other' ->
<<35:6,10004:16>>;
ChoiceVal =:= 'dozer-or-plow' ->
<<35:6,10005:16>>;
ChoiceVal =:= tractor ->
<<35:6,10006:16>>;
ChoiceVal =:= 'tanker-or-tender' ->
<<35:6,10008:16>>;
ChoiceVal =:= 'aircraft-other' ->
<<35:6,10024:16>>;
ChoiceVal =:= 'aircraft-fixed-wing-tanker' ->
<<35:6,10025:16>>;
ChoiceVal =:= helitanker ->
<<35:6,10026:16>>;
ChoiceVal =:= helicopter ->
<<35:6,10027:16>>;
ChoiceVal =:= 'marine-equipment-other' ->
<<35:6,10034:16>>;
ChoiceVal =:= 'fire-boat-with-pump' ->
<<35:6,10035:16>>;
ChoiceVal =:= 'boat-no-pump' ->
<<35:6,10036:16>>;
ChoiceVal =:= 'support-apparatus-other' ->
<<35:6,10044:16>>;
ChoiceVal =:= 'breathing-apparatus-support' ->
<<35:6,10045:16>>;
ChoiceVal =:= 'light-and-air-unit' ->
<<35:6,10046:16>>;
ChoiceVal =:= 'medical-rescue-unit-other' ->
<<35:6,10054:16>>;
ChoiceVal =:= 'rescue-unit' ->
<<35:6,10055:16>>;
ChoiceVal =:= 'urban-search-rescue-unit' ->
<<35:6,10056:16>>;
ChoiceVal =:= 'high-angle-rescue' ->
<<35:6,10057:16>>;
ChoiceVal =:= 'crash-fire-rescue' ->
<<35:6,10058:16>>;
ChoiceVal =:= 'bLS-unit' ->
<<35:6,10059:16>>;
ChoiceVal =:= 'aLS-unit' ->
<<35:6,10060:16>>;
ChoiceVal =:= 'mobile-command-post' ->
<<35:6,10075:16>>;
ChoiceVal =:= 'chief-officer-car' ->
<<35:6,10076:16>>;
ChoiceVal =:= 'hAZMAT-unit' ->
<<35:6,10077:16>>;
ChoiceVal =:= 'type-i-hand-crew' ->
<<35:6,10078:16>>;
ChoiceVal =:= 'type-ii-hand-crew' ->
<<35:6,10079:16>>;
ChoiceVal =:= 'privately-owned-vehicle' ->
<<35:6,10083:16>>;
ChoiceVal =:= 'other-apparatus-resource' ->
<<35:6,10084:16>>;
ChoiceVal =:= ambulance ->
<<35:6,10085:16>>;
ChoiceVal =:= 'bomb-squad-van' ->
<<35:6,10086:16>>;
ChoiceVal =:= 'combine-harvester' ->
<<35:6,10087:16>>;
ChoiceVal =:= 'construction-vehicle' ->
<<35:6,10088:16>>;
ChoiceVal =:= 'farm-tractor' ->
<<35:6,10089:16>>;
ChoiceVal =:= 'grass-cutting-machines' ->
<<35:6,10090:16>>;
ChoiceVal =:= 'hAZMAT-containment-tow' ->
<<35:6,10091:16>>;
ChoiceVal =:= 'heavy-tow' ->
<<35:6,10092:16>>;
ChoiceVal =:= 'hedge-cutting-machines' ->
<<35:6,10093:16>>;
ChoiceVal =:= 'light-tow' ->
<<35:6,10094:16>>;
ChoiceVal =:= 'mobile-crane' ->
<<35:6,10095:16>>;
ChoiceVal =:= 'refuse-collection-vehicle' ->
<<35:6,10096:16>>;
ChoiceVal =:= 'resurfacing-vehicle' ->
<<35:6,10097:16>>;
ChoiceVal =:= 'road-sweeper' ->
<<35:6,10098:16>>;
ChoiceVal =:= 'roadside-litter-collection-crews' ->
<<35:6,10099:16>>;
ChoiceVal =:= 'salvage-vehicle' ->
<<35:6,10100:16>>;
ChoiceVal =:= 'sand-truck' ->
<<35:6,10101:16>>;
ChoiceVal =:= snowplow ->
<<35:6,10102:16>>;
ChoiceVal =:= 'steam-roller' ->
<<35:6,10103:16>>;
ChoiceVal =:= 'swat-team-van' ->
<<35:6,10104:16>>;
ChoiceVal =:= 'track-laying-vehicle' ->
<<35:6,10105:16>>;
ChoiceVal =:= 'unknown-vehicle' ->
<<35:6,10106:16>>;
ChoiceVal =:= 'white-lining-vehicle' ->
<<35:6,10107:16>>;
ChoiceVal =:= 'dump-truck' ->
<<35:6,10108:16>>;
ChoiceVal =:= 'supervisor-vehicle' ->
<<35:6,10109:16>>;
ChoiceVal =:= 'snow-blower' ->
<<35:6,10110:16>>;
ChoiceVal =:= 'rotary-snow-blower' ->
<<35:6,10111:16>>;
ChoiceVal =:= 'road-grader' ->
<<35:6,10112:16>>;
ChoiceVal =:= 'steam-truck' ->
<<35:6,10113:16>>;
ChoiceVal =:= 'flatbed-tow' ->
<<35:6,10114:16>>;
ChoiceVal =:= 'survey-crews' ->
<<35:6,10115:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<35:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= transitOperations ->
if ChoiceVal =:= 'unknown-transit-problem' ->
<<36:6,10753:16>>;
ChoiceVal =:= 'sleeping-customer' ->
<<36:6,10754:16>>;
ChoiceVal =:= 'assault-on-passenger' ->
<<36:6,10755:16>>;
ChoiceVal =:= 'assault-on-employee' ->
<<36:6,10756:16>>;
ChoiceVal =:= 'broken-seat' ->
<<36:6,10757:16>>;
ChoiceVal =:= 'bus-alarm' ->
<<36:6,10758:16>>;
ChoiceVal =:= 'crime-or-drug-deal' ->
<<36:6,10759:16>>;
ChoiceVal =:= 'eating-on-board' ->
<<36:6,10760:16>>;
ChoiceVal =:= 'equipment-problem-with-air-conditioning' ->
<<36:6,10761:16>>;
ChoiceVal =:= 'equipment-problem-with-air-system' ->
<<36:6,10762:16>>;
ChoiceVal =:= 'equipment-problem-with-brakes' ->
<<36:6,10763:16>>;
ChoiceVal =:= 'equipment-problem-with-chassis-or-suspension' ->
<<36:6,10764:16>>;
ChoiceVal =:= 'equipment-problem-with-cooling-system' ->
<<36:6,10765:16>>;
ChoiceVal =:= 'equipment-problem-with-doors' ->
<<36:6,10766:16>>;
ChoiceVal =:= 'equipment-problem-with-electrical' ->
<<36:6,10767:16>>;
ChoiceVal =:= 'equipment-problem-with-engine' ->
<<36:6,10768:16>>;
ChoiceVal =:= 'equipment-problem-with-exterior-or-body' ->
<<36:6,10769:16>>;
ChoiceVal =:= 'equipment-problem-with-fare-collection' ->
<<36:6,10770:16>>;
ChoiceVal =:= 'equipment-problem-with-fuel-or-exhaust' ->
<<36:6,10771:16>>;
ChoiceVal =:= 'equipment-problem-with-horn' ->
<<36:6,10772:16>>;
ChoiceVal =:= 'equipment-problem-with-interior' ->
<<36:6,10773:16>>;
ChoiceVal =:= 'equipment-problem-with-liftkneeling' ->
<<36:6,10774:16>>;
ChoiceVal =:= 'equipment-problem-with-lights' ->
<<36:6,10775:16>>;
ChoiceVal =:= 'equipment-problem-with-lubrication' ->
<<36:6,10776:16>>;
ChoiceVal =:= 'equipment-problem-with-radio-or-communication' ->
<<36:6,10777:16>>;
ChoiceVal =:= 'equipment-problem-with-signs' ->
<<36:6,10778:16>>;
ChoiceVal =:= 'equipment-problem-with-steering' ->
<<36:6,10779:16>>;
ChoiceVal =:= 'equipment-problem-with-tires' ->
<<36:6,10780:16>>;
ChoiceVal =:= 'equipment-problem-with-transmission' ->
<<36:6,10781:16>>;
ChoiceVal =:= 'equipment-problem-with-unknown-alarm' ->
<<36:6,10782:16>>;
ChoiceVal =:= 'equipment-problem-with-wipers' ->
<<36:6,10783:16>>;
ChoiceVal =:= 'fare-dispute-expired-pass' ->
<<36:6,10784:16>>;
ChoiceVal =:= 'fare-dispute-expired-transfer' ->
<<36:6,10785:16>>;
ChoiceVal =:= 'fare-dispute-expired-upgrade' ->
<<36:6,10786:16>>;
ChoiceVal =:= 'fare-dispute-other' ->
<<36:6,10787:16>>;
ChoiceVal =:= 'fare-dispute-refuses-to-pay' ->
<<36:6,10788:16>>;
ChoiceVal =:= 'lift-passenger-cycle-completed' ->
<<36:6,10789:16>>;
ChoiceVal =:= 'lift-passenger-ready-to-alight' ->
<<36:6,10790:16>>;
ChoiceVal =:= 'lift-passenger-ready-to-board' ->
<<36:6,10791:16>>;
ChoiceVal =:= 'lost-article' ->
<<36:6,10792:16>>;
ChoiceVal =:= 'objects-thrown' ->
<<36:6,10793:16>>;
ChoiceVal =:= 'passenger-accident-alighting' ->
<<36:6,10794:16>>;
ChoiceVal =:= 'passenger-accident-boarding' ->
<<36:6,10795:16>>;
ChoiceVal =:= 'passenger-accident-fallen-on-board' ->
<<36:6,10796:16>>;
ChoiceVal =:= 'passenger-load' ->
<<36:6,10797:16>>;
ChoiceVal =:= 'passenger-accident-other' ->
<<36:6,10798:16>>;
ChoiceVal =:= 'passenger-sick-or-injured' ->
<<36:6,10799:16>>;
ChoiceVal =:= 'right-of-way' ->
<<36:6,10800:16>>;
ChoiceVal =:= theft ->
<<36:6,10801:16>>;
ChoiceVal =:= 'theft-of-service' ->
<<36:6,10802:16>>;
ChoiceVal =:= 'waiting-to-get-relief-for-schedule-break' ->
<<36:6,10803:16>>;
ChoiceVal =:= 'waiting-to-get-relief-after-run-is-finished' ->
<<36:6,10804:16>>;
ChoiceVal =:= 'waiting-to-provide-relief' ->
<<36:6,10805:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<36:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= regulatorySigns ->
if ChoiceVal =:= 'regulatory-sign' ->
<<37:6,12289:16>>;
ChoiceVal =:= 'warning-sign' ->
<<37:6,12290:16>>;
ChoiceVal =:= 'information-sign' ->
<<37:6,12291:16>>;
ChoiceVal =:= 'construction-sign' ->
<<37:6,12292:16>>;
ChoiceVal =:= 'guide-sign' ->
<<37:6,12293:16>>;
ChoiceVal =:= stop ->
<<37:6,12294:16>>;
ChoiceVal =:= yield ->
<<37:6,12295:16>>;
ChoiceVal =:= 'to-oncoming-traffic' ->
<<37:6,12296:16>>;
ChoiceVal =:= 'four-way' ->
<<37:6,12297:16>>;
ChoiceVal =:= 'all-way' ->
<<37:6,12298:16>>;
ChoiceVal =:= zone ->
<<37:6,12299:16>>;
ChoiceVal =:= narrows ->
<<37:6,12300:16>>;
ChoiceVal =:= widens ->
<<37:6,12301:16>>;
ChoiceVal =:= reduced ->
<<37:6,12302:16>>;
ChoiceVal =:= combined ->
<<37:6,12303:16>>;
ChoiceVal =:= minimum ->
<<37:6,12304:16>>;
ChoiceVal =:= maximum ->
<<37:6,12305:16>>;
ChoiceVal =:= 'divided-road' ->
<<37:6,12306:16>>;
ChoiceVal =:= 'double-arrow' ->
<<37:6,12307:16>>;
ChoiceVal =:= 'dead-end' ->
<<37:6,12308:16>>;
ChoiceVal =:= 'no-outlet' ->
<<37:6,12309:16>>;
ChoiceVal =:= 'wrong-way' ->
<<37:6,12310:16>>;
ChoiceVal =:= nDetour ->
<<37:6,12312:16>>;
ChoiceVal =:= chevron ->
<<37:6,12313:16>>;
ChoiceVal =:= 'do-not-enter' ->
<<37:6,12314:16>>;
ChoiceVal =:= 't-intersection-to-the-side' ->
<<37:6,12315:16>>;
ChoiceVal =:= 't-intersection-oncoming' ->
<<37:6,12316:16>>;
ChoiceVal =:= 'y-intersection-to-the-side' ->
<<37:6,12317:16>>;
ChoiceVal =:= 'y-intersection-oncoming' ->
<<37:6,12318:16>>;
ChoiceVal =:= 'four-way-divided-highway-crossing' ->
<<37:6,12319:16>>;
ChoiceVal =:= 't-way-divided-highway-crossing' ->
<<37:6,12320:16>>;
ChoiceVal =:= 'light-rail-divided-highway-crossing' ->
<<37:6,12321:16>>;
ChoiceVal =:= 'light-rail-t-divided-highway-crossing' ->
<<37:6,12322:16>>;
ChoiceVal =:= 'side-road-to-right' ->
<<37:6,12323:16>>;
ChoiceVal =:= 'side-road-to-left' ->
<<37:6,12324:16>>;
ChoiceVal =:= 'side-road-to-right-at-angle' ->
<<37:6,12325:16>>;
ChoiceVal =:= 'side-road-to-left-at-angle' ->
<<37:6,12326:16>>;
ChoiceVal =:= 'entering-roadway-merge' ->
<<37:6,12327:16>>;
ChoiceVal =:= 'entering-roadway-added-lane' ->
<<37:6,12328:16>>;
ChoiceVal =:= 'one-way' ->
<<37:6,12329:16>>;
ChoiceVal =:= caution ->
<<37:6,12330:16>>;
ChoiceVal =:= temporary ->
<<37:6,12331:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<37:6,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end
end.


dec_ITISEventType(Bytes) ->
{Choice,Bytes1} = 
begin
<<V1@V0:6,V1@Buf1/bitstring>> = Bytes,
{V1@V0,V1@Buf1}
end,
case Choice of
0 ->
{Val,NewBytes} = begin
begin
<<V2@V0:16,V2@Buf1/bitstring>> = Bytes1,
V2@Int2 = case V2@V0 of
257 -> 'stopped-traffic';
258 -> 'stop-and-go-traffic';
259 -> 'slow-traffic';
260 -> 'heavy-traffic';
261 -> 'traffic-building';
262 -> 'long-queues';
263 -> 'traffic-congestion';
264 -> 'traffic-lighter-than-normal';
265 -> 'traffic-heavier-than-normal';
266 -> 'traffic-much-heavier-than-normal';
267 -> 'current-speed';
268 -> 'speed-limit';
269 -> 'travel-time';
272 -> 'merging-traffic';
273 -> contraflow;
378 -> 'contraflow-canceled';
379 -> 'traffic-flowing-freely';
380 -> 'traffic-easing';
381 -> 'traffic-returned-to-normal';
382 -> 'no-problems-to-report';
383 -> 'traffic-congestion-cleared';
_ -> V2@V0
end,
{V2@Int2,V2@Buf1}
end
end,
{{trafficConditions,Val},NewBytes};
1 ->
{Val,NewBytes} = begin
begin
<<V3@V0:16,V3@Buf1/bitstring>> = Bytes1,
V3@Int2 = case V3@V0 of
513 -> accident;
514 -> 'serious-accident';
515 -> 'injury-accident';
516 -> 'minor-accident';
517 -> 'multi-vehicle-accident';
518 -> 'numerous-accidents';
519 -> 'accident-involving-a-bicycle';
520 -> 'accident-involving-a-bus';
521 -> 'accident-involving-a-motorcycle';
522 -> 'accident-involving-a-pedestrian';
523 -> 'accident-involving-a-train';
524 -> 'accident-involving-a-truck';
525 -> 'accident-involving-hazardous-materials';
526 -> 'earlier-accident';
527 -> 'medical-emergency';
528 -> 'secondary-accident';
529 -> 'rescue-and-recovery-work-REMOVED';
530 -> 'accident-investigation-work';
531 -> incident;
532 -> 'stalled-vehicle';
533 -> 'abandoned-vehicle';
534 -> 'disabled-vehicle';
535 -> 'disabled-truck';
536 -> 'disabled-semi-trailer';
537 -> 'disabled-bus';
538 -> 'disabled-train';
539 -> 'vehicle-spun-out';
540 -> 'vehicle-on-fire';
541 -> 'vehicle-in-water';
542 -> 'vehicles-slowing-to-look-at-accident';
543 -> 'jackknifed-semi-trailer';
544 -> 'jackknifed-trailer-home';
545 -> 'jackknifed-trailer';
546 -> 'spillage-occurring-from-moving-vehicle';
547 -> 'acid-spill';
548 -> 'chemical-spill';
549 -> 'fuel-spill';
550 -> 'hazardous-materials-spill';
551 -> 'oil-spill';
552 -> 'spilled-load';
553 -> 'toxic-spill';
554 -> 'overturned-vehicle';
555 -> 'overturned-truck';
556 -> 'overturned-semi-trailer';
557 -> 'overturned-bus';
558 -> 'derailed-train';
559 -> 'stuck-vehicle';
560 -> 'truck-stuck-under-bridge';
561 -> 'bus-stuck-under-bridge';
562 -> 'accident-involving-a-semi-trailer';
638 -> 'accident-cleared';
639 -> 'incident-cleared';
_ -> V3@V0
end,
{V3@Int2,V3@Buf1}
end
end,
{{accidentsAndIncidents,Val},NewBytes};
2 ->
{Val,NewBytes} = begin
begin
<<V4@V0:16,V4@Buf1/bitstring>> = Bytes1,
V4@Int2 = case V4@V0 of
769 -> 'closed-to-traffic';
770 -> closed;
771 -> 'closed-ahead';
772 -> 'closed-intermittently';
773 -> 'closed-for-repairs';
774 -> 'closed-for-the-season';
775 -> blocked;
776 -> 'blocked-ahead';
777 -> 'reduced-to-one-lane';
778 -> 'reduced-to-two-lanes';
779 -> 'reduced-to-three-lanes';
780 -> collapse;
781 -> out;
891 -> 'open-to-traffic';
892 -> open;
893 -> 'reopened-to-traffic';
894 -> clearing;
895 -> 'cleared-from-road';
_ -> V4@V0
end,
{V4@Int2,V4@Buf1}
end
end,
{{closures,Val},NewBytes};
3 ->
{Val,NewBytes} = begin
begin
<<V5@V0:16,V5@Buf1/bitstring>> = Bytes1,
V5@Int2 = case V5@V0 of
1025 -> 'road-construction';
1026 -> 'major-road-construction';
1027 -> 'long-term-road-construction';
1028 -> 'construction-work';
1029 -> 'paving-operations';
1030 -> 'work-in-the-median';
1031 -> 'road-reconstruction';
1032 -> 'opposing-traffic';
1033 -> 'narrow-lanes';
1034 -> 'construction-traffic-merging';
1035 -> 'single-line-traffic-alternating-directions';
1036 -> 'road-maintenance-operations';
1037 -> 'road-marking-operations';
1038 -> 'bridge-maintenance-operations';
1039 -> 'bridge-construction';
1040 -> 'bridge-demolition-work';
1041 -> blasting;
1042 -> 'avalanche-control-activities';
1043 -> 'water-main-work';
1044 -> 'gas-main-work';
1045 -> 'work-on-underground-cables';
1046 -> 'work-on-underground-services';
1047 -> 'new-road-construction-layout';
1048 -> 'new-road-layout';
1049 -> 'temporary-lane-markings';
1050 -> 'temporary-traffic-lights';
1051 -> 'emergency-maintenance';
1052 -> cracks;
1053 -> bumps;
1054 -> 'storm-drain';
1055 -> 'overgrown-grass';
1056 -> 'overgrown-brushshrubs';
1057 -> 'overgrown-trees';
1058 -> 'crack-REMOVE';
1059 -> 'drop-off';
1060 -> 'seismic-retrofit';
1061 -> 'road-widening';
1062 -> 'utility-work';
1146 -> 'road-maintenance-cleared';
1147 -> 'normal-road-layout-restored';
1148 -> 'road-work-clearance-in-progress';
1149 -> 'road-construction-cleared';
1150 -> 'normal-traffic-lanes-restored';
1151 -> 'road-work-cleared';
_ -> V5@V0
end,
{V5@Int2,V5@Buf1}
end
end,
{{roadwork,Val},NewBytes};
4 ->
{Val,NewBytes} = begin
begin
<<V6@V0:16,V6@Buf1/bitstring>> = Bytes1,
V6@Int2 = case V6@V0 of
1281 -> 'obstruction-on-roadway';
1282 -> 'object-on-roadway';
1283 -> 'objects-falling-from-moving-vehicle';
1284 -> 'debris-on-roadway';
1285 -> 'storm-damage';
1286 -> 'people-on-roadway';
1287 -> 'bicyclists-on-roadway';
1288 -> 'sightseers-obstructing-access';
1289 -> 'large-numbers-of-visitors';
1290 -> 'animal-on-roadway';
1291 -> 'large-animal-on-roadway';
1292 -> 'herd-of-animals-on-roadway';
1293 -> 'animal-struck';
1294 -> 'fallen-trees';
1295 -> 'downed-power-lines';
1296 -> 'downed-cables';
1297 -> subsidence;
1298 -> 'road-surface-collapse';
1299 -> 'pavement-buckled';
1300 -> pothole;
1301 -> flooding;
1302 -> 'broken-water-main';
1303 -> 'collapsed-sewer';
1304 -> 'sewer-overflow';
1305 -> 'gas-leak';
1306 -> snowmelt;
1307 -> mudslide;
1308 -> avalanche;
1309 -> rockfall;
1310 -> landslide;
1311 -> 'over-turned-trees';
1312 -> 'tree-limbs';
1314 -> 'utility-pole-down';
1315 -> 'advertising-signs';
1316 -> 'frost-heave';
1317 -> 'frost-jacking';
1318 -> washboard;
1319 -> 'wash-out';
1406 -> 'clearance-work';
1407 -> 'obstruction-cleared';
_ -> V6@V0
end,
{V6@Int2,V6@Buf1}
end
end,
{{obstruction,Val},NewBytes};
5 ->
{Val,NewBytes} = begin
begin
<<V7@V0:16,V7@Buf1/bitstring>> = Bytes1,
V7@Int2 = case V7@V0 of
1537 -> delays;
1538 -> 'short-delays';
1539 -> 'long-delays';
1540 -> 'very-long-delays';
1541 -> 'delays-of-uncertain-duration';
1542 -> 'delayed-until-further-notice';
1543 -> busy;
1544 -> 'very-busy';
1545 -> crowded;
1546 -> overcrowded;
1547 -> cancellations;
1548 -> 'route-canceled-and-no-replacement';
1549 -> 'service-canceled';
1550 -> 'service-suspended';
1551 -> 'service-withdrawn';
1552 -> 'service-fully-booked';
1553 -> 'all-services-fully-booked';
1554 -> 'next-departure';
1555 -> 'next-arrival';
1556 -> 'very-frequent-service';
1557 -> 'frequent-service';
1558 -> 'fairly-frequent-service';
1559 -> 'regular-service';
1560 -> 'irregular-service';
1561 -> 'not-operating';
1562 -> 'system-busy';
1563 -> 'system-very-busy';
1564 -> 'system-crowded';
1565 -> 'system-overcrowded';
1566 -> 'deleted-travel-time';
1567 -> headway;
1568 -> 'extra-services-in-operation';
1660 -> 'delays-clearing';
1661 -> 'delays-cleared';
1662 -> 'normal-services-resumed';
1663 -> operating;
_ -> V7@V0
end,
{V7@Int2,V7@Buf1}
end
end,
{{delayStatusCancellation,Val},NewBytes};
6 ->
{Val,NewBytes} = begin
begin
<<V8@V0:16,V8@Buf1/bitstring>> = Bytes1,
V8@Int2 = case V8@V0 of
1793 -> 'vehicle-traveling-wrong-way';
1794 -> 'reckless-driver';
1795 -> 'prohibited-vehicle-on-roadway';
1796 -> 'emergency-vehicles-on-roadway';
1797 -> 'high-speed-emergency-vehicles';
1798 -> 'high-speed-chase';
1918 -> 'dangerous-vehicle-warning-cleared';
1919 -> 'emergency-vehicle-warning-cleared';
_ -> V8@V0
end,
{V8@Int2,V8@Buf1}
end
end,
{{unusualDriving,Val},NewBytes};
7 ->
{Val,NewBytes} = begin
begin
<<V9@V0:16,V9@Buf1/bitstring>> = Bytes1,
V9@Int2 = case V9@V0 of
2049 -> 'abnormal-load';
2050 -> 'wide-load';
2051 -> 'long-load';
2052 -> 'slow-vehicle';
2053 -> 'farm-equipment';
2054 -> 'horse-drawn-vehicles';
2055 -> 'overheight-load';
2056 -> 'overweight-load';
2057 -> 'tracked-vehicle';
2058 -> 'vehicle-carrying-hazardous-materials';
2059 -> 'slow-moving-maintenance-vehicle';
2060 -> convoy;
2061 -> 'military-convoy';
2062 -> 'refugee-convoy';
2063 -> motorcade;
2064 -> 'mobile-situation-repositioning';
2065 -> 'winter-maintenance-vehicles';
2066 -> snowplows;
2172 -> 'slow-moving-maintenance-vehicle-warning-cleared';
2173 -> 'exceptional-load-warning-cleared';
2174 -> 'hazardous-load-warning-cleared';
2175 -> 'convoy-cleared';
_ -> V9@V0
end,
{V9@Int2,V9@Buf1}
end
end,
{{mobileSituation,Val},NewBytes};
8 ->
{Val,NewBytes} = begin
begin
<<V10@V0:16,V10@Buf1/bitstring>> = Bytes1,
V10@Int2 = case V10@V0 of
2305 -> 'lane-control-signs-not-working';
2306 -> 'lane-control-signs-working-incorrectly';
2307 -> 'lane-control-signs-operating';
2308 -> 'variable-message-signs-not-working';
2309 -> 'variable-message-signs-working-incorrectly';
2310 -> 'variable-message-signs-operating';
2311 -> 'emergency-telephones-not-working';
2312 -> 'emergency-telephone-number-not-working';
2313 -> 'traffic-lights-not-working';
2314 -> 'traffic-lights-working-incorrectly';
2315 -> 'ramp-control-signals-not-working';
2316 -> 'ramp-control-signals-working-incorrectly';
2317 -> 'temporary-traffic-lights-not-working';
2318 -> 'temporary-traffic-lights-working-incorrectly';
2319 -> 'traffic-signal-control-computer-not-working';
2320 -> 'traffic-signal-timings-changed';
2321 -> 'overheight-warning-system-triggered';
2322 -> 'equipment-failure';
2323 -> 'railroad-crossing-equipment-failure';
2324 -> 'tunnel-ventilation-not-working';
2325 -> 'power-failure';
2326 -> 'widespread-power-outages';
2327 -> 'technical-problems';
2328 -> 'sign-down';
2329 -> 'lines-in-road-faded';
2330 -> 'damaged-light-standard';
2331 -> 'traffic-signal-stuck-on-flash';
2332 -> 'guide-rail';
2333 -> fencing;
2334 -> 'light-standard-hanging-by-wires';
2335 -> 'call-box';
2336 -> 'signal-cabinet';
2337 -> detector;
2338 -> 'improper-use-of-State-vehicle-or-equipment';
2339 -> 'bulb-out';
2340 -> 'not-yet-operational';
2341 -> 'not-yet-installed';
2428 -> 'electronic-signs-repaired';
2429 -> 'emergency-call-facilities-restored';
2430 -> 'traffic-signals-repaired';
2431 -> 'railroad-crossing-equipment-now-working-normally';
_ -> V10@V0
end,
{V10@Int2,V10@Buf1}
end
end,
{{deviceStatus,Val},NewBytes};
9 ->
{Val,NewBytes} = begin
begin
<<V11@V0:16,V11@Buf1/bitstring>> = Bytes1,
V11@Int2 = case V11@V0 of
2561 -> restrictions;
2562 -> 'ramp-restrictions';
2563 -> 'truck-restriction';
2564 -> 'speed-restriction';
2565 -> 'noise-restriction';
2566 -> 'traffic-regulations-have-been-changed';
2567 -> 'local-access-only';
2568 -> 'no-trailers';
2569 -> 'no-high-profile-vehicles';
2570 -> 'hazardous-materials-truck-restriction';
2571 -> 'no-through-traffic';
2572 -> 'no-motor-vehicles';
2573 -> 'width-limit';
2574 -> 'height-limit';
2575 -> 'length-limit';
2576 -> 'axle-load-limit';
2577 -> 'gross-weight-limit';
2578 -> 'axle-count-limit';
2579 -> 'carpool-lane-available';
2580 -> 'carpool-restrictions-changed';
2581 -> 'hOV-2-no-single-occupant-vehicles';
2582 -> 'hOV-3-no-vehicles-with-less-than-three-occupants';
2583 -> 'bus-lane-available-for-all-vehicles';
2584 -> 'truck-lane-available-for-all-vehicles';
2585 -> 'permits-call-in-basis';
2586 -> 'permits-temporarily-closed';
2587 -> 'permits-closed';
2588 -> 'road-use-permits-required';
2675 -> 'permits-open';
2676 -> 'restrictions-for-high-profile-vehicles-lifted';
2677 -> 'width-limit-lifted';
2678 -> 'height-limit-lifted';
2679 -> 'length-limit-lifted';
2680 -> 'axle-load-limit-lifted';
2681 -> 'weight-limit-lifted';
2682 -> 'axle-count-limit-lifted';
2683 -> 'carpool-restrictions-lifted';
2684 -> 'lane-restrictions-lifted';
2685 -> 'ramp-restrictions-lifted';
2686 -> 'motor-vehicle-restrictions-lifted';
2687 -> 'restrictions-lifted';
_ -> V11@V0
end,
{V11@Int2,V11@Buf1}
end
end,
{{restrictionClass,Val},NewBytes};
10 ->
{Val,NewBytes} = begin
begin
<<V12@V0:16,V12@Buf1/bitstring>> = Bytes1,
V12@Int2 = case V12@V0 of
2817 -> 'unconfirmed-report';
2818 -> 'initial-response-en-route';
2819 -> 'follow-up-response-en-route';
2820 -> 'initial-response-on-scene';
2821 -> 'follow-up-response-on-scene';
2822 -> 'confirmed-report';
2823 -> 'scene-is-unsecured-at-this-time';
2824 -> 'response-scene-secured';
2825 -> 'rescue-and-recovery-work-in-progress';
2826 -> 'extraction-in-progress';
2827 -> 'clearance-work-in-progress';
2828 -> 'body-removal-operations';
2829 -> 'fire-containment-contained';
2830 -> 'fire-containment-not-contained';
2831 -> 'event-cleared';
2832 -> 'traffic-clearing';
2833 -> 'incident-closed';
_ -> V12@V0
end,
{V12@Int2,V12@Buf1}
end
end,
{{incidentResponseStatus,Val},NewBytes};
11 ->
{Val,NewBytes} = begin
begin
<<V13@V0:16,V13@Buf1/bitstring>> = Bytes1,
V13@Int2 = case V13@V0 of
3073 -> 'flash-flood';
3074 -> 'major-flood';
3075 -> 'reservoir-failure';
3076 -> 'levee-failure';
3077 -> tsunami;
3078 -> 'tidal-wave';
3079 -> 'volcanic-eruption';
3080 -> 'ash-fall';
3081 -> 'lava-flow';
3082 -> 'serious-fire';
3083 -> 'forest-fire';
3084 -> wildfire;
3085 -> 'building-fire';
3086 -> 'brush-fire';
3087 -> 'grass-fire';
3088 -> 'fire-danger-extreme';
3089 -> 'fire-danger-very-high';
3090 -> 'fire-danger-high';
3091 -> 'fire-danger-medium';
3092 -> 'fire-danger-low';
3093 -> 'earthquake-damage';
3094 -> 'air-crash';
3095 -> 'rail-crash';
3096 -> 'toxic-release';
3097 -> 'toxic-leak';
3098 -> 'radioactive-release';
3099 -> 'radiation-hazard';
3100 -> 'reactor-leakage';
3101 -> explosion;
3102 -> 'major-hazardous-materials-fire';
3103 -> 'major-hazardous-materials-release';
3199 -> 'disaster-cleared';
_ -> V13@V0
end,
{V13@Int2,V13@Buf1}
end
end,
{{disasters,Val},NewBytes};
12 ->
{Val,NewBytes} = begin
begin
<<V14@V0:16,V14@Buf1/bitstring>> = Bytes1,
V14@Int2 = case V14@V0 of
3329 -> assault;
3330 -> crime;
3331 -> robbery;
3332 -> 'fare-dispute';
3333 -> shooting;
3334 -> 'gunfire-on-roadway';
3335 -> suicide;
3336 -> fight;
3337 -> 'gang-fight';
3338 -> 'person-harassment';
3339 -> 'person-injured';
3340 -> 'unruly-passenger';
3341 -> 'person-intoxicated';
3342 -> 'crowd-control-problem';
3343 -> demonstration;
3344 -> march;
3345 -> 'public-disturbance';
3346 -> riot;
3347 -> 'civil-unrest';
3348 -> 'civil-emergency';
3349 -> strike;
3350 -> 'public-transit-strike';
3351 -> stampede;
3352 -> 'teargas-used';
3353 -> 'security-alert';
3354 -> 'security-incident';
3355 -> checkpoint;
3356 -> 'bomb-alert';
3357 -> 'terrorist-incident';
3358 -> 'high-velocity-shell-fire';
3359 -> 'explosives-in-use';
3360 -> 'air-raid';
3361 -> 'weapons-of-mass-destruction-threat';
3362 -> 'military-operations';
3363 -> 'sick-customer';
3454 -> 'security-problem-cleared';
3455 -> 'traffic-disturbance-cleared';
_ -> V14@V0
end,
{V14@Int2,V14@Buf1}
end
end,
{{disturbances,Val},NewBytes};
13 ->
{Val,NewBytes} = begin
begin
<<V15@V0:16,V15@Buf1/bitstring>> = Bytes1,
V15@Int2 = case V15@V0 of
3585 -> 'sports-event';
3586 -> game;
3587 -> tournament;
3588 -> 'track-and-field-event';
3589 -> 'baseball-game';
3590 -> 'basketball-game';
3591 -> 'boxing-match';
3592 -> 'football-game';
3593 -> 'soccer-game';
3594 -> 'golf-tournament';
3595 -> 'hockey-game';
3596 -> 'tennis-tournament';
3597 -> 'wrestling-match';
3598 -> 'road-race';
3599 -> 'automobile-race';
3600 -> 'bicycle-race';
3601 -> 'race-event';
3602 -> marathon;
3603 -> 'horse-show';
3604 -> rodeo;
3605 -> 'water-sports-event';
3606 -> 'winter-sports-event';
3607 -> 'skating-event';
3608 -> 'dog-sled-race';
3711 -> 'sporting-event-ended';
_ -> V15@V0
end,
{V15@Int2,V15@Buf1}
end
end,
{{sportingEvents,Val},NewBytes};
14 ->
{Val,NewBytes} = begin
begin
<<V16@V0:16,V16@Buf1/bitstring>> = Bytes1,
V16@Int2 = case V16@V0 of
3841 -> 'major-event';
3842 -> airshow;
3843 -> 'hot-air-ballooning';
3844 -> concert;
3845 -> 'state-occasion';
3846 -> 'vIP-visit';
3847 -> show;
3848 -> festival;
3849 -> exhibition;
3850 -> 'performing-arts';
3851 -> 'outdoor-market';
3852 -> fair;
3853 -> carnival;
3854 -> 'fireworks-display';
3855 -> 'trade-expo';
3856 -> 'movie-filming';
3857 -> 'presidential-visit';
3858 -> parade;
3859 -> procession;
3860 -> 'funeral-procession';
3861 -> crowd;
3862 -> 'holiday-traffic-crowds';
3967 -> 'event-ended';
_ -> V16@V0
end,
{V16@Int2,V16@Buf1}
end
end,
{{specialEvents,Val},NewBytes};
15 ->
{Val,NewBytes} = begin
begin
<<V17@V0:16,V17@Buf1/bitstring>> = Bytes1,
V17@Int2 = case V17@V0 of
4097 -> 'normal-parking-restrictions-lifted';
4098 -> 'parking-meter-restrictions-lifted';
4099 -> 'special-parking-restrictions-in-force';
4100 -> 'full-parking-lot';
4101 -> 'full-parking-garage';
4102 -> 'all-parking-lots-full';
4103 -> 'no-parking-spaces-available';
4104 -> 'only-a-few-spaces-available';
4105 -> 'spaces-available';
4106 -> 'no-parking';
4107 -> 'parking-on-one-side-of-street-only';
4108 -> 'parking-on-both-sides-of-street';
4109 -> 'parallel-parking-only';
4110 -> 'parking-meters-not-available';
4111 -> 'use-of-parking-meters-restricted';
4112 -> 'event-parking';
4113 -> 'handicapped-parking';
4114 -> 'long-term-parking';
4115 -> 'overnight-parking';
4116 -> 'short-term-parking';
4117 -> 'parking-by-permit-only';
4118 -> 'emergency-parking-only';
4119 -> 'emergency-stopping-only';
4120 -> parking;
4121 -> stopping;
4122 -> standing;
4123 -> 'tow-away-zone';
4124 -> 'school-zone';
4125 -> 'speed-zone';
4126 -> 'loading-zone';
4127 -> 'state-law';
4128 -> 'van-accessible';
4222 -> 'special-parking-restrictions-lifted';
4223 -> 'no-parking-information-available';
_ -> V17@V0
end,
{V17@Int2,V17@Buf1}
end
end,
{{parkingInformation,Val},NewBytes};
16 ->
{Val,NewBytes} = begin
begin
<<V18@V0:16,V18@Buf1/bitstring>> = Bytes1,
V18@Int2 = case V18@V0 of
4353 -> 'information-available-on-radio';
4354 -> 'information-available-on-TV';
4355 -> 'call-to-get-information';
4356 -> 'information-available-via-Internet';
4357 -> 'test-message';
4358 -> 'no-information-available';
4359 -> 'null-description';
4360 -> 'information-service-is-being-suspended';
4361 -> 'police-assistance';
4362 -> 'police-monitor-CB';
4363 -> 'emergency-notification';
4364 -> 'in-emergency-dial-911';
4365 -> 'travel-Info-call-511';
4366 -> 'car-pool-information';
4478 -> 'information-service-resumed';
4479 -> 'message-canceled';
_ -> V18@V0
end,
{V18@Int2,V18@Buf1}
end
end,
{{systemInformation,Val},NewBytes};
17 ->
{Val,NewBytes} = begin
begin
<<V19@V0:16,V19@Buf1/bitstring>> = Bytes1,
V19@Int2 = case V19@V0 of
4609 -> overcast;
4610 -> cloudy;
4611 -> 'mostly-cloudy';
4612 -> 'partly-cloudy';
4613 -> 'partly-sunny';
4614 -> 'mostly-sunny';
4615 -> sunny;
4616 -> 'fair-skies';
4617 -> 'clear-skies';
4618 -> 'mostly-clear';
4619 -> 'mostly-dry';
4620 -> dry;
4621 -> 'uV-index-very-high';
4622 -> 'uV-index-high';
4623 -> 'uV-index-moderate';
4624 -> 'uV-index-low';
4625 -> 'uV-index-very-low';
4626 -> 'barometric-pressure';
4627 -> 'ozone-alert';
4628 -> 'lighting-unknown';
4629 -> 'artificial-exterior-light';
4630 -> 'artificial-interior-light';
4631 -> darkness;
4632 -> dusk;
4633 -> dawn;
4634 -> moonlight;
4635 -> daylight;
4735 -> 'weather-forecast-withdrawn';
_ -> V19@V0
end,
{V19@Int2,V19@Buf1}
end
end,
{{weatherConditions,Val},NewBytes};
18 ->
{Val,NewBytes} = begin
begin
<<V20@V0:16,V20@Buf1/bitstring>> = Bytes1,
V20@Int2 = case V20@V0 of
4865 -> 'severe-weather';
4866 -> blizzard;
4867 -> 'heavy-snow';
4868 -> snow;
4869 -> 'light-snow';
4870 -> 'snow-showers';
4871 -> 'winter-storm';
4872 -> 'ice-glaze';
4873 -> 'heavy-frost';
4874 -> frost;
4875 -> 'ice-storm';
4876 -> sleet;
4877 -> 'rain-and-snow-mixed';
4878 -> 'rain-changing-to-snow';
4879 -> 'damaging-hail';
4880 -> hail;
4881 -> thunderstorms;
4882 -> thundershowers;
4883 -> 'extremely-heavy-downpour';
4884 -> 'heavy-rain';
4885 -> rain;
4886 -> 'light-rain';
4887 -> drizzle;
4888 -> showers;
4889 -> dew;
4991 -> 'precipitation-cleared';
_ -> V20@V0
end,
{V20@Int2,V20@Buf1}
end
end,
{{precipitation,Val},NewBytes};
19 ->
{Val,NewBytes} = begin
begin
<<V21@V0:16,V21@Buf1/bitstring>> = Bytes1,
V21@Int2 = case V21@V0 of
5121 -> tornado;
5122 -> hurricane;
5123 -> 'hurricane-force-winds';
5124 -> 'tropical-storm';
5125 -> 'gale-force-winds';
5126 -> 'storm-force-winds';
5127 -> 'strong-winds';
5128 -> 'moderate-winds';
5129 -> 'light-winds';
5130 -> calm;
5131 -> 'gusty-winds';
5132 -> crosswinds;
5133 -> windy;
5246 -> 'strong-winds-have-eased';
5247 -> 'strong-wind-forecast-withdrawn';
_ -> V21@V0
end,
{V21@Int2,V21@Buf1}
end
end,
{{winds,Val},NewBytes};
20 ->
{Val,NewBytes} = begin
begin
<<V22@V0:16,V22@Buf1/bitstring>> = Bytes1,
V22@Int2 = case V22@V0 of
5377 -> 'dense-fog';
5378 -> fog;
5379 -> 'patchy-fog';
5380 -> 'freezing-fog';
5381 -> mist;
5382 -> haze;
5383 -> 'visibility-reduced';
5384 -> 'white-out';
5385 -> 'blowing-snow';
5386 -> 'smoke-hazard';
5387 -> 'spray-hazard';
5388 -> 'low-sun-glare';
5389 -> 'snow-glare';
5390 -> 'blowing-dust';
5391 -> 'blowing-sand';
5392 -> 'dust-storms';
5393 -> sandstorms;
5394 -> 'air-quality-good';
5395 -> 'air-quality-fair';
5396 -> 'air-quality-poor';
5397 -> 'air-quality-very-poor';
5398 -> 'severe-exhaust-pollution';
5399 -> 'smog-alert';
5400 -> 'pollen-count-high';
5401 -> 'pollen-count-medium';
5402 -> 'pollen-count-low';
5403 -> 'swarms-of-insects';
5404 -> 'visibility-blocked';
5405 -> 'ice-fog';
5499 -> 'fog-clearing';
5500 -> 'visibility-improved';
5501 -> 'fog-forecast-withdrawn';
5502 -> 'pollution-alert-ended';
5503 -> 'air-quality-improved';
_ -> V22@V0
end,
{V22@Int2,V22@Buf1}
end
end,
{{visibilityAndAirQuality,Val},NewBytes};
21 ->
{Val,NewBytes} = begin
begin
<<V23@V0:16,V23@Buf1/bitstring>> = Bytes1,
V23@Int2 = case V23@V0 of
5633 -> 'maximum-temperature';
5634 -> temperature;
5635 -> 'minimum-temperature';
5636 -> 'current-temperature';
5637 -> 'heat-index';
5638 -> 'extreme-heat';
5639 -> hot;
5640 -> hotter;
5641 -> heat;
5642 -> warmer;
5643 -> warm;
5644 -> mild;
5645 -> cool;
5646 -> cooler;
5647 -> cold;
5648 -> colder;
5649 -> 'very-cold';
5650 -> 'extreme-cold';
5651 -> 'wind-chill';
5652 -> dewpoint;
5653 -> 'relative-humidity';
5758 -> 'temperatures-close-to-the-seasonal-norm';
5759 -> 'less-extreme-temperatures';
_ -> V23@V0
end,
{V23@Int2,V23@Buf1}
end
end,
{{temperature,Val},NewBytes};
22 ->
{Val,NewBytes} = begin
begin
<<V24@V0:16,V24@Buf1/bitstring>> = Bytes1,
V24@Int2 = case V24@V0 of
5889 -> impassable;
5890 -> 'almost-impassable';
5891 -> 'passable-with-care';
5892 -> passable;
5893 -> 'surface-water-hazard';
5894 -> 'danger-of-hydroplaning';
5895 -> 'wet-pavement';
5896 -> 'treated-pavement';
5897 -> slippery;
5898 -> 'mud-on-roadway';
5899 -> 'leaves-on-roadway';
5900 -> 'loose-sand-on-roadway';
5901 -> 'loose-gravel';
5902 -> 'fuel-on-roadway';
5903 -> 'oil-on-roadway';
5904 -> 'road-surface-in-poor-condition';
5905 -> 'melting-tar';
5906 -> ice;
5907 -> 'icy-patches';
5908 -> 'black-ice';
5909 -> 'ice-pellets-on-roadway';
5910 -> 'ice-build-up';
5911 -> 'freezing-rain';
5912 -> 'wet-and-icy-roads';
5913 -> 'melting-snow';
5914 -> slush;
5915 -> 'frozen-slush';
5916 -> 'snow-on-roadway';
5917 -> 'packed-snow';
5918 -> 'packed-snow-patches';
5919 -> 'plowed-snow';
5920 -> 'wet-snow';
5921 -> 'fresh-snow';
5922 -> 'powder-snow';
5923 -> 'granular-snow';
5924 -> 'frozen-snow';
5925 -> 'crusted-snow';
5926 -> 'deep-snow';
5927 -> 'snow-drifts';
5928 -> 'drifting-snow';
5929 -> 'expected-snow-accumulation';
5930 -> 'current-snow-accumulation';
5931 -> 'rough-road';
5932 -> sand;
5933 -> gravel;
5934 -> paved;
5935 -> 'uneven-lanes';
5936 -> 'rough-crossing';
5937 -> 'at-grade-level-crossing';
5938 -> 'low-ground-clearance';
6011 -> 'dry-pavement';
6012 -> 'snow-cleared';
6013 -> 'pavement-conditions-improved';
6014 -> 'skid-hazard-reduced';
6015 -> 'pavement-conditions-cleared';
_ -> V24@V0
end,
{V24@Int2,V24@Buf1}
end
end,
{{pavementConditions,Val},NewBytes};
23 ->
{Val,NewBytes} = begin
begin
<<V25@V0:16,V25@Buf1/bitstring>> = Bytes1,
V25@Int2 = case V25@V0 of
6145 -> 'winter-equipment-recommended';
6146 -> 'winter-equipment-required';
6147 -> 'snow-chains-recommended';
6148 -> 'snow-chains-required';
6149 -> 'snow-chains-prohibited';
6150 -> 'studded-tires-prohibited';
6151 -> 'snow-tires-recommended';
6152 -> 'snow-tires-required';
6153 -> 'four-wheel-drive-recommended';
6154 -> 'four-wheel-drive-required';
6155 -> 'snow-tires-or-chains-recommended';
6156 -> 'snow-tires-or-chains-required';
6271 -> 'winter-driving-requirements-lifted';
_ -> V25@V0
end,
{V25@Int2,V25@Buf1}
end
end,
{{winterDrivingRestrictions,Val},NewBytes};
24 ->
{Val,NewBytes} = begin
begin
<<V26@V0:16,V26@Buf1/bitstring>> = Bytes1,
V26@Int2 = case V26@V0 of
6401 -> 'driving-conditions-good';
6402 -> 'driving-conditions-fair';
6403 -> 'difficult-driving-conditions';
6404 -> 'very-difficult-driving-conditions';
6405 -> 'hazardous-driving-conditions';
6406 -> 'extremely-hazardous-driving-conditions';
_ -> V26@V0
end,
{V26@Int2,V26@Buf1}
end
end,
{{winterDrivingIndex,Val},NewBytes};
25 ->
{Val,NewBytes} = begin
begin
<<V27@V0:16,V27@Buf1/bitstring>> = Bytes1,
V27@Int2 = case V27@V0 of
6657 -> 'why-not-ride-share';
6658 -> 'is-this-your-no-ride-day';
6659 -> 'why-not-use-transit';
6660 -> 'why-not-park-and-ride';
6661 -> 'why-not-try-paratransit';
6662 -> 'why-not-travel-by-rail';
6663 -> 'why-not-use-the-subway';
6664 -> 'why-not-try-rapid-transit';
6665 -> 'why-not-travel-by-bus';
6666 -> 'your-parking-ticket-covers-the-return-ride';
6667 -> 'avoid-the-rush-hour';
6668 -> 'do-not-allow-unnecessary-gaps';
6669 -> 'follow-the-vehicle-in-front-smoothly';
6670 -> 'do-not-slow-down-unnecessarily';
6671 -> 'watch-for-muggers';
6672 -> 'watch-for-pickpockets';
6673 -> 'watch-for-thieves';
6674 -> 'sorry-for-any-delay';
6675 -> 'thank-you-for-your-understanding';
6676 -> 'we-appreciate-your-patience';
6677 -> 'we-are-grateful-for-your-cooperation';
6678 -> 'share-the-road';
_ -> V27@V0
end,
{V27@Int2,V27@Buf1}
end
end,
{{suggestionAdvice,Val},NewBytes};
26 ->
{Val,NewBytes} = begin
begin
<<V28@V0:16,V28@Buf1/bitstring>> = Bytes1,
V28@Int2 = case V28@V0 of
6913 -> risk;
6914 -> watch;
6915 -> warning;
6916 -> alert;
6917 -> danger;
6918 -> 'danger-of-explosion';
6919 -> 'danger-of-fire';
6920 -> 'extra-police-patrols-in-operation';
6921 -> 'look-out-for-vehicles-stopped-under-bridges';
6922 -> 'increased-risk-of-accident';
6923 -> 'rescue-and-recovery-work-in-progress-at-sceneREMOVED';
6924 -> 'police-at-scene';
6925 -> 'emergency-vehicles-at-scene';
6926 -> 'traffic-being-directed-around-accident-area';
6927 -> 'police-directing-traffic';
6928 -> 'rescue-workers-directing-traffic';
6929 -> 'repairs-in-progress';
6930 -> 'pilot-car-in-operation';
6931 -> 'look-out-for-flagger';
6932 -> 'police-checks-in-operation';
6933 -> 'mandatory-speed-limit-in-force';
6934 -> 'speed-limit-in-force-for-heavy-vehicles';
6935 -> lockdown;
6936 -> 'security-check-point';
6937 -> 'truck-check-point';
6938 -> 'single-occupancy-vehicle-check-point';
6939 -> look;
6940 -> 'photo-enforced';
6941 -> 'traffic-laws';
6942 -> 'use-low-gear';
6943 -> 'bridge-ices-before-road';
6944 -> 'speed-checked-by-radar';
6945 -> 'speed-checked-by-aircraft';
6946 -> fines;
6947 -> 'fines-higher';
6948 -> 'fines-doubled';
6949 -> 'fines-tripled';
6950 -> 'behind-you';
6951 -> 'traffic-signs';
6952 -> 'look-out-for-workers';
6953 -> 'ride-with-traffic';
6954 -> 'prepare-to-evacuate-area';
6955 -> avoid;
7033 -> 'evacuation-canceled';
7034 -> 'warning-canceled';
7035 -> 'watch-canceled';
7036 -> 'alert-canceled';
7037 -> ended;
7038 -> cleared;
7039 -> canceled;
_ -> V28@V0
end,
{V28@Int2,V28@Buf1}
end
end,
{{warningAdvice,Val},NewBytes};
27 ->
{Val,NewBytes} = begin
begin
<<V29@V0:16,V29@Buf1/bitstring>> = Bytes1,
V29@Int2 = case V29@V0 of
7169 -> 'drive-carefully';
7170 -> 'drive-with-extreme-caution';
7171 -> 'approach-with-care';
7172 -> 'keep-your-distance';
7173 -> 'increase-normal-following-distance';
7174 -> 'test-your-brakes';
7175 -> 'cross-intersection-with-care';
7176 -> 'pass-with-care';
7177 -> 'use-low-beam-headlights';
7178 -> 'use-fog-lights';
7179 -> 'use-hazard-warning-lights';
7180 -> 'do-not-leave-your-vehicle';
7181 -> 'leave-your-vehicle-and-proceed-to-next-safe-place';
7182 -> 'turn-off-engine';
7183 -> 'close-all-windows-turn-off-heater-air-conditioner-and-vents';
7184 -> 'turn-off-air-conditioner-to-prevent-engine-overheating';
7185 -> 'turn-off-mobile-phones-and-two-way-radios';
7186 -> 'prepare-to-stop';
7187 -> 'stop-at-next-rest-area';
7188 -> 'stop-at-next-safe-place';
7189 -> 'only-travel-if-absolutely-necessary';
7190 -> 'drive-to-another-service-area';
7191 -> 'use-through-traffic-lanes';
7192 -> 'use-local-traffic-lanes';
7193 -> 'use-left-hand-parallel-roadway';
7194 -> 'use-right-hand-parallel-roadway';
7195 -> 'use-heavy-vehicle-lane';
7196 -> 'observe-recommended-speed';
7197 -> 'facing-traffic';
7198 -> 'push-button';
7199 -> 'to-cross-street';
7200 -> pass;
7201 -> 'be-prepared-to-stop';
7202 -> 'signals-sequenced-for-speed';
7203 -> 'maintain-top-safe-speed';
7204 -> 'evacuate-area-voluntarily';
7205 -> 'shelter-in-place';
_ -> V29@V0
end,
{V29@Int2,V29@Buf1}
end
end,
{{adviceInstructionsRecommendations,Val},NewBytes};
28 ->
{Val,NewBytes} = begin
begin
<<V30@V0:16,V30@Buf1/bitstring>> = Bytes1,
V30@Int2 = case V30@V0 of
7425 -> 'keep-to-the-right';
7426 -> 'keep-to-the-left';
7427 -> 'use-right-lane';
7428 -> 'use-left-lane';
7429 -> 'heavy-vehicles-use-right-lane';
7430 -> 'heavy-vehicles-use-left-lane';
7431 -> 'observe-signals';
7432 -> 'observe-signs';
7433 -> 'no-passing';
7434 -> 'no-smoking';
7435 -> 'no-open-flames';
7436 -> 'use-shoulder-as-lane';
7437 -> 'do-not-drive-on-the-shoulder';
7438 -> 'allow-emergency-vehicles-to-pass';
7439 -> 'clear-a-lane-for-emergency-vehicles';
7440 -> 'pull-over-to-the-edge-of-the-roadway';
7441 -> 'wait-for-escort-vehicle';
7442 -> 'in-emergency-wait-for-police-patrol';
7443 -> 'reduce-your-speed';
7444 -> 'observe-speed-limits';
7445 -> 'check-point';
7446 -> 'entry-requirements';
7447 -> 'insurance-requirements';
7448 -> 'firearms-requirements';
7449 -> 'pet-requirements';
7450 -> 'stay-in-lane';
7451 -> merge;
7452 -> 'slower-traffic-keep-right';
7453 -> 'keep-off';
7454 -> 'evacuate-area-immediately';
7547 -> 'shoulder-travel-no-longer-allowed';
_ -> V30@V0
end,
{V30@Int2,V30@Buf1}
end
end,
{{adviceInstructionsMandatory,Val},NewBytes};
29 ->
{Val,NewBytes} = begin
begin
<<V31@V0:16,V31@Buf1/bitstring>> = Bytes1,
V31@Int2 = case V31@V0 of
8193 -> 'all-roadways';
8194 -> 'through-lanes';
8195 -> 'left-lane';
8196 -> 'right-lane';
8197 -> 'center-lane';
8198 -> 'middle-lanes';
8199 -> 'middle-two-lanes';
8200 -> 'right-turning-lanes';
8201 -> 'left-turning-lanes';
8202 -> 'right-exit-ramp';
8203 -> 'right-entrance-ramp';
8204 -> 'left-exit-ramp';
8205 -> 'left-entrance-ramp';
8206 -> 'hard-shoulder';
8207 -> 'soft-shoulder';
8208 -> 'right-shoulder';
8209 -> 'left-shoulder';
8210 -> 'right-hand-parallel-lanes';
8211 -> 'left-hand-parallel-lanes';
8212 -> 'connecting-lanes';
8213 -> 'express-lanes';
8214 -> 'local-lanes';
8215 -> 'toll-lanes';
8216 -> 'electronic-toll-lanes';
8217 -> 'toll-plaza';
8218 -> 'inspection-lane';
8219 -> 'hOV-lanes';
8220 -> 'bus-lanes';
8221 -> 'carpool-lanes';
8222 -> 'truck-lanes';
8223 -> 'emergency-lanes';
8224 -> 'passing-lanes';
8225 -> 'climbing-lanes';
8226 -> 'slow-lane';
8227 -> 'service-road';
8228 -> 'cycle-lane';
8229 -> bridge;
8230 -> overpass;
8231 -> 'elevated-lanes';
8232 -> underpass;
8233 -> tunnel;
8234 -> 'escape-ramp';
8235 -> highways;
8236 -> 'upper-deck-lanes';
8237 -> 'lower-deck-lanes';
8238 -> 'reversible-lanes';
8239 -> 'right-exit-lanes';
8240 -> 'left-exit-lanes';
8241 -> 'right-merging-lanes';
8242 -> 'left-merging-lanes';
8243 -> 'right-second-exit-ramp';
8244 -> 'left-second-exit-ramp';
8245 -> 'right-second-entrance-ramp';
8246 -> 'left-second-entrance-ramp';
8247 -> 'all-exit-lanes';
8248 -> 'all-entry-lanes';
8249 -> 'either-shoulder';
8250 -> tracks;
8251 -> sidewalk;
8252 -> median;
8253 -> 'shoulder-work';
_ -> V31@V0
end,
{V31@Int2,V31@Buf1}
end
end,
{{laneRoadway,Val},NewBytes};
30 ->
{Val,NewBytes} = begin
begin
<<V32@V0:16,V32@Buf1/bitstring>> = Bytes1,
V32@Int2 = case V32@V0 of
8449 -> 'detour-where-possible';
8450 -> 'no-detour-available';
8451 -> 'follow-signs';
8452 -> 'follow-detour-signs';
8453 -> 'follow-special-detour-markers';
8454 -> 'do-not-follow-detour-signs';
8455 -> 'detour-in-operation';
8456 -> 'follow-local-detour';
8457 -> 'compulsory-detour-in-operation';
8458 -> 'no-suitable-detour-available';
8459 -> 'detour-is-no-longer-recommended';
8460 -> 'local-drivers-are-recommended-to-avoid-the-area';
8461 -> 'trucks-are-recommended-to-avoid-the-area';
8462 -> 'consider-alternate-route';
8463 -> 'consider-alternate-parking';
8464 -> 'consider-alternate-destination';
8465 -> 'consider-alternate-area';
8466 -> 'snow-route';
8467 -> 'emergency-snow-route';
8468 -> 'evacuation-route';
8469 -> 'truck-route';
8470 -> 'hazardous-materials-route';
8471 -> detour;
_ -> V32@V0
end,
{V32@Int2,V32@Buf1}
end
end,
{{alternateRoute,Val},NewBytes};
31 ->
{Val,NewBytes} = begin
begin
<<V33@V0:16,V33@Buf1/bitstring>> = Bytes1,
V33@Int2 = case V33@V0 of
8961 -> travel;
8962 -> transit;
8963 -> bus;
8964 -> trolleybus;
8965 -> rail;
8966 -> 'commuter-rail';
8967 -> subway;
8968 -> 'rapid-transit';
8969 -> 'light-rail';
8970 -> streetcar;
8971 -> 'dial-a-ride';
8972 -> 'park-and-ride';
8973 -> shuttle;
8974 -> 'free-shuttle';
8975 -> 'airport-shuttle';
8976 -> taxies;
8977 -> ferry;
8978 -> 'passenger-ferry';
8979 -> 'vehicle-ferry';
8980 -> 'aerial-tramway';
8981 -> 'automated-guideway';
8982 -> 'cable-cars';
8983 -> monorail;
8984 -> 'air-travel';
8985 -> 'hitch-hitching';
8986 -> walk;
_ -> V33@V0
end,
{V33@Int2,V33@Buf1}
end
end,
{{transitMode,Val},NewBytes};
32 ->
{Val,NewBytes} = begin
begin
<<V34@V0:16,V34@Buf1/bitstring>> = Bytes1,
V34@Int2 = case V34@V0 of
9217 -> 'all-vehicles';
9218 -> bicycles;
9219 -> motorcycles;
9220 -> cars;
9221 -> 'light-vehicles';
9222 -> 'cars-and-light-vehicles';
9223 -> 'cars-with-trailers';
9224 -> 'cars-with-recreational-trailers';
9225 -> 'vehicles-with-trailers';
9226 -> 'heavy-vehicles';
9227 -> trucks;
9228 -> buses;
9229 -> 'articulated-buses';
9230 -> 'school-buses';
9231 -> 'vehicles-with-semi-trailers';
9232 -> 'vehicles-with-double-trailers';
9233 -> 'high-profile-vehicles';
9234 -> 'wide-vehicles';
9235 -> 'long-vehicles';
9236 -> 'hazardous-loads';
9237 -> 'exceptional-loads';
9238 -> 'abnormal-loads';
9239 -> convoys;
9240 -> 'maintenance-vehicles';
9241 -> 'delivery-vehicles';
9242 -> 'vehicles-with-even-numbered-license-plates';
9243 -> 'vehicles-with-odd-numbered-license-plates';
9244 -> 'vehicles-with-parking-permits';
9245 -> 'vehicles-with-catalytic-converters';
9246 -> 'vehicles-without-catalytic-converters';
9247 -> 'gas-powered-vehicles';
9248 -> 'diesel-powered-vehicles';
9249 -> 'lPG-vehicles';
9250 -> 'military-convoys';
9251 -> 'military-vehicles';
9252 -> 'electric-powered-vehicles';
9253 -> 'hybrid-powered-vehicles';
9254 -> 'inherently-low-emission-vehicles';
9255 -> 'commercial-vehicles';
9256 -> 'runaway-vehicles';
9257 -> 'vehicles-with-lugs';
9258 -> 'motor-driven-cycles';
9259 -> 'recreational-vehicles';
9260 -> 'non-motorized-vehicles';
9261 -> traffic;
_ -> V34@V0
end,
{V34@Int2,V34@Buf1}
end
end,
{{vehicleGroupAffected,Val},NewBytes};
33 ->
{Val,NewBytes} = begin
begin
<<V35@V0:16,V35@Buf1/bitstring>> = Bytes1,
V35@Int2 = case V35@V0 of
9473 -> 'through-traffic';
9474 -> 'holiday-traffic';
9475 -> residents;
9476 -> visitors;
9477 -> 'long-distance-traffic';
9478 -> 'local-traffic';
9479 -> 'regional-traffic';
9480 -> arrivals;
9481 -> departures;
9482 -> 'airline-travelers';
9483 -> 'commuter-airline-travelers';
9484 -> 'domestic-airline-travelers';
9485 -> 'international-airline-travelers';
9486 -> pedestrians;
9487 -> bicyclists;
_ -> V35@V0
end,
{V35@Int2,V35@Buf1}
end
end,
{{travelerGroupAffected,Val},NewBytes};
34 ->
{Val,NewBytes} = begin
begin
<<V36@V0:16,V36@Buf1/bitstring>> = Bytes1,
V36@Int2 = case V36@V0 of
9729 -> 'emergency-vehicle-units';
9730 -> 'federal-law-enforcement-units';
9731 -> 'state-police-units';
9732 -> 'county-police-units';
9733 -> 'local-police-units';
9734 -> 'ambulance-units';
9735 -> 'rescue-units';
9736 -> 'fire-units';
9737 -> 'hAZMAT-units';
9738 -> 'light-tow-unit';
9739 -> 'heavy-tow-unit';
9740 -> 'freeway-service-patrols';
9741 -> 'transportation-response-units';
9742 -> 'private-contractor-response-units';
9743 -> 'private-tow-units';
_ -> V36@V0
end,
{V36@Int2,V36@Buf1}
end
end,
{{responderGroupAffected,Val},NewBytes};
35 ->
{Val,NewBytes} = begin
begin
<<V37@V0:16,V37@Buf1/bitstring>> = Bytes1,
V37@Int2 = case V37@V0 of
9985 -> 'ground-fire-suppression';
9986 -> 'heavy-ground-equipment';
9988 -> aircraft;
9989 -> 'marine-equipment';
9990 -> 'support-equipment';
9991 -> 'medical-rescue-unit';
9993 -> other;
9994 -> 'ground-fire-suppression-other';
9995 -> engine;
9996 -> 'truck-or-aerial';
9997 -> quint;
9998 -> 'tanker-pumper-combination';
10000 -> 'brush-truck';
10001 -> 'aircraft-rescue-firefighting';
10004 -> 'heavy-ground-equipment-other';
10005 -> 'dozer-or-plow';
10006 -> tractor;
10008 -> 'tanker-or-tender';
10024 -> 'aircraft-other';
10025 -> 'aircraft-fixed-wing-tanker';
10026 -> helitanker;
10027 -> helicopter;
10034 -> 'marine-equipment-other';
10035 -> 'fire-boat-with-pump';
10036 -> 'boat-no-pump';
10044 -> 'support-apparatus-other';
10045 -> 'breathing-apparatus-support';
10046 -> 'light-and-air-unit';
10054 -> 'medical-rescue-unit-other';
10055 -> 'rescue-unit';
10056 -> 'urban-search-rescue-unit';
10057 -> 'high-angle-rescue';
10058 -> 'crash-fire-rescue';
10059 -> 'bLS-unit';
10060 -> 'aLS-unit';
10075 -> 'mobile-command-post';
10076 -> 'chief-officer-car';
10077 -> 'hAZMAT-unit';
10078 -> 'type-i-hand-crew';
10079 -> 'type-ii-hand-crew';
10083 -> 'privately-owned-vehicle';
10084 -> 'other-apparatus-resource';
10085 -> ambulance;
10086 -> 'bomb-squad-van';
10087 -> 'combine-harvester';
10088 -> 'construction-vehicle';
10089 -> 'farm-tractor';
10090 -> 'grass-cutting-machines';
10091 -> 'hAZMAT-containment-tow';
10092 -> 'heavy-tow';
10093 -> 'hedge-cutting-machines';
10094 -> 'light-tow';
10095 -> 'mobile-crane';
10096 -> 'refuse-collection-vehicle';
10097 -> 'resurfacing-vehicle';
10098 -> 'road-sweeper';
10099 -> 'roadside-litter-collection-crews';
10100 -> 'salvage-vehicle';
10101 -> 'sand-truck';
10102 -> snowplow;
10103 -> 'steam-roller';
10104 -> 'swat-team-van';
10105 -> 'track-laying-vehicle';
10106 -> 'unknown-vehicle';
10107 -> 'white-lining-vehicle';
10108 -> 'dump-truck';
10109 -> 'supervisor-vehicle';
10110 -> 'snow-blower';
10111 -> 'rotary-snow-blower';
10112 -> 'road-grader';
10113 -> 'steam-truck';
10114 -> 'flatbed-tow';
10115 -> 'survey-crews';
_ -> V37@V0
end,
{V37@Int2,V37@Buf1}
end
end,
{{incidentResponseEquipment,Val},NewBytes};
36 ->
{Val,NewBytes} = begin
begin
<<V38@V0:16,V38@Buf1/bitstring>> = Bytes1,
V38@Int2 = case V38@V0 of
10753 -> 'unknown-transit-problem';
10754 -> 'sleeping-customer';
10755 -> 'assault-on-passenger';
10756 -> 'assault-on-employee';
10757 -> 'broken-seat';
10758 -> 'bus-alarm';
10759 -> 'crime-or-drug-deal';
10760 -> 'eating-on-board';
10761 -> 'equipment-problem-with-air-conditioning';
10762 -> 'equipment-problem-with-air-system';
10763 -> 'equipment-problem-with-brakes';
10764 -> 'equipment-problem-with-chassis-or-suspension';
10765 -> 'equipment-problem-with-cooling-system';
10766 -> 'equipment-problem-with-doors';
10767 -> 'equipment-problem-with-electrical';
10768 -> 'equipment-problem-with-engine';
10769 -> 'equipment-problem-with-exterior-or-body';
10770 -> 'equipment-problem-with-fare-collection';
10771 -> 'equipment-problem-with-fuel-or-exhaust';
10772 -> 'equipment-problem-with-horn';
10773 -> 'equipment-problem-with-interior';
10774 -> 'equipment-problem-with-liftkneeling';
10775 -> 'equipment-problem-with-lights';
10776 -> 'equipment-problem-with-lubrication';
10777 -> 'equipment-problem-with-radio-or-communication';
10778 -> 'equipment-problem-with-signs';
10779 -> 'equipment-problem-with-steering';
10780 -> 'equipment-problem-with-tires';
10781 -> 'equipment-problem-with-transmission';
10782 -> 'equipment-problem-with-unknown-alarm';
10783 -> 'equipment-problem-with-wipers';
10784 -> 'fare-dispute-expired-pass';
10785 -> 'fare-dispute-expired-transfer';
10786 -> 'fare-dispute-expired-upgrade';
10787 -> 'fare-dispute-other';
10788 -> 'fare-dispute-refuses-to-pay';
10789 -> 'lift-passenger-cycle-completed';
10790 -> 'lift-passenger-ready-to-alight';
10791 -> 'lift-passenger-ready-to-board';
10792 -> 'lost-article';
10793 -> 'objects-thrown';
10794 -> 'passenger-accident-alighting';
10795 -> 'passenger-accident-boarding';
10796 -> 'passenger-accident-fallen-on-board';
10797 -> 'passenger-load';
10798 -> 'passenger-accident-other';
10799 -> 'passenger-sick-or-injured';
10800 -> 'right-of-way';
10801 -> theft;
10802 -> 'theft-of-service';
10803 -> 'waiting-to-get-relief-for-schedule-break';
10804 -> 'waiting-to-get-relief-after-run-is-finished';
10805 -> 'waiting-to-provide-relief';
_ -> V38@V0
end,
{V38@Int2,V38@Buf1}
end
end,
{{transitOperations,Val},NewBytes};
37 ->
{Val,NewBytes} = begin
begin
<<V39@V0:16,V39@Buf1/bitstring>> = Bytes1,
V39@Int2 = case V39@V0 of
12289 -> 'regulatory-sign';
12290 -> 'warning-sign';
12291 -> 'information-sign';
12292 -> 'construction-sign';
12293 -> 'guide-sign';
12294 -> stop;
12295 -> yield;
12296 -> 'to-oncoming-traffic';
12297 -> 'four-way';
12298 -> 'all-way';
12299 -> zone;
12300 -> narrows;
12301 -> widens;
12302 -> reduced;
12303 -> combined;
12304 -> minimum;
12305 -> maximum;
12306 -> 'divided-road';
12307 -> 'double-arrow';
12308 -> 'dead-end';
12309 -> 'no-outlet';
12310 -> 'wrong-way';
12312 -> nDetour;
12313 -> chevron;
12314 -> 'do-not-enter';
12315 -> 't-intersection-to-the-side';
12316 -> 't-intersection-oncoming';
12317 -> 'y-intersection-to-the-side';
12318 -> 'y-intersection-oncoming';
12319 -> 'four-way-divided-highway-crossing';
12320 -> 't-way-divided-highway-crossing';
12321 -> 'light-rail-divided-highway-crossing';
12322 -> 'light-rail-t-divided-highway-crossing';
12323 -> 'side-road-to-right';
12324 -> 'side-road-to-left';
12325 -> 'side-road-to-right-at-angle';
12326 -> 'side-road-to-left-at-angle';
12327 -> 'entering-roadway-merge';
12328 -> 'entering-roadway-added-lane';
12329 -> 'one-way';
12330 -> caution;
12331 -> temporary;
_ -> V39@V0
end,
{V39@Int2,V39@Buf1}
end
end,
{{regulatorySigns,Val},NewBytes}
end.
enc_ITIScodesAndText(Val) ->
Enc1@len = length(Val),
Enc1@len@sub = Enc1@len - 1,
if 0 =< Enc1@len@sub, Enc1@len@sub < 100 ->
[<<Enc1@len@sub:7>>|[enc_ITIScodesAndText_SEQOF(Comp) || Comp <- Val]]
end.

enc_ITIScodesAndText_SEQOF(Val) ->
%% attribute item(1) with type CHOICE
Enc1@element = element(2, Val),
enc_ITIScodesAndText_SEQOF_item(Enc1@element).
enc_ITIScodesAndText_SEQOF_item(Val) ->
{ChoiceTag,ChoiceVal} = Val,
if ChoiceTag =:= itis ->
if ChoiceVal =:= 'stopped-traffic' ->
<<0:1,257:16>>;
ChoiceVal =:= 'stop-and-go-traffic' ->
<<0:1,258:16>>;
ChoiceVal =:= 'slow-traffic' ->
<<0:1,259:16>>;
ChoiceVal =:= 'heavy-traffic' ->
<<0:1,260:16>>;
ChoiceVal =:= 'traffic-building' ->
<<0:1,261:16>>;
ChoiceVal =:= 'long-queues' ->
<<0:1,262:16>>;
ChoiceVal =:= 'traffic-congestion' ->
<<0:1,263:16>>;
ChoiceVal =:= 'traffic-lighter-than-normal' ->
<<0:1,264:16>>;
ChoiceVal =:= 'traffic-heavier-than-normal' ->
<<0:1,265:16>>;
ChoiceVal =:= 'traffic-much-heavier-than-normal' ->
<<0:1,266:16>>;
ChoiceVal =:= 'current-speed' ->
<<0:1,267:16>>;
ChoiceVal =:= 'speed-limit' ->
<<0:1,268:16>>;
ChoiceVal =:= 'travel-time' ->
<<0:1,269:16>>;
ChoiceVal =:= 'merging-traffic' ->
<<0:1,272:16>>;
ChoiceVal =:= contraflow ->
<<0:1,273:16>>;
ChoiceVal =:= 'contraflow-canceled' ->
<<0:1,378:16>>;
ChoiceVal =:= 'traffic-flowing-freely' ->
<<0:1,379:16>>;
ChoiceVal =:= 'traffic-easing' ->
<<0:1,380:16>>;
ChoiceVal =:= 'traffic-returned-to-normal' ->
<<0:1,381:16>>;
ChoiceVal =:= 'no-problems-to-report' ->
<<0:1,382:16>>;
ChoiceVal =:= 'traffic-congestion-cleared' ->
<<0:1,383:16>>;
ChoiceVal =:= accident ->
<<0:1,513:16>>;
ChoiceVal =:= 'serious-accident' ->
<<0:1,514:16>>;
ChoiceVal =:= 'injury-accident' ->
<<0:1,515:16>>;
ChoiceVal =:= 'minor-accident' ->
<<0:1,516:16>>;
ChoiceVal =:= 'multi-vehicle-accident' ->
<<0:1,517:16>>;
ChoiceVal =:= 'numerous-accidents' ->
<<0:1,518:16>>;
ChoiceVal =:= 'accident-involving-a-bicycle' ->
<<0:1,519:16>>;
ChoiceVal =:= 'accident-involving-a-bus' ->
<<0:1,520:16>>;
ChoiceVal =:= 'accident-involving-a-motorcycle' ->
<<0:1,521:16>>;
ChoiceVal =:= 'accident-involving-a-pedestrian' ->
<<0:1,522:16>>;
ChoiceVal =:= 'accident-involving-a-train' ->
<<0:1,523:16>>;
ChoiceVal =:= 'accident-involving-a-truck' ->
<<0:1,524:16>>;
ChoiceVal =:= 'accident-involving-hazardous-materials' ->
<<0:1,525:16>>;
ChoiceVal =:= 'earlier-accident' ->
<<0:1,526:16>>;
ChoiceVal =:= 'medical-emergency' ->
<<0:1,527:16>>;
ChoiceVal =:= 'secondary-accident' ->
<<0:1,528:16>>;
ChoiceVal =:= 'rescue-and-recovery-work-REMOVED' ->
<<0:1,529:16>>;
ChoiceVal =:= 'accident-investigation-work' ->
<<0:1,530:16>>;
ChoiceVal =:= incident ->
<<0:1,531:16>>;
ChoiceVal =:= 'stalled-vehicle' ->
<<0:1,532:16>>;
ChoiceVal =:= 'abandoned-vehicle' ->
<<0:1,533:16>>;
ChoiceVal =:= 'disabled-vehicle' ->
<<0:1,534:16>>;
ChoiceVal =:= 'disabled-truck' ->
<<0:1,535:16>>;
ChoiceVal =:= 'disabled-semi-trailer' ->
<<0:1,536:16>>;
ChoiceVal =:= 'disabled-bus' ->
<<0:1,537:16>>;
ChoiceVal =:= 'disabled-train' ->
<<0:1,538:16>>;
ChoiceVal =:= 'vehicle-spun-out' ->
<<0:1,539:16>>;
ChoiceVal =:= 'vehicle-on-fire' ->
<<0:1,540:16>>;
ChoiceVal =:= 'vehicle-in-water' ->
<<0:1,541:16>>;
ChoiceVal =:= 'vehicles-slowing-to-look-at-accident' ->
<<0:1,542:16>>;
ChoiceVal =:= 'jackknifed-semi-trailer' ->
<<0:1,543:16>>;
ChoiceVal =:= 'jackknifed-trailer-home' ->
<<0:1,544:16>>;
ChoiceVal =:= 'jackknifed-trailer' ->
<<0:1,545:16>>;
ChoiceVal =:= 'spillage-occurring-from-moving-vehicle' ->
<<0:1,546:16>>;
ChoiceVal =:= 'acid-spill' ->
<<0:1,547:16>>;
ChoiceVal =:= 'chemical-spill' ->
<<0:1,548:16>>;
ChoiceVal =:= 'fuel-spill' ->
<<0:1,549:16>>;
ChoiceVal =:= 'hazardous-materials-spill' ->
<<0:1,550:16>>;
ChoiceVal =:= 'oil-spill' ->
<<0:1,551:16>>;
ChoiceVal =:= 'spilled-load' ->
<<0:1,552:16>>;
ChoiceVal =:= 'toxic-spill' ->
<<0:1,553:16>>;
ChoiceVal =:= 'overturned-vehicle' ->
<<0:1,554:16>>;
ChoiceVal =:= 'overturned-truck' ->
<<0:1,555:16>>;
ChoiceVal =:= 'overturned-semi-trailer' ->
<<0:1,556:16>>;
ChoiceVal =:= 'overturned-bus' ->
<<0:1,557:16>>;
ChoiceVal =:= 'derailed-train' ->
<<0:1,558:16>>;
ChoiceVal =:= 'stuck-vehicle' ->
<<0:1,559:16>>;
ChoiceVal =:= 'truck-stuck-under-bridge' ->
<<0:1,560:16>>;
ChoiceVal =:= 'bus-stuck-under-bridge' ->
<<0:1,561:16>>;
ChoiceVal =:= 'accident-involving-a-semi-trailer' ->
<<0:1,562:16>>;
ChoiceVal =:= 'accident-cleared' ->
<<0:1,638:16>>;
ChoiceVal =:= 'incident-cleared' ->
<<0:1,639:16>>;
ChoiceVal =:= 'closed-to-traffic' ->
<<0:1,769:16>>;
ChoiceVal =:= closed ->
<<0:1,770:16>>;
ChoiceVal =:= 'closed-ahead' ->
<<0:1,771:16>>;
ChoiceVal =:= 'closed-intermittently' ->
<<0:1,772:16>>;
ChoiceVal =:= 'closed-for-repairs' ->
<<0:1,773:16>>;
ChoiceVal =:= 'closed-for-the-season' ->
<<0:1,774:16>>;
ChoiceVal =:= blocked ->
<<0:1,775:16>>;
ChoiceVal =:= 'blocked-ahead' ->
<<0:1,776:16>>;
ChoiceVal =:= 'reduced-to-one-lane' ->
<<0:1,777:16>>;
ChoiceVal =:= 'reduced-to-two-lanes' ->
<<0:1,778:16>>;
ChoiceVal =:= 'reduced-to-three-lanes' ->
<<0:1,779:16>>;
ChoiceVal =:= collapse ->
<<0:1,780:16>>;
ChoiceVal =:= out ->
<<0:1,781:16>>;
ChoiceVal =:= 'open-to-traffic' ->
<<0:1,891:16>>;
ChoiceVal =:= open ->
<<0:1,892:16>>;
ChoiceVal =:= 'reopened-to-traffic' ->
<<0:1,893:16>>;
ChoiceVal =:= clearing ->
<<0:1,894:16>>;
ChoiceVal =:= 'cleared-from-road' ->
<<0:1,895:16>>;
ChoiceVal =:= 'road-construction' ->
<<0:1,1025:16>>;
ChoiceVal =:= 'major-road-construction' ->
<<0:1,1026:16>>;
ChoiceVal =:= 'long-term-road-construction' ->
<<0:1,1027:16>>;
ChoiceVal =:= 'construction-work' ->
<<0:1,1028:16>>;
ChoiceVal =:= 'paving-operations' ->
<<0:1,1029:16>>;
ChoiceVal =:= 'work-in-the-median' ->
<<0:1,1030:16>>;
ChoiceVal =:= 'road-reconstruction' ->
<<0:1,1031:16>>;
ChoiceVal =:= 'opposing-traffic' ->
<<0:1,1032:16>>;
ChoiceVal =:= 'narrow-lanes' ->
<<0:1,1033:16>>;
ChoiceVal =:= 'construction-traffic-merging' ->
<<0:1,1034:16>>;
ChoiceVal =:= 'single-line-traffic-alternating-directions' ->
<<0:1,1035:16>>;
ChoiceVal =:= 'road-maintenance-operations' ->
<<0:1,1036:16>>;
ChoiceVal =:= 'road-marking-operations' ->
<<0:1,1037:16>>;
ChoiceVal =:= 'bridge-maintenance-operations' ->
<<0:1,1038:16>>;
ChoiceVal =:= 'bridge-construction' ->
<<0:1,1039:16>>;
ChoiceVal =:= 'bridge-demolition-work' ->
<<0:1,1040:16>>;
ChoiceVal =:= blasting ->
<<0:1,1041:16>>;
ChoiceVal =:= 'avalanche-control-activities' ->
<<0:1,1042:16>>;
ChoiceVal =:= 'water-main-work' ->
<<0:1,1043:16>>;
ChoiceVal =:= 'gas-main-work' ->
<<0:1,1044:16>>;
ChoiceVal =:= 'work-on-underground-cables' ->
<<0:1,1045:16>>;
ChoiceVal =:= 'work-on-underground-services' ->
<<0:1,1046:16>>;
ChoiceVal =:= 'new-road-construction-layout' ->
<<0:1,1047:16>>;
ChoiceVal =:= 'new-road-layout' ->
<<0:1,1048:16>>;
ChoiceVal =:= 'temporary-lane-markings' ->
<<0:1,1049:16>>;
ChoiceVal =:= 'temporary-traffic-lights' ->
<<0:1,1050:16>>;
ChoiceVal =:= 'emergency-maintenance' ->
<<0:1,1051:16>>;
ChoiceVal =:= cracks ->
<<0:1,1052:16>>;
ChoiceVal =:= bumps ->
<<0:1,1053:16>>;
ChoiceVal =:= 'storm-drain' ->
<<0:1,1054:16>>;
ChoiceVal =:= 'overgrown-grass' ->
<<0:1,1055:16>>;
ChoiceVal =:= 'overgrown-brushshrubs' ->
<<0:1,1056:16>>;
ChoiceVal =:= 'overgrown-trees' ->
<<0:1,1057:16>>;
ChoiceVal =:= 'crack-REMOVE' ->
<<0:1,1058:16>>;
ChoiceVal =:= 'drop-off' ->
<<0:1,1059:16>>;
ChoiceVal =:= 'seismic-retrofit' ->
<<0:1,1060:16>>;
ChoiceVal =:= 'road-widening' ->
<<0:1,1061:16>>;
ChoiceVal =:= 'utility-work' ->
<<0:1,1062:16>>;
ChoiceVal =:= 'road-maintenance-cleared' ->
<<0:1,1146:16>>;
ChoiceVal =:= 'normal-road-layout-restored' ->
<<0:1,1147:16>>;
ChoiceVal =:= 'road-work-clearance-in-progress' ->
<<0:1,1148:16>>;
ChoiceVal =:= 'road-construction-cleared' ->
<<0:1,1149:16>>;
ChoiceVal =:= 'normal-traffic-lanes-restored' ->
<<0:1,1150:16>>;
ChoiceVal =:= 'road-work-cleared' ->
<<0:1,1151:16>>;
ChoiceVal =:= 'obstruction-on-roadway' ->
<<0:1,1281:16>>;
ChoiceVal =:= 'object-on-roadway' ->
<<0:1,1282:16>>;
ChoiceVal =:= 'objects-falling-from-moving-vehicle' ->
<<0:1,1283:16>>;
ChoiceVal =:= 'debris-on-roadway' ->
<<0:1,1284:16>>;
ChoiceVal =:= 'storm-damage' ->
<<0:1,1285:16>>;
ChoiceVal =:= 'people-on-roadway' ->
<<0:1,1286:16>>;
ChoiceVal =:= 'bicyclists-on-roadway' ->
<<0:1,1287:16>>;
ChoiceVal =:= 'sightseers-obstructing-access' ->
<<0:1,1288:16>>;
ChoiceVal =:= 'large-numbers-of-visitors' ->
<<0:1,1289:16>>;
ChoiceVal =:= 'animal-on-roadway' ->
<<0:1,1290:16>>;
ChoiceVal =:= 'large-animal-on-roadway' ->
<<0:1,1291:16>>;
ChoiceVal =:= 'herd-of-animals-on-roadway' ->
<<0:1,1292:16>>;
ChoiceVal =:= 'animal-struck' ->
<<0:1,1293:16>>;
ChoiceVal =:= 'fallen-trees' ->
<<0:1,1294:16>>;
ChoiceVal =:= 'downed-power-lines' ->
<<0:1,1295:16>>;
ChoiceVal =:= 'downed-cables' ->
<<0:1,1296:16>>;
ChoiceVal =:= subsidence ->
<<0:1,1297:16>>;
ChoiceVal =:= 'road-surface-collapse' ->
<<0:1,1298:16>>;
ChoiceVal =:= 'pavement-buckled' ->
<<0:1,1299:16>>;
ChoiceVal =:= pothole ->
<<0:1,1300:16>>;
ChoiceVal =:= flooding ->
<<0:1,1301:16>>;
ChoiceVal =:= 'broken-water-main' ->
<<0:1,1302:16>>;
ChoiceVal =:= 'collapsed-sewer' ->
<<0:1,1303:16>>;
ChoiceVal =:= 'sewer-overflow' ->
<<0:1,1304:16>>;
ChoiceVal =:= 'gas-leak' ->
<<0:1,1305:16>>;
ChoiceVal =:= snowmelt ->
<<0:1,1306:16>>;
ChoiceVal =:= mudslide ->
<<0:1,1307:16>>;
ChoiceVal =:= avalanche ->
<<0:1,1308:16>>;
ChoiceVal =:= rockfall ->
<<0:1,1309:16>>;
ChoiceVal =:= landslide ->
<<0:1,1310:16>>;
ChoiceVal =:= 'over-turned-trees' ->
<<0:1,1311:16>>;
ChoiceVal =:= 'tree-limbs' ->
<<0:1,1312:16>>;
ChoiceVal =:= 'utility-pole-down' ->
<<0:1,1314:16>>;
ChoiceVal =:= 'advertising-signs' ->
<<0:1,1315:16>>;
ChoiceVal =:= 'frost-heave' ->
<<0:1,1316:16>>;
ChoiceVal =:= 'frost-jacking' ->
<<0:1,1317:16>>;
ChoiceVal =:= washboard ->
<<0:1,1318:16>>;
ChoiceVal =:= 'wash-out' ->
<<0:1,1319:16>>;
ChoiceVal =:= 'clearance-work' ->
<<0:1,1406:16>>;
ChoiceVal =:= 'obstruction-cleared' ->
<<0:1,1407:16>>;
ChoiceVal =:= delays ->
<<0:1,1537:16>>;
ChoiceVal =:= 'short-delays' ->
<<0:1,1538:16>>;
ChoiceVal =:= 'long-delays' ->
<<0:1,1539:16>>;
ChoiceVal =:= 'very-long-delays' ->
<<0:1,1540:16>>;
ChoiceVal =:= 'delays-of-uncertain-duration' ->
<<0:1,1541:16>>;
ChoiceVal =:= 'delayed-until-further-notice' ->
<<0:1,1542:16>>;
ChoiceVal =:= busy ->
<<0:1,1543:16>>;
ChoiceVal =:= 'very-busy' ->
<<0:1,1544:16>>;
ChoiceVal =:= crowded ->
<<0:1,1545:16>>;
ChoiceVal =:= overcrowded ->
<<0:1,1546:16>>;
ChoiceVal =:= cancellations ->
<<0:1,1547:16>>;
ChoiceVal =:= 'route-canceled-and-no-replacement' ->
<<0:1,1548:16>>;
ChoiceVal =:= 'service-canceled' ->
<<0:1,1549:16>>;
ChoiceVal =:= 'service-suspended' ->
<<0:1,1550:16>>;
ChoiceVal =:= 'service-withdrawn' ->
<<0:1,1551:16>>;
ChoiceVal =:= 'service-fully-booked' ->
<<0:1,1552:16>>;
ChoiceVal =:= 'all-services-fully-booked' ->
<<0:1,1553:16>>;
ChoiceVal =:= 'next-departure' ->
<<0:1,1554:16>>;
ChoiceVal =:= 'next-arrival' ->
<<0:1,1555:16>>;
ChoiceVal =:= 'very-frequent-service' ->
<<0:1,1556:16>>;
ChoiceVal =:= 'frequent-service' ->
<<0:1,1557:16>>;
ChoiceVal =:= 'fairly-frequent-service' ->
<<0:1,1558:16>>;
ChoiceVal =:= 'regular-service' ->
<<0:1,1559:16>>;
ChoiceVal =:= 'irregular-service' ->
<<0:1,1560:16>>;
ChoiceVal =:= 'not-operating' ->
<<0:1,1561:16>>;
ChoiceVal =:= 'system-busy' ->
<<0:1,1562:16>>;
ChoiceVal =:= 'system-very-busy' ->
<<0:1,1563:16>>;
ChoiceVal =:= 'system-crowded' ->
<<0:1,1564:16>>;
ChoiceVal =:= 'system-overcrowded' ->
<<0:1,1565:16>>;
ChoiceVal =:= 'deleted-travel-time' ->
<<0:1,1566:16>>;
ChoiceVal =:= headway ->
<<0:1,1567:16>>;
ChoiceVal =:= 'extra-services-in-operation' ->
<<0:1,1568:16>>;
ChoiceVal =:= 'delays-clearing' ->
<<0:1,1660:16>>;
ChoiceVal =:= 'delays-cleared' ->
<<0:1,1661:16>>;
ChoiceVal =:= 'normal-services-resumed' ->
<<0:1,1662:16>>;
ChoiceVal =:= operating ->
<<0:1,1663:16>>;
ChoiceVal =:= 'vehicle-traveling-wrong-way' ->
<<0:1,1793:16>>;
ChoiceVal =:= 'reckless-driver' ->
<<0:1,1794:16>>;
ChoiceVal =:= 'prohibited-vehicle-on-roadway' ->
<<0:1,1795:16>>;
ChoiceVal =:= 'emergency-vehicles-on-roadway' ->
<<0:1,1796:16>>;
ChoiceVal =:= 'high-speed-emergency-vehicles' ->
<<0:1,1797:16>>;
ChoiceVal =:= 'high-speed-chase' ->
<<0:1,1798:16>>;
ChoiceVal =:= 'dangerous-vehicle-warning-cleared' ->
<<0:1,1918:16>>;
ChoiceVal =:= 'emergency-vehicle-warning-cleared' ->
<<0:1,1919:16>>;
ChoiceVal =:= 'abnormal-load' ->
<<0:1,2049:16>>;
ChoiceVal =:= 'wide-load' ->
<<0:1,2050:16>>;
ChoiceVal =:= 'long-load' ->
<<0:1,2051:16>>;
ChoiceVal =:= 'slow-vehicle' ->
<<0:1,2052:16>>;
ChoiceVal =:= 'farm-equipment' ->
<<0:1,2053:16>>;
ChoiceVal =:= 'horse-drawn-vehicles' ->
<<0:1,2054:16>>;
ChoiceVal =:= 'overheight-load' ->
<<0:1,2055:16>>;
ChoiceVal =:= 'overweight-load' ->
<<0:1,2056:16>>;
ChoiceVal =:= 'tracked-vehicle' ->
<<0:1,2057:16>>;
ChoiceVal =:= 'vehicle-carrying-hazardous-materials' ->
<<0:1,2058:16>>;
ChoiceVal =:= 'slow-moving-maintenance-vehicle' ->
<<0:1,2059:16>>;
ChoiceVal =:= convoy ->
<<0:1,2060:16>>;
ChoiceVal =:= 'military-convoy' ->
<<0:1,2061:16>>;
ChoiceVal =:= 'refugee-convoy' ->
<<0:1,2062:16>>;
ChoiceVal =:= motorcade ->
<<0:1,2063:16>>;
ChoiceVal =:= 'mobile-situation-repositioning' ->
<<0:1,2064:16>>;
ChoiceVal =:= 'winter-maintenance-vehicles' ->
<<0:1,2065:16>>;
ChoiceVal =:= snowplows ->
<<0:1,2066:16>>;
ChoiceVal =:= 'slow-moving-maintenance-vehicle-warning-cleared' ->
<<0:1,2172:16>>;
ChoiceVal =:= 'exceptional-load-warning-cleared' ->
<<0:1,2173:16>>;
ChoiceVal =:= 'hazardous-load-warning-cleared' ->
<<0:1,2174:16>>;
ChoiceVal =:= 'convoy-cleared' ->
<<0:1,2175:16>>;
ChoiceVal =:= 'lane-control-signs-not-working' ->
<<0:1,2305:16>>;
ChoiceVal =:= 'lane-control-signs-working-incorrectly' ->
<<0:1,2306:16>>;
ChoiceVal =:= 'lane-control-signs-operating' ->
<<0:1,2307:16>>;
ChoiceVal =:= 'variable-message-signs-not-working' ->
<<0:1,2308:16>>;
ChoiceVal =:= 'variable-message-signs-working-incorrectly' ->
<<0:1,2309:16>>;
ChoiceVal =:= 'variable-message-signs-operating' ->
<<0:1,2310:16>>;
ChoiceVal =:= 'emergency-telephones-not-working' ->
<<0:1,2311:16>>;
ChoiceVal =:= 'emergency-telephone-number-not-working' ->
<<0:1,2312:16>>;
ChoiceVal =:= 'traffic-lights-not-working' ->
<<0:1,2313:16>>;
ChoiceVal =:= 'traffic-lights-working-incorrectly' ->
<<0:1,2314:16>>;
ChoiceVal =:= 'ramp-control-signals-not-working' ->
<<0:1,2315:16>>;
ChoiceVal =:= 'ramp-control-signals-working-incorrectly' ->
<<0:1,2316:16>>;
ChoiceVal =:= 'temporary-traffic-lights-not-working' ->
<<0:1,2317:16>>;
ChoiceVal =:= 'temporary-traffic-lights-working-incorrectly' ->
<<0:1,2318:16>>;
ChoiceVal =:= 'traffic-signal-control-computer-not-working' ->
<<0:1,2319:16>>;
ChoiceVal =:= 'traffic-signal-timings-changed' ->
<<0:1,2320:16>>;
ChoiceVal =:= 'overheight-warning-system-triggered' ->
<<0:1,2321:16>>;
ChoiceVal =:= 'equipment-failure' ->
<<0:1,2322:16>>;
ChoiceVal =:= 'railroad-crossing-equipment-failure' ->
<<0:1,2323:16>>;
ChoiceVal =:= 'tunnel-ventilation-not-working' ->
<<0:1,2324:16>>;
ChoiceVal =:= 'power-failure' ->
<<0:1,2325:16>>;
ChoiceVal =:= 'widespread-power-outages' ->
<<0:1,2326:16>>;
ChoiceVal =:= 'technical-problems' ->
<<0:1,2327:16>>;
ChoiceVal =:= 'sign-down' ->
<<0:1,2328:16>>;
ChoiceVal =:= 'lines-in-road-faded' ->
<<0:1,2329:16>>;
ChoiceVal =:= 'damaged-light-standard' ->
<<0:1,2330:16>>;
ChoiceVal =:= 'traffic-signal-stuck-on-flash' ->
<<0:1,2331:16>>;
ChoiceVal =:= 'guide-rail' ->
<<0:1,2332:16>>;
ChoiceVal =:= fencing ->
<<0:1,2333:16>>;
ChoiceVal =:= 'light-standard-hanging-by-wires' ->
<<0:1,2334:16>>;
ChoiceVal =:= 'call-box' ->
<<0:1,2335:16>>;
ChoiceVal =:= 'signal-cabinet' ->
<<0:1,2336:16>>;
ChoiceVal =:= detector ->
<<0:1,2337:16>>;
ChoiceVal =:= 'improper-use-of-State-vehicle-or-equipment' ->
<<0:1,2338:16>>;
ChoiceVal =:= 'bulb-out' ->
<<0:1,2339:16>>;
ChoiceVal =:= 'not-yet-operational' ->
<<0:1,2340:16>>;
ChoiceVal =:= 'not-yet-installed' ->
<<0:1,2341:16>>;
ChoiceVal =:= 'electronic-signs-repaired' ->
<<0:1,2428:16>>;
ChoiceVal =:= 'emergency-call-facilities-restored' ->
<<0:1,2429:16>>;
ChoiceVal =:= 'traffic-signals-repaired' ->
<<0:1,2430:16>>;
ChoiceVal =:= 'railroad-crossing-equipment-now-working-normally' ->
<<0:1,2431:16>>;
ChoiceVal =:= restrictions ->
<<0:1,2561:16>>;
ChoiceVal =:= 'ramp-restrictions' ->
<<0:1,2562:16>>;
ChoiceVal =:= 'truck-restriction' ->
<<0:1,2563:16>>;
ChoiceVal =:= 'speed-restriction' ->
<<0:1,2564:16>>;
ChoiceVal =:= 'noise-restriction' ->
<<0:1,2565:16>>;
ChoiceVal =:= 'traffic-regulations-have-been-changed' ->
<<0:1,2566:16>>;
ChoiceVal =:= 'local-access-only' ->
<<0:1,2567:16>>;
ChoiceVal =:= 'no-trailers' ->
<<0:1,2568:16>>;
ChoiceVal =:= 'no-high-profile-vehicles' ->
<<0:1,2569:16>>;
ChoiceVal =:= 'hazardous-materials-truck-restriction' ->
<<0:1,2570:16>>;
ChoiceVal =:= 'no-through-traffic' ->
<<0:1,2571:16>>;
ChoiceVal =:= 'no-motor-vehicles' ->
<<0:1,2572:16>>;
ChoiceVal =:= 'width-limit' ->
<<0:1,2573:16>>;
ChoiceVal =:= 'height-limit' ->
<<0:1,2574:16>>;
ChoiceVal =:= 'length-limit' ->
<<0:1,2575:16>>;
ChoiceVal =:= 'axle-load-limit' ->
<<0:1,2576:16>>;
ChoiceVal =:= 'gross-weight-limit' ->
<<0:1,2577:16>>;
ChoiceVal =:= 'axle-count-limit' ->
<<0:1,2578:16>>;
ChoiceVal =:= 'carpool-lane-available' ->
<<0:1,2579:16>>;
ChoiceVal =:= 'carpool-restrictions-changed' ->
<<0:1,2580:16>>;
ChoiceVal =:= 'hOV-2-no-single-occupant-vehicles' ->
<<0:1,2581:16>>;
ChoiceVal =:= 'hOV-3-no-vehicles-with-less-than-three-occupants' ->
<<0:1,2582:16>>;
ChoiceVal =:= 'bus-lane-available-for-all-vehicles' ->
<<0:1,2583:16>>;
ChoiceVal =:= 'truck-lane-available-for-all-vehicles' ->
<<0:1,2584:16>>;
ChoiceVal =:= 'permits-call-in-basis' ->
<<0:1,2585:16>>;
ChoiceVal =:= 'permits-temporarily-closed' ->
<<0:1,2586:16>>;
ChoiceVal =:= 'permits-closed' ->
<<0:1,2587:16>>;
ChoiceVal =:= 'road-use-permits-required' ->
<<0:1,2588:16>>;
ChoiceVal =:= 'permits-open' ->
<<0:1,2675:16>>;
ChoiceVal =:= 'restrictions-for-high-profile-vehicles-lifted' ->
<<0:1,2676:16>>;
ChoiceVal =:= 'width-limit-lifted' ->
<<0:1,2677:16>>;
ChoiceVal =:= 'height-limit-lifted' ->
<<0:1,2678:16>>;
ChoiceVal =:= 'length-limit-lifted' ->
<<0:1,2679:16>>;
ChoiceVal =:= 'axle-load-limit-lifted' ->
<<0:1,2680:16>>;
ChoiceVal =:= 'weight-limit-lifted' ->
<<0:1,2681:16>>;
ChoiceVal =:= 'axle-count-limit-lifted' ->
<<0:1,2682:16>>;
ChoiceVal =:= 'carpool-restrictions-lifted' ->
<<0:1,2683:16>>;
ChoiceVal =:= 'lane-restrictions-lifted' ->
<<0:1,2684:16>>;
ChoiceVal =:= 'ramp-restrictions-lifted' ->
<<0:1,2685:16>>;
ChoiceVal =:= 'motor-vehicle-restrictions-lifted' ->
<<0:1,2686:16>>;
ChoiceVal =:= 'restrictions-lifted' ->
<<0:1,2687:16>>;
ChoiceVal =:= 'unconfirmed-report' ->
<<0:1,2817:16>>;
ChoiceVal =:= 'initial-response-en-route' ->
<<0:1,2818:16>>;
ChoiceVal =:= 'follow-up-response-en-route' ->
<<0:1,2819:16>>;
ChoiceVal =:= 'initial-response-on-scene' ->
<<0:1,2820:16>>;
ChoiceVal =:= 'follow-up-response-on-scene' ->
<<0:1,2821:16>>;
ChoiceVal =:= 'confirmed-report' ->
<<0:1,2822:16>>;
ChoiceVal =:= 'scene-is-unsecured-at-this-time' ->
<<0:1,2823:16>>;
ChoiceVal =:= 'response-scene-secured' ->
<<0:1,2824:16>>;
ChoiceVal =:= 'rescue-and-recovery-work-in-progress' ->
<<0:1,2825:16>>;
ChoiceVal =:= 'extraction-in-progress' ->
<<0:1,2826:16>>;
ChoiceVal =:= 'clearance-work-in-progress' ->
<<0:1,2827:16>>;
ChoiceVal =:= 'body-removal-operations' ->
<<0:1,2828:16>>;
ChoiceVal =:= 'fire-containment-contained' ->
<<0:1,2829:16>>;
ChoiceVal =:= 'fire-containment-not-contained' ->
<<0:1,2830:16>>;
ChoiceVal =:= 'event-cleared' ->
<<0:1,2831:16>>;
ChoiceVal =:= 'traffic-clearing' ->
<<0:1,2832:16>>;
ChoiceVal =:= 'incident-closed' ->
<<0:1,2833:16>>;
ChoiceVal =:= 'flash-flood' ->
<<0:1,3073:16>>;
ChoiceVal =:= 'major-flood' ->
<<0:1,3074:16>>;
ChoiceVal =:= 'reservoir-failure' ->
<<0:1,3075:16>>;
ChoiceVal =:= 'levee-failure' ->
<<0:1,3076:16>>;
ChoiceVal =:= tsunami ->
<<0:1,3077:16>>;
ChoiceVal =:= 'tidal-wave' ->
<<0:1,3078:16>>;
ChoiceVal =:= 'volcanic-eruption' ->
<<0:1,3079:16>>;
ChoiceVal =:= 'ash-fall' ->
<<0:1,3080:16>>;
ChoiceVal =:= 'lava-flow' ->
<<0:1,3081:16>>;
ChoiceVal =:= 'serious-fire' ->
<<0:1,3082:16>>;
ChoiceVal =:= 'forest-fire' ->
<<0:1,3083:16>>;
ChoiceVal =:= wildfire ->
<<0:1,3084:16>>;
ChoiceVal =:= 'building-fire' ->
<<0:1,3085:16>>;
ChoiceVal =:= 'brush-fire' ->
<<0:1,3086:16>>;
ChoiceVal =:= 'grass-fire' ->
<<0:1,3087:16>>;
ChoiceVal =:= 'fire-danger-extreme' ->
<<0:1,3088:16>>;
ChoiceVal =:= 'fire-danger-very-high' ->
<<0:1,3089:16>>;
ChoiceVal =:= 'fire-danger-high' ->
<<0:1,3090:16>>;
ChoiceVal =:= 'fire-danger-medium' ->
<<0:1,3091:16>>;
ChoiceVal =:= 'fire-danger-low' ->
<<0:1,3092:16>>;
ChoiceVal =:= 'earthquake-damage' ->
<<0:1,3093:16>>;
ChoiceVal =:= 'air-crash' ->
<<0:1,3094:16>>;
ChoiceVal =:= 'rail-crash' ->
<<0:1,3095:16>>;
ChoiceVal =:= 'toxic-release' ->
<<0:1,3096:16>>;
ChoiceVal =:= 'toxic-leak' ->
<<0:1,3097:16>>;
ChoiceVal =:= 'radioactive-release' ->
<<0:1,3098:16>>;
ChoiceVal =:= 'radiation-hazard' ->
<<0:1,3099:16>>;
ChoiceVal =:= 'reactor-leakage' ->
<<0:1,3100:16>>;
ChoiceVal =:= explosion ->
<<0:1,3101:16>>;
ChoiceVal =:= 'major-hazardous-materials-fire' ->
<<0:1,3102:16>>;
ChoiceVal =:= 'major-hazardous-materials-release' ->
<<0:1,3103:16>>;
ChoiceVal =:= 'disaster-cleared' ->
<<0:1,3199:16>>;
ChoiceVal =:= assault ->
<<0:1,3329:16>>;
ChoiceVal =:= crime ->
<<0:1,3330:16>>;
ChoiceVal =:= robbery ->
<<0:1,3331:16>>;
ChoiceVal =:= 'fare-dispute' ->
<<0:1,3332:16>>;
ChoiceVal =:= shooting ->
<<0:1,3333:16>>;
ChoiceVal =:= 'gunfire-on-roadway' ->
<<0:1,3334:16>>;
ChoiceVal =:= suicide ->
<<0:1,3335:16>>;
ChoiceVal =:= fight ->
<<0:1,3336:16>>;
ChoiceVal =:= 'gang-fight' ->
<<0:1,3337:16>>;
ChoiceVal =:= 'person-harassment' ->
<<0:1,3338:16>>;
ChoiceVal =:= 'person-injured' ->
<<0:1,3339:16>>;
ChoiceVal =:= 'unruly-passenger' ->
<<0:1,3340:16>>;
ChoiceVal =:= 'person-intoxicated' ->
<<0:1,3341:16>>;
ChoiceVal =:= 'crowd-control-problem' ->
<<0:1,3342:16>>;
ChoiceVal =:= demonstration ->
<<0:1,3343:16>>;
ChoiceVal =:= march ->
<<0:1,3344:16>>;
ChoiceVal =:= 'public-disturbance' ->
<<0:1,3345:16>>;
ChoiceVal =:= riot ->
<<0:1,3346:16>>;
ChoiceVal =:= 'civil-unrest' ->
<<0:1,3347:16>>;
ChoiceVal =:= 'civil-emergency' ->
<<0:1,3348:16>>;
ChoiceVal =:= strike ->
<<0:1,3349:16>>;
ChoiceVal =:= 'public-transit-strike' ->
<<0:1,3350:16>>;
ChoiceVal =:= stampede ->
<<0:1,3351:16>>;
ChoiceVal =:= 'teargas-used' ->
<<0:1,3352:16>>;
ChoiceVal =:= 'security-alert' ->
<<0:1,3353:16>>;
ChoiceVal =:= 'security-incident' ->
<<0:1,3354:16>>;
ChoiceVal =:= checkpoint ->
<<0:1,3355:16>>;
ChoiceVal =:= 'bomb-alert' ->
<<0:1,3356:16>>;
ChoiceVal =:= 'terrorist-incident' ->
<<0:1,3357:16>>;
ChoiceVal =:= 'high-velocity-shell-fire' ->
<<0:1,3358:16>>;
ChoiceVal =:= 'explosives-in-use' ->
<<0:1,3359:16>>;
ChoiceVal =:= 'air-raid' ->
<<0:1,3360:16>>;
ChoiceVal =:= 'weapons-of-mass-destruction-threat' ->
<<0:1,3361:16>>;
ChoiceVal =:= 'military-operations' ->
<<0:1,3362:16>>;
ChoiceVal =:= 'sick-customer' ->
<<0:1,3363:16>>;
ChoiceVal =:= 'security-problem-cleared' ->
<<0:1,3454:16>>;
ChoiceVal =:= 'traffic-disturbance-cleared' ->
<<0:1,3455:16>>;
ChoiceVal =:= 'sports-event' ->
<<0:1,3585:16>>;
ChoiceVal =:= game ->
<<0:1,3586:16>>;
ChoiceVal =:= tournament ->
<<0:1,3587:16>>;
ChoiceVal =:= 'track-and-field-event' ->
<<0:1,3588:16>>;
ChoiceVal =:= 'baseball-game' ->
<<0:1,3589:16>>;
ChoiceVal =:= 'basketball-game' ->
<<0:1,3590:16>>;
ChoiceVal =:= 'boxing-match' ->
<<0:1,3591:16>>;
ChoiceVal =:= 'football-game' ->
<<0:1,3592:16>>;
ChoiceVal =:= 'soccer-game' ->
<<0:1,3593:16>>;
ChoiceVal =:= 'golf-tournament' ->
<<0:1,3594:16>>;
ChoiceVal =:= 'hockey-game' ->
<<0:1,3595:16>>;
ChoiceVal =:= 'tennis-tournament' ->
<<0:1,3596:16>>;
ChoiceVal =:= 'wrestling-match' ->
<<0:1,3597:16>>;
ChoiceVal =:= 'road-race' ->
<<0:1,3598:16>>;
ChoiceVal =:= 'automobile-race' ->
<<0:1,3599:16>>;
ChoiceVal =:= 'bicycle-race' ->
<<0:1,3600:16>>;
ChoiceVal =:= 'race-event' ->
<<0:1,3601:16>>;
ChoiceVal =:= marathon ->
<<0:1,3602:16>>;
ChoiceVal =:= 'horse-show' ->
<<0:1,3603:16>>;
ChoiceVal =:= rodeo ->
<<0:1,3604:16>>;
ChoiceVal =:= 'water-sports-event' ->
<<0:1,3605:16>>;
ChoiceVal =:= 'winter-sports-event' ->
<<0:1,3606:16>>;
ChoiceVal =:= 'skating-event' ->
<<0:1,3607:16>>;
ChoiceVal =:= 'dog-sled-race' ->
<<0:1,3608:16>>;
ChoiceVal =:= 'sporting-event-ended' ->
<<0:1,3711:16>>;
ChoiceVal =:= 'major-event' ->
<<0:1,3841:16>>;
ChoiceVal =:= airshow ->
<<0:1,3842:16>>;
ChoiceVal =:= 'hot-air-ballooning' ->
<<0:1,3843:16>>;
ChoiceVal =:= concert ->
<<0:1,3844:16>>;
ChoiceVal =:= 'state-occasion' ->
<<0:1,3845:16>>;
ChoiceVal =:= 'vIP-visit' ->
<<0:1,3846:16>>;
ChoiceVal =:= show ->
<<0:1,3847:16>>;
ChoiceVal =:= festival ->
<<0:1,3848:16>>;
ChoiceVal =:= exhibition ->
<<0:1,3849:16>>;
ChoiceVal =:= 'performing-arts' ->
<<0:1,3850:16>>;
ChoiceVal =:= 'outdoor-market' ->
<<0:1,3851:16>>;
ChoiceVal =:= fair ->
<<0:1,3852:16>>;
ChoiceVal =:= carnival ->
<<0:1,3853:16>>;
ChoiceVal =:= 'fireworks-display' ->
<<0:1,3854:16>>;
ChoiceVal =:= 'trade-expo' ->
<<0:1,3855:16>>;
ChoiceVal =:= 'movie-filming' ->
<<0:1,3856:16>>;
ChoiceVal =:= 'presidential-visit' ->
<<0:1,3857:16>>;
ChoiceVal =:= parade ->
<<0:1,3858:16>>;
ChoiceVal =:= procession ->
<<0:1,3859:16>>;
ChoiceVal =:= 'funeral-procession' ->
<<0:1,3860:16>>;
ChoiceVal =:= crowd ->
<<0:1,3861:16>>;
ChoiceVal =:= 'holiday-traffic-crowds' ->
<<0:1,3862:16>>;
ChoiceVal =:= 'event-ended' ->
<<0:1,3967:16>>;
ChoiceVal =:= 'normal-parking-restrictions-lifted' ->
<<0:1,4097:16>>;
ChoiceVal =:= 'parking-meter-restrictions-lifted' ->
<<0:1,4098:16>>;
ChoiceVal =:= 'special-parking-restrictions-in-force' ->
<<0:1,4099:16>>;
ChoiceVal =:= 'full-parking-lot' ->
<<0:1,4100:16>>;
ChoiceVal =:= 'full-parking-garage' ->
<<0:1,4101:16>>;
ChoiceVal =:= 'all-parking-lots-full' ->
<<0:1,4102:16>>;
ChoiceVal =:= 'no-parking-spaces-available' ->
<<0:1,4103:16>>;
ChoiceVal =:= 'only-a-few-spaces-available' ->
<<0:1,4104:16>>;
ChoiceVal =:= 'spaces-available' ->
<<0:1,4105:16>>;
ChoiceVal =:= 'no-parking' ->
<<0:1,4106:16>>;
ChoiceVal =:= 'parking-on-one-side-of-street-only' ->
<<0:1,4107:16>>;
ChoiceVal =:= 'parking-on-both-sides-of-street' ->
<<0:1,4108:16>>;
ChoiceVal =:= 'parallel-parking-only' ->
<<0:1,4109:16>>;
ChoiceVal =:= 'parking-meters-not-available' ->
<<0:1,4110:16>>;
ChoiceVal =:= 'use-of-parking-meters-restricted' ->
<<0:1,4111:16>>;
ChoiceVal =:= 'event-parking' ->
<<0:1,4112:16>>;
ChoiceVal =:= 'handicapped-parking' ->
<<0:1,4113:16>>;
ChoiceVal =:= 'long-term-parking' ->
<<0:1,4114:16>>;
ChoiceVal =:= 'overnight-parking' ->
<<0:1,4115:16>>;
ChoiceVal =:= 'short-term-parking' ->
<<0:1,4116:16>>;
ChoiceVal =:= 'parking-by-permit-only' ->
<<0:1,4117:16>>;
ChoiceVal =:= 'emergency-parking-only' ->
<<0:1,4118:16>>;
ChoiceVal =:= 'emergency-stopping-only' ->
<<0:1,4119:16>>;
ChoiceVal =:= parking ->
<<0:1,4120:16>>;
ChoiceVal =:= stopping ->
<<0:1,4121:16>>;
ChoiceVal =:= standing ->
<<0:1,4122:16>>;
ChoiceVal =:= 'tow-away-zone' ->
<<0:1,4123:16>>;
ChoiceVal =:= 'school-zone' ->
<<0:1,4124:16>>;
ChoiceVal =:= 'speed-zone' ->
<<0:1,4125:16>>;
ChoiceVal =:= 'loading-zone' ->
<<0:1,4126:16>>;
ChoiceVal =:= 'state-law' ->
<<0:1,4127:16>>;
ChoiceVal =:= 'van-accessible' ->
<<0:1,4128:16>>;
ChoiceVal =:= 'special-parking-restrictions-lifted' ->
<<0:1,4222:16>>;
ChoiceVal =:= 'no-parking-information-available' ->
<<0:1,4223:16>>;
ChoiceVal =:= 'information-available-on-radio' ->
<<0:1,4353:16>>;
ChoiceVal =:= 'information-available-on-TV' ->
<<0:1,4354:16>>;
ChoiceVal =:= 'call-to-get-information' ->
<<0:1,4355:16>>;
ChoiceVal =:= 'information-available-via-Internet' ->
<<0:1,4356:16>>;
ChoiceVal =:= 'test-message' ->
<<0:1,4357:16>>;
ChoiceVal =:= 'no-information-available' ->
<<0:1,4358:16>>;
ChoiceVal =:= 'null-description' ->
<<0:1,4359:16>>;
ChoiceVal =:= 'information-service-is-being-suspended' ->
<<0:1,4360:16>>;
ChoiceVal =:= 'police-assistance' ->
<<0:1,4361:16>>;
ChoiceVal =:= 'police-monitor-CB' ->
<<0:1,4362:16>>;
ChoiceVal =:= 'emergency-notification' ->
<<0:1,4363:16>>;
ChoiceVal =:= 'in-emergency-dial-911' ->
<<0:1,4364:16>>;
ChoiceVal =:= 'travel-Info-call-511' ->
<<0:1,4365:16>>;
ChoiceVal =:= 'car-pool-information' ->
<<0:1,4366:16>>;
ChoiceVal =:= 'information-service-resumed' ->
<<0:1,4478:16>>;
ChoiceVal =:= 'message-canceled' ->
<<0:1,4479:16>>;
ChoiceVal =:= overcast ->
<<0:1,4609:16>>;
ChoiceVal =:= cloudy ->
<<0:1,4610:16>>;
ChoiceVal =:= 'mostly-cloudy' ->
<<0:1,4611:16>>;
ChoiceVal =:= 'partly-cloudy' ->
<<0:1,4612:16>>;
ChoiceVal =:= 'partly-sunny' ->
<<0:1,4613:16>>;
ChoiceVal =:= 'mostly-sunny' ->
<<0:1,4614:16>>;
ChoiceVal =:= sunny ->
<<0:1,4615:16>>;
ChoiceVal =:= 'fair-skies' ->
<<0:1,4616:16>>;
ChoiceVal =:= 'clear-skies' ->
<<0:1,4617:16>>;
ChoiceVal =:= 'mostly-clear' ->
<<0:1,4618:16>>;
ChoiceVal =:= 'mostly-dry' ->
<<0:1,4619:16>>;
ChoiceVal =:= dry ->
<<0:1,4620:16>>;
ChoiceVal =:= 'uV-index-very-high' ->
<<0:1,4621:16>>;
ChoiceVal =:= 'uV-index-high' ->
<<0:1,4622:16>>;
ChoiceVal =:= 'uV-index-moderate' ->
<<0:1,4623:16>>;
ChoiceVal =:= 'uV-index-low' ->
<<0:1,4624:16>>;
ChoiceVal =:= 'uV-index-very-low' ->
<<0:1,4625:16>>;
ChoiceVal =:= 'barometric-pressure' ->
<<0:1,4626:16>>;
ChoiceVal =:= 'ozone-alert' ->
<<0:1,4627:16>>;
ChoiceVal =:= 'lighting-unknown' ->
<<0:1,4628:16>>;
ChoiceVal =:= 'artificial-exterior-light' ->
<<0:1,4629:16>>;
ChoiceVal =:= 'artificial-interior-light' ->
<<0:1,4630:16>>;
ChoiceVal =:= darkness ->
<<0:1,4631:16>>;
ChoiceVal =:= dusk ->
<<0:1,4632:16>>;
ChoiceVal =:= dawn ->
<<0:1,4633:16>>;
ChoiceVal =:= moonlight ->
<<0:1,4634:16>>;
ChoiceVal =:= daylight ->
<<0:1,4635:16>>;
ChoiceVal =:= 'weather-forecast-withdrawn' ->
<<0:1,4735:16>>;
ChoiceVal =:= 'severe-weather' ->
<<0:1,4865:16>>;
ChoiceVal =:= blizzard ->
<<0:1,4866:16>>;
ChoiceVal =:= 'heavy-snow' ->
<<0:1,4867:16>>;
ChoiceVal =:= snow ->
<<0:1,4868:16>>;
ChoiceVal =:= 'light-snow' ->
<<0:1,4869:16>>;
ChoiceVal =:= 'snow-showers' ->
<<0:1,4870:16>>;
ChoiceVal =:= 'winter-storm' ->
<<0:1,4871:16>>;
ChoiceVal =:= 'ice-glaze' ->
<<0:1,4872:16>>;
ChoiceVal =:= 'heavy-frost' ->
<<0:1,4873:16>>;
ChoiceVal =:= frost ->
<<0:1,4874:16>>;
ChoiceVal =:= 'ice-storm' ->
<<0:1,4875:16>>;
ChoiceVal =:= sleet ->
<<0:1,4876:16>>;
ChoiceVal =:= 'rain-and-snow-mixed' ->
<<0:1,4877:16>>;
ChoiceVal =:= 'rain-changing-to-snow' ->
<<0:1,4878:16>>;
ChoiceVal =:= 'damaging-hail' ->
<<0:1,4879:16>>;
ChoiceVal =:= hail ->
<<0:1,4880:16>>;
ChoiceVal =:= thunderstorms ->
<<0:1,4881:16>>;
ChoiceVal =:= thundershowers ->
<<0:1,4882:16>>;
ChoiceVal =:= 'extremely-heavy-downpour' ->
<<0:1,4883:16>>;
ChoiceVal =:= 'heavy-rain' ->
<<0:1,4884:16>>;
ChoiceVal =:= rain ->
<<0:1,4885:16>>;
ChoiceVal =:= 'light-rain' ->
<<0:1,4886:16>>;
ChoiceVal =:= drizzle ->
<<0:1,4887:16>>;
ChoiceVal =:= showers ->
<<0:1,4888:16>>;
ChoiceVal =:= dew ->
<<0:1,4889:16>>;
ChoiceVal =:= 'precipitation-cleared' ->
<<0:1,4991:16>>;
ChoiceVal =:= tornado ->
<<0:1,5121:16>>;
ChoiceVal =:= hurricane ->
<<0:1,5122:16>>;
ChoiceVal =:= 'hurricane-force-winds' ->
<<0:1,5123:16>>;
ChoiceVal =:= 'tropical-storm' ->
<<0:1,5124:16>>;
ChoiceVal =:= 'gale-force-winds' ->
<<0:1,5125:16>>;
ChoiceVal =:= 'storm-force-winds' ->
<<0:1,5126:16>>;
ChoiceVal =:= 'strong-winds' ->
<<0:1,5127:16>>;
ChoiceVal =:= 'moderate-winds' ->
<<0:1,5128:16>>;
ChoiceVal =:= 'light-winds' ->
<<0:1,5129:16>>;
ChoiceVal =:= calm ->
<<0:1,5130:16>>;
ChoiceVal =:= 'gusty-winds' ->
<<0:1,5131:16>>;
ChoiceVal =:= crosswinds ->
<<0:1,5132:16>>;
ChoiceVal =:= windy ->
<<0:1,5133:16>>;
ChoiceVal =:= 'strong-winds-have-eased' ->
<<0:1,5246:16>>;
ChoiceVal =:= 'strong-wind-forecast-withdrawn' ->
<<0:1,5247:16>>;
ChoiceVal =:= 'dense-fog' ->
<<0:1,5377:16>>;
ChoiceVal =:= fog ->
<<0:1,5378:16>>;
ChoiceVal =:= 'patchy-fog' ->
<<0:1,5379:16>>;
ChoiceVal =:= 'freezing-fog' ->
<<0:1,5380:16>>;
ChoiceVal =:= mist ->
<<0:1,5381:16>>;
ChoiceVal =:= haze ->
<<0:1,5382:16>>;
ChoiceVal =:= 'visibility-reduced' ->
<<0:1,5383:16>>;
ChoiceVal =:= 'white-out' ->
<<0:1,5384:16>>;
ChoiceVal =:= 'blowing-snow' ->
<<0:1,5385:16>>;
ChoiceVal =:= 'smoke-hazard' ->
<<0:1,5386:16>>;
ChoiceVal =:= 'spray-hazard' ->
<<0:1,5387:16>>;
ChoiceVal =:= 'low-sun-glare' ->
<<0:1,5388:16>>;
ChoiceVal =:= 'snow-glare' ->
<<0:1,5389:16>>;
ChoiceVal =:= 'blowing-dust' ->
<<0:1,5390:16>>;
ChoiceVal =:= 'blowing-sand' ->
<<0:1,5391:16>>;
ChoiceVal =:= 'dust-storms' ->
<<0:1,5392:16>>;
ChoiceVal =:= sandstorms ->
<<0:1,5393:16>>;
ChoiceVal =:= 'air-quality-good' ->
<<0:1,5394:16>>;
ChoiceVal =:= 'air-quality-fair' ->
<<0:1,5395:16>>;
ChoiceVal =:= 'air-quality-poor' ->
<<0:1,5396:16>>;
ChoiceVal =:= 'air-quality-very-poor' ->
<<0:1,5397:16>>;
ChoiceVal =:= 'severe-exhaust-pollution' ->
<<0:1,5398:16>>;
ChoiceVal =:= 'smog-alert' ->
<<0:1,5399:16>>;
ChoiceVal =:= 'pollen-count-high' ->
<<0:1,5400:16>>;
ChoiceVal =:= 'pollen-count-medium' ->
<<0:1,5401:16>>;
ChoiceVal =:= 'pollen-count-low' ->
<<0:1,5402:16>>;
ChoiceVal =:= 'swarms-of-insects' ->
<<0:1,5403:16>>;
ChoiceVal =:= 'visibility-blocked' ->
<<0:1,5404:16>>;
ChoiceVal =:= 'ice-fog' ->
<<0:1,5405:16>>;
ChoiceVal =:= 'fog-clearing' ->
<<0:1,5499:16>>;
ChoiceVal =:= 'visibility-improved' ->
<<0:1,5500:16>>;
ChoiceVal =:= 'fog-forecast-withdrawn' ->
<<0:1,5501:16>>;
ChoiceVal =:= 'pollution-alert-ended' ->
<<0:1,5502:16>>;
ChoiceVal =:= 'air-quality-improved' ->
<<0:1,5503:16>>;
ChoiceVal =:= 'maximum-temperature' ->
<<0:1,5633:16>>;
ChoiceVal =:= temperature ->
<<0:1,5634:16>>;
ChoiceVal =:= 'minimum-temperature' ->
<<0:1,5635:16>>;
ChoiceVal =:= 'current-temperature' ->
<<0:1,5636:16>>;
ChoiceVal =:= 'heat-index' ->
<<0:1,5637:16>>;
ChoiceVal =:= 'extreme-heat' ->
<<0:1,5638:16>>;
ChoiceVal =:= hot ->
<<0:1,5639:16>>;
ChoiceVal =:= hotter ->
<<0:1,5640:16>>;
ChoiceVal =:= heat ->
<<0:1,5641:16>>;
ChoiceVal =:= warmer ->
<<0:1,5642:16>>;
ChoiceVal =:= warm ->
<<0:1,5643:16>>;
ChoiceVal =:= mild ->
<<0:1,5644:16>>;
ChoiceVal =:= cool ->
<<0:1,5645:16>>;
ChoiceVal =:= cooler ->
<<0:1,5646:16>>;
ChoiceVal =:= cold ->
<<0:1,5647:16>>;
ChoiceVal =:= colder ->
<<0:1,5648:16>>;
ChoiceVal =:= 'very-cold' ->
<<0:1,5649:16>>;
ChoiceVal =:= 'extreme-cold' ->
<<0:1,5650:16>>;
ChoiceVal =:= 'wind-chill' ->
<<0:1,5651:16>>;
ChoiceVal =:= dewpoint ->
<<0:1,5652:16>>;
ChoiceVal =:= 'relative-humidity' ->
<<0:1,5653:16>>;
ChoiceVal =:= 'temperatures-close-to-the-seasonal-norm' ->
<<0:1,5758:16>>;
ChoiceVal =:= 'less-extreme-temperatures' ->
<<0:1,5759:16>>;
ChoiceVal =:= impassable ->
<<0:1,5889:16>>;
ChoiceVal =:= 'almost-impassable' ->
<<0:1,5890:16>>;
ChoiceVal =:= 'passable-with-care' ->
<<0:1,5891:16>>;
ChoiceVal =:= passable ->
<<0:1,5892:16>>;
ChoiceVal =:= 'surface-water-hazard' ->
<<0:1,5893:16>>;
ChoiceVal =:= 'danger-of-hydroplaning' ->
<<0:1,5894:16>>;
ChoiceVal =:= 'wet-pavement' ->
<<0:1,5895:16>>;
ChoiceVal =:= 'treated-pavement' ->
<<0:1,5896:16>>;
ChoiceVal =:= slippery ->
<<0:1,5897:16>>;
ChoiceVal =:= 'mud-on-roadway' ->
<<0:1,5898:16>>;
ChoiceVal =:= 'leaves-on-roadway' ->
<<0:1,5899:16>>;
ChoiceVal =:= 'loose-sand-on-roadway' ->
<<0:1,5900:16>>;
ChoiceVal =:= 'loose-gravel' ->
<<0:1,5901:16>>;
ChoiceVal =:= 'fuel-on-roadway' ->
<<0:1,5902:16>>;
ChoiceVal =:= 'oil-on-roadway' ->
<<0:1,5903:16>>;
ChoiceVal =:= 'road-surface-in-poor-condition' ->
<<0:1,5904:16>>;
ChoiceVal =:= 'melting-tar' ->
<<0:1,5905:16>>;
ChoiceVal =:= ice ->
<<0:1,5906:16>>;
ChoiceVal =:= 'icy-patches' ->
<<0:1,5907:16>>;
ChoiceVal =:= 'black-ice' ->
<<0:1,5908:16>>;
ChoiceVal =:= 'ice-pellets-on-roadway' ->
<<0:1,5909:16>>;
ChoiceVal =:= 'ice-build-up' ->
<<0:1,5910:16>>;
ChoiceVal =:= 'freezing-rain' ->
<<0:1,5911:16>>;
ChoiceVal =:= 'wet-and-icy-roads' ->
<<0:1,5912:16>>;
ChoiceVal =:= 'melting-snow' ->
<<0:1,5913:16>>;
ChoiceVal =:= slush ->
<<0:1,5914:16>>;
ChoiceVal =:= 'frozen-slush' ->
<<0:1,5915:16>>;
ChoiceVal =:= 'snow-on-roadway' ->
<<0:1,5916:16>>;
ChoiceVal =:= 'packed-snow' ->
<<0:1,5917:16>>;
ChoiceVal =:= 'packed-snow-patches' ->
<<0:1,5918:16>>;
ChoiceVal =:= 'plowed-snow' ->
<<0:1,5919:16>>;
ChoiceVal =:= 'wet-snow' ->
<<0:1,5920:16>>;
ChoiceVal =:= 'fresh-snow' ->
<<0:1,5921:16>>;
ChoiceVal =:= 'powder-snow' ->
<<0:1,5922:16>>;
ChoiceVal =:= 'granular-snow' ->
<<0:1,5923:16>>;
ChoiceVal =:= 'frozen-snow' ->
<<0:1,5924:16>>;
ChoiceVal =:= 'crusted-snow' ->
<<0:1,5925:16>>;
ChoiceVal =:= 'deep-snow' ->
<<0:1,5926:16>>;
ChoiceVal =:= 'snow-drifts' ->
<<0:1,5927:16>>;
ChoiceVal =:= 'drifting-snow' ->
<<0:1,5928:16>>;
ChoiceVal =:= 'expected-snow-accumulation' ->
<<0:1,5929:16>>;
ChoiceVal =:= 'current-snow-accumulation' ->
<<0:1,5930:16>>;
ChoiceVal =:= 'rough-road' ->
<<0:1,5931:16>>;
ChoiceVal =:= sand ->
<<0:1,5932:16>>;
ChoiceVal =:= gravel ->
<<0:1,5933:16>>;
ChoiceVal =:= paved ->
<<0:1,5934:16>>;
ChoiceVal =:= 'uneven-lanes' ->
<<0:1,5935:16>>;
ChoiceVal =:= 'rough-crossing' ->
<<0:1,5936:16>>;
ChoiceVal =:= 'at-grade-level-crossing' ->
<<0:1,5937:16>>;
ChoiceVal =:= 'low-ground-clearance' ->
<<0:1,5938:16>>;
ChoiceVal =:= 'dry-pavement' ->
<<0:1,6011:16>>;
ChoiceVal =:= 'snow-cleared' ->
<<0:1,6012:16>>;
ChoiceVal =:= 'pavement-conditions-improved' ->
<<0:1,6013:16>>;
ChoiceVal =:= 'skid-hazard-reduced' ->
<<0:1,6014:16>>;
ChoiceVal =:= 'pavement-conditions-cleared' ->
<<0:1,6015:16>>;
ChoiceVal =:= 'winter-equipment-recommended' ->
<<0:1,6145:16>>;
ChoiceVal =:= 'winter-equipment-required' ->
<<0:1,6146:16>>;
ChoiceVal =:= 'snow-chains-recommended' ->
<<0:1,6147:16>>;
ChoiceVal =:= 'snow-chains-required' ->
<<0:1,6148:16>>;
ChoiceVal =:= 'snow-chains-prohibited' ->
<<0:1,6149:16>>;
ChoiceVal =:= 'studded-tires-prohibited' ->
<<0:1,6150:16>>;
ChoiceVal =:= 'snow-tires-recommended' ->
<<0:1,6151:16>>;
ChoiceVal =:= 'snow-tires-required' ->
<<0:1,6152:16>>;
ChoiceVal =:= 'four-wheel-drive-recommended' ->
<<0:1,6153:16>>;
ChoiceVal =:= 'four-wheel-drive-required' ->
<<0:1,6154:16>>;
ChoiceVal =:= 'snow-tires-or-chains-recommended' ->
<<0:1,6155:16>>;
ChoiceVal =:= 'snow-tires-or-chains-required' ->
<<0:1,6156:16>>;
ChoiceVal =:= 'winter-driving-requirements-lifted' ->
<<0:1,6271:16>>;
ChoiceVal =:= 'driving-conditions-good' ->
<<0:1,6401:16>>;
ChoiceVal =:= 'driving-conditions-fair' ->
<<0:1,6402:16>>;
ChoiceVal =:= 'difficult-driving-conditions' ->
<<0:1,6403:16>>;
ChoiceVal =:= 'very-difficult-driving-conditions' ->
<<0:1,6404:16>>;
ChoiceVal =:= 'hazardous-driving-conditions' ->
<<0:1,6405:16>>;
ChoiceVal =:= 'extremely-hazardous-driving-conditions' ->
<<0:1,6406:16>>;
ChoiceVal =:= 'why-not-ride-share' ->
<<0:1,6657:16>>;
ChoiceVal =:= 'is-this-your-no-ride-day' ->
<<0:1,6658:16>>;
ChoiceVal =:= 'why-not-use-transit' ->
<<0:1,6659:16>>;
ChoiceVal =:= 'why-not-park-and-ride' ->
<<0:1,6660:16>>;
ChoiceVal =:= 'why-not-try-paratransit' ->
<<0:1,6661:16>>;
ChoiceVal =:= 'why-not-travel-by-rail' ->
<<0:1,6662:16>>;
ChoiceVal =:= 'why-not-use-the-subway' ->
<<0:1,6663:16>>;
ChoiceVal =:= 'why-not-try-rapid-transit' ->
<<0:1,6664:16>>;
ChoiceVal =:= 'why-not-travel-by-bus' ->
<<0:1,6665:16>>;
ChoiceVal =:= 'your-parking-ticket-covers-the-return-ride' ->
<<0:1,6666:16>>;
ChoiceVal =:= 'avoid-the-rush-hour' ->
<<0:1,6667:16>>;
ChoiceVal =:= 'do-not-allow-unnecessary-gaps' ->
<<0:1,6668:16>>;
ChoiceVal =:= 'follow-the-vehicle-in-front-smoothly' ->
<<0:1,6669:16>>;
ChoiceVal =:= 'do-not-slow-down-unnecessarily' ->
<<0:1,6670:16>>;
ChoiceVal =:= 'watch-for-muggers' ->
<<0:1,6671:16>>;
ChoiceVal =:= 'watch-for-pickpockets' ->
<<0:1,6672:16>>;
ChoiceVal =:= 'watch-for-thieves' ->
<<0:1,6673:16>>;
ChoiceVal =:= 'sorry-for-any-delay' ->
<<0:1,6674:16>>;
ChoiceVal =:= 'thank-you-for-your-understanding' ->
<<0:1,6675:16>>;
ChoiceVal =:= 'we-appreciate-your-patience' ->
<<0:1,6676:16>>;
ChoiceVal =:= 'we-are-grateful-for-your-cooperation' ->
<<0:1,6677:16>>;
ChoiceVal =:= 'share-the-road' ->
<<0:1,6678:16>>;
ChoiceVal =:= risk ->
<<0:1,6913:16>>;
ChoiceVal =:= watch ->
<<0:1,6914:16>>;
ChoiceVal =:= warning ->
<<0:1,6915:16>>;
ChoiceVal =:= alert ->
<<0:1,6916:16>>;
ChoiceVal =:= danger ->
<<0:1,6917:16>>;
ChoiceVal =:= 'danger-of-explosion' ->
<<0:1,6918:16>>;
ChoiceVal =:= 'danger-of-fire' ->
<<0:1,6919:16>>;
ChoiceVal =:= 'extra-police-patrols-in-operation' ->
<<0:1,6920:16>>;
ChoiceVal =:= 'look-out-for-vehicles-stopped-under-bridges' ->
<<0:1,6921:16>>;
ChoiceVal =:= 'increased-risk-of-accident' ->
<<0:1,6922:16>>;
ChoiceVal =:= 'rescue-and-recovery-work-in-progress-at-sceneREMOVED' ->
<<0:1,6923:16>>;
ChoiceVal =:= 'police-at-scene' ->
<<0:1,6924:16>>;
ChoiceVal =:= 'emergency-vehicles-at-scene' ->
<<0:1,6925:16>>;
ChoiceVal =:= 'traffic-being-directed-around-accident-area' ->
<<0:1,6926:16>>;
ChoiceVal =:= 'police-directing-traffic' ->
<<0:1,6927:16>>;
ChoiceVal =:= 'rescue-workers-directing-traffic' ->
<<0:1,6928:16>>;
ChoiceVal =:= 'repairs-in-progress' ->
<<0:1,6929:16>>;
ChoiceVal =:= 'pilot-car-in-operation' ->
<<0:1,6930:16>>;
ChoiceVal =:= 'look-out-for-flagger' ->
<<0:1,6931:16>>;
ChoiceVal =:= 'police-checks-in-operation' ->
<<0:1,6932:16>>;
ChoiceVal =:= 'mandatory-speed-limit-in-force' ->
<<0:1,6933:16>>;
ChoiceVal =:= 'speed-limit-in-force-for-heavy-vehicles' ->
<<0:1,6934:16>>;
ChoiceVal =:= lockdown ->
<<0:1,6935:16>>;
ChoiceVal =:= 'security-check-point' ->
<<0:1,6936:16>>;
ChoiceVal =:= 'truck-check-point' ->
<<0:1,6937:16>>;
ChoiceVal =:= 'single-occupancy-vehicle-check-point' ->
<<0:1,6938:16>>;
ChoiceVal =:= look ->
<<0:1,6939:16>>;
ChoiceVal =:= 'photo-enforced' ->
<<0:1,6940:16>>;
ChoiceVal =:= 'traffic-laws' ->
<<0:1,6941:16>>;
ChoiceVal =:= 'use-low-gear' ->
<<0:1,6942:16>>;
ChoiceVal =:= 'bridge-ices-before-road' ->
<<0:1,6943:16>>;
ChoiceVal =:= 'speed-checked-by-radar' ->
<<0:1,6944:16>>;
ChoiceVal =:= 'speed-checked-by-aircraft' ->
<<0:1,6945:16>>;
ChoiceVal =:= fines ->
<<0:1,6946:16>>;
ChoiceVal =:= 'fines-higher' ->
<<0:1,6947:16>>;
ChoiceVal =:= 'fines-doubled' ->
<<0:1,6948:16>>;
ChoiceVal =:= 'fines-tripled' ->
<<0:1,6949:16>>;
ChoiceVal =:= 'behind-you' ->
<<0:1,6950:16>>;
ChoiceVal =:= 'traffic-signs' ->
<<0:1,6951:16>>;
ChoiceVal =:= 'look-out-for-workers' ->
<<0:1,6952:16>>;
ChoiceVal =:= 'ride-with-traffic' ->
<<0:1,6953:16>>;
ChoiceVal =:= 'prepare-to-evacuate-area' ->
<<0:1,6954:16>>;
ChoiceVal =:= avoid ->
<<0:1,6955:16>>;
ChoiceVal =:= 'evacuation-canceled' ->
<<0:1,7033:16>>;
ChoiceVal =:= 'warning-canceled' ->
<<0:1,7034:16>>;
ChoiceVal =:= 'watch-canceled' ->
<<0:1,7035:16>>;
ChoiceVal =:= 'alert-canceled' ->
<<0:1,7036:16>>;
ChoiceVal =:= ended ->
<<0:1,7037:16>>;
ChoiceVal =:= cleared ->
<<0:1,7038:16>>;
ChoiceVal =:= canceled ->
<<0:1,7039:16>>;
ChoiceVal =:= 'drive-carefully' ->
<<0:1,7169:16>>;
ChoiceVal =:= 'drive-with-extreme-caution' ->
<<0:1,7170:16>>;
ChoiceVal =:= 'approach-with-care' ->
<<0:1,7171:16>>;
ChoiceVal =:= 'keep-your-distance' ->
<<0:1,7172:16>>;
ChoiceVal =:= 'increase-normal-following-distance' ->
<<0:1,7173:16>>;
ChoiceVal =:= 'test-your-brakes' ->
<<0:1,7174:16>>;
ChoiceVal =:= 'cross-intersection-with-care' ->
<<0:1,7175:16>>;
ChoiceVal =:= 'pass-with-care' ->
<<0:1,7176:16>>;
ChoiceVal =:= 'use-low-beam-headlights' ->
<<0:1,7177:16>>;
ChoiceVal =:= 'use-fog-lights' ->
<<0:1,7178:16>>;
ChoiceVal =:= 'use-hazard-warning-lights' ->
<<0:1,7179:16>>;
ChoiceVal =:= 'do-not-leave-your-vehicle' ->
<<0:1,7180:16>>;
ChoiceVal =:= 'leave-your-vehicle-and-proceed-to-next-safe-place' ->
<<0:1,7181:16>>;
ChoiceVal =:= 'turn-off-engine' ->
<<0:1,7182:16>>;
ChoiceVal =:= 'close-all-windows-turn-off-heater-air-conditioner-and-vents' ->
<<0:1,7183:16>>;
ChoiceVal =:= 'turn-off-air-conditioner-to-prevent-engine-overheating' ->
<<0:1,7184:16>>;
ChoiceVal =:= 'turn-off-mobile-phones-and-two-way-radios' ->
<<0:1,7185:16>>;
ChoiceVal =:= 'prepare-to-stop' ->
<<0:1,7186:16>>;
ChoiceVal =:= 'stop-at-next-rest-area' ->
<<0:1,7187:16>>;
ChoiceVal =:= 'stop-at-next-safe-place' ->
<<0:1,7188:16>>;
ChoiceVal =:= 'only-travel-if-absolutely-necessary' ->
<<0:1,7189:16>>;
ChoiceVal =:= 'drive-to-another-service-area' ->
<<0:1,7190:16>>;
ChoiceVal =:= 'use-through-traffic-lanes' ->
<<0:1,7191:16>>;
ChoiceVal =:= 'use-local-traffic-lanes' ->
<<0:1,7192:16>>;
ChoiceVal =:= 'use-left-hand-parallel-roadway' ->
<<0:1,7193:16>>;
ChoiceVal =:= 'use-right-hand-parallel-roadway' ->
<<0:1,7194:16>>;
ChoiceVal =:= 'use-heavy-vehicle-lane' ->
<<0:1,7195:16>>;
ChoiceVal =:= 'observe-recommended-speed' ->
<<0:1,7196:16>>;
ChoiceVal =:= 'facing-traffic' ->
<<0:1,7197:16>>;
ChoiceVal =:= 'push-button' ->
<<0:1,7198:16>>;
ChoiceVal =:= 'to-cross-street' ->
<<0:1,7199:16>>;
ChoiceVal =:= pass ->
<<0:1,7200:16>>;
ChoiceVal =:= 'be-prepared-to-stop' ->
<<0:1,7201:16>>;
ChoiceVal =:= 'signals-sequenced-for-speed' ->
<<0:1,7202:16>>;
ChoiceVal =:= 'maintain-top-safe-speed' ->
<<0:1,7203:16>>;
ChoiceVal =:= 'evacuate-area-voluntarily' ->
<<0:1,7204:16>>;
ChoiceVal =:= 'shelter-in-place' ->
<<0:1,7205:16>>;
ChoiceVal =:= 'keep-to-the-right' ->
<<0:1,7425:16>>;
ChoiceVal =:= 'keep-to-the-left' ->
<<0:1,7426:16>>;
ChoiceVal =:= 'use-right-lane' ->
<<0:1,7427:16>>;
ChoiceVal =:= 'use-left-lane' ->
<<0:1,7428:16>>;
ChoiceVal =:= 'heavy-vehicles-use-right-lane' ->
<<0:1,7429:16>>;
ChoiceVal =:= 'heavy-vehicles-use-left-lane' ->
<<0:1,7430:16>>;
ChoiceVal =:= 'observe-signals' ->
<<0:1,7431:16>>;
ChoiceVal =:= 'observe-signs' ->
<<0:1,7432:16>>;
ChoiceVal =:= 'no-passing' ->
<<0:1,7433:16>>;
ChoiceVal =:= 'no-smoking' ->
<<0:1,7434:16>>;
ChoiceVal =:= 'no-open-flames' ->
<<0:1,7435:16>>;
ChoiceVal =:= 'use-shoulder-as-lane' ->
<<0:1,7436:16>>;
ChoiceVal =:= 'do-not-drive-on-the-shoulder' ->
<<0:1,7437:16>>;
ChoiceVal =:= 'allow-emergency-vehicles-to-pass' ->
<<0:1,7438:16>>;
ChoiceVal =:= 'clear-a-lane-for-emergency-vehicles' ->
<<0:1,7439:16>>;
ChoiceVal =:= 'pull-over-to-the-edge-of-the-roadway' ->
<<0:1,7440:16>>;
ChoiceVal =:= 'wait-for-escort-vehicle' ->
<<0:1,7441:16>>;
ChoiceVal =:= 'in-emergency-wait-for-police-patrol' ->
<<0:1,7442:16>>;
ChoiceVal =:= 'reduce-your-speed' ->
<<0:1,7443:16>>;
ChoiceVal =:= 'observe-speed-limits' ->
<<0:1,7444:16>>;
ChoiceVal =:= 'check-point' ->
<<0:1,7445:16>>;
ChoiceVal =:= 'entry-requirements' ->
<<0:1,7446:16>>;
ChoiceVal =:= 'insurance-requirements' ->
<<0:1,7447:16>>;
ChoiceVal =:= 'firearms-requirements' ->
<<0:1,7448:16>>;
ChoiceVal =:= 'pet-requirements' ->
<<0:1,7449:16>>;
ChoiceVal =:= 'stay-in-lane' ->
<<0:1,7450:16>>;
ChoiceVal =:= merge ->
<<0:1,7451:16>>;
ChoiceVal =:= 'slower-traffic-keep-right' ->
<<0:1,7452:16>>;
ChoiceVal =:= 'keep-off' ->
<<0:1,7453:16>>;
ChoiceVal =:= 'evacuate-area-immediately' ->
<<0:1,7454:16>>;
ChoiceVal =:= 'shoulder-travel-no-longer-allowed' ->
<<0:1,7547:16>>;
ChoiceVal =:= above ->
<<0:1,7681:16>>;
ChoiceVal =:= below ->
<<0:1,7682:16>>;
ChoiceVal =:= in ->
<<0:1,7683:16>>;
ChoiceVal =:= around ->
<<0:1,7684:16>>;
ChoiceVal =:= 'after' ->
<<0:1,7685:16>>;
ChoiceVal =:= before ->
<<0:1,7686:16>>;
ChoiceVal =:= at ->
<<0:1,7687:16>>;
ChoiceVal =:= on ->
<<0:1,7688:16>>;
ChoiceVal =:= near ->
<<0:1,7689:16>>;
ChoiceVal =:= 'from-the' ->
<<0:1,7690:16>>;
ChoiceVal =:= terminal ->
<<0:1,7691:16>>;
ChoiceVal =:= 'falling-slowly' ->
<<0:1,7692:16>>;
ChoiceVal =:= falling ->
<<0:1,7693:16>>;
ChoiceVal =:= 'falling-quickly' ->
<<0:1,7694:16>>;
ChoiceVal =:= 'rising-slowly' ->
<<0:1,7695:16>>;
ChoiceVal =:= rising ->
<<0:1,7696:16>>;
ChoiceVal =:= 'rising-quickly' ->
<<0:1,7697:16>>;
ChoiceVal =:= steady ->
<<0:1,7698:16>>;
ChoiceVal =:= likely ->
<<0:1,7699:16>>;
ChoiceVal =:= 'changing-to' ->
<<0:1,7700:16>>;
ChoiceVal =:= mostly ->
<<0:1,7701:16>>;
ChoiceVal =:= partly ->
<<0:1,7702:16>>;
ChoiceVal =:= minus ->
<<0:1,7703:16>>;
ChoiceVal =:= 'weather-ended' ->
<<0:1,7704:16>>;
ChoiceVal =:= expected ->
<<0:1,7705:16>>;
ChoiceVal =:= low ->
<<0:1,7706:16>>;
ChoiceVal =:= mid ->
<<0:1,7707:16>>;
ChoiceVal =:= high ->
<<0:1,7708:16>>;
ChoiceVal =:= upper ->
<<0:1,7709:16>>;
ChoiceVal =:= unseasonably ->
<<0:1,7710:16>>;
ChoiceVal =:= reported ->
<<0:1,7711:16>>;
ChoiceVal =:= advice ->
<<0:1,7712:16>>;
ChoiceVal =:= 'due-to' ->
<<0:1,7713:16>>;
ChoiceVal =:= 'proceed-to' ->
<<0:1,7714:16>>;
ChoiceVal =:= 'transferred-to' ->
<<0:1,7715:16>>;
ChoiceVal =:= use ->
<<0:1,7716:16>>;
ChoiceVal =:= affecting ->
<<0:1,7717:16>>;
ChoiceVal =:= blocking ->
<<0:1,7718:16>>;
ChoiceVal =:= connecting ->
<<0:1,7719:16>>;
ChoiceVal =:= finished ->
<<0:1,7720:16>>;
ChoiceVal =:= for ->
<<0:1,7721:16>>;
ChoiceVal =:= 'or' ->
<<0:1,7722:16>>;
ChoiceVal =:= 'and' ->
<<0:1,7723:16>>;
ChoiceVal =:= later ->
<<0:1,7724:16>>;
ChoiceVal =:= level ->
<<0:1,7725:16>>;
ChoiceVal =:= shortly ->
<<0:1,7726:16>>;
ChoiceVal =:= soon ->
<<0:1,7727:16>>;
ChoiceVal =:= service ->
<<0:1,7728:16>>;
ChoiceVal =:= damaged ->
<<0:1,7729:16>>;
ChoiceVal =:= 'out-of-order' ->
<<0:1,7730:16>>;
ChoiceVal =:= vandalism ->
<<0:1,7731:16>>;
ChoiceVal =:= 'on-State-right-of-way' ->
<<0:1,7732:16>>;
ChoiceVal =:= graffiti ->
<<0:1,7733:16>>;
ChoiceVal =:= 'found-property' ->
<<0:1,7734:16>>;
ChoiceVal =:= 'begin-time' ->
<<0:1,7735:16>>;
ChoiceVal =:= added ->
<<0:1,7736:16>>;
ChoiceVal =:= 'end-time' ->
<<0:1,7737:16>>;
ChoiceVal =:= no ->
<<0:1,7738:16>>;
ChoiceVal =:= 'do-not' ->
<<0:1,7739:16>>;
ChoiceVal =:= block ->
<<0:1,7740:16>>;
ChoiceVal =:= except ->
<<0:1,7741:16>>;
ChoiceVal =:= day ->
<<0:1,7742:16>>;
ChoiceVal =:= night ->
<<0:1,7743:16>>;
ChoiceVal =:= 'any-time' ->
<<0:1,7744:16>>;
ChoiceVal =:= has ->
<<0:1,7745:16>>;
ChoiceVal =:= 'may-have' ->
<<0:1,7746:16>>;
ChoiceVal =:= only ->
<<0:1,7747:16>>;
ChoiceVal =:= lifted ->
<<0:1,7748:16>>;
ChoiceVal =:= empty ->
<<0:1,7749:16>>;
ChoiceVal =:= turning ->
<<0:1,7750:16>>;
ChoiceVal =:= 'u-turn' ->
<<0:1,7751:16>>;
ChoiceVal =:= 'wait-for' ->
<<0:1,7752:16>>;
ChoiceVal =:= 'when-flashing' ->
<<0:1,7753:16>>;
ChoiceVal =:= duration ->
<<0:1,7754:16>>;
ChoiceVal =:= cross ->
<<0:1,7755:16>>;
ChoiceVal =:= 'when-wet' ->
<<0:1,7756:16>>;
ChoiceVal =:= must ->
<<0:1,7757:16>>;
ChoiceVal =:= oncoming ->
<<0:1,7758:16>>;
ChoiceVal =:= 'may-exceed' ->
<<0:1,7759:16>>;
ChoiceVal =:= 'to-request' ->
<<0:1,7760:16>>;
ChoiceVal =:= exempt ->
<<0:1,7761:16>>;
ChoiceVal =:= skewed ->
<<0:1,7762:16>>;
ChoiceVal =:= 'when-children-are-present' ->
<<0:1,7763:16>>;
ChoiceVal =:= lower ->
<<0:1,7764:16>>;
ChoiceVal =:= middle ->
<<0:1,7765:16>>;
ChoiceVal =:= major ->
<<0:1,7766:16>>;
ChoiceVal =:= minor ->
<<0:1,7767:16>>;
ChoiceVal =:= 'on-bridges' ->
<<0:1,7937:16>>;
ChoiceVal =:= 'in-tunnels' ->
<<0:1,7938:16>>;
ChoiceVal =:= 'entering-or-leaving-tunnels' ->
<<0:1,7939:16>>;
ChoiceVal =:= 'on-ramps' ->
<<0:1,7940:16>>;
ChoiceVal =:= 'in-road-construction-area' ->
<<0:1,7941:16>>;
ChoiceVal =:= 'around-a-curve' ->
<<0:1,7942:16>>;
ChoiceVal =:= 'on-minor-roads' ->
<<0:1,7943:16>>;
ChoiceVal =:= 'in-the-opposing-lanes' ->
<<0:1,7944:16>>;
ChoiceVal =:= 'adjacent-to-roadway' ->
<<0:1,7945:16>>;
ChoiceVal =:= 'on-bend' ->
<<0:1,7946:16>>;
ChoiceVal =:= 'entire-intersection' ->
<<0:1,7947:16>>;
ChoiceVal =:= 'in-the-median' ->
<<0:1,7948:16>>;
ChoiceVal =:= 'moved-to-side-of-road' ->
<<0:1,7949:16>>;
ChoiceVal =:= 'moved-to-shoulder' ->
<<0:1,7950:16>>;
ChoiceVal =:= 'on-the-roadway' ->
<<0:1,7951:16>>;
ChoiceVal =:= 'in-shaded-areas' ->
<<0:1,7952:16>>;
ChoiceVal =:= 'in-low-lying-areas' ->
<<0:1,7953:16>>;
ChoiceVal =:= 'in-the-downtown-area' ->
<<0:1,7954:16>>;
ChoiceVal =:= 'in-the-inner-city-area' ->
<<0:1,7955:16>>;
ChoiceVal =:= 'in-parts' ->
<<0:1,7956:16>>;
ChoiceVal =:= 'in-some-places' ->
<<0:1,7957:16>>;
ChoiceVal =:= 'in-the-ditch' ->
<<0:1,7958:16>>;
ChoiceVal =:= 'in-the-valley' ->
<<0:1,7959:16>>;
ChoiceVal =:= 'on-hill-top' ->
<<0:1,7960:16>>;
ChoiceVal =:= 'near-the-foothills' ->
<<0:1,7961:16>>;
ChoiceVal =:= 'at-high-altitudes' ->
<<0:1,7962:16>>;
ChoiceVal =:= 'near-the-lake' ->
<<0:1,7963:16>>;
ChoiceVal =:= 'near-the-shore' ->
<<0:1,7964:16>>;
ChoiceVal =:= 'over-the-crest-of-a-hill' ->
<<0:1,7965:16>>;
ChoiceVal =:= 'other-than-on-the-roadway' ->
<<0:1,7966:16>>;
ChoiceVal =:= 'near-the-beach' ->
<<0:1,7967:16>>;
ChoiceVal =:= 'near-beach-access-point' ->
<<0:1,7968:16>>;
ChoiceVal =:= 'lower-level' ->
<<0:1,7969:16>>;
ChoiceVal =:= 'upper-level' ->
<<0:1,7970:16>>;
ChoiceVal =:= airport ->
<<0:1,7971:16>>;
ChoiceVal =:= concourse ->
<<0:1,7972:16>>;
ChoiceVal =:= gate ->
<<0:1,7973:16>>;
ChoiceVal =:= 'baggage-claim' ->
<<0:1,7974:16>>;
ChoiceVal =:= 'customs-point' ->
<<0:1,7975:16>>;
ChoiceVal =:= station ->
<<0:1,7976:16>>;
ChoiceVal =:= platform ->
<<0:1,7977:16>>;
ChoiceVal =:= dock ->
<<0:1,7978:16>>;
ChoiceVal =:= depot ->
<<0:1,7979:16>>;
ChoiceVal =:= 'ev-charging-point' ->
<<0:1,7980:16>>;
ChoiceVal =:= 'information-welcome-point' ->
<<0:1,7981:16>>;
ChoiceVal =:= 'at-rest-area' ->
<<0:1,7982:16>>;
ChoiceVal =:= 'at-service-area' ->
<<0:1,7983:16>>;
ChoiceVal =:= 'at-weigh-station' ->
<<0:1,7984:16>>;
ChoiceVal =:= 'picnic-areas' ->
<<0:1,7985:16>>;
ChoiceVal =:= 'rest-area' ->
<<0:1,7986:16>>;
ChoiceVal =:= 'service-stations' ->
<<0:1,7987:16>>;
ChoiceVal =:= toilets ->
<<0:1,7988:16>>;
ChoiceVal =:= 'on-the-right' ->
<<0:1,7989:16>>;
ChoiceVal =:= 'on-the-left' ->
<<0:1,7990:16>>;
ChoiceVal =:= 'in-the-center' ->
<<0:1,7991:16>>;
ChoiceVal =:= 'in-the-opposite-direction' ->
<<0:1,7992:16>>;
ChoiceVal =:= 'cross-traffic' ->
<<0:1,7993:16>>;
ChoiceVal =:= 'northbound-traffic' ->
<<0:1,7994:16>>;
ChoiceVal =:= 'eastbound-traffic' ->
<<0:1,7995:16>>;
ChoiceVal =:= 'southbound-traffic' ->
<<0:1,7996:16>>;
ChoiceVal =:= 'westbound-traffic' ->
<<0:1,7997:16>>;
ChoiceVal =:= north ->
<<0:1,7998:16>>;
ChoiceVal =:= south ->
<<0:1,7999:16>>;
ChoiceVal =:= east ->
<<0:1,8000:16>>;
ChoiceVal =:= west ->
<<0:1,8001:16>>;
ChoiceVal =:= northeast ->
<<0:1,8002:16>>;
ChoiceVal =:= northwest ->
<<0:1,8003:16>>;
ChoiceVal =:= southeast ->
<<0:1,8004:16>>;
ChoiceVal =:= southwest ->
<<0:1,8005:16>>;
ChoiceVal =:= 'mountain-pass' ->
<<0:1,8006:16>>;
ChoiceVal =:= 'reservation-center' ->
<<0:1,8007:16>>;
ChoiceVal =:= 'nearby-basin' ->
<<0:1,8008:16>>;
ChoiceVal =:= 'on-tracks' ->
<<0:1,8009:16>>;
ChoiceVal =:= dip ->
<<0:1,8010:16>>;
ChoiceVal =:= 'traffic-circle' ->
<<0:1,8011:16>>;
ChoiceVal =:= 'park-and-ride-lot' ->
<<0:1,8012:16>>;
ChoiceVal =:= to ->
<<0:1,8014:16>>;
ChoiceVal =:= by ->
<<0:1,8015:16>>;
ChoiceVal =:= through ->
<<0:1,8016:16>>;
ChoiceVal =:= 'area-of' ->
<<0:1,8017:16>>;
ChoiceVal =:= under ->
<<0:1,8018:16>>;
ChoiceVal =:= over ->
<<0:1,8019:16>>;
ChoiceVal =:= from ->
<<0:1,8020:16>>;
ChoiceVal =:= approaching ->
<<0:1,8021:16>>;
ChoiceVal =:= 'entering-at' ->
<<0:1,8022:16>>;
ChoiceVal =:= 'exiting-at' ->
<<0:1,8023:16>>;
ChoiceVal =:= 'across-tracks' ->
<<0:1,8024:16>>;
ChoiceVal =:= 'in-street' ->
<<0:1,8025:16>>;
ChoiceVal =:= 'on-curve' ->
<<0:1,8026:16>>;
ChoiceVal =:= shoulder ->
<<0:1,8027:16>>;
ChoiceVal =:= crossover ->
<<0:1,8028:16>>;
ChoiceVal =:= 'cross-road' ->
<<0:1,8029:16>>;
ChoiceVal =:= 'side-road' ->
<<0:1,8030:16>>;
ChoiceVal =:= 'bus-stop' ->
<<0:1,8031:16>>;
ChoiceVal =:= intersection ->
<<0:1,8032:16>>;
ChoiceVal =:= 'roadside-park' ->
<<0:1,8033:16>>;
ChoiceVal =:= coast ->
<<0:1,8034:16>>;
ChoiceVal =:= 'all-roadways' ->
<<0:1,8193:16>>;
ChoiceVal =:= 'through-lanes' ->
<<0:1,8194:16>>;
ChoiceVal =:= 'left-lane' ->
<<0:1,8195:16>>;
ChoiceVal =:= 'right-lane' ->
<<0:1,8196:16>>;
ChoiceVal =:= 'center-lane' ->
<<0:1,8197:16>>;
ChoiceVal =:= 'middle-lanes' ->
<<0:1,8198:16>>;
ChoiceVal =:= 'middle-two-lanes' ->
<<0:1,8199:16>>;
ChoiceVal =:= 'right-turning-lanes' ->
<<0:1,8200:16>>;
ChoiceVal =:= 'left-turning-lanes' ->
<<0:1,8201:16>>;
ChoiceVal =:= 'right-exit-ramp' ->
<<0:1,8202:16>>;
ChoiceVal =:= 'right-entrance-ramp' ->
<<0:1,8203:16>>;
ChoiceVal =:= 'left-exit-ramp' ->
<<0:1,8204:16>>;
ChoiceVal =:= 'left-entrance-ramp' ->
<<0:1,8205:16>>;
ChoiceVal =:= 'hard-shoulder' ->
<<0:1,8206:16>>;
ChoiceVal =:= 'soft-shoulder' ->
<<0:1,8207:16>>;
ChoiceVal =:= 'right-shoulder' ->
<<0:1,8208:16>>;
ChoiceVal =:= 'left-shoulder' ->
<<0:1,8209:16>>;
ChoiceVal =:= 'right-hand-parallel-lanes' ->
<<0:1,8210:16>>;
ChoiceVal =:= 'left-hand-parallel-lanes' ->
<<0:1,8211:16>>;
ChoiceVal =:= 'connecting-lanes' ->
<<0:1,8212:16>>;
ChoiceVal =:= 'express-lanes' ->
<<0:1,8213:16>>;
ChoiceVal =:= 'local-lanes' ->
<<0:1,8214:16>>;
ChoiceVal =:= 'toll-lanes' ->
<<0:1,8215:16>>;
ChoiceVal =:= 'electronic-toll-lanes' ->
<<0:1,8216:16>>;
ChoiceVal =:= 'toll-plaza' ->
<<0:1,8217:16>>;
ChoiceVal =:= 'inspection-lane' ->
<<0:1,8218:16>>;
ChoiceVal =:= 'hOV-lanes' ->
<<0:1,8219:16>>;
ChoiceVal =:= 'bus-lanes' ->
<<0:1,8220:16>>;
ChoiceVal =:= 'carpool-lanes' ->
<<0:1,8221:16>>;
ChoiceVal =:= 'truck-lanes' ->
<<0:1,8222:16>>;
ChoiceVal =:= 'emergency-lanes' ->
<<0:1,8223:16>>;
ChoiceVal =:= 'passing-lanes' ->
<<0:1,8224:16>>;
ChoiceVal =:= 'climbing-lanes' ->
<<0:1,8225:16>>;
ChoiceVal =:= 'slow-lane' ->
<<0:1,8226:16>>;
ChoiceVal =:= 'service-road' ->
<<0:1,8227:16>>;
ChoiceVal =:= 'cycle-lane' ->
<<0:1,8228:16>>;
ChoiceVal =:= bridge ->
<<0:1,8229:16>>;
ChoiceVal =:= overpass ->
<<0:1,8230:16>>;
ChoiceVal =:= 'elevated-lanes' ->
<<0:1,8231:16>>;
ChoiceVal =:= underpass ->
<<0:1,8232:16>>;
ChoiceVal =:= tunnel ->
<<0:1,8233:16>>;
ChoiceVal =:= 'escape-ramp' ->
<<0:1,8234:16>>;
ChoiceVal =:= highways ->
<<0:1,8235:16>>;
ChoiceVal =:= 'upper-deck-lanes' ->
<<0:1,8236:16>>;
ChoiceVal =:= 'lower-deck-lanes' ->
<<0:1,8237:16>>;
ChoiceVal =:= 'reversible-lanes' ->
<<0:1,8238:16>>;
ChoiceVal =:= 'right-exit-lanes' ->
<<0:1,8239:16>>;
ChoiceVal =:= 'left-exit-lanes' ->
<<0:1,8240:16>>;
ChoiceVal =:= 'right-merging-lanes' ->
<<0:1,8241:16>>;
ChoiceVal =:= 'left-merging-lanes' ->
<<0:1,8242:16>>;
ChoiceVal =:= 'right-second-exit-ramp' ->
<<0:1,8243:16>>;
ChoiceVal =:= 'left-second-exit-ramp' ->
<<0:1,8244:16>>;
ChoiceVal =:= 'right-second-entrance-ramp' ->
<<0:1,8245:16>>;
ChoiceVal =:= 'left-second-entrance-ramp' ->
<<0:1,8246:16>>;
ChoiceVal =:= 'all-exit-lanes' ->
<<0:1,8247:16>>;
ChoiceVal =:= 'all-entry-lanes' ->
<<0:1,8248:16>>;
ChoiceVal =:= 'either-shoulder' ->
<<0:1,8249:16>>;
ChoiceVal =:= tracks ->
<<0:1,8250:16>>;
ChoiceVal =:= sidewalk ->
<<0:1,8251:16>>;
ChoiceVal =:= median ->
<<0:1,8252:16>>;
ChoiceVal =:= 'shoulder-work' ->
<<0:1,8253:16>>;
ChoiceVal =:= 'detour-where-possible' ->
<<0:1,8449:16>>;
ChoiceVal =:= 'no-detour-available' ->
<<0:1,8450:16>>;
ChoiceVal =:= 'follow-signs' ->
<<0:1,8451:16>>;
ChoiceVal =:= 'follow-detour-signs' ->
<<0:1,8452:16>>;
ChoiceVal =:= 'follow-special-detour-markers' ->
<<0:1,8453:16>>;
ChoiceVal =:= 'do-not-follow-detour-signs' ->
<<0:1,8454:16>>;
ChoiceVal =:= 'detour-in-operation' ->
<<0:1,8455:16>>;
ChoiceVal =:= 'follow-local-detour' ->
<<0:1,8456:16>>;
ChoiceVal =:= 'compulsory-detour-in-operation' ->
<<0:1,8457:16>>;
ChoiceVal =:= 'no-suitable-detour-available' ->
<<0:1,8458:16>>;
ChoiceVal =:= 'detour-is-no-longer-recommended' ->
<<0:1,8459:16>>;
ChoiceVal =:= 'local-drivers-are-recommended-to-avoid-the-area' ->
<<0:1,8460:16>>;
ChoiceVal =:= 'trucks-are-recommended-to-avoid-the-area' ->
<<0:1,8461:16>>;
ChoiceVal =:= 'consider-alternate-route' ->
<<0:1,8462:16>>;
ChoiceVal =:= 'consider-alternate-parking' ->
<<0:1,8463:16>>;
ChoiceVal =:= 'consider-alternate-destination' ->
<<0:1,8464:16>>;
ChoiceVal =:= 'consider-alternate-area' ->
<<0:1,8465:16>>;
ChoiceVal =:= 'snow-route' ->
<<0:1,8466:16>>;
ChoiceVal =:= 'emergency-snow-route' ->
<<0:1,8467:16>>;
ChoiceVal =:= 'evacuation-route' ->
<<0:1,8468:16>>;
ChoiceVal =:= 'truck-route' ->
<<0:1,8469:16>>;
ChoiceVal =:= 'hazardous-materials-route' ->
<<0:1,8470:16>>;
ChoiceVal =:= detour ->
<<0:1,8471:16>>;
ChoiceVal =:= 'square-feet' ->
<<0:1,8705:16>>;
ChoiceVal =:= 'square-meters' ->
<<0:1,8706:16>>;
ChoiceVal =:= acres ->
<<0:1,8707:16>>;
ChoiceVal =:= hectares ->
<<0:1,8708:16>>;
ChoiceVal =:= inches ->
<<0:1,8709:16>>;
ChoiceVal =:= feet ->
<<0:1,8710:16>>;
ChoiceVal =:= mile ->
<<0:1,8711:16>>;
ChoiceVal =:= miles ->
<<0:1,8712:16>>;
ChoiceVal =:= 'nautical-miles' ->
<<0:1,8713:16>>;
ChoiceVal =:= millimeters ->
<<0:1,8714:16>>;
ChoiceVal =:= meters ->
<<0:1,8715:16>>;
ChoiceVal =:= kilometer ->
<<0:1,8716:16>>;
ChoiceVal =:= kilometers ->
<<0:1,8717:16>>;
ChoiceVal =:= 'feet-per-second' ->
<<0:1,8718:16>>;
ChoiceVal =:= 'meters-per-second' ->
<<0:1,8719:16>>;
ChoiceVal =:= mPH ->
<<0:1,8720:16>>;
ChoiceVal =:= kPH ->
<<0:1,8721:16>>;
ChoiceVal =:= knots ->
<<0:1,8722:16>>;
ChoiceVal =:= aM ->
<<0:1,8723:16>>;
ChoiceVal =:= pM ->
<<0:1,8724:16>>;
ChoiceVal =:= weekends ->
<<0:1,8725:16>>;
ChoiceVal =:= holiday ->
<<0:1,8726:16>>;
ChoiceVal =:= seconds ->
<<0:1,8727:16>>;
ChoiceVal =:= minutes ->
<<0:1,8728:16>>;
ChoiceVal =:= hours ->
<<0:1,8729:16>>;
ChoiceVal =:= days ->
<<0:1,8730:16>>;
ChoiceVal =:= weeks ->
<<0:1,8731:16>>;
ChoiceVal =:= months ->
<<0:1,8732:16>>;
ChoiceVal =:= 'degrees-Angle' ->
<<0:1,8733:16>>;
ChoiceVal =:= 'degrees-Celsius' ->
<<0:1,8734:16>>;
ChoiceVal =:= 'degrees-Fahrenheit' ->
<<0:1,8735:16>>;
ChoiceVal =:= grams ->
<<0:1,8736:16>>;
ChoiceVal =:= kilograms ->
<<0:1,8737:16>>;
ChoiceVal =:= ounces ->
<<0:1,8738:16>>;
ChoiceVal =:= pounds ->
<<0:1,8739:16>>;
ChoiceVal =:= tons ->
<<0:1,8740:16>>;
ChoiceVal =:= 'fluid-ounces' ->
<<0:1,8741:16>>;
ChoiceVal =:= gallons ->
<<0:1,8742:16>>;
ChoiceVal =:= milliliters ->
<<0:1,8743:16>>;
ChoiceVal =:= liters ->
<<0:1,8744:16>>;
ChoiceVal =:= 'kilograms-per-lane-mile' ->
<<0:1,8745:16>>;
ChoiceVal =:= 'tons-per-lane-mile' ->
<<0:1,8746:16>>;
ChoiceVal =:= dollar ->
<<0:1,8747:16>>;
ChoiceVal =:= percent ->
<<0:1,8748:16>>;
ChoiceVal =:= 'time-delimiter' ->
<<0:1,8749:16>>;
ChoiceVal =:= dollars ->
<<0:1,8750:16>>;
ChoiceVal =:= 'flight-number' ->
<<0:1,8751:16>>;
ChoiceVal =:= 'person-people' ->
<<0:1,8752:16>>;
ChoiceVal =:= 'response-plan' ->
<<0:1,8753:16>>;
ChoiceVal =:= 'placard-type' ->
<<0:1,8754:16>>;
ChoiceVal =:= 'placard-number' ->
<<0:1,8755:16>>;
ChoiceVal =:= fM ->
<<0:1,8756:16>>;
ChoiceVal =:= grade ->
<<0:1,8757:16>>;
ChoiceVal =:= nSunday ->
<<0:1,8758:16>>;
ChoiceVal =:= nMonday ->
<<0:1,8759:16>>;
ChoiceVal =:= nTuesday ->
<<0:1,8760:16>>;
ChoiceVal =:= nWednesday ->
<<0:1,8761:16>>;
ChoiceVal =:= nThursday ->
<<0:1,8762:16>>;
ChoiceVal =:= nFriday ->
<<0:1,8763:16>>;
ChoiceVal =:= nSaturday ->
<<0:1,8764:16>>;
ChoiceVal =:= weekdays ->
<<0:1,8765:16>>;
ChoiceVal =:= elevation ->
<<0:1,8766:16>>;
ChoiceVal =:= 'other-times' ->
<<0:1,8767:16>>;
ChoiceVal =:= travel ->
<<0:1,8961:16>>;
ChoiceVal =:= transit ->
<<0:1,8962:16>>;
ChoiceVal =:= bus ->
<<0:1,8963:16>>;
ChoiceVal =:= trolleybus ->
<<0:1,8964:16>>;
ChoiceVal =:= rail ->
<<0:1,8965:16>>;
ChoiceVal =:= 'commuter-rail' ->
<<0:1,8966:16>>;
ChoiceVal =:= subway ->
<<0:1,8967:16>>;
ChoiceVal =:= 'rapid-transit' ->
<<0:1,8968:16>>;
ChoiceVal =:= 'light-rail' ->
<<0:1,8969:16>>;
ChoiceVal =:= streetcar ->
<<0:1,8970:16>>;
ChoiceVal =:= 'dial-a-ride' ->
<<0:1,8971:16>>;
ChoiceVal =:= 'park-and-ride' ->
<<0:1,8972:16>>;
ChoiceVal =:= shuttle ->
<<0:1,8973:16>>;
ChoiceVal =:= 'free-shuttle' ->
<<0:1,8974:16>>;
ChoiceVal =:= 'airport-shuttle' ->
<<0:1,8975:16>>;
ChoiceVal =:= taxies ->
<<0:1,8976:16>>;
ChoiceVal =:= ferry ->
<<0:1,8977:16>>;
ChoiceVal =:= 'passenger-ferry' ->
<<0:1,8978:16>>;
ChoiceVal =:= 'vehicle-ferry' ->
<<0:1,8979:16>>;
ChoiceVal =:= 'aerial-tramway' ->
<<0:1,8980:16>>;
ChoiceVal =:= 'automated-guideway' ->
<<0:1,8981:16>>;
ChoiceVal =:= 'cable-cars' ->
<<0:1,8982:16>>;
ChoiceVal =:= monorail ->
<<0:1,8983:16>>;
ChoiceVal =:= 'air-travel' ->
<<0:1,8984:16>>;
ChoiceVal =:= 'hitch-hitching' ->
<<0:1,8985:16>>;
ChoiceVal =:= walk ->
<<0:1,8986:16>>;
ChoiceVal =:= 'all-vehicles' ->
<<0:1,9217:16>>;
ChoiceVal =:= bicycles ->
<<0:1,9218:16>>;
ChoiceVal =:= motorcycles ->
<<0:1,9219:16>>;
ChoiceVal =:= cars ->
<<0:1,9220:16>>;
ChoiceVal =:= 'light-vehicles' ->
<<0:1,9221:16>>;
ChoiceVal =:= 'cars-and-light-vehicles' ->
<<0:1,9222:16>>;
ChoiceVal =:= 'cars-with-trailers' ->
<<0:1,9223:16>>;
ChoiceVal =:= 'cars-with-recreational-trailers' ->
<<0:1,9224:16>>;
ChoiceVal =:= 'vehicles-with-trailers' ->
<<0:1,9225:16>>;
ChoiceVal =:= 'heavy-vehicles' ->
<<0:1,9226:16>>;
ChoiceVal =:= trucks ->
<<0:1,9227:16>>;
ChoiceVal =:= buses ->
<<0:1,9228:16>>;
ChoiceVal =:= 'articulated-buses' ->
<<0:1,9229:16>>;
ChoiceVal =:= 'school-buses' ->
<<0:1,9230:16>>;
ChoiceVal =:= 'vehicles-with-semi-trailers' ->
<<0:1,9231:16>>;
ChoiceVal =:= 'vehicles-with-double-trailers' ->
<<0:1,9232:16>>;
ChoiceVal =:= 'high-profile-vehicles' ->
<<0:1,9233:16>>;
ChoiceVal =:= 'wide-vehicles' ->
<<0:1,9234:16>>;
ChoiceVal =:= 'long-vehicles' ->
<<0:1,9235:16>>;
ChoiceVal =:= 'hazardous-loads' ->
<<0:1,9236:16>>;
ChoiceVal =:= 'exceptional-loads' ->
<<0:1,9237:16>>;
ChoiceVal =:= 'abnormal-loads' ->
<<0:1,9238:16>>;
ChoiceVal =:= convoys ->
<<0:1,9239:16>>;
ChoiceVal =:= 'maintenance-vehicles' ->
<<0:1,9240:16>>;
ChoiceVal =:= 'delivery-vehicles' ->
<<0:1,9241:16>>;
ChoiceVal =:= 'vehicles-with-even-numbered-license-plates' ->
<<0:1,9242:16>>;
ChoiceVal =:= 'vehicles-with-odd-numbered-license-plates' ->
<<0:1,9243:16>>;
ChoiceVal =:= 'vehicles-with-parking-permits' ->
<<0:1,9244:16>>;
ChoiceVal =:= 'vehicles-with-catalytic-converters' ->
<<0:1,9245:16>>;
ChoiceVal =:= 'vehicles-without-catalytic-converters' ->
<<0:1,9246:16>>;
ChoiceVal =:= 'gas-powered-vehicles' ->
<<0:1,9247:16>>;
ChoiceVal =:= 'diesel-powered-vehicles' ->
<<0:1,9248:16>>;
ChoiceVal =:= 'lPG-vehicles' ->
<<0:1,9249:16>>;
ChoiceVal =:= 'military-convoys' ->
<<0:1,9250:16>>;
ChoiceVal =:= 'military-vehicles' ->
<<0:1,9251:16>>;
ChoiceVal =:= 'electric-powered-vehicles' ->
<<0:1,9252:16>>;
ChoiceVal =:= 'hybrid-powered-vehicles' ->
<<0:1,9253:16>>;
ChoiceVal =:= 'inherently-low-emission-vehicles' ->
<<0:1,9254:16>>;
ChoiceVal =:= 'commercial-vehicles' ->
<<0:1,9255:16>>;
ChoiceVal =:= 'runaway-vehicles' ->
<<0:1,9256:16>>;
ChoiceVal =:= 'vehicles-with-lugs' ->
<<0:1,9257:16>>;
ChoiceVal =:= 'motor-driven-cycles' ->
<<0:1,9258:16>>;
ChoiceVal =:= 'recreational-vehicles' ->
<<0:1,9259:16>>;
ChoiceVal =:= 'non-motorized-vehicles' ->
<<0:1,9260:16>>;
ChoiceVal =:= traffic ->
<<0:1,9261:16>>;
ChoiceVal =:= 'through-traffic' ->
<<0:1,9473:16>>;
ChoiceVal =:= 'holiday-traffic' ->
<<0:1,9474:16>>;
ChoiceVal =:= residents ->
<<0:1,9475:16>>;
ChoiceVal =:= visitors ->
<<0:1,9476:16>>;
ChoiceVal =:= 'long-distance-traffic' ->
<<0:1,9477:16>>;
ChoiceVal =:= 'local-traffic' ->
<<0:1,9478:16>>;
ChoiceVal =:= 'regional-traffic' ->
<<0:1,9479:16>>;
ChoiceVal =:= arrivals ->
<<0:1,9480:16>>;
ChoiceVal =:= departures ->
<<0:1,9481:16>>;
ChoiceVal =:= 'airline-travelers' ->
<<0:1,9482:16>>;
ChoiceVal =:= 'commuter-airline-travelers' ->
<<0:1,9483:16>>;
ChoiceVal =:= 'domestic-airline-travelers' ->
<<0:1,9484:16>>;
ChoiceVal =:= 'international-airline-travelers' ->
<<0:1,9485:16>>;
ChoiceVal =:= pedestrians ->
<<0:1,9486:16>>;
ChoiceVal =:= bicyclists ->
<<0:1,9487:16>>;
ChoiceVal =:= 'emergency-vehicle-units' ->
<<0:1,9729:16>>;
ChoiceVal =:= 'federal-law-enforcement-units' ->
<<0:1,9730:16>>;
ChoiceVal =:= 'state-police-units' ->
<<0:1,9731:16>>;
ChoiceVal =:= 'county-police-units' ->
<<0:1,9732:16>>;
ChoiceVal =:= 'local-police-units' ->
<<0:1,9733:16>>;
ChoiceVal =:= 'ambulance-units' ->
<<0:1,9734:16>>;
ChoiceVal =:= 'rescue-units' ->
<<0:1,9735:16>>;
ChoiceVal =:= 'fire-units' ->
<<0:1,9736:16>>;
ChoiceVal =:= 'hAZMAT-units' ->
<<0:1,9737:16>>;
ChoiceVal =:= 'light-tow-unit' ->
<<0:1,9738:16>>;
ChoiceVal =:= 'heavy-tow-unit' ->
<<0:1,9739:16>>;
ChoiceVal =:= 'freeway-service-patrols' ->
<<0:1,9740:16>>;
ChoiceVal =:= 'transportation-response-units' ->
<<0:1,9741:16>>;
ChoiceVal =:= 'private-contractor-response-units' ->
<<0:1,9742:16>>;
ChoiceVal =:= 'private-tow-units' ->
<<0:1,9743:16>>;
ChoiceVal =:= 'ground-fire-suppression' ->
<<0:1,9985:16>>;
ChoiceVal =:= 'heavy-ground-equipment' ->
<<0:1,9986:16>>;
ChoiceVal =:= aircraft ->
<<0:1,9988:16>>;
ChoiceVal =:= 'marine-equipment' ->
<<0:1,9989:16>>;
ChoiceVal =:= 'support-equipment' ->
<<0:1,9990:16>>;
ChoiceVal =:= 'medical-rescue-unit' ->
<<0:1,9991:16>>;
ChoiceVal =:= other ->
<<0:1,9993:16>>;
ChoiceVal =:= 'ground-fire-suppression-other' ->
<<0:1,9994:16>>;
ChoiceVal =:= engine ->
<<0:1,9995:16>>;
ChoiceVal =:= 'truck-or-aerial' ->
<<0:1,9996:16>>;
ChoiceVal =:= quint ->
<<0:1,9997:16>>;
ChoiceVal =:= 'tanker-pumper-combination' ->
<<0:1,9998:16>>;
ChoiceVal =:= 'brush-truck' ->
<<0:1,10000:16>>;
ChoiceVal =:= 'aircraft-rescue-firefighting' ->
<<0:1,10001:16>>;
ChoiceVal =:= 'heavy-ground-equipment-other' ->
<<0:1,10004:16>>;
ChoiceVal =:= 'dozer-or-plow' ->
<<0:1,10005:16>>;
ChoiceVal =:= tractor ->
<<0:1,10006:16>>;
ChoiceVal =:= 'tanker-or-tender' ->
<<0:1,10008:16>>;
ChoiceVal =:= 'aircraft-other' ->
<<0:1,10024:16>>;
ChoiceVal =:= 'aircraft-fixed-wing-tanker' ->
<<0:1,10025:16>>;
ChoiceVal =:= helitanker ->
<<0:1,10026:16>>;
ChoiceVal =:= helicopter ->
<<0:1,10027:16>>;
ChoiceVal =:= 'marine-equipment-other' ->
<<0:1,10034:16>>;
ChoiceVal =:= 'fire-boat-with-pump' ->
<<0:1,10035:16>>;
ChoiceVal =:= 'boat-no-pump' ->
<<0:1,10036:16>>;
ChoiceVal =:= 'support-apparatus-other' ->
<<0:1,10044:16>>;
ChoiceVal =:= 'breathing-apparatus-support' ->
<<0:1,10045:16>>;
ChoiceVal =:= 'light-and-air-unit' ->
<<0:1,10046:16>>;
ChoiceVal =:= 'medical-rescue-unit-other' ->
<<0:1,10054:16>>;
ChoiceVal =:= 'rescue-unit' ->
<<0:1,10055:16>>;
ChoiceVal =:= 'urban-search-rescue-unit' ->
<<0:1,10056:16>>;
ChoiceVal =:= 'high-angle-rescue' ->
<<0:1,10057:16>>;
ChoiceVal =:= 'crash-fire-rescue' ->
<<0:1,10058:16>>;
ChoiceVal =:= 'bLS-unit' ->
<<0:1,10059:16>>;
ChoiceVal =:= 'aLS-unit' ->
<<0:1,10060:16>>;
ChoiceVal =:= 'mobile-command-post' ->
<<0:1,10075:16>>;
ChoiceVal =:= 'chief-officer-car' ->
<<0:1,10076:16>>;
ChoiceVal =:= 'hAZMAT-unit' ->
<<0:1,10077:16>>;
ChoiceVal =:= 'type-i-hand-crew' ->
<<0:1,10078:16>>;
ChoiceVal =:= 'type-ii-hand-crew' ->
<<0:1,10079:16>>;
ChoiceVal =:= 'privately-owned-vehicle' ->
<<0:1,10083:16>>;
ChoiceVal =:= 'other-apparatus-resource' ->
<<0:1,10084:16>>;
ChoiceVal =:= ambulance ->
<<0:1,10085:16>>;
ChoiceVal =:= 'bomb-squad-van' ->
<<0:1,10086:16>>;
ChoiceVal =:= 'combine-harvester' ->
<<0:1,10087:16>>;
ChoiceVal =:= 'construction-vehicle' ->
<<0:1,10088:16>>;
ChoiceVal =:= 'farm-tractor' ->
<<0:1,10089:16>>;
ChoiceVal =:= 'grass-cutting-machines' ->
<<0:1,10090:16>>;
ChoiceVal =:= 'hAZMAT-containment-tow' ->
<<0:1,10091:16>>;
ChoiceVal =:= 'heavy-tow' ->
<<0:1,10092:16>>;
ChoiceVal =:= 'hedge-cutting-machines' ->
<<0:1,10093:16>>;
ChoiceVal =:= 'light-tow' ->
<<0:1,10094:16>>;
ChoiceVal =:= 'mobile-crane' ->
<<0:1,10095:16>>;
ChoiceVal =:= 'refuse-collection-vehicle' ->
<<0:1,10096:16>>;
ChoiceVal =:= 'resurfacing-vehicle' ->
<<0:1,10097:16>>;
ChoiceVal =:= 'road-sweeper' ->
<<0:1,10098:16>>;
ChoiceVal =:= 'roadside-litter-collection-crews' ->
<<0:1,10099:16>>;
ChoiceVal =:= 'salvage-vehicle' ->
<<0:1,10100:16>>;
ChoiceVal =:= 'sand-truck' ->
<<0:1,10101:16>>;
ChoiceVal =:= snowplow ->
<<0:1,10102:16>>;
ChoiceVal =:= 'steam-roller' ->
<<0:1,10103:16>>;
ChoiceVal =:= 'swat-team-van' ->
<<0:1,10104:16>>;
ChoiceVal =:= 'track-laying-vehicle' ->
<<0:1,10105:16>>;
ChoiceVal =:= 'unknown-vehicle' ->
<<0:1,10106:16>>;
ChoiceVal =:= 'white-lining-vehicle' ->
<<0:1,10107:16>>;
ChoiceVal =:= 'dump-truck' ->
<<0:1,10108:16>>;
ChoiceVal =:= 'supervisor-vehicle' ->
<<0:1,10109:16>>;
ChoiceVal =:= 'snow-blower' ->
<<0:1,10110:16>>;
ChoiceVal =:= 'rotary-snow-blower' ->
<<0:1,10111:16>>;
ChoiceVal =:= 'road-grader' ->
<<0:1,10112:16>>;
ChoiceVal =:= 'steam-truck' ->
<<0:1,10113:16>>;
ChoiceVal =:= 'flatbed-tow' ->
<<0:1,10114:16>>;
ChoiceVal =:= 'survey-crews' ->
<<0:1,10115:16>>;
ChoiceVal =:= 'unknown-status' ->
<<0:1,10240:16>>;
ChoiceVal =:= 'ready-for-use' ->
<<0:1,10241:16>>;
ChoiceVal =:= 'working-normally' ->
<<0:1,10242:16>>;
ChoiceVal =:= 'working-autonomously' ->
<<0:1,10243:16>>;
ChoiceVal =:= 'working-incorrectly' ->
<<0:1,10244:16>>;
ChoiceVal =:= 'not-working' ->
<<0:1,10245:16>>;
ChoiceVal =:= 'normal-maintenance' ->
<<0:1,10246:16>>;
ChoiceVal =:= 'in-route-to-use' ->
<<0:1,10247:16>>;
ChoiceVal =:= 'returning-from-use' ->
<<0:1,10248:16>>;
ChoiceVal =:= 'out-of-service' ->
<<0:1,10249:16>>;
ChoiceVal =:= 'off-duty' ->
<<0:1,10250:16>>;
ChoiceVal =:= 'on-patrol' ->
<<0:1,10251:16>>;
ChoiceVal =:= 'on-call' ->
<<0:1,10252:16>>;
ChoiceVal =:= 'on-break' ->
<<0:1,10253:16>>;
ChoiceVal =:= 'mandatory-time-off' ->
<<0:1,10254:16>>;
ChoiceVal =:= 'low-on-fuel' ->
<<0:1,10255:16>>;
ChoiceVal =:= 'low-on-water' ->
<<0:1,10256:16>>;
ChoiceVal =:= 'low-charge' ->
<<0:1,10257:16>>;
ChoiceVal =:= missing ->
<<0:1,10258:16>>;
ChoiceVal =:= none ->
<<0:1,10496:16>>;
ChoiceVal =:= 'light-pole' ->
<<0:1,10497:16>>;
ChoiceVal =:= 'utility-pole' ->
<<0:1,10498:16>>;
ChoiceVal =:= 'gantry-way' ->
<<0:1,10499:16>>;
ChoiceVal =:= 'sign-support' ->
<<0:1,10500:16>>;
ChoiceVal =:= 'signal-pole' ->
<<0:1,10501:16>>;
ChoiceVal =:= 'signage-public' ->
<<0:1,10502:16>>;
ChoiceVal =:= 'signage-private' ->
<<0:1,10503:16>>;
ChoiceVal =:= cones ->
<<0:1,10504:16>>;
ChoiceVal =:= 'cones-post-type' ->
<<0:1,10505:16>>;
ChoiceVal =:= 'cones-glue-post' ->
<<0:1,10506:16>>;
ChoiceVal =:= 'cones-other' ->
<<0:1,10507:16>>;
ChoiceVal =:= barriers ->
<<0:1,10508:16>>;
ChoiceVal =:= 'barrier-Aframe' ->
<<0:1,10509:16>>;
ChoiceVal =:= 'barriers-heavy-duty' ->
<<0:1,10510:16>>;
ChoiceVal =:= 'barricade-type-III' ->
<<0:1,10511:16>>;
ChoiceVal =:= 'barricade-small' ->
<<0:1,10512:16>>;
ChoiceVal =:= 'barricade-lights' ->
<<0:1,10513:16>>;
ChoiceVal =:= beacon ->
<<0:1,10514:16>>;
ChoiceVal =:= 't-stand' ->
<<0:1,10515:16>>;
ChoiceVal =:= 'a-stand' ->
<<0:1,10516:16>>;
ChoiceVal =:= drums ->
<<0:1,10517:16>>;
ChoiceVal =:= 'impact-attenuator' ->
<<0:1,10518:16>>;
ChoiceVal =:= 'barricade-tape' ->
<<0:1,10519:16>>;
ChoiceVal =:= 'safety-fence' ->
<<0:1,10520:16>>;
ChoiceVal =:= 'temp-pavement-markings' ->
<<0:1,10521:16>>;
ChoiceVal =:= 'speed-bumps' ->
<<0:1,10522:16>>;
ChoiceVal =:= 'temp-curbs' ->
<<0:1,10523:16>>;
ChoiceVal =:= 'parking-blocks' ->
<<0:1,10524:16>>;
ChoiceVal =:= 'signboard-fixed' ->
<<0:1,10525:16>>;
ChoiceVal =:= 'signboard-portable' ->
<<0:1,10526:16>>;
ChoiceVal =:= har ->
<<0:1,10527:16>>;
ChoiceVal =:= 'har-AM' ->
<<0:1,10528:16>>;
ChoiceVal =:= 'har-FM' ->
<<0:1,10529:16>>;
ChoiceVal =:= 'har-DSRC' ->
<<0:1,10530:16>>;
ChoiceVal =:= 'traffic-light' ->
<<0:1,10531:16>>;
ChoiceVal =:= 'lane-control-signal' ->
<<0:1,10532:16>>;
ChoiceVal =:= 'traffic-detector' ->
<<0:1,10533:16>>;
ChoiceVal =:= 'vehicle-detector' ->
<<0:1,10534:16>>;
ChoiceVal =:= 'system-alarm' ->
<<0:1,10535:16>>;
ChoiceVal =:= 'arrow-board' ->
<<0:1,10536:16>>;
ChoiceVal =:= 'fixed-VMS' ->
<<0:1,10537:16>>;
ChoiceVal =:= 'mobile-VMS' ->
<<0:1,10538:16>>;
ChoiceVal =:= 'ramp-control' ->
<<0:1,10539:16>>;
ChoiceVal =:= 'gate-control' ->
<<0:1,10540:16>>;
ChoiceVal =:= 'temporary-traffic-light' ->
<<0:1,10541:16>>;
ChoiceVal =:= 'over-height-warning-system' ->
<<0:1,10542:16>>;
ChoiceVal =:= 'over-weight-warning-system' ->
<<0:1,10543:16>>;
ChoiceVal =:= 'emergency-telephones' ->
<<0:1,10544:16>>;
ChoiceVal =:= 'railroad-crossing-equipment' ->
<<0:1,10545:16>>;
ChoiceVal =:= 'tunnel-ventilation' ->
<<0:1,10546:16>>;
ChoiceVal =:= ccTV ->
<<0:1,10547:16>>;
ChoiceVal =:= 'environmental-sensor' ->
<<0:1,10548:16>>;
ChoiceVal =:= switch ->
<<0:1,10549:16>>;
ChoiceVal =:= signal ->
<<0:1,10550:16>>;
ChoiceVal =:= 'third-rail' ->
<<0:1,10551:16>>;
ChoiceVal =:= 'overhead-power' ->
<<0:1,10552:16>>;
ChoiceVal =:= 'concrete-tie' ->
<<0:1,10553:16>>;
ChoiceVal =:= 'wooden-tie' ->
<<0:1,10554:16>>;
ChoiceVal =:= escalator ->
<<0:1,10555:16>>;
ChoiceVal =:= elevator ->
<<0:1,10556:16>>;
ChoiceVal =:= track ->
<<0:1,10557:16>>;
ChoiceVal =:= drawbridge ->
<<0:1,10558:16>>;
ChoiceVal =:= 'manhole-cover' ->
<<0:1,10559:16>>;
ChoiceVal =:= culvert ->
<<0:1,10560:16>>;
ChoiceVal =:= 'snow-poles' ->
<<0:1,10561:16>>;
ChoiceVal =:= 'guide-poles' ->
<<0:1,10562:16>>;
ChoiceVal =:= 'expansion-joint' ->
<<0:1,10563:16>>;
ChoiceVal =:= 'shifted-plate' ->
<<0:1,10564:16>>;
ChoiceVal =:= 'solid-barrier' ->
<<0:1,10565:16>>;
ChoiceVal =:= 'moveable-barrier' ->
<<0:1,10566:16>>;
ChoiceVal =:= 'sand-barrel' ->
<<0:1,10567:16>>;
ChoiceVal =:= 'overhead-sign' ->
<<0:1,10568:16>>;
ChoiceVal =:= 'ground-sign' ->
<<0:1,10569:16>>;
ChoiceVal =:= 'emergency-signal' ->
<<0:1,10570:16>>;
ChoiceVal =:= 'countdown-pedestrian-sign' ->
<<0:1,10571:16>>;
ChoiceVal =:= stripe ->
<<0:1,10572:16>>;
ChoiceVal =:= island ->
<<0:1,10573:16>>;
ChoiceVal =:= 'unknown-transit-problem' ->
<<0:1,10753:16>>;
ChoiceVal =:= 'sleeping-customer' ->
<<0:1,10754:16>>;
ChoiceVal =:= 'assault-on-passenger' ->
<<0:1,10755:16>>;
ChoiceVal =:= 'assault-on-employee' ->
<<0:1,10756:16>>;
ChoiceVal =:= 'broken-seat' ->
<<0:1,10757:16>>;
ChoiceVal =:= 'bus-alarm' ->
<<0:1,10758:16>>;
ChoiceVal =:= 'crime-or-drug-deal' ->
<<0:1,10759:16>>;
ChoiceVal =:= 'eating-on-board' ->
<<0:1,10760:16>>;
ChoiceVal =:= 'equipment-problem-with-air-conditioning' ->
<<0:1,10761:16>>;
ChoiceVal =:= 'equipment-problem-with-air-system' ->
<<0:1,10762:16>>;
ChoiceVal =:= 'equipment-problem-with-brakes' ->
<<0:1,10763:16>>;
ChoiceVal =:= 'equipment-problem-with-chassis-or-suspension' ->
<<0:1,10764:16>>;
ChoiceVal =:= 'equipment-problem-with-cooling-system' ->
<<0:1,10765:16>>;
ChoiceVal =:= 'equipment-problem-with-doors' ->
<<0:1,10766:16>>;
ChoiceVal =:= 'equipment-problem-with-electrical' ->
<<0:1,10767:16>>;
ChoiceVal =:= 'equipment-problem-with-engine' ->
<<0:1,10768:16>>;
ChoiceVal =:= 'equipment-problem-with-exterior-or-body' ->
<<0:1,10769:16>>;
ChoiceVal =:= 'equipment-problem-with-fare-collection' ->
<<0:1,10770:16>>;
ChoiceVal =:= 'equipment-problem-with-fuel-or-exhaust' ->
<<0:1,10771:16>>;
ChoiceVal =:= 'equipment-problem-with-horn' ->
<<0:1,10772:16>>;
ChoiceVal =:= 'equipment-problem-with-interior' ->
<<0:1,10773:16>>;
ChoiceVal =:= 'equipment-problem-with-liftkneeling' ->
<<0:1,10774:16>>;
ChoiceVal =:= 'equipment-problem-with-lights' ->
<<0:1,10775:16>>;
ChoiceVal =:= 'equipment-problem-with-lubrication' ->
<<0:1,10776:16>>;
ChoiceVal =:= 'equipment-problem-with-radio-or-communication' ->
<<0:1,10777:16>>;
ChoiceVal =:= 'equipment-problem-with-signs' ->
<<0:1,10778:16>>;
ChoiceVal =:= 'equipment-problem-with-steering' ->
<<0:1,10779:16>>;
ChoiceVal =:= 'equipment-problem-with-tires' ->
<<0:1,10780:16>>;
ChoiceVal =:= 'equipment-problem-with-transmission' ->
<<0:1,10781:16>>;
ChoiceVal =:= 'equipment-problem-with-unknown-alarm' ->
<<0:1,10782:16>>;
ChoiceVal =:= 'equipment-problem-with-wipers' ->
<<0:1,10783:16>>;
ChoiceVal =:= 'fare-dispute-expired-pass' ->
<<0:1,10784:16>>;
ChoiceVal =:= 'fare-dispute-expired-transfer' ->
<<0:1,10785:16>>;
ChoiceVal =:= 'fare-dispute-expired-upgrade' ->
<<0:1,10786:16>>;
ChoiceVal =:= 'fare-dispute-other' ->
<<0:1,10787:16>>;
ChoiceVal =:= 'fare-dispute-refuses-to-pay' ->
<<0:1,10788:16>>;
ChoiceVal =:= 'lift-passenger-cycle-completed' ->
<<0:1,10789:16>>;
ChoiceVal =:= 'lift-passenger-ready-to-alight' ->
<<0:1,10790:16>>;
ChoiceVal =:= 'lift-passenger-ready-to-board' ->
<<0:1,10791:16>>;
ChoiceVal =:= 'lost-article' ->
<<0:1,10792:16>>;
ChoiceVal =:= 'objects-thrown' ->
<<0:1,10793:16>>;
ChoiceVal =:= 'passenger-accident-alighting' ->
<<0:1,10794:16>>;
ChoiceVal =:= 'passenger-accident-boarding' ->
<<0:1,10795:16>>;
ChoiceVal =:= 'passenger-accident-fallen-on-board' ->
<<0:1,10796:16>>;
ChoiceVal =:= 'passenger-load' ->
<<0:1,10797:16>>;
ChoiceVal =:= 'passenger-accident-other' ->
<<0:1,10798:16>>;
ChoiceVal =:= 'passenger-sick-or-injured' ->
<<0:1,10799:16>>;
ChoiceVal =:= 'right-of-way' ->
<<0:1,10800:16>>;
ChoiceVal =:= theft ->
<<0:1,10801:16>>;
ChoiceVal =:= 'theft-of-service' ->
<<0:1,10802:16>>;
ChoiceVal =:= 'waiting-to-get-relief-for-schedule-break' ->
<<0:1,10803:16>>;
ChoiceVal =:= 'waiting-to-get-relief-after-run-is-finished' ->
<<0:1,10804:16>>;
ChoiceVal =:= 'waiting-to-provide-relief' ->
<<0:1,10805:16>>;
ChoiceVal =:= 'unknown-object' ->
<<0:1,11009:16>>;
ChoiceVal =:= tire ->
<<0:1,11010:16>>;
ChoiceVal =:= rim ->
<<0:1,11011:16>>;
ChoiceVal =:= retread ->
<<0:1,11012:16>>;
ChoiceVal =:= trash ->
<<0:1,11013:16>>;
ChoiceVal =:= cargo ->
<<0:1,11014:16>>;
ChoiceVal =:= diesel ->
<<0:1,11015:16>>;
ChoiceVal =:= gasoline ->
<<0:1,11016:16>>;
ChoiceVal =:= 'anti-freeze' ->
<<0:1,11017:16>>;
ChoiceVal =:= 'seat-belts' ->
<<0:1,11018:16>>;
ChoiceVal =:= 'litter-container' ->
<<0:1,11019:16>>;
ChoiceVal =:= 'all-Terrain-vehicle' ->
<<0:1,11020:16>>;
ChoiceVal =:= seaplane ->
<<0:1,11021:16>>;
ChoiceVal =:= chairlift ->
<<0:1,11022:16>>;
ChoiceVal =:= 'fishing-pier' ->
<<0:1,11023:16>>;
ChoiceVal =:= 'railroad-cross-buck' ->
<<0:1,11024:16>>;
ChoiceVal =:= telephone ->
<<0:1,11025:16>>;
ChoiceVal =:= fallout ->
<<0:1,11026:16>>;
ChoiceVal =:= medical ->
<<0:1,11027:16>>;
ChoiceVal =:= chemical ->
<<0:1,11028:16>>;
ChoiceVal =:= welfare ->
<<0:1,11029:16>>;
ChoiceVal =:= evacuation ->
<<0:1,11030:16>>;
ChoiceVal =:= 'left-arrow-signal' ->
<<0:1,11031:16>>;
ChoiceVal =:= 'ahead-arrow-signal' ->
<<0:1,11032:16>>;
ChoiceVal =:= 'right-arrow-signal' ->
<<0:1,11033:16>>;
ChoiceVal =:= 'green-light-signal' ->
<<0:1,11034:16>>;
ChoiceVal =:= 'green-arrow-signal' ->
<<0:1,11035:16>>;
ChoiceVal =:= 'yellow-light-signal' ->
<<0:1,11036:16>>;
ChoiceVal =:= 'yellow-arrow-signal' ->
<<0:1,11037:16>>;
ChoiceVal =:= 'red-light-signal' ->
<<0:1,11038:16>>;
ChoiceVal =:= 'red-arrow-signal' ->
<<0:1,11039:16>>;
ChoiceVal =:= 'extended-green-signal' ->
<<0:1,11040:16>>;
ChoiceVal =:= 'advance-arrow-signal' ->
<<0:1,11041:16>>;
ChoiceVal =:= 'pedestrian-Signal-Stop' ->
<<0:1,11042:16>>;
ChoiceVal =:= 'pedestrian-Signal-Caution' ->
<<0:1,11043:16>>;
ChoiceVal =:= 'pedestrian-Signal-Walk' ->
<<0:1,11044:16>>;
ChoiceVal =:= 'pedestrian-Signal-Light' ->
<<0:1,11045:16>>;
ChoiceVal =:= 'pedestrian-Signal-Time-Display' ->
<<0:1,11046:16>>;
ChoiceVal =:= train ->
<<0:1,11047:16>>;
ChoiceVal =:= horn ->
<<0:1,11048:16>>;
ChoiceVal =:= deer ->
<<0:1,11049:16>>;
ChoiceVal =:= cattle ->
<<0:1,11050:16>>;
ChoiceVal =:= horse ->
<<0:1,11051:16>>;
ChoiceVal =:= 'golf-cart' ->
<<0:1,11052:16>>;
ChoiceVal =:= 'food-services' ->
<<0:1,11053:16>>;
ChoiceVal =:= 'ambulance-staging-point' ->
<<0:1,11054:16>>;
ChoiceVal =:= 'roadside-table' ->
<<0:1,11055:16>>;
ChoiceVal =:= services ->
<<0:1,11056:16>>;
ChoiceVal =:= 'motorist-services' ->
<<0:1,11059:16>>;
ChoiceVal =:= 'alternative-fuel' ->
<<0:1,11060:16>>;
ChoiceVal =:= 'propane-gas' ->
<<0:1,11061:16>>;
ChoiceVal =:= registration ->
<<0:1,11062:16>>;
ChoiceVal =:= decontamination ->
<<0:1,11063:16>>;
ChoiceVal =:= emergency ->
<<0:1,11064:16>>;
ChoiceVal =:= 'prohibit-None-Allowed-LU-LT-L45-S-R45-RT-RU' ->
<<0:1,11264:16>>;
ChoiceVal =:= 'prohibit-RU-Allowed-LU-LT-L45-S-R45-RT' ->
<<0:1,11265:16>>;
ChoiceVal =:= 'prohibit-RT-Allowed-LU-LT-L45-S-R45-RU' ->
<<0:1,11266:16>>;
ChoiceVal =:= 'prohibit-RT-RU-Allowed-LU-LT-L45-S-R45' ->
<<0:1,11267:16>>;
ChoiceVal =:= 'prohibit-R45-Allowed-LU-LT-L45-S-RT-RU' ->
<<0:1,11268:16>>;
ChoiceVal =:= 'prohibit-R45-RU-Allowed-LU-LT-L45-S-RT' ->
<<0:1,11269:16>>;
ChoiceVal =:= 'prohibit-R45-RT-Allowed-LU-LT-L45-S-RU' ->
<<0:1,11270:16>>;
ChoiceVal =:= 'prohibit-R45-RT-RU-Allowed-LU-LT-L45-S' ->
<<0:1,11271:16>>;
ChoiceVal =:= 'prohibit-S-Allowed-LU-LT-L45-R45-RT-RU' ->
<<0:1,11272:16>>;
ChoiceVal =:= 'prohibit-S-RU-Allowed-LU-LT-L45-R45-RT' ->
<<0:1,11273:16>>;
ChoiceVal =:= 'prohibit-S-RT-Allowed-LU-LT-L45-R45-RU' ->
<<0:1,11274:16>>;
ChoiceVal =:= 'prohibit-S-RT-RU-Allowed-LU-LT-L45-R45' ->
<<0:1,11275:16>>;
ChoiceVal =:= 'prohibit-S-R45-Allowed-LU-LT-L45-RT-RU' ->
<<0:1,11276:16>>;
ChoiceVal =:= 'prohibit-S-R45-RU-Allowed-LU-LT-L45-RT' ->
<<0:1,11277:16>>;
ChoiceVal =:= 'prohibit-S-R45-RT-Allowed-LU-LT-L45-RU' ->
<<0:1,11278:16>>;
ChoiceVal =:= 'prohibit-S-R45-RT-RU-Allowed-LU-LT-L45' ->
<<0:1,11279:16>>;
ChoiceVal =:= 'prohibit-L45-Allowed-LU-LT-S-R45-RT-RU' ->
<<0:1,11280:16>>;
ChoiceVal =:= 'prohibit-L45-RU-Allowed-LU-LT-S-R45-RT' ->
<<0:1,11281:16>>;
ChoiceVal =:= 'prohibit-L45-RT-Allowed-LU-LT-S-R45-RU' ->
<<0:1,11282:16>>;
ChoiceVal =:= 'prohibit-L45-RT-RU-Allowed-LU-LT-S-R45' ->
<<0:1,11283:16>>;
ChoiceVal =:= 'prohibit-L45-R45-Allowed-LU-LT-S-RT-RU' ->
<<0:1,11284:16>>;
ChoiceVal =:= 'prohibit-L45-R45-RU-Allowed-LU-LT-S-RT' ->
<<0:1,11285:16>>;
ChoiceVal =:= 'prohibit-L45-R45-RT-Allowed-LU-LT-S-RU' ->
<<0:1,11286:16>>;
ChoiceVal =:= 'prohibit-L45-R45-RT-RU-Allowed-LU-LT-S' ->
<<0:1,11287:16>>;
ChoiceVal =:= 'prohibit-L45-S-Allowed-LU-LT-R45-RT-RU' ->
<<0:1,11288:16>>;
ChoiceVal =:= 'prohibit-L45-S-RU-Allowed-LU-LT-R45-RT' ->
<<0:1,11289:16>>;
ChoiceVal =:= 'prohibit-L45-S-RT-Allowed-LU-LT-R45-RU' ->
<<0:1,11290:16>>;
ChoiceVal =:= 'prohibit-L45-S-RT-RU-Allowed-LU-LT-R45' ->
<<0:1,11291:16>>;
ChoiceVal =:= 'prohibit-L45-S-R45-Allowed-LU-LT-RT-RU' ->
<<0:1,11292:16>>;
ChoiceVal =:= 'prohibit-L45-S-R45-RU-Allowed-LU-LT-RT' ->
<<0:1,11293:16>>;
ChoiceVal =:= 'prohibit-L45-S-R45-RT-Allowed-LU-LT-RU' ->
<<0:1,11294:16>>;
ChoiceVal =:= 'prohibit-L45-S-R45-RT-RU-Allowed-LU-LT' ->
<<0:1,11295:16>>;
ChoiceVal =:= 'prohibit-LT-Allowed-LU-L45-S-R45-RT-RU' ->
<<0:1,11296:16>>;
ChoiceVal =:= 'prohibit-LT-RU-Allowed-LU-L45-S-R45-RT' ->
<<0:1,11297:16>>;
ChoiceVal =:= 'prohibit-LT-RT-Allowed-LU-L45-S-R45-RU' ->
<<0:1,11298:16>>;
ChoiceVal =:= 'prohibit-LT-RT-RU-Allowed-LU-L45-S-R45' ->
<<0:1,11299:16>>;
ChoiceVal =:= 'prohibit-LT-R45-Allowed-LU-L45-S-RT-RU' ->
<<0:1,11300:16>>;
ChoiceVal =:= 'prohibit-LT-R45-RU-Allowed-LU-L45-S-RT' ->
<<0:1,11301:16>>;
ChoiceVal =:= 'prohibit-LT-R45-RT-Allowed-LU-L45-S-RU' ->
<<0:1,11302:16>>;
ChoiceVal =:= 'prohibit-LT-R45-RT-RU-Allowed-LU-L45-S' ->
<<0:1,11303:16>>;
ChoiceVal =:= 'prohibit-LT-S-Allowed-LU-L45-R45-RT-RU' ->
<<0:1,11304:16>>;
ChoiceVal =:= 'prohibit-LT-S-RU-Allowed-LU-L45-R45-RT' ->
<<0:1,11305:16>>;
ChoiceVal =:= 'prohibit-LT-S-RT-Allowed-LU-L45-R45-RU' ->
<<0:1,11306:16>>;
ChoiceVal =:= 'prohibit-LT-S-RT-RU-Allowed-LU-L45-R45' ->
<<0:1,11307:16>>;
ChoiceVal =:= 'prohibit-LT-S-R45-Allowed-LU-L45-RT-RU' ->
<<0:1,11308:16>>;
ChoiceVal =:= 'prohibit-LT-S-R45-RU-Allowed-LU-L45-RT' ->
<<0:1,11309:16>>;
ChoiceVal =:= 'prohibit-LT-S-R45-RT-Allowed-LU-L45-RU' ->
<<0:1,11310:16>>;
ChoiceVal =:= 'prohibit-LT-S-R45-RT-RU-Allowed-LU-L45' ->
<<0:1,11311:16>>;
ChoiceVal =:= 'prohibit-LT-L45-Allowed-LU-S-R45-RT-RU' ->
<<0:1,11312:16>>;
ChoiceVal =:= 'prohibit-LT-L45-RU-Allowed-LU-S-R45-RT' ->
<<0:1,11313:16>>;
ChoiceVal =:= 'prohibit-LT-L45-RT-Allowed-LU-S-R45-RU' ->
<<0:1,11314:16>>;
ChoiceVal =:= 'prohibit-LT-L45-RT-RU-Allowed-LU-S-R45' ->
<<0:1,11315:16>>;
ChoiceVal =:= 'prohibit-LT-L45-R45-Allowed-LU-S-RT-RU' ->
<<0:1,11316:16>>;
ChoiceVal =:= 'prohibit-LT-L45-R45-RU-Allowed-LU-S-RT' ->
<<0:1,11317:16>>;
ChoiceVal =:= 'prohibit-LT-L45-R45-RT-Allowed-LU-S-RU' ->
<<0:1,11318:16>>;
ChoiceVal =:= 'prohibit-LT-L45-R45-RT-RU-Allowed-LU-S' ->
<<0:1,11319:16>>;
ChoiceVal =:= 'prohibit-LT-L45-S-Allowed-LU-R45-RT-RU' ->
<<0:1,11320:16>>;
ChoiceVal =:= 'prohibit-LT-L45-S-RU-Allowed-LU-R45-RT' ->
<<0:1,11321:16>>;
ChoiceVal =:= 'prohibit-LT-L45-S-RT-Allowed-LU-R45-RU' ->
<<0:1,11322:16>>;
ChoiceVal =:= 'prohibit-LT-L45-S-RT-RU-Allowed-LU-R45' ->
<<0:1,11323:16>>;
ChoiceVal =:= 'prohibit-LT-L45-S-R45-Allowed-LU-RT-RU' ->
<<0:1,11324:16>>;
ChoiceVal =:= 'prohibit-LT-L45-S-R45-RU-Allowed-LU-RT' ->
<<0:1,11325:16>>;
ChoiceVal =:= 'prohibit-LT-L45-S-R45-RT-Allowed-LU-RU' ->
<<0:1,11326:16>>;
ChoiceVal =:= 'prohibit-LT-L45-S-R45-RT-RU-Allowed-LU' ->
<<0:1,11327:16>>;
ChoiceVal =:= 'prohibit-LU-Allowed-LT-L45-S-R45-RT-RU' ->
<<0:1,11328:16>>;
ChoiceVal =:= 'prohibit-LU-RU-Allowed-LT-L45-S-R45-RT' ->
<<0:1,11329:16>>;
ChoiceVal =:= 'prohibit-LU-RT-Allowed-LT-L45-S-R45-RU' ->
<<0:1,11330:16>>;
ChoiceVal =:= 'prohibit-LU-RT-RU-Allowed-LT-L45-S-R45' ->
<<0:1,11331:16>>;
ChoiceVal =:= 'prohibit-LU-R45-Allowed-LT-L45-S-RT-RU' ->
<<0:1,11332:16>>;
ChoiceVal =:= 'prohibit-LU-R45-RU-Allowed-LT-L45-S-RT' ->
<<0:1,11333:16>>;
ChoiceVal =:= 'prohibit-LU-R45-RT-Allowed-LT-L45-S-RU' ->
<<0:1,11334:16>>;
ChoiceVal =:= 'prohibit-LU-R45-RT-RU-Allowed-LT-L45-S' ->
<<0:1,11335:16>>;
ChoiceVal =:= 'prohibit-LU-S-Allowed-LT-L45-R45-RT-RU' ->
<<0:1,11336:16>>;
ChoiceVal =:= 'prohibit-LU-S-RU-Allowed-LT-L45-R45-RT' ->
<<0:1,11337:16>>;
ChoiceVal =:= 'prohibit-LU-S-RT-Allowed-LT-L45-R45-RU' ->
<<0:1,11338:16>>;
ChoiceVal =:= 'prohibit-LU-S-RT-RU-Allowed-LT-L45-R45' ->
<<0:1,11339:16>>;
ChoiceVal =:= 'prohibit-LU-S-R45-Allowed-LT-L45-RT-RU' ->
<<0:1,11340:16>>;
ChoiceVal =:= 'prohibit-LU-S-R45-RU-Allowed-LT-L45-RT' ->
<<0:1,11341:16>>;
ChoiceVal =:= 'prohibit-LU-S-R45-RT-Allowed-LT-L45-RU' ->
<<0:1,11342:16>>;
ChoiceVal =:= 'prohibit-LU-S-R45-RT-RU-Allowed-LT-L45' ->
<<0:1,11343:16>>;
ChoiceVal =:= 'prohibit-LU-L45-Allowed-LT-S-R45-RT-RU' ->
<<0:1,11344:16>>;
ChoiceVal =:= 'prohibit-LU-L45-RU-Allowed-LT-S-R45-RT' ->
<<0:1,11345:16>>;
ChoiceVal =:= 'prohibit-LU-L45-RT-Allowed-LT-S-R45-RU' ->
<<0:1,11346:16>>;
ChoiceVal =:= 'prohibit-LU-L45-RT-RU-Allowed-LT-S-R45' ->
<<0:1,11347:16>>;
ChoiceVal =:= 'prohibit-LU-L45-R45-Allowed-LT-S-RT-RU' ->
<<0:1,11348:16>>;
ChoiceVal =:= 'prohibit-LU-L45-R45-RU-Allowed-LT-S-RT' ->
<<0:1,11349:16>>;
ChoiceVal =:= 'prohibit-LU-L45-R45-RT-Allowed-LT-S-RU' ->
<<0:1,11350:16>>;
ChoiceVal =:= 'prohibit-LU-L45-R45-RT-RU-Allowed-LT-S' ->
<<0:1,11351:16>>;
ChoiceVal =:= 'prohibit-LU-L45-S-Allowed-LT-R45-RT-RU' ->
<<0:1,11352:16>>;
ChoiceVal =:= 'prohibit-LU-L45-S-RU-Allowed-LT-R45-RT' ->
<<0:1,11353:16>>;
ChoiceVal =:= 'prohibit-LU-L45-S-RT-Allowed-LT-R45-RU' ->
<<0:1,11354:16>>;
ChoiceVal =:= 'prohibit-LU-L45-S-RT-RU-Allowed-LT-R45' ->
<<0:1,11355:16>>;
ChoiceVal =:= 'prohibit-LU-L45-S-R45-Allowed-LT-RT-RU' ->
<<0:1,11356:16>>;
ChoiceVal =:= 'prohibit-LU-L45-S-R45-RU-Allowed-LT-RT' ->
<<0:1,11357:16>>;
ChoiceVal =:= 'prohibit-LU-L45-S-R45-RT-Allowed-LT-RU' ->
<<0:1,11358:16>>;
ChoiceVal =:= 'prohibit-LU-L45-S-R45-RT-RU-Allowed-LT' ->
<<0:1,11359:16>>;
ChoiceVal =:= 'prohibit-LU-LT-Allowed-L45-S-R45-RT-RU' ->
<<0:1,11360:16>>;
ChoiceVal =:= 'prohibit-LU-LT-RU-Allowed-L45-S-R45-RT' ->
<<0:1,11361:16>>;
ChoiceVal =:= 'prohibit-LU-LT-RT-Allowed-L45-S-R45-RU' ->
<<0:1,11362:16>>;
ChoiceVal =:= 'prohibit-LU-LT-RT-RU-Allowed-L45-S-R45' ->
<<0:1,11363:16>>;
ChoiceVal =:= 'prohibit-LU-LT-R45-Allowed-L45-S-RT-RU' ->
<<0:1,11364:16>>;
ChoiceVal =:= 'prohibit-LU-LT-R45-RU-Allowed-L45-S-RT' ->
<<0:1,11365:16>>;
ChoiceVal =:= 'prohibit-LU-LT-R45-RT-Allowed-L45-S-RU' ->
<<0:1,11366:16>>;
ChoiceVal =:= 'prohibit-LU-LT-R45-RT-RU-Allowed-L45-S' ->
<<0:1,11367:16>>;
ChoiceVal =:= 'prohibit-LU-LT-S-Allowed-L45-R45-RT-RU' ->
<<0:1,11368:16>>;
ChoiceVal =:= 'prohibit-LU-LT-S-RU-Allowed-L45-R45-RT' ->
<<0:1,11369:16>>;
ChoiceVal =:= 'prohibit-LU-LT-S-RT-Allowed-L45-R45-RU' ->
<<0:1,11370:16>>;
ChoiceVal =:= 'prohibit-LU-LT-S-RT-RU-Allowed-L45-R45' ->
<<0:1,11371:16>>;
ChoiceVal =:= 'prohibit-LU-LT-S-R45-Allowed-L45-RT-RU' ->
<<0:1,11372:16>>;
ChoiceVal =:= 'prohibit-LU-LT-S-R45-RU-Allowed-L45-RT' ->
<<0:1,11373:16>>;
ChoiceVal =:= 'prohibit-LU-LT-S-R45-RT-Allowed-L45-RU' ->
<<0:1,11374:16>>;
ChoiceVal =:= 'prohibit-LU-LT-S-R45-RT-RU-Allowed-L45' ->
<<0:1,11375:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-Allowed-S-R45-RT-RU' ->
<<0:1,11376:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-RU-Allowed-S-R45-RT' ->
<<0:1,11377:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-RT-Allowed-S-R45-RU' ->
<<0:1,11378:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-RT-RU-Allowed-S-R45' ->
<<0:1,11379:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-R45-Allowed-S-RT-RU' ->
<<0:1,11380:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-R45-RU-Allowed-S-RT' ->
<<0:1,11381:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-R45-RT-Allowed-S-RU' ->
<<0:1,11382:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-R45-RT-RU-Allowed-S' ->
<<0:1,11383:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-S-Allowed-R45-RT-RU' ->
<<0:1,11384:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-S-RU-Allowed-R45-RT' ->
<<0:1,11385:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-S-RT-Allowed-R45-RU' ->
<<0:1,11386:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-S-RT-RU-Allowed-R45' ->
<<0:1,11387:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-S-R45-Allowed-RT-RU' ->
<<0:1,11388:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-S-R45-RU-Allowed-RT' ->
<<0:1,11389:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-S-R45-RT-Allowed-RU' ->
<<0:1,11390:16>>;
ChoiceVal =:= 'prohibit-LU-LT-L45-S-R45-RT-RU-Allowed-None' ->
<<0:1,11391:16>>;
ChoiceVal =:= 'n1-16th' ->
<<0:1,11521:16>>;
ChoiceVal =:= 'n1-10th' ->
<<0:1,11522:16>>;
ChoiceVal =:= 'n1-8th' ->
<<0:1,11523:16>>;
ChoiceVal =:= 'n1-4th' ->
<<0:1,11524:16>>;
ChoiceVal =:= 'n1-3rd' ->
<<0:1,11525:16>>;
ChoiceVal =:= 'n1-2' ->
<<0:1,11526:16>>;
ChoiceVal =:= 'n3-4' ->
<<0:1,11527:16>>;
ChoiceVal =:= n300 ->
<<0:1,11531:16>>;
ChoiceVal =:= n350 ->
<<0:1,11532:16>>;
ChoiceVal =:= n400 ->
<<0:1,11533:16>>;
ChoiceVal =:= n450 ->
<<0:1,11534:16>>;
ChoiceVal =:= n500 ->
<<0:1,11535:16>>;
ChoiceVal =:= n550 ->
<<0:1,11536:16>>;
ChoiceVal =:= n600 ->
<<0:1,11537:16>>;
ChoiceVal =:= n650 ->
<<0:1,11538:16>>;
ChoiceVal =:= n700 ->
<<0:1,11539:16>>;
ChoiceVal =:= n750 ->
<<0:1,11540:16>>;
ChoiceVal =:= n800 ->
<<0:1,11541:16>>;
ChoiceVal =:= n850 ->
<<0:1,11542:16>>;
ChoiceVal =:= n900 ->
<<0:1,11543:16>>;
ChoiceVal =:= n950 ->
<<0:1,11544:16>>;
ChoiceVal =:= n1000 ->
<<0:1,11545:16>>;
ChoiceVal =:= n1100 ->
<<0:1,11546:16>>;
ChoiceVal =:= n1200 ->
<<0:1,11547:16>>;
ChoiceVal =:= n1300 ->
<<0:1,11548:16>>;
ChoiceVal =:= n1400 ->
<<0:1,11549:16>>;
ChoiceVal =:= n1500 ->
<<0:1,11550:16>>;
ChoiceVal =:= n1600 ->
<<0:1,11551:16>>;
ChoiceVal =:= n1700 ->
<<0:1,11552:16>>;
ChoiceVal =:= n1800 ->
<<0:1,11553:16>>;
ChoiceVal =:= n1900 ->
<<0:1,11554:16>>;
ChoiceVal =:= n2000 ->
<<0:1,11555:16>>;
ChoiceVal =:= n2100 ->
<<0:1,11556:16>>;
ChoiceVal =:= n2200 ->
<<0:1,11557:16>>;
ChoiceVal =:= n2300 ->
<<0:1,11558:16>>;
ChoiceVal =:= n2400 ->
<<0:1,11559:16>>;
ChoiceVal =:= n2500 ->
<<0:1,11560:16>>;
ChoiceVal =:= n2600 ->
<<0:1,11561:16>>;
ChoiceVal =:= n2700 ->
<<0:1,11562:16>>;
ChoiceVal =:= n2800 ->
<<0:1,11563:16>>;
ChoiceVal =:= n2900 ->
<<0:1,11564:16>>;
ChoiceVal =:= n3000 ->
<<0:1,11565:16>>;
ChoiceVal =:= n3500 ->
<<0:1,11566:16>>;
ChoiceVal =:= n4000 ->
<<0:1,11567:16>>;
ChoiceVal =:= n4500 ->
<<0:1,11568:16>>;
ChoiceVal =:= n5000 ->
<<0:1,11569:16>>;
ChoiceVal =:= n5500 ->
<<0:1,11570:16>>;
ChoiceVal =:= n6000 ->
<<0:1,11571:16>>;
ChoiceVal =:= n6500 ->
<<0:1,11572:16>>;
ChoiceVal =:= n7000 ->
<<0:1,11573:16>>;
ChoiceVal =:= n7500 ->
<<0:1,11574:16>>;
ChoiceVal =:= n8000 ->
<<0:1,11575:16>>;
ChoiceVal =:= n8500 ->
<<0:1,11576:16>>;
ChoiceVal =:= n9000 ->
<<0:1,11577:16>>;
ChoiceVal =:= n9500 ->
<<0:1,11578:16>>;
ChoiceVal =:= n10000 ->
<<0:1,11579:16>>;
ChoiceVal =:= n11000 ->
<<0:1,11580:16>>;
ChoiceVal =:= n12000 ->
<<0:1,11581:16>>;
ChoiceVal =:= n13000 ->
<<0:1,11582:16>>;
ChoiceVal =:= n14000 ->
<<0:1,11583:16>>;
ChoiceVal =:= n15000 ->
<<0:1,11584:16>>;
ChoiceVal =:= n16000 ->
<<0:1,11585:16>>;
ChoiceVal =:= n17000 ->
<<0:1,11586:16>>;
ChoiceVal =:= n18000 ->
<<0:1,11587:16>>;
ChoiceVal =:= n19000 ->
<<0:1,11588:16>>;
ChoiceVal =:= n20000 ->
<<0:1,11589:16>>;
ChoiceVal =:= n21000 ->
<<0:1,11590:16>>;
ChoiceVal =:= n22000 ->
<<0:1,11591:16>>;
ChoiceVal =:= n23000 ->
<<0:1,11592:16>>;
ChoiceVal =:= n24000 ->
<<0:1,11593:16>>;
ChoiceVal =:= n25000 ->
<<0:1,11594:16>>;
ChoiceVal =:= n26000 ->
<<0:1,11595:16>>;
ChoiceVal =:= n27000 ->
<<0:1,11596:16>>;
ChoiceVal =:= n28000 ->
<<0:1,11597:16>>;
ChoiceVal =:= n29000 ->
<<0:1,11598:16>>;
ChoiceVal =:= n30000 ->
<<0:1,11599:16>>;
ChoiceVal =:= n35000 ->
<<0:1,11600:16>>;
ChoiceVal =:= n40000 ->
<<0:1,11601:16>>;
ChoiceVal =:= n45000 ->
<<0:1,11602:16>>;
ChoiceVal =:= n50000 ->
<<0:1,11603:16>>;
ChoiceVal =:= n55000 ->
<<0:1,11604:16>>;
ChoiceVal =:= n60000 ->
<<0:1,11605:16>>;
ChoiceVal =:= n65000 ->
<<0:1,11606:16>>;
ChoiceVal =:= n70000 ->
<<0:1,11607:16>>;
ChoiceVal =:= n75000 ->
<<0:1,11608:16>>;
ChoiceVal =:= n80000 ->
<<0:1,11609:16>>;
ChoiceVal =:= n85000 ->
<<0:1,11610:16>>;
ChoiceVal =:= n90000 ->
<<0:1,11611:16>>;
ChoiceVal =:= n95000 ->
<<0:1,11612:16>>;
ChoiceVal =:= n100000 ->
<<0:1,11613:16>>;
ChoiceVal =:= 'name-follows' ->
<<0:1,11777:16>>;
ChoiceVal =:= freeway ->
<<0:1,11778:16>>;
ChoiceVal =:= 'us-Route' ->
<<0:1,11779:16>>;
ChoiceVal =:= 'state-Route' ->
<<0:1,11780:16>>;
ChoiceVal =:= interstate ->
<<0:1,11781:16>>;
ChoiceVal =:= 'business-Loop' ->
<<0:1,11782:16>>;
ChoiceVal =:= alternative ->
<<0:1,11783:16>>;
ChoiceVal =:= 'county-Route' ->
<<0:1,11784:16>>;
ChoiceVal =:= 'forest-Route' ->
<<0:1,11785:16>>;
ChoiceVal =:= 'farm-to-Market-Route' ->
<<0:1,11786:16>>;
ChoiceVal =:= 'eisenhower-Interstate-System' ->
<<0:1,11787:16>>;
ChoiceVal =:= 'americas-Byways' ->
<<0:1,11788:16>>;
ChoiceVal =:= 'national-Network-Route' ->
<<0:1,11789:16>>;
ChoiceVal =:= 'scenic-Area' ->
<<0:1,11790:16>>;
ChoiceVal =:= 'parking-Area' ->
<<0:1,11791:16>>;
ChoiceVal =:= 'weight-Station' ->
<<0:1,11792:16>>;
ChoiceVal =:= road ->
<<0:1,11793:16>>;
ChoiceVal =:= exit ->
<<0:1,11794:16>>;
ChoiceVal =:= 'historical-route' ->
<<0:1,11795:16>>;
ChoiceVal =:= 'state-line' ->
<<0:1,11796:16>>;
ChoiceVal =:= spur ->
<<0:1,11797:16>>;
ChoiceVal =:= junction ->
<<0:1,11798:16>>;
ChoiceVal =:= 'bicycle-route' ->
<<0:1,11799:16>>;
ChoiceVal =:= 'bicycle-interstate-route' ->
<<0:1,11800:16>>;
ChoiceVal =:= 'national-park' ->
<<0:1,11801:16>>;
ChoiceVal =:= 'bear-viewing-area' ->
<<0:1,12033:16>>;
ChoiceVal =:= 'deer-viewing-area' ->
<<0:1,12034:16>>;
ChoiceVal =:= 'drinking-water' ->
<<0:1,12035:16>>;
ChoiceVal =:= 'environmental-study-area' ->
<<0:1,12036:16>>;
ChoiceVal =:= 'falling-rocks' ->
<<0:1,12037:16>>;
ChoiceVal =:= firearms ->
<<0:1,12038:16>>;
ChoiceVal =:= 'leashed-pets' ->
<<0:1,12039:16>>;
ChoiceVal =:= 'point-of-interest' ->
<<0:1,12040:16>>;
ChoiceVal =:= smoking ->
<<0:1,12041:16>>;
ChoiceVal =:= dog ->
<<0:1,12042:16>>;
ChoiceVal =:= 'tent-camping' ->
<<0:1,12043:16>>;
ChoiceVal =:= 'trailer-camping' ->
<<0:1,12044:16>>;
ChoiceVal =:= 'first-aid' ->
<<0:1,12045:16>>;
ChoiceVal =:= handicapped ->
<<0:1,12046:16>>;
ChoiceVal =:= mechanic ->
<<0:1,12047:16>>;
ChoiceVal =:= 'trailer-sanitary-station' ->
<<0:1,12048:16>>;
ChoiceVal =:= 'viewing-area' ->
<<0:1,12049:16>>;
ChoiceVal =:= campfire ->
<<0:1,12050:16>>;
ChoiceVal =:= locker ->
<<0:1,12051:16>>;
ChoiceVal =:= sleeping ->
<<0:1,12052:16>>;
ChoiceVal =:= trail ->
<<0:1,12053:16>>;
ChoiceVal =:= climbing ->
<<0:1,12054:16>>;
ChoiceVal =:= 'rock-climbing' ->
<<0:1,12055:16>>;
ChoiceVal =:= hunting ->
<<0:1,12056:16>>;
ChoiceVal =:= playground ->
<<0:1,12057:16>>;
ChoiceVal =:= 'rock-collecting' ->
<<0:1,12058:16>>;
ChoiceVal =:= spelunking ->
<<0:1,12059:16>>;
ChoiceVal =:= 'bicycle-trail' ->
<<0:1,12060:16>>;
ChoiceVal =:= 'hiking-trail' ->
<<0:1,12061:16>>;
ChoiceVal =:= 'horse-trail' ->
<<0:1,12062:16>>;
ChoiceVal =:= 'trail-interpretive-auto' ->
<<0:1,12063:16>>;
ChoiceVal =:= 'trail-interpretive-pedestrian' ->
<<0:1,12064:16>>;
ChoiceVal =:= 'trail-road-for-4WD-vehicles' ->
<<0:1,12065:16>>;
ChoiceVal =:= 'trail-for-trail-bikes' ->
<<0:1,12066:16>>;
ChoiceVal =:= archer ->
<<0:1,12067:16>>;
ChoiceVal =:= 'hang-glider' ->
<<0:1,12068:16>>;
ChoiceVal =:= 'boat-tours' ->
<<0:1,12069:16>>;
ChoiceVal =:= canoeing ->
<<0:1,12070:16>>;
ChoiceVal =:= diving ->
<<0:1,12071:16>>;
ChoiceVal =:= 'scuba-diving' ->
<<0:1,12072:16>>;
ChoiceVal =:= fishing ->
<<0:1,12073:16>>;
ChoiceVal =:= 'marine-recreation-area' ->
<<0:1,12074:16>>;
ChoiceVal =:= motorboating ->
<<0:1,12075:16>>;
ChoiceVal =:= 'boat-ramp' ->
<<0:1,12076:16>>;
ChoiceVal =:= rowboating ->
<<0:1,12077:16>>;
ChoiceVal =:= sailboating ->
<<0:1,12078:16>>;
ChoiceVal =:= 'water-skiing' ->
<<0:1,12079:16>>;
ChoiceVal =:= surfing ->
<<0:1,12080:16>>;
ChoiceVal =:= swimming ->
<<0:1,12081:16>>;
ChoiceVal =:= wading ->
<<0:1,12082:16>>;
ChoiceVal =:= 'hand-launch' ->
<<0:1,12083:16>>;
ChoiceVal =:= kayak ->
<<0:1,12084:16>>;
ChoiceVal =:= 'wind-surf' ->
<<0:1,12085:16>>;
ChoiceVal =:= 'ice-skating' ->
<<0:1,12086:16>>;
ChoiceVal =:= 'ski-jumping' ->
<<0:1,12087:16>>;
ChoiceVal =:= bobbing ->
<<0:1,12088:16>>;
ChoiceVal =:= 'cross-country-skiing' ->
<<0:1,12089:16>>;
ChoiceVal =:= 'downhill-skiing' ->
<<0:1,12090:16>>;
ChoiceVal =:= sledding ->
<<0:1,12091:16>>;
ChoiceVal =:= snowmobiling ->
<<0:1,12092:16>>;
ChoiceVal =:= snowshoeing ->
<<0:1,12093:16>>;
ChoiceVal =:= 'winter-recreation-area' ->
<<0:1,12094:16>>;
ChoiceVal =:= 'scenic-overlook' ->
<<0:1,12095:16>>;
ChoiceVal =:= 'regulatory-sign' ->
<<0:1,12289:16>>;
ChoiceVal =:= 'warning-sign' ->
<<0:1,12290:16>>;
ChoiceVal =:= 'information-sign' ->
<<0:1,12291:16>>;
ChoiceVal =:= 'construction-sign' ->
<<0:1,12292:16>>;
ChoiceVal =:= 'guide-sign' ->
<<0:1,12293:16>>;
ChoiceVal =:= stop ->
<<0:1,12294:16>>;
ChoiceVal =:= yield ->
<<0:1,12295:16>>;
ChoiceVal =:= 'to-oncoming-traffic' ->
<<0:1,12296:16>>;
ChoiceVal =:= 'four-way' ->
<<0:1,12297:16>>;
ChoiceVal =:= 'all-way' ->
<<0:1,12298:16>>;
ChoiceVal =:= zone ->
<<0:1,12299:16>>;
ChoiceVal =:= narrows ->
<<0:1,12300:16>>;
ChoiceVal =:= widens ->
<<0:1,12301:16>>;
ChoiceVal =:= reduced ->
<<0:1,12302:16>>;
ChoiceVal =:= combined ->
<<0:1,12303:16>>;
ChoiceVal =:= minimum ->
<<0:1,12304:16>>;
ChoiceVal =:= maximum ->
<<0:1,12305:16>>;
ChoiceVal =:= 'divided-road' ->
<<0:1,12306:16>>;
ChoiceVal =:= 'double-arrow' ->
<<0:1,12307:16>>;
ChoiceVal =:= 'dead-end' ->
<<0:1,12308:16>>;
ChoiceVal =:= 'no-outlet' ->
<<0:1,12309:16>>;
ChoiceVal =:= 'wrong-way' ->
<<0:1,12310:16>>;
ChoiceVal =:= nDetour ->
<<0:1,12312:16>>;
ChoiceVal =:= chevron ->
<<0:1,12313:16>>;
ChoiceVal =:= 'do-not-enter' ->
<<0:1,12314:16>>;
ChoiceVal =:= 't-intersection-to-the-side' ->
<<0:1,12315:16>>;
ChoiceVal =:= 't-intersection-oncoming' ->
<<0:1,12316:16>>;
ChoiceVal =:= 'y-intersection-to-the-side' ->
<<0:1,12317:16>>;
ChoiceVal =:= 'y-intersection-oncoming' ->
<<0:1,12318:16>>;
ChoiceVal =:= 'four-way-divided-highway-crossing' ->
<<0:1,12319:16>>;
ChoiceVal =:= 't-way-divided-highway-crossing' ->
<<0:1,12320:16>>;
ChoiceVal =:= 'light-rail-divided-highway-crossing' ->
<<0:1,12321:16>>;
ChoiceVal =:= 'light-rail-t-divided-highway-crossing' ->
<<0:1,12322:16>>;
ChoiceVal =:= 'side-road-to-right' ->
<<0:1,12323:16>>;
ChoiceVal =:= 'side-road-to-left' ->
<<0:1,12324:16>>;
ChoiceVal =:= 'side-road-to-right-at-angle' ->
<<0:1,12325:16>>;
ChoiceVal =:= 'side-road-to-left-at-angle' ->
<<0:1,12326:16>>;
ChoiceVal =:= 'entering-roadway-merge' ->
<<0:1,12327:16>>;
ChoiceVal =:= 'entering-roadway-added-lane' ->
<<0:1,12328:16>>;
ChoiceVal =:= 'one-way' ->
<<0:1,12329:16>>;
ChoiceVal =:= caution ->
<<0:1,12330:16>>;
ChoiceVal =:= temporary ->
<<0:1,12331:16>>;
ChoiceVal =:= n1 ->
<<0:1,12545:16>>;
ChoiceVal =:= n2 ->
<<0:1,12546:16>>;
ChoiceVal =:= n3 ->
<<0:1,12547:16>>;
ChoiceVal =:= n4 ->
<<0:1,12548:16>>;
ChoiceVal =:= n5 ->
<<0:1,12549:16>>;
ChoiceVal =:= n6 ->
<<0:1,12550:16>>;
ChoiceVal =:= n7 ->
<<0:1,12551:16>>;
ChoiceVal =:= n8 ->
<<0:1,12552:16>>;
ChoiceVal =:= n9 ->
<<0:1,12553:16>>;
ChoiceVal =:= n10 ->
<<0:1,12554:16>>;
ChoiceVal =:= n11 ->
<<0:1,12555:16>>;
ChoiceVal =:= n12 ->
<<0:1,12556:16>>;
ChoiceVal =:= n13 ->
<<0:1,12557:16>>;
ChoiceVal =:= n14 ->
<<0:1,12558:16>>;
ChoiceVal =:= n15 ->
<<0:1,12559:16>>;
ChoiceVal =:= n16 ->
<<0:1,12560:16>>;
ChoiceVal =:= n17 ->
<<0:1,12561:16>>;
ChoiceVal =:= n18 ->
<<0:1,12562:16>>;
ChoiceVal =:= n19 ->
<<0:1,12563:16>>;
ChoiceVal =:= n20 ->
<<0:1,12564:16>>;
ChoiceVal =:= n21 ->
<<0:1,12565:16>>;
ChoiceVal =:= n22 ->
<<0:1,12566:16>>;
ChoiceVal =:= n23 ->
<<0:1,12567:16>>;
ChoiceVal =:= n24 ->
<<0:1,12568:16>>;
ChoiceVal =:= n25 ->
<<0:1,12569:16>>;
ChoiceVal =:= n26 ->
<<0:1,12570:16>>;
ChoiceVal =:= n27 ->
<<0:1,12571:16>>;
ChoiceVal =:= n28 ->
<<0:1,12572:16>>;
ChoiceVal =:= n29 ->
<<0:1,12573:16>>;
ChoiceVal =:= n30 ->
<<0:1,12574:16>>;
ChoiceVal =:= n31 ->
<<0:1,12575:16>>;
ChoiceVal =:= n32 ->
<<0:1,12576:16>>;
ChoiceVal =:= n33 ->
<<0:1,12577:16>>;
ChoiceVal =:= n34 ->
<<0:1,12578:16>>;
ChoiceVal =:= n35 ->
<<0:1,12579:16>>;
ChoiceVal =:= n36 ->
<<0:1,12580:16>>;
ChoiceVal =:= n37 ->
<<0:1,12581:16>>;
ChoiceVal =:= n38 ->
<<0:1,12582:16>>;
ChoiceVal =:= n39 ->
<<0:1,12583:16>>;
ChoiceVal =:= n40 ->
<<0:1,12584:16>>;
ChoiceVal =:= n41 ->
<<0:1,12585:16>>;
ChoiceVal =:= n42 ->
<<0:1,12586:16>>;
ChoiceVal =:= n43 ->
<<0:1,12587:16>>;
ChoiceVal =:= n44 ->
<<0:1,12588:16>>;
ChoiceVal =:= n45 ->
<<0:1,12589:16>>;
ChoiceVal =:= n46 ->
<<0:1,12590:16>>;
ChoiceVal =:= n47 ->
<<0:1,12591:16>>;
ChoiceVal =:= n48 ->
<<0:1,12592:16>>;
ChoiceVal =:= n49 ->
<<0:1,12593:16>>;
ChoiceVal =:= n50 ->
<<0:1,12594:16>>;
ChoiceVal =:= n51 ->
<<0:1,12595:16>>;
ChoiceVal =:= n52 ->
<<0:1,12596:16>>;
ChoiceVal =:= n53 ->
<<0:1,12597:16>>;
ChoiceVal =:= n54 ->
<<0:1,12598:16>>;
ChoiceVal =:= n55 ->
<<0:1,12599:16>>;
ChoiceVal =:= n56 ->
<<0:1,12600:16>>;
ChoiceVal =:= n57 ->
<<0:1,12601:16>>;
ChoiceVal =:= n58 ->
<<0:1,12602:16>>;
ChoiceVal =:= n59 ->
<<0:1,12603:16>>;
ChoiceVal =:= n60 ->
<<0:1,12604:16>>;
ChoiceVal =:= n61 ->
<<0:1,12605:16>>;
ChoiceVal =:= n62 ->
<<0:1,12606:16>>;
ChoiceVal =:= n63 ->
<<0:1,12607:16>>;
ChoiceVal =:= n64 ->
<<0:1,12608:16>>;
ChoiceVal =:= n65 ->
<<0:1,12609:16>>;
ChoiceVal =:= n66 ->
<<0:1,12610:16>>;
ChoiceVal =:= n67 ->
<<0:1,12611:16>>;
ChoiceVal =:= n68 ->
<<0:1,12612:16>>;
ChoiceVal =:= n69 ->
<<0:1,12613:16>>;
ChoiceVal =:= n70 ->
<<0:1,12614:16>>;
ChoiceVal =:= n71 ->
<<0:1,12615:16>>;
ChoiceVal =:= n72 ->
<<0:1,12616:16>>;
ChoiceVal =:= n73 ->
<<0:1,12617:16>>;
ChoiceVal =:= n74 ->
<<0:1,12618:16>>;
ChoiceVal =:= n75 ->
<<0:1,12619:16>>;
ChoiceVal =:= n76 ->
<<0:1,12620:16>>;
ChoiceVal =:= n77 ->
<<0:1,12621:16>>;
ChoiceVal =:= n78 ->
<<0:1,12622:16>>;
ChoiceVal =:= n79 ->
<<0:1,12623:16>>;
ChoiceVal =:= n80 ->
<<0:1,12624:16>>;
ChoiceVal =:= n81 ->
<<0:1,12625:16>>;
ChoiceVal =:= n82 ->
<<0:1,12626:16>>;
ChoiceVal =:= n83 ->
<<0:1,12627:16>>;
ChoiceVal =:= n84 ->
<<0:1,12628:16>>;
ChoiceVal =:= n85 ->
<<0:1,12629:16>>;
ChoiceVal =:= n86 ->
<<0:1,12630:16>>;
ChoiceVal =:= n87 ->
<<0:1,12631:16>>;
ChoiceVal =:= n88 ->
<<0:1,12632:16>>;
ChoiceVal =:= n89 ->
<<0:1,12633:16>>;
ChoiceVal =:= n90 ->
<<0:1,12634:16>>;
ChoiceVal =:= n91 ->
<<0:1,12635:16>>;
ChoiceVal =:= n92 ->
<<0:1,12636:16>>;
ChoiceVal =:= n93 ->
<<0:1,12637:16>>;
ChoiceVal =:= n94 ->
<<0:1,12638:16>>;
ChoiceVal =:= n95 ->
<<0:1,12639:16>>;
ChoiceVal =:= n96 ->
<<0:1,12640:16>>;
ChoiceVal =:= n97 ->
<<0:1,12641:16>>;
ChoiceVal =:= n98 ->
<<0:1,12642:16>>;
ChoiceVal =:= n99 ->
<<0:1,12643:16>>;
ChoiceVal =:= n100 ->
<<0:1,12644:16>>;
ChoiceVal =:= n101 ->
<<0:1,12645:16>>;
ChoiceVal =:= n102 ->
<<0:1,12646:16>>;
ChoiceVal =:= n103 ->
<<0:1,12647:16>>;
ChoiceVal =:= n104 ->
<<0:1,12648:16>>;
ChoiceVal =:= n105 ->
<<0:1,12649:16>>;
ChoiceVal =:= n106 ->
<<0:1,12650:16>>;
ChoiceVal =:= n107 ->
<<0:1,12651:16>>;
ChoiceVal =:= n108 ->
<<0:1,12652:16>>;
ChoiceVal =:= n109 ->
<<0:1,12653:16>>;
ChoiceVal =:= n110 ->
<<0:1,12654:16>>;
ChoiceVal =:= n111 ->
<<0:1,12655:16>>;
ChoiceVal =:= n112 ->
<<0:1,12656:16>>;
ChoiceVal =:= n113 ->
<<0:1,12657:16>>;
ChoiceVal =:= n114 ->
<<0:1,12658:16>>;
ChoiceVal =:= n115 ->
<<0:1,12659:16>>;
ChoiceVal =:= n116 ->
<<0:1,12660:16>>;
ChoiceVal =:= n117 ->
<<0:1,12661:16>>;
ChoiceVal =:= n118 ->
<<0:1,12662:16>>;
ChoiceVal =:= n119 ->
<<0:1,12663:16>>;
ChoiceVal =:= n120 ->
<<0:1,12664:16>>;
ChoiceVal =:= n121 ->
<<0:1,12665:16>>;
ChoiceVal =:= n122 ->
<<0:1,12666:16>>;
ChoiceVal =:= n123 ->
<<0:1,12667:16>>;
ChoiceVal =:= n124 ->
<<0:1,12668:16>>;
ChoiceVal =:= n125 ->
<<0:1,12669:16>>;
ChoiceVal =:= n126 ->
<<0:1,12670:16>>;
ChoiceVal =:= n127 ->
<<0:1,12671:16>>;
ChoiceVal =:= n128 ->
<<0:1,12672:16>>;
ChoiceVal =:= n129 ->
<<0:1,12673:16>>;
ChoiceVal =:= n130 ->
<<0:1,12674:16>>;
ChoiceVal =:= n131 ->
<<0:1,12675:16>>;
ChoiceVal =:= n132 ->
<<0:1,12676:16>>;
ChoiceVal =:= n133 ->
<<0:1,12677:16>>;
ChoiceVal =:= n134 ->
<<0:1,12678:16>>;
ChoiceVal =:= n135 ->
<<0:1,12679:16>>;
ChoiceVal =:= n136 ->
<<0:1,12680:16>>;
ChoiceVal =:= n137 ->
<<0:1,12681:16>>;
ChoiceVal =:= n138 ->
<<0:1,12682:16>>;
ChoiceVal =:= n139 ->
<<0:1,12683:16>>;
ChoiceVal =:= n140 ->
<<0:1,12684:16>>;
ChoiceVal =:= n141 ->
<<0:1,12685:16>>;
ChoiceVal =:= n142 ->
<<0:1,12686:16>>;
ChoiceVal =:= n143 ->
<<0:1,12687:16>>;
ChoiceVal =:= n144 ->
<<0:1,12688:16>>;
ChoiceVal =:= n145 ->
<<0:1,12689:16>>;
ChoiceVal =:= n146 ->
<<0:1,12690:16>>;
ChoiceVal =:= n147 ->
<<0:1,12691:16>>;
ChoiceVal =:= n148 ->
<<0:1,12692:16>>;
ChoiceVal =:= n149 ->
<<0:1,12693:16>>;
ChoiceVal =:= n150 ->
<<0:1,12694:16>>;
ChoiceVal =:= n151 ->
<<0:1,12695:16>>;
ChoiceVal =:= n152 ->
<<0:1,12696:16>>;
ChoiceVal =:= n153 ->
<<0:1,12697:16>>;
ChoiceVal =:= n154 ->
<<0:1,12698:16>>;
ChoiceVal =:= n155 ->
<<0:1,12699:16>>;
ChoiceVal =:= n156 ->
<<0:1,12700:16>>;
ChoiceVal =:= n157 ->
<<0:1,12701:16>>;
ChoiceVal =:= n158 ->
<<0:1,12702:16>>;
ChoiceVal =:= n159 ->
<<0:1,12703:16>>;
ChoiceVal =:= n160 ->
<<0:1,12704:16>>;
ChoiceVal =:= n161 ->
<<0:1,12705:16>>;
ChoiceVal =:= n162 ->
<<0:1,12706:16>>;
ChoiceVal =:= n163 ->
<<0:1,12707:16>>;
ChoiceVal =:= n164 ->
<<0:1,12708:16>>;
ChoiceVal =:= n165 ->
<<0:1,12709:16>>;
ChoiceVal =:= n166 ->
<<0:1,12710:16>>;
ChoiceVal =:= n167 ->
<<0:1,12711:16>>;
ChoiceVal =:= n168 ->
<<0:1,12712:16>>;
ChoiceVal =:= n169 ->
<<0:1,12713:16>>;
ChoiceVal =:= n170 ->
<<0:1,12714:16>>;
ChoiceVal =:= n171 ->
<<0:1,12715:16>>;
ChoiceVal =:= n172 ->
<<0:1,12716:16>>;
ChoiceVal =:= n173 ->
<<0:1,12717:16>>;
ChoiceVal =:= n174 ->
<<0:1,12718:16>>;
ChoiceVal =:= n175 ->
<<0:1,12719:16>>;
ChoiceVal =:= n176 ->
<<0:1,12720:16>>;
ChoiceVal =:= n177 ->
<<0:1,12721:16>>;
ChoiceVal =:= n178 ->
<<0:1,12722:16>>;
ChoiceVal =:= n179 ->
<<0:1,12723:16>>;
ChoiceVal =:= n180 ->
<<0:1,12724:16>>;
ChoiceVal =:= n181 ->
<<0:1,12725:16>>;
ChoiceVal =:= n182 ->
<<0:1,12726:16>>;
ChoiceVal =:= n183 ->
<<0:1,12727:16>>;
ChoiceVal =:= n184 ->
<<0:1,12728:16>>;
ChoiceVal =:= n185 ->
<<0:1,12729:16>>;
ChoiceVal =:= n186 ->
<<0:1,12730:16>>;
ChoiceVal =:= n187 ->
<<0:1,12731:16>>;
ChoiceVal =:= n188 ->
<<0:1,12732:16>>;
ChoiceVal =:= n189 ->
<<0:1,12733:16>>;
ChoiceVal =:= n190 ->
<<0:1,12734:16>>;
ChoiceVal =:= n191 ->
<<0:1,12735:16>>;
ChoiceVal =:= n192 ->
<<0:1,12736:16>>;
ChoiceVal =:= n193 ->
<<0:1,12737:16>>;
ChoiceVal =:= n194 ->
<<0:1,12738:16>>;
ChoiceVal =:= n195 ->
<<0:1,12739:16>>;
ChoiceVal =:= n196 ->
<<0:1,12740:16>>;
ChoiceVal =:= n197 ->
<<0:1,12741:16>>;
ChoiceVal =:= n198 ->
<<0:1,12742:16>>;
ChoiceVal =:= n199 ->
<<0:1,12743:16>>;
ChoiceVal =:= n200 ->
<<0:1,12744:16>>;
ChoiceVal =:= n201 ->
<<0:1,12745:16>>;
ChoiceVal =:= n202 ->
<<0:1,12746:16>>;
ChoiceVal =:= n203 ->
<<0:1,12747:16>>;
ChoiceVal =:= n204 ->
<<0:1,12748:16>>;
ChoiceVal =:= n205 ->
<<0:1,12749:16>>;
ChoiceVal =:= n206 ->
<<0:1,12750:16>>;
ChoiceVal =:= n207 ->
<<0:1,12751:16>>;
ChoiceVal =:= n208 ->
<<0:1,12752:16>>;
ChoiceVal =:= n209 ->
<<0:1,12753:16>>;
ChoiceVal =:= n210 ->
<<0:1,12754:16>>;
ChoiceVal =:= n211 ->
<<0:1,12755:16>>;
ChoiceVal =:= n212 ->
<<0:1,12756:16>>;
ChoiceVal =:= n213 ->
<<0:1,12757:16>>;
ChoiceVal =:= n214 ->
<<0:1,12758:16>>;
ChoiceVal =:= n215 ->
<<0:1,12759:16>>;
ChoiceVal =:= n216 ->
<<0:1,12760:16>>;
ChoiceVal =:= n217 ->
<<0:1,12761:16>>;
ChoiceVal =:= n218 ->
<<0:1,12762:16>>;
ChoiceVal =:= n219 ->
<<0:1,12763:16>>;
ChoiceVal =:= n220 ->
<<0:1,12764:16>>;
ChoiceVal =:= n221 ->
<<0:1,12765:16>>;
ChoiceVal =:= n222 ->
<<0:1,12766:16>>;
ChoiceVal =:= n223 ->
<<0:1,12767:16>>;
ChoiceVal =:= n224 ->
<<0:1,12768:16>>;
ChoiceVal =:= n225 ->
<<0:1,12769:16>>;
ChoiceVal =:= n226 ->
<<0:1,12770:16>>;
ChoiceVal =:= n227 ->
<<0:1,12771:16>>;
ChoiceVal =:= n228 ->
<<0:1,12772:16>>;
ChoiceVal =:= n229 ->
<<0:1,12773:16>>;
ChoiceVal =:= n230 ->
<<0:1,12774:16>>;
ChoiceVal =:= n231 ->
<<0:1,12775:16>>;
ChoiceVal =:= n232 ->
<<0:1,12776:16>>;
ChoiceVal =:= n233 ->
<<0:1,12777:16>>;
ChoiceVal =:= n234 ->
<<0:1,12778:16>>;
ChoiceVal =:= n235 ->
<<0:1,12779:16>>;
ChoiceVal =:= n236 ->
<<0:1,12780:16>>;
ChoiceVal =:= n237 ->
<<0:1,12781:16>>;
ChoiceVal =:= n238 ->
<<0:1,12782:16>>;
ChoiceVal =:= n239 ->
<<0:1,12783:16>>;
ChoiceVal =:= n240 ->
<<0:1,12784:16>>;
ChoiceVal =:= n241 ->
<<0:1,12785:16>>;
ChoiceVal =:= n242 ->
<<0:1,12786:16>>;
ChoiceVal =:= n243 ->
<<0:1,12787:16>>;
ChoiceVal =:= n244 ->
<<0:1,12788:16>>;
ChoiceVal =:= n245 ->
<<0:1,12789:16>>;
ChoiceVal =:= n246 ->
<<0:1,12790:16>>;
ChoiceVal =:= n247 ->
<<0:1,12791:16>>;
ChoiceVal =:= n248 ->
<<0:1,12792:16>>;
ChoiceVal =:= n249 ->
<<0:1,12793:16>>;
ChoiceVal =:= n250 ->
<<0:1,12794:16>>;
ChoiceVal =:= n251 ->
<<0:1,12795:16>>;
ChoiceVal =:= n252 ->
<<0:1,12796:16>>;
ChoiceVal =:= n253 ->
<<0:1,12797:16>>;
ChoiceVal =:= n254 ->
<<0:1,12798:16>>;
ChoiceVal =:= n255 ->
<<0:1,12799:16>>;
ChoiceVal =:= alabama ->
<<0:1,12801:16>>;
ChoiceVal =:= alaska ->
<<0:1,12802:16>>;
ChoiceVal =:= 'american-Samoa' ->
<<0:1,12803:16>>;
ChoiceVal =:= arizona ->
<<0:1,12804:16>>;
ChoiceVal =:= arkansas ->
<<0:1,12805:16>>;
ChoiceVal =:= california ->
<<0:1,12806:16>>;
ChoiceVal =:= colorado ->
<<0:1,12807:16>>;
ChoiceVal =:= connecticut ->
<<0:1,12808:16>>;
ChoiceVal =:= delaware ->
<<0:1,12809:16>>;
ChoiceVal =:= 'district-of-Columbia' ->
<<0:1,12810:16>>;
ChoiceVal =:= florida ->
<<0:1,12811:16>>;
ChoiceVal =:= georgia ->
<<0:1,12812:16>>;
ChoiceVal =:= guam ->
<<0:1,12813:16>>;
ChoiceVal =:= hawaii ->
<<0:1,12814:16>>;
ChoiceVal =:= idaho ->
<<0:1,12815:16>>;
ChoiceVal =:= illinois ->
<<0:1,12816:16>>;
ChoiceVal =:= indiana ->
<<0:1,12817:16>>;
ChoiceVal =:= iowa ->
<<0:1,12818:16>>;
ChoiceVal =:= kansas ->
<<0:1,12819:16>>;
ChoiceVal =:= kentucky ->
<<0:1,12820:16>>;
ChoiceVal =:= louisiana ->
<<0:1,12821:16>>;
ChoiceVal =:= maine ->
<<0:1,12822:16>>;
ChoiceVal =:= maryland ->
<<0:1,12823:16>>;
ChoiceVal =:= massachusetts ->
<<0:1,12824:16>>;
ChoiceVal =:= michigan ->
<<0:1,12825:16>>;
ChoiceVal =:= minnesota ->
<<0:1,12826:16>>;
ChoiceVal =:= mississippi ->
<<0:1,12827:16>>;
ChoiceVal =:= missouri ->
<<0:1,12828:16>>;
ChoiceVal =:= montana ->
<<0:1,12829:16>>;
ChoiceVal =:= nebraska ->
<<0:1,12830:16>>;
ChoiceVal =:= nevada ->
<<0:1,12831:16>>;
ChoiceVal =:= 'new-Hampshire' ->
<<0:1,12832:16>>;
ChoiceVal =:= 'new-Jersey' ->
<<0:1,12833:16>>;
ChoiceVal =:= 'new-Mexico' ->
<<0:1,12834:16>>;
ChoiceVal =:= 'new-York' ->
<<0:1,12835:16>>;
ChoiceVal =:= 'north-Carolina' ->
<<0:1,12836:16>>;
ChoiceVal =:= 'north-Dakota' ->
<<0:1,12837:16>>;
ChoiceVal =:= 'northern-Marianas-Islands' ->
<<0:1,12838:16>>;
ChoiceVal =:= ohio ->
<<0:1,12839:16>>;
ChoiceVal =:= oklahoma ->
<<0:1,12840:16>>;
ChoiceVal =:= oregon ->
<<0:1,12841:16>>;
ChoiceVal =:= pennsylvania ->
<<0:1,12842:16>>;
ChoiceVal =:= 'puerto-rico' ->
<<0:1,12843:16>>;
ChoiceVal =:= 'rhode-Island' ->
<<0:1,12844:16>>;
ChoiceVal =:= 'south-Carolina' ->
<<0:1,12845:16>>;
ChoiceVal =:= 'south-Dakota' ->
<<0:1,12846:16>>;
ChoiceVal =:= tennessee ->
<<0:1,12847:16>>;
ChoiceVal =:= texas ->
<<0:1,12848:16>>;
ChoiceVal =:= utah ->
<<0:1,12849:16>>;
ChoiceVal =:= vermont ->
<<0:1,12850:16>>;
ChoiceVal =:= virginia ->
<<0:1,12851:16>>;
ChoiceVal =:= 'virgin-Islands' ->
<<0:1,12852:16>>;
ChoiceVal =:= washington ->
<<0:1,12853:16>>;
ChoiceVal =:= 'west-Virginia' ->
<<0:1,12854:16>>;
ChoiceVal =:= wisconsin ->
<<0:1,12855:16>>;
ChoiceVal =:= wyoming ->
<<0:1,12856:16>>;
ChoiceVal =:= 'rest-room' ->
<<0:1,13057:16>>;
ChoiceVal =:= 'mens-rest-room' ->
<<0:1,13058:16>>;
ChoiceVal =:= 'womens-rest-room' ->
<<0:1,13059:16>>;
ChoiceVal =:= 'family-rest-room' ->
<<0:1,13060:16>>;
ChoiceVal =:= dam ->
<<0:1,13061:16>>;
ChoiceVal =:= 'fish-hatchery' ->
<<0:1,13062:16>>;
ChoiceVal =:= information ->
<<0:1,13063:16>>;
ChoiceVal =:= lighthouse ->
<<0:1,13064:16>>;
ChoiceVal =:= 'lookout-tower' ->
<<0:1,13065:16>>;
ChoiceVal =:= 'ranger-station' ->
<<0:1,13066:16>>;
ChoiceVal =:= 'grocery-store' ->
<<0:1,13068:16>>;
ChoiceVal =:= lodging ->
<<0:1,13069:16>>;
ChoiceVal =:= 'post-office' ->
<<0:1,13070:16>>;
ChoiceVal =:= 'picnic-shelter' ->
<<0:1,13072:16>>;
ChoiceVal =:= 'group-camping' ->
<<0:1,13073:16>>;
ChoiceVal =:= 'group-picnicking' ->
<<0:1,13074:16>>;
ChoiceVal =:= 'n24-hour-pharmacy' ->
<<0:1,13075:16>>;
ChoiceVal =:= kennel ->
<<0:1,13076:16>>;
ChoiceVal =:= 'laundry-facilities' ->
<<0:1,13077:16>>;
ChoiceVal =:= 'shower-facilities' ->
<<0:1,13078:16>>;
ChoiceVal =:= amphitheater ->
<<0:1,13079:16>>;
ChoiceVal =:= stable ->
<<0:1,13080:16>>;
ChoiceVal =:= hospital ->
<<0:1,13081:16>>;
ChoiceVal =:= 'emergency-medical-service-point' ->
<<0:1,13082:16>>;
ChoiceVal =:= library ->
<<0:1,13083:16>>;
ChoiceVal =:= 'recycling-collection-center' ->
<<0:1,13084:16>>;
ChoiceVal =:= school ->
<<0:1,13085:16>>;
ChoiceVal =:= alley ->
<<0:1,13313:16>>;
ChoiceVal =:= annex ->
<<0:1,13314:16>>;
ChoiceVal =:= arcade ->
<<0:1,13315:16>>;
ChoiceVal =:= avenue ->
<<0:1,13316:16>>;
ChoiceVal =:= bayoo ->
<<0:1,13317:16>>;
ChoiceVal =:= beach ->
<<0:1,13318:16>>;
ChoiceVal =:= bend ->
<<0:1,13319:16>>;
ChoiceVal =:= bluff ->
<<0:1,13320:16>>;
ChoiceVal =:= bottom ->
<<0:1,13321:16>>;
ChoiceVal =:= boulevard ->
<<0:1,13322:16>>;
ChoiceVal =:= branch ->
<<0:1,13323:16>>;
ChoiceVal =:= nBridge ->
<<0:1,13324:16>>;
ChoiceVal =:= brook ->
<<0:1,13325:16>>;
ChoiceVal =:= burg ->
<<0:1,13326:16>>;
ChoiceVal =:= bypass ->
<<0:1,13327:16>>;
ChoiceVal =:= camp ->
<<0:1,13328:16>>;
ChoiceVal =:= canyon ->
<<0:1,13329:16>>;
ChoiceVal =:= cape ->
<<0:1,13330:16>>;
ChoiceVal =:= causeway ->
<<0:1,13331:16>>;
ChoiceVal =:= nCenter ->
<<0:1,13332:16>>;
ChoiceVal =:= circle ->
<<0:1,13333:16>>;
ChoiceVal =:= cliff ->
<<0:1,13334:16>>;
ChoiceVal =:= club ->
<<0:1,13335:16>>;
ChoiceVal =:= common ->
<<0:1,13336:16>>;
ChoiceVal =:= corner ->
<<0:1,13337:16>>;
ChoiceVal =:= course ->
<<0:1,13338:16>>;
ChoiceVal =:= court ->
<<0:1,13339:16>>;
ChoiceVal =:= cove ->
<<0:1,13340:16>>;
ChoiceVal =:= creek ->
<<0:1,13341:16>>;
ChoiceVal =:= crescent ->
<<0:1,13342:16>>;
ChoiceVal =:= crest ->
<<0:1,13343:16>>;
ChoiceVal =:= nCrossing ->
<<0:1,13344:16>>;
ChoiceVal =:= crossroad ->
<<0:1,13345:16>>;
ChoiceVal =:= curve ->
<<0:1,13346:16>>;
ChoiceVal =:= dale ->
<<0:1,13347:16>>;
ChoiceVal =:= nDam ->
<<0:1,13348:16>>;
ChoiceVal =:= divide ->
<<0:1,13349:16>>;
ChoiceVal =:= drive ->
<<0:1,13350:16>>;
ChoiceVal =:= estate ->
<<0:1,13351:16>>;
ChoiceVal =:= expressway ->
<<0:1,13352:16>>;
ChoiceVal =:= extension ->
<<0:1,13353:16>>;
ChoiceVal =:= fall ->
<<0:1,13354:16>>;
ChoiceVal =:= nFerry ->
<<0:1,13355:16>>;
ChoiceVal =:= field ->
<<0:1,13356:16>>;
ChoiceVal =:= flat ->
<<0:1,13357:16>>;
ChoiceVal =:= ford ->
<<0:1,13358:16>>;
ChoiceVal =:= forest ->
<<0:1,13359:16>>;
ChoiceVal =:= forge ->
<<0:1,13360:16>>;
ChoiceVal =:= fork ->
<<0:1,13361:16>>;
ChoiceVal =:= fort ->
<<0:1,13362:16>>;
ChoiceVal =:= nFreeway ->
<<0:1,13363:16>>;
ChoiceVal =:= garden ->
<<0:1,13364:16>>;
ChoiceVal =:= gateway ->
<<0:1,13365:16>>;
ChoiceVal =:= glen ->
<<0:1,13366:16>>;
ChoiceVal =:= green ->
<<0:1,13367:16>>;
ChoiceVal =:= grove ->
<<0:1,13368:16>>;
ChoiceVal =:= harbor ->
<<0:1,13369:16>>;
ChoiceVal =:= haven ->
<<0:1,13370:16>>;
ChoiceVal =:= heights ->
<<0:1,13371:16>>;
ChoiceVal =:= highway ->
<<0:1,13372:16>>;
ChoiceVal =:= nHill ->
<<0:1,13373:16>>;
ChoiceVal =:= hollow ->
<<0:1,13374:16>>;
ChoiceVal =:= inlet ->
<<0:1,13375:16>>;
ChoiceVal =:= nIsland ->
<<0:1,13376:16>>;
ChoiceVal =:= isle ->
<<0:1,13377:16>>;
ChoiceVal =:= nJunction ->
<<0:1,13378:16>>;
ChoiceVal =:= key ->
<<0:1,13379:16>>;
ChoiceVal =:= knoll ->
<<0:1,13380:16>>;
ChoiceVal =:= lake ->
<<0:1,13381:16>>;
ChoiceVal =:= land ->
<<0:1,13382:16>>;
ChoiceVal =:= landing ->
<<0:1,13383:16>>;
ChoiceVal =:= nLane ->
<<0:1,13384:16>>;
ChoiceVal =:= light ->
<<0:1,13385:16>>;
ChoiceVal =:= loaf ->
<<0:1,13386:16>>;
ChoiceVal =:= lock ->
<<0:1,13387:16>>;
ChoiceVal =:= lodge ->
<<0:1,13388:16>>;
ChoiceVal =:= loop ->
<<0:1,13389:16>>;
ChoiceVal =:= mall ->
<<0:1,13390:16>>;
ChoiceVal =:= manor ->
<<0:1,13391:16>>;
ChoiceVal =:= meadow ->
<<0:1,13392:16>>;
ChoiceVal =:= mews ->
<<0:1,13393:16>>;
ChoiceVal =:= mill ->
<<0:1,13394:16>>;
ChoiceVal =:= mission ->
<<0:1,13395:16>>;
ChoiceVal =:= motorway ->
<<0:1,13396:16>>;
ChoiceVal =:= mount ->
<<0:1,13397:16>>;
ChoiceVal =:= mountain ->
<<0:1,13398:16>>;
ChoiceVal =:= neck ->
<<0:1,13399:16>>;
ChoiceVal =:= orchard ->
<<0:1,13400:16>>;
ChoiceVal =:= oval ->
<<0:1,13401:16>>;
ChoiceVal =:= nOverpass ->
<<0:1,13402:16>>;
ChoiceVal =:= park ->
<<0:1,13403:16>>;
ChoiceVal =:= parkway ->
<<0:1,13404:16>>;
ChoiceVal =:= nPass ->
<<0:1,13405:16>>;
ChoiceVal =:= passage ->
<<0:1,13406:16>>;
ChoiceVal =:= path ->
<<0:1,13407:16>>;
ChoiceVal =:= pike ->
<<0:1,13408:16>>;
ChoiceVal =:= pine ->
<<0:1,13409:16>>;
ChoiceVal =:= plains ->
<<0:1,13410:16>>;
ChoiceVal =:= plaza ->
<<0:1,13411:16>>;
ChoiceVal =:= point ->
<<0:1,13412:16>>;
ChoiceVal =:= port ->
<<0:1,13413:16>>;
ChoiceVal =:= prairie ->
<<0:1,13414:16>>;
ChoiceVal =:= radial ->
<<0:1,13415:16>>;
ChoiceVal =:= ramp ->
<<0:1,13416:16>>;
ChoiceVal =:= ranch ->
<<0:1,13417:16>>;
ChoiceVal =:= rapid ->
<<0:1,13418:16>>;
ChoiceVal =:= rest ->
<<0:1,13419:16>>;
ChoiceVal =:= ridge ->
<<0:1,13420:16>>;
ChoiceVal =:= river ->
<<0:1,13421:16>>;
ChoiceVal =:= nRoad ->
<<0:1,13422:16>>;
ChoiceVal =:= route ->
<<0:1,13423:16>>;
ChoiceVal =:= row ->
<<0:1,13424:16>>;
ChoiceVal =:= rue ->
<<0:1,13425:16>>;
ChoiceVal =:= run ->
<<0:1,13426:16>>;
ChoiceVal =:= shoal ->
<<0:1,13427:16>>;
ChoiceVal =:= shore ->
<<0:1,13428:16>>;
ChoiceVal =:= skyway ->
<<0:1,13429:16>>;
ChoiceVal =:= spring ->
<<0:1,13430:16>>;
ChoiceVal =:= nSpur ->
<<0:1,13431:16>>;
ChoiceVal =:= square ->
<<0:1,13432:16>>;
ChoiceVal =:= nStation ->
<<0:1,13433:16>>;
ChoiceVal =:= stravenue ->
<<0:1,13434:16>>;
ChoiceVal =:= stream ->
<<0:1,13435:16>>;
ChoiceVal =:= street ->
<<0:1,13436:16>>;
ChoiceVal =:= summit ->
<<0:1,13437:16>>;
ChoiceVal =:= terrace ->
<<0:1,13438:16>>;
ChoiceVal =:= throughway ->
<<0:1,13439:16>>;
ChoiceVal =:= trace ->
<<0:1,13440:16>>;
ChoiceVal =:= nTrack ->
<<0:1,13441:16>>;
ChoiceVal =:= trafficway ->
<<0:1,13442:16>>;
ChoiceVal =:= nTrail ->
<<0:1,13443:16>>;
ChoiceVal =:= nTunnel ->
<<0:1,13444:16>>;
ChoiceVal =:= turnpike ->
<<0:1,13445:16>>;
ChoiceVal =:= nUnderpass ->
<<0:1,13446:16>>;
ChoiceVal =:= union ->
<<0:1,13447:16>>;
ChoiceVal =:= valley ->
<<0:1,13448:16>>;
ChoiceVal =:= viaduct ->
<<0:1,13449:16>>;
ChoiceVal =:= view ->
<<0:1,13450:16>>;
ChoiceVal =:= village ->
<<0:1,13451:16>>;
ChoiceVal =:= ville ->
<<0:1,13452:16>>;
ChoiceVal =:= vista ->
<<0:1,13453:16>>;
ChoiceVal =:= nWalk ->
<<0:1,13454:16>>;
ChoiceVal =:= wall ->
<<0:1,13455:16>>;
ChoiceVal =:= way ->
<<0:1,13456:16>>;
ChoiceVal =:= well ->
<<0:1,13457:16>>;
ChoiceVal =:= ahead ->
<<0:1,13569:16>>;
ChoiceVal =:= here ->
<<0:1,13570:16>>;
ChoiceVal =:= 'here-to' ->
<<0:1,13571:16>>;
ChoiceVal =:= 'here-to-alley' ->
<<0:1,13572:16>>;
ChoiceVal =:= 'here-to-corner' ->
<<0:1,13573:16>>;
ChoiceVal =:= 'here-to-sign' ->
<<0:1,13574:16>>;
ChoiceVal =:= 'between-signs' ->
<<0:1,13575:16>>;
ChoiceVal =:= 'this-side-of-street' ->
<<0:1,13576:16>>;
ChoiceVal =:= 'this-side-of-sign' ->
<<0:1,13577:16>>;
ChoiceVal =:= right ->
<<0:1,13579:16>>;
ChoiceVal =:= left ->
<<0:1,13580:16>>;
ChoiceVal =:= 'begin-point' ->
<<0:1,13581:16>>;
ChoiceVal =:= next ->
<<0:1,13582:16>>;
ChoiceVal =:= 'ends-end' ->
<<0:1,13583:16>>;
ChoiceVal =:= 'other-Side' ->
<<0:1,13584:16>>;
ChoiceVal =:= crossing ->
<<0:1,13585:16>>;
ChoiceVal =:= crosswalks ->
<<0:1,13586:16>>;
ChoiceVal =:= 'center-strip' ->
<<0:1,13587:16>>;
ChoiceVal =:= lane ->
<<0:1,13588:16>>;
ChoiceVal =:= hill ->
<<0:1,13589:16>>;
ChoiceVal =:= 'both-ways-left-and-right' ->
<<0:1,13590:16>>;
ChoiceVal =:= 'both-ways-45-degree-angle-tilting-right' ->
<<0:1,13591:16>>;
ChoiceVal =:= 'both-ways-45-degree-angle-tilting-left' ->
<<0:1,13592:16>>;
ChoiceVal =:= 'both-directions-of-travel' ->
<<0:1,13593:16>>;
ChoiceVal =:= 'left-turn' ->
<<0:1,13594:16>>;
ChoiceVal =:= 'left-45-degree-arrow' ->
<<0:1,13595:16>>;
ChoiceVal =:= 'left-45-degree-turn' ->
<<0:1,13596:16>>;
ChoiceVal =:= 'ahead-and-to-the-left' ->
<<0:1,13597:16>>;
ChoiceVal =:= 'ahead-and-to-the-left-at-a-45-degree-angle' ->
<<0:1,13598:16>>;
ChoiceVal =:= 'right-turn' ->
<<0:1,13599:16>>;
ChoiceVal =:= 'right-45-degree-arrow' ->
<<0:1,13600:16>>;
ChoiceVal =:= 'right-45-degree-turn' ->
<<0:1,13601:16>>;
ChoiceVal =:= 'ahead-and-to-the-right' ->
<<0:1,13602:16>>;
ChoiceVal =:= 'ahead-and-to-the-right-at-a-45-degree-angle' ->
<<0:1,13603:16>>;
ChoiceVal =:= 'downward-left-45-degree' ->
<<0:1,13604:16>>;
ChoiceVal =:= 'downward-right-45-degree' ->
<<0:1,13605:16>>;
ChoiceVal =:= 'downward-left-and-right-45-degree' ->
<<0:1,13606:16>>;
ChoiceVal =:= 'right-arrow' ->
<<0:1,13609:16>>;
ChoiceVal =:= 'left-arrow' ->
<<0:1,13610:16>>;
ChoiceVal =:= 'starting-start' ->
<<0:1,13611:16>>;
ChoiceVal =:= 'chevron-right' ->
<<0:1,13613:16>>;
ChoiceVal =:= 'chevron-left' ->
<<0:1,13614:16>>;
ChoiceVal =:= 'right-turn-with-junction' ->
<<0:1,13615:16>>;
ChoiceVal =:= 'left-turn-with-junction' ->
<<0:1,13616:16>>;
ChoiceVal =:= 'hairpin-right' ->
<<0:1,13617:16>>;
ChoiceVal =:= 'hairpin-left' ->
<<0:1,13618:16>>;
ChoiceVal =:= 'truck-rollover-right' ->
<<0:1,13619:16>>;
ChoiceVal =:= 'truck-rollover-left' ->
<<0:1,13620:16>>;
ChoiceVal =:= 'n270-degree-turn-right' ->
<<0:1,13621:16>>;
ChoiceVal =:= 'n270-degree-turn-left' ->
<<0:1,13622:16>>;
ChoiceVal =:= 'two-lane-reverse-curve-to-right' ->
<<0:1,13623:16>>;
ChoiceVal =:= 'two-lane-reverse-curve-to-left' ->
<<0:1,13624:16>>;
ChoiceVal =:= 'three-lane-reverse-curve-to-right' ->
<<0:1,13625:16>>;
ChoiceVal =:= 'three-lane-reverse-curve-to-left' ->
<<0:1,13626:16>>;
ChoiceVal =:= 'double-reverse-curve-to-right' ->
<<0:1,13627:16>>;
ChoiceVal =:= 'double-reverse-curve-to-left' ->
<<0:1,13628:16>>;
ChoiceVal =:= 'two-lane-double-reverse-curve-to-right' ->
<<0:1,13629:16>>;
ChoiceVal =:= 'two-lane-double-reverse-curve-to-left' ->
<<0:1,13630:16>>;
ChoiceVal =:= 'three-lane-double-reverse-curve-to-right' ->
<<0:1,13631:16>>;
ChoiceVal =:= 'three-lane-double-reverse-curve-to-left' ->
<<0:1,13632:16>>;
ChoiceVal =:= between ->
<<0:1,13633:16>>;
ChoiceVal =:= shelter ->
<<0:1,13634:16>>;
ChoiceVal =:= center ->
<<0:1,13635:16>>;
ChoiceVal =:= 'reverse-turn-to-right' ->
<<0:1,13636:16>>;
ChoiceVal =:= 'reverse-turn-to-left' ->
<<0:1,13637:16>>;
ChoiceVal =:= 'reverse-curve-to-right' ->
<<0:1,13638:16>>;
ChoiceVal =:= 'reverse-curve-to-left' ->
<<0:1,13639:16>>;
ChoiceVal =:= 'winding-road-to-right' ->
<<0:1,13640:16>>;
ChoiceVal =:= 'winding-road-to-left' ->
<<0:1,13641:16>>;
ChoiceVal bsr 16 =:= 0 ->
<<0:1,ChoiceVal:16>>;
true ->
exit({error,{asn1,{illegal_integer,ChoiceVal}}})
end;
ChoiceTag =:= text ->
begin
Enc4@len = length(ChoiceVal),
Enc4@bin = encode_chars(ChoiceVal, 7),
Enc4@len@sub = Enc4@len - 1,
if 0 =< Enc4@len@sub, Enc4@len@sub < 500 ->
[<<1:1,Enc4@len@sub:9>>|Enc4@bin]
end
end
end.


dec_ITIScodesAndText(Bytes) ->
%% Length with constraint {1,100}
<<V1@V0:7,V1@Buf1/bitstring>> = Bytes,
V1@Add2 = V1@V0 + 1,
dec_components1(V1@Add2, V1@Buf1, []).


dec_ITIScodesAndText_SEQOF(Bytes) ->

%% attribute item(1) with type CHOICE
{Term1,Bytes1} = dec_ITIScodesAndText_SEQOF_item(Bytes),
Res1 = {'ITIScodesAndText_SEQOF',Term1},
{Res1,Bytes1}.


dec_ITIScodesAndText_SEQOF_item(Bytes) ->
{Choice,Bytes1} = 
begin
<<V1@V0:1,V1@Buf1/bitstring>> = Bytes,
{V1@V0,V1@Buf1}
end,
case Choice of
0 ->
{Val,NewBytes} = begin
begin
<<V2@V0:16,V2@Buf1/bitstring>> = Bytes1,
V2@Int2 = case V2@V0 of
257 -> 'stopped-traffic';
258 -> 'stop-and-go-traffic';
259 -> 'slow-traffic';
260 -> 'heavy-traffic';
261 -> 'traffic-building';
262 -> 'long-queues';
263 -> 'traffic-congestion';
264 -> 'traffic-lighter-than-normal';
265 -> 'traffic-heavier-than-normal';
266 -> 'traffic-much-heavier-than-normal';
267 -> 'current-speed';
268 -> 'speed-limit';
269 -> 'travel-time';
272 -> 'merging-traffic';
273 -> contraflow;
378 -> 'contraflow-canceled';
379 -> 'traffic-flowing-freely';
380 -> 'traffic-easing';
381 -> 'traffic-returned-to-normal';
382 -> 'no-problems-to-report';
383 -> 'traffic-congestion-cleared';
513 -> accident;
514 -> 'serious-accident';
515 -> 'injury-accident';
516 -> 'minor-accident';
517 -> 'multi-vehicle-accident';
518 -> 'numerous-accidents';
519 -> 'accident-involving-a-bicycle';
520 -> 'accident-involving-a-bus';
521 -> 'accident-involving-a-motorcycle';
522 -> 'accident-involving-a-pedestrian';
523 -> 'accident-involving-a-train';
524 -> 'accident-involving-a-truck';
525 -> 'accident-involving-hazardous-materials';
526 -> 'earlier-accident';
527 -> 'medical-emergency';
528 -> 'secondary-accident';
529 -> 'rescue-and-recovery-work-REMOVED';
530 -> 'accident-investigation-work';
531 -> incident;
532 -> 'stalled-vehicle';
533 -> 'abandoned-vehicle';
534 -> 'disabled-vehicle';
535 -> 'disabled-truck';
536 -> 'disabled-semi-trailer';
537 -> 'disabled-bus';
538 -> 'disabled-train';
539 -> 'vehicle-spun-out';
540 -> 'vehicle-on-fire';
541 -> 'vehicle-in-water';
542 -> 'vehicles-slowing-to-look-at-accident';
543 -> 'jackknifed-semi-trailer';
544 -> 'jackknifed-trailer-home';
545 -> 'jackknifed-trailer';
546 -> 'spillage-occurring-from-moving-vehicle';
547 -> 'acid-spill';
548 -> 'chemical-spill';
549 -> 'fuel-spill';
550 -> 'hazardous-materials-spill';
551 -> 'oil-spill';
552 -> 'spilled-load';
553 -> 'toxic-spill';
554 -> 'overturned-vehicle';
555 -> 'overturned-truck';
556 -> 'overturned-semi-trailer';
557 -> 'overturned-bus';
558 -> 'derailed-train';
559 -> 'stuck-vehicle';
560 -> 'truck-stuck-under-bridge';
561 -> 'bus-stuck-under-bridge';
562 -> 'accident-involving-a-semi-trailer';
638 -> 'accident-cleared';
639 -> 'incident-cleared';
769 -> 'closed-to-traffic';
770 -> closed;
771 -> 'closed-ahead';
772 -> 'closed-intermittently';
773 -> 'closed-for-repairs';
774 -> 'closed-for-the-season';
775 -> blocked;
776 -> 'blocked-ahead';
777 -> 'reduced-to-one-lane';
778 -> 'reduced-to-two-lanes';
779 -> 'reduced-to-three-lanes';
780 -> collapse;
781 -> out;
891 -> 'open-to-traffic';
892 -> open;
893 -> 'reopened-to-traffic';
894 -> clearing;
895 -> 'cleared-from-road';
1025 -> 'road-construction';
1026 -> 'major-road-construction';
1027 -> 'long-term-road-construction';
1028 -> 'construction-work';
1029 -> 'paving-operations';
1030 -> 'work-in-the-median';
1031 -> 'road-reconstruction';
1032 -> 'opposing-traffic';
1033 -> 'narrow-lanes';
1034 -> 'construction-traffic-merging';
1035 -> 'single-line-traffic-alternating-directions';
1036 -> 'road-maintenance-operations';
1037 -> 'road-marking-operations';
1038 -> 'bridge-maintenance-operations';
1039 -> 'bridge-construction';
1040 -> 'bridge-demolition-work';
1041 -> blasting;
1042 -> 'avalanche-control-activities';
1043 -> 'water-main-work';
1044 -> 'gas-main-work';
1045 -> 'work-on-underground-cables';
1046 -> 'work-on-underground-services';
1047 -> 'new-road-construction-layout';
1048 -> 'new-road-layout';
1049 -> 'temporary-lane-markings';
1050 -> 'temporary-traffic-lights';
1051 -> 'emergency-maintenance';
1052 -> cracks;
1053 -> bumps;
1054 -> 'storm-drain';
1055 -> 'overgrown-grass';
1056 -> 'overgrown-brushshrubs';
1057 -> 'overgrown-trees';
1058 -> 'crack-REMOVE';
1059 -> 'drop-off';
1060 -> 'seismic-retrofit';
1061 -> 'road-widening';
1062 -> 'utility-work';
1146 -> 'road-maintenance-cleared';
1147 -> 'normal-road-layout-restored';
1148 -> 'road-work-clearance-in-progress';
1149 -> 'road-construction-cleared';
1150 -> 'normal-traffic-lanes-restored';
1151 -> 'road-work-cleared';
1281 -> 'obstruction-on-roadway';
1282 -> 'object-on-roadway';
1283 -> 'objects-falling-from-moving-vehicle';
1284 -> 'debris-on-roadway';
1285 -> 'storm-damage';
1286 -> 'people-on-roadway';
1287 -> 'bicyclists-on-roadway';
1288 -> 'sightseers-obstructing-access';
1289 -> 'large-numbers-of-visitors';
1290 -> 'animal-on-roadway';
1291 -> 'large-animal-on-roadway';
1292 -> 'herd-of-animals-on-roadway';
1293 -> 'animal-struck';
1294 -> 'fallen-trees';
1295 -> 'downed-power-lines';
1296 -> 'downed-cables';
1297 -> subsidence;
1298 -> 'road-surface-collapse';
1299 -> 'pavement-buckled';
1300 -> pothole;
1301 -> flooding;
1302 -> 'broken-water-main';
1303 -> 'collapsed-sewer';
1304 -> 'sewer-overflow';
1305 -> 'gas-leak';
1306 -> snowmelt;
1307 -> mudslide;
1308 -> avalanche;
1309 -> rockfall;
1310 -> landslide;
1311 -> 'over-turned-trees';
1312 -> 'tree-limbs';
1314 -> 'utility-pole-down';
1315 -> 'advertising-signs';
1316 -> 'frost-heave';
1317 -> 'frost-jacking';
1318 -> washboard;
1319 -> 'wash-out';
1406 -> 'clearance-work';
1407 -> 'obstruction-cleared';
1537 -> delays;
1538 -> 'short-delays';
1539 -> 'long-delays';
1540 -> 'very-long-delays';
1541 -> 'delays-of-uncertain-duration';
1542 -> 'delayed-until-further-notice';
1543 -> busy;
1544 -> 'very-busy';
1545 -> crowded;
1546 -> overcrowded;
1547 -> cancellations;
1548 -> 'route-canceled-and-no-replacement';
1549 -> 'service-canceled';
1550 -> 'service-suspended';
1551 -> 'service-withdrawn';
1552 -> 'service-fully-booked';
1553 -> 'all-services-fully-booked';
1554 -> 'next-departure';
1555 -> 'next-arrival';
1556 -> 'very-frequent-service';
1557 -> 'frequent-service';
1558 -> 'fairly-frequent-service';
1559 -> 'regular-service';
1560 -> 'irregular-service';
1561 -> 'not-operating';
1562 -> 'system-busy';
1563 -> 'system-very-busy';
1564 -> 'system-crowded';
1565 -> 'system-overcrowded';
1566 -> 'deleted-travel-time';
1567 -> headway;
1568 -> 'extra-services-in-operation';
1660 -> 'delays-clearing';
1661 -> 'delays-cleared';
1662 -> 'normal-services-resumed';
1663 -> operating;
1793 -> 'vehicle-traveling-wrong-way';
1794 -> 'reckless-driver';
1795 -> 'prohibited-vehicle-on-roadway';
1796 -> 'emergency-vehicles-on-roadway';
1797 -> 'high-speed-emergency-vehicles';
1798 -> 'high-speed-chase';
1918 -> 'dangerous-vehicle-warning-cleared';
1919 -> 'emergency-vehicle-warning-cleared';
2049 -> 'abnormal-load';
2050 -> 'wide-load';
2051 -> 'long-load';
2052 -> 'slow-vehicle';
2053 -> 'farm-equipment';
2054 -> 'horse-drawn-vehicles';
2055 -> 'overheight-load';
2056 -> 'overweight-load';
2057 -> 'tracked-vehicle';
2058 -> 'vehicle-carrying-hazardous-materials';
2059 -> 'slow-moving-maintenance-vehicle';
2060 -> convoy;
2061 -> 'military-convoy';
2062 -> 'refugee-convoy';
2063 -> motorcade;
2064 -> 'mobile-situation-repositioning';
2065 -> 'winter-maintenance-vehicles';
2066 -> snowplows;
2172 -> 'slow-moving-maintenance-vehicle-warning-cleared';
2173 -> 'exceptional-load-warning-cleared';
2174 -> 'hazardous-load-warning-cleared';
2175 -> 'convoy-cleared';
2305 -> 'lane-control-signs-not-working';
2306 -> 'lane-control-signs-working-incorrectly';
2307 -> 'lane-control-signs-operating';
2308 -> 'variable-message-signs-not-working';
2309 -> 'variable-message-signs-working-incorrectly';
2310 -> 'variable-message-signs-operating';
2311 -> 'emergency-telephones-not-working';
2312 -> 'emergency-telephone-number-not-working';
2313 -> 'traffic-lights-not-working';
2314 -> 'traffic-lights-working-incorrectly';
2315 -> 'ramp-control-signals-not-working';
2316 -> 'ramp-control-signals-working-incorrectly';
2317 -> 'temporary-traffic-lights-not-working';
2318 -> 'temporary-traffic-lights-working-incorrectly';
2319 -> 'traffic-signal-control-computer-not-working';
2320 -> 'traffic-signal-timings-changed';
2321 -> 'overheight-warning-system-triggered';
2322 -> 'equipment-failure';
2323 -> 'railroad-crossing-equipment-failure';
2324 -> 'tunnel-ventilation-not-working';
2325 -> 'power-failure';
2326 -> 'widespread-power-outages';
2327 -> 'technical-problems';
2328 -> 'sign-down';
2329 -> 'lines-in-road-faded';
2330 -> 'damaged-light-standard';
2331 -> 'traffic-signal-stuck-on-flash';
2332 -> 'guide-rail';
2333 -> fencing;
2334 -> 'light-standard-hanging-by-wires';
2335 -> 'call-box';
2336 -> 'signal-cabinet';
2337 -> detector;
2338 -> 'improper-use-of-State-vehicle-or-equipment';
2339 -> 'bulb-out';
2340 -> 'not-yet-operational';
2341 -> 'not-yet-installed';
2428 -> 'electronic-signs-repaired';
2429 -> 'emergency-call-facilities-restored';
2430 -> 'traffic-signals-repaired';
2431 -> 'railroad-crossing-equipment-now-working-normally';
2561 -> restrictions;
2562 -> 'ramp-restrictions';
2563 -> 'truck-restriction';
2564 -> 'speed-restriction';
2565 -> 'noise-restriction';
2566 -> 'traffic-regulations-have-been-changed';
2567 -> 'local-access-only';
2568 -> 'no-trailers';
2569 -> 'no-high-profile-vehicles';
2570 -> 'hazardous-materials-truck-restriction';
2571 -> 'no-through-traffic';
2572 -> 'no-motor-vehicles';
2573 -> 'width-limit';
2574 -> 'height-limit';
2575 -> 'length-limit';
2576 -> 'axle-load-limit';
2577 -> 'gross-weight-limit';
2578 -> 'axle-count-limit';
2579 -> 'carpool-lane-available';
2580 -> 'carpool-restrictions-changed';
2581 -> 'hOV-2-no-single-occupant-vehicles';
2582 -> 'hOV-3-no-vehicles-with-less-than-three-occupants';
2583 -> 'bus-lane-available-for-all-vehicles';
2584 -> 'truck-lane-available-for-all-vehicles';
2585 -> 'permits-call-in-basis';
2586 -> 'permits-temporarily-closed';
2587 -> 'permits-closed';
2588 -> 'road-use-permits-required';
2675 -> 'permits-open';
2676 -> 'restrictions-for-high-profile-vehicles-lifted';
2677 -> 'width-limit-lifted';
2678 -> 'height-limit-lifted';
2679 -> 'length-limit-lifted';
2680 -> 'axle-load-limit-lifted';
2681 -> 'weight-limit-lifted';
2682 -> 'axle-count-limit-lifted';
2683 -> 'carpool-restrictions-lifted';
2684 -> 'lane-restrictions-lifted';
2685 -> 'ramp-restrictions-lifted';
2686 -> 'motor-vehicle-restrictions-lifted';
2687 -> 'restrictions-lifted';
2817 -> 'unconfirmed-report';
2818 -> 'initial-response-en-route';
2819 -> 'follow-up-response-en-route';
2820 -> 'initial-response-on-scene';
2821 -> 'follow-up-response-on-scene';
2822 -> 'confirmed-report';
2823 -> 'scene-is-unsecured-at-this-time';
2824 -> 'response-scene-secured';
2825 -> 'rescue-and-recovery-work-in-progress';
2826 -> 'extraction-in-progress';
2827 -> 'clearance-work-in-progress';
2828 -> 'body-removal-operations';
2829 -> 'fire-containment-contained';
2830 -> 'fire-containment-not-contained';
2831 -> 'event-cleared';
2832 -> 'traffic-clearing';
2833 -> 'incident-closed';
3073 -> 'flash-flood';
3074 -> 'major-flood';
3075 -> 'reservoir-failure';
3076 -> 'levee-failure';
3077 -> tsunami;
3078 -> 'tidal-wave';
3079 -> 'volcanic-eruption';
3080 -> 'ash-fall';
3081 -> 'lava-flow';
3082 -> 'serious-fire';
3083 -> 'forest-fire';
3084 -> wildfire;
3085 -> 'building-fire';
3086 -> 'brush-fire';
3087 -> 'grass-fire';
3088 -> 'fire-danger-extreme';
3089 -> 'fire-danger-very-high';
3090 -> 'fire-danger-high';
3091 -> 'fire-danger-medium';
3092 -> 'fire-danger-low';
3093 -> 'earthquake-damage';
3094 -> 'air-crash';
3095 -> 'rail-crash';
3096 -> 'toxic-release';
3097 -> 'toxic-leak';
3098 -> 'radioactive-release';
3099 -> 'radiation-hazard';
3100 -> 'reactor-leakage';
3101 -> explosion;
3102 -> 'major-hazardous-materials-fire';
3103 -> 'major-hazardous-materials-release';
3199 -> 'disaster-cleared';
3329 -> assault;
3330 -> crime;
3331 -> robbery;
3332 -> 'fare-dispute';
3333 -> shooting;
3334 -> 'gunfire-on-roadway';
3335 -> suicide;
3336 -> fight;
3337 -> 'gang-fight';
3338 -> 'person-harassment';
3339 -> 'person-injured';
3340 -> 'unruly-passenger';
3341 -> 'person-intoxicated';
3342 -> 'crowd-control-problem';
3343 -> demonstration;
3344 -> march;
3345 -> 'public-disturbance';
3346 -> riot;
3347 -> 'civil-unrest';
3348 -> 'civil-emergency';
3349 -> strike;
3350 -> 'public-transit-strike';
3351 -> stampede;
3352 -> 'teargas-used';
3353 -> 'security-alert';
3354 -> 'security-incident';
3355 -> checkpoint;
3356 -> 'bomb-alert';
3357 -> 'terrorist-incident';
3358 -> 'high-velocity-shell-fire';
3359 -> 'explosives-in-use';
3360 -> 'air-raid';
3361 -> 'weapons-of-mass-destruction-threat';
3362 -> 'military-operations';
3363 -> 'sick-customer';
3454 -> 'security-problem-cleared';
3455 -> 'traffic-disturbance-cleared';
3585 -> 'sports-event';
3586 -> game;
3587 -> tournament;
3588 -> 'track-and-field-event';
3589 -> 'baseball-game';
3590 -> 'basketball-game';
3591 -> 'boxing-match';
3592 -> 'football-game';
3593 -> 'soccer-game';
3594 -> 'golf-tournament';
3595 -> 'hockey-game';
3596 -> 'tennis-tournament';
3597 -> 'wrestling-match';
3598 -> 'road-race';
3599 -> 'automobile-race';
3600 -> 'bicycle-race';
3601 -> 'race-event';
3602 -> marathon;
3603 -> 'horse-show';
3604 -> rodeo;
3605 -> 'water-sports-event';
3606 -> 'winter-sports-event';
3607 -> 'skating-event';
3608 -> 'dog-sled-race';
3711 -> 'sporting-event-ended';
3841 -> 'major-event';
3842 -> airshow;
3843 -> 'hot-air-ballooning';
3844 -> concert;
3845 -> 'state-occasion';
3846 -> 'vIP-visit';
3847 -> show;
3848 -> festival;
3849 -> exhibition;
3850 -> 'performing-arts';
3851 -> 'outdoor-market';
3852 -> fair;
3853 -> carnival;
3854 -> 'fireworks-display';
3855 -> 'trade-expo';
3856 -> 'movie-filming';
3857 -> 'presidential-visit';
3858 -> parade;
3859 -> procession;
3860 -> 'funeral-procession';
3861 -> crowd;
3862 -> 'holiday-traffic-crowds';
3967 -> 'event-ended';
4097 -> 'normal-parking-restrictions-lifted';
4098 -> 'parking-meter-restrictions-lifted';
4099 -> 'special-parking-restrictions-in-force';
4100 -> 'full-parking-lot';
4101 -> 'full-parking-garage';
4102 -> 'all-parking-lots-full';
4103 -> 'no-parking-spaces-available';
4104 -> 'only-a-few-spaces-available';
4105 -> 'spaces-available';
4106 -> 'no-parking';
4107 -> 'parking-on-one-side-of-street-only';
4108 -> 'parking-on-both-sides-of-street';
4109 -> 'parallel-parking-only';
4110 -> 'parking-meters-not-available';
4111 -> 'use-of-parking-meters-restricted';
4112 -> 'event-parking';
4113 -> 'handicapped-parking';
4114 -> 'long-term-parking';
4115 -> 'overnight-parking';
4116 -> 'short-term-parking';
4117 -> 'parking-by-permit-only';
4118 -> 'emergency-parking-only';
4119 -> 'emergency-stopping-only';
4120 -> parking;
4121 -> stopping;
4122 -> standing;
4123 -> 'tow-away-zone';
4124 -> 'school-zone';
4125 -> 'speed-zone';
4126 -> 'loading-zone';
4127 -> 'state-law';
4128 -> 'van-accessible';
4222 -> 'special-parking-restrictions-lifted';
4223 -> 'no-parking-information-available';
4353 -> 'information-available-on-radio';
4354 -> 'information-available-on-TV';
4355 -> 'call-to-get-information';
4356 -> 'information-available-via-Internet';
4357 -> 'test-message';
4358 -> 'no-information-available';
4359 -> 'null-description';
4360 -> 'information-service-is-being-suspended';
4361 -> 'police-assistance';
4362 -> 'police-monitor-CB';
4363 -> 'emergency-notification';
4364 -> 'in-emergency-dial-911';
4365 -> 'travel-Info-call-511';
4366 -> 'car-pool-information';
4478 -> 'information-service-resumed';
4479 -> 'message-canceled';
4609 -> overcast;
4610 -> cloudy;
4611 -> 'mostly-cloudy';
4612 -> 'partly-cloudy';
4613 -> 'partly-sunny';
4614 -> 'mostly-sunny';
4615 -> sunny;
4616 -> 'fair-skies';
4617 -> 'clear-skies';
4618 -> 'mostly-clear';
4619 -> 'mostly-dry';
4620 -> dry;
4621 -> 'uV-index-very-high';
4622 -> 'uV-index-high';
4623 -> 'uV-index-moderate';
4624 -> 'uV-index-low';
4625 -> 'uV-index-very-low';
4626 -> 'barometric-pressure';
4627 -> 'ozone-alert';
4628 -> 'lighting-unknown';
4629 -> 'artificial-exterior-light';
4630 -> 'artificial-interior-light';
4631 -> darkness;
4632 -> dusk;
4633 -> dawn;
4634 -> moonlight;
4635 -> daylight;
4735 -> 'weather-forecast-withdrawn';
4865 -> 'severe-weather';
4866 -> blizzard;
4867 -> 'heavy-snow';
4868 -> snow;
4869 -> 'light-snow';
4870 -> 'snow-showers';
4871 -> 'winter-storm';
4872 -> 'ice-glaze';
4873 -> 'heavy-frost';
4874 -> frost;
4875 -> 'ice-storm';
4876 -> sleet;
4877 -> 'rain-and-snow-mixed';
4878 -> 'rain-changing-to-snow';
4879 -> 'damaging-hail';
4880 -> hail;
4881 -> thunderstorms;
4882 -> thundershowers;
4883 -> 'extremely-heavy-downpour';
4884 -> 'heavy-rain';
4885 -> rain;
4886 -> 'light-rain';
4887 -> drizzle;
4888 -> showers;
4889 -> dew;
4991 -> 'precipitation-cleared';
5121 -> tornado;
5122 -> hurricane;
5123 -> 'hurricane-force-winds';
5124 -> 'tropical-storm';
5125 -> 'gale-force-winds';
5126 -> 'storm-force-winds';
5127 -> 'strong-winds';
5128 -> 'moderate-winds';
5129 -> 'light-winds';
5130 -> calm;
5131 -> 'gusty-winds';
5132 -> crosswinds;
5133 -> windy;
5246 -> 'strong-winds-have-eased';
5247 -> 'strong-wind-forecast-withdrawn';
5377 -> 'dense-fog';
5378 -> fog;
5379 -> 'patchy-fog';
5380 -> 'freezing-fog';
5381 -> mist;
5382 -> haze;
5383 -> 'visibility-reduced';
5384 -> 'white-out';
5385 -> 'blowing-snow';
5386 -> 'smoke-hazard';
5387 -> 'spray-hazard';
5388 -> 'low-sun-glare';
5389 -> 'snow-glare';
5390 -> 'blowing-dust';
5391 -> 'blowing-sand';
5392 -> 'dust-storms';
5393 -> sandstorms;
5394 -> 'air-quality-good';
5395 -> 'air-quality-fair';
5396 -> 'air-quality-poor';
5397 -> 'air-quality-very-poor';
5398 -> 'severe-exhaust-pollution';
5399 -> 'smog-alert';
5400 -> 'pollen-count-high';
5401 -> 'pollen-count-medium';
5402 -> 'pollen-count-low';
5403 -> 'swarms-of-insects';
5404 -> 'visibility-blocked';
5405 -> 'ice-fog';
5499 -> 'fog-clearing';
5500 -> 'visibility-improved';
5501 -> 'fog-forecast-withdrawn';
5502 -> 'pollution-alert-ended';
5503 -> 'air-quality-improved';
5633 -> 'maximum-temperature';
5634 -> temperature;
5635 -> 'minimum-temperature';
5636 -> 'current-temperature';
5637 -> 'heat-index';
5638 -> 'extreme-heat';
5639 -> hot;
5640 -> hotter;
5641 -> heat;
5642 -> warmer;
5643 -> warm;
5644 -> mild;
5645 -> cool;
5646 -> cooler;
5647 -> cold;
5648 -> colder;
5649 -> 'very-cold';
5650 -> 'extreme-cold';
5651 -> 'wind-chill';
5652 -> dewpoint;
5653 -> 'relative-humidity';
5758 -> 'temperatures-close-to-the-seasonal-norm';
5759 -> 'less-extreme-temperatures';
5889 -> impassable;
5890 -> 'almost-impassable';
5891 -> 'passable-with-care';
5892 -> passable;
5893 -> 'surface-water-hazard';
5894 -> 'danger-of-hydroplaning';
5895 -> 'wet-pavement';
5896 -> 'treated-pavement';
5897 -> slippery;
5898 -> 'mud-on-roadway';
5899 -> 'leaves-on-roadway';
5900 -> 'loose-sand-on-roadway';
5901 -> 'loose-gravel';
5902 -> 'fuel-on-roadway';
5903 -> 'oil-on-roadway';
5904 -> 'road-surface-in-poor-condition';
5905 -> 'melting-tar';
5906 -> ice;
5907 -> 'icy-patches';
5908 -> 'black-ice';
5909 -> 'ice-pellets-on-roadway';
5910 -> 'ice-build-up';
5911 -> 'freezing-rain';
5912 -> 'wet-and-icy-roads';
5913 -> 'melting-snow';
5914 -> slush;
5915 -> 'frozen-slush';
5916 -> 'snow-on-roadway';
5917 -> 'packed-snow';
5918 -> 'packed-snow-patches';
5919 -> 'plowed-snow';
5920 -> 'wet-snow';
5921 -> 'fresh-snow';
5922 -> 'powder-snow';
5923 -> 'granular-snow';
5924 -> 'frozen-snow';
5925 -> 'crusted-snow';
5926 -> 'deep-snow';
5927 -> 'snow-drifts';
5928 -> 'drifting-snow';
5929 -> 'expected-snow-accumulation';
5930 -> 'current-snow-accumulation';
5931 -> 'rough-road';
5932 -> sand;
5933 -> gravel;
5934 -> paved;
5935 -> 'uneven-lanes';
5936 -> 'rough-crossing';
5937 -> 'at-grade-level-crossing';
5938 -> 'low-ground-clearance';
6011 -> 'dry-pavement';
6012 -> 'snow-cleared';
6013 -> 'pavement-conditions-improved';
6014 -> 'skid-hazard-reduced';
6015 -> 'pavement-conditions-cleared';
6145 -> 'winter-equipment-recommended';
6146 -> 'winter-equipment-required';
6147 -> 'snow-chains-recommended';
6148 -> 'snow-chains-required';
6149 -> 'snow-chains-prohibited';
6150 -> 'studded-tires-prohibited';
6151 -> 'snow-tires-recommended';
6152 -> 'snow-tires-required';
6153 -> 'four-wheel-drive-recommended';
6154 -> 'four-wheel-drive-required';
6155 -> 'snow-tires-or-chains-recommended';
6156 -> 'snow-tires-or-chains-required';
6271 -> 'winter-driving-requirements-lifted';
6401 -> 'driving-conditions-good';
6402 -> 'driving-conditions-fair';
6403 -> 'difficult-driving-conditions';
6404 -> 'very-difficult-driving-conditions';
6405 -> 'hazardous-driving-conditions';
6406 -> 'extremely-hazardous-driving-conditions';
6657 -> 'why-not-ride-share';
6658 -> 'is-this-your-no-ride-day';
6659 -> 'why-not-use-transit';
6660 -> 'why-not-park-and-ride';
6661 -> 'why-not-try-paratransit';
6662 -> 'why-not-travel-by-rail';
6663 -> 'why-not-use-the-subway';
6664 -> 'why-not-try-rapid-transit';
6665 -> 'why-not-travel-by-bus';
6666 -> 'your-parking-ticket-covers-the-return-ride';
6667 -> 'avoid-the-rush-hour';
6668 -> 'do-not-allow-unnecessary-gaps';
6669 -> 'follow-the-vehicle-in-front-smoothly';
6670 -> 'do-not-slow-down-unnecessarily';
6671 -> 'watch-for-muggers';
6672 -> 'watch-for-pickpockets';
6673 -> 'watch-for-thieves';
6674 -> 'sorry-for-any-delay';
6675 -> 'thank-you-for-your-understanding';
6676 -> 'we-appreciate-your-patience';
6677 -> 'we-are-grateful-for-your-cooperation';
6678 -> 'share-the-road';
6913 -> risk;
6914 -> watch;
6915 -> warning;
6916 -> alert;
6917 -> danger;
6918 -> 'danger-of-explosion';
6919 -> 'danger-of-fire';
6920 -> 'extra-police-patrols-in-operation';
6921 -> 'look-out-for-vehicles-stopped-under-bridges';
6922 -> 'increased-risk-of-accident';
6923 -> 'rescue-and-recovery-work-in-progress-at-sceneREMOVED';
6924 -> 'police-at-scene';
6925 -> 'emergency-vehicles-at-scene';
6926 -> 'traffic-being-directed-around-accident-area';
6927 -> 'police-directing-traffic';
6928 -> 'rescue-workers-directing-traffic';
6929 -> 'repairs-in-progress';
6930 -> 'pilot-car-in-operation';
6931 -> 'look-out-for-flagger';
6932 -> 'police-checks-in-operation';
6933 -> 'mandatory-speed-limit-in-force';
6934 -> 'speed-limit-in-force-for-heavy-vehicles';
6935 -> lockdown;
6936 -> 'security-check-point';
6937 -> 'truck-check-point';
6938 -> 'single-occupancy-vehicle-check-point';
6939 -> look;
6940 -> 'photo-enforced';
6941 -> 'traffic-laws';
6942 -> 'use-low-gear';
6943 -> 'bridge-ices-before-road';
6944 -> 'speed-checked-by-radar';
6945 -> 'speed-checked-by-aircraft';
6946 -> fines;
6947 -> 'fines-higher';
6948 -> 'fines-doubled';
6949 -> 'fines-tripled';
6950 -> 'behind-you';
6951 -> 'traffic-signs';
6952 -> 'look-out-for-workers';
6953 -> 'ride-with-traffic';
6954 -> 'prepare-to-evacuate-area';
6955 -> avoid;
7033 -> 'evacuation-canceled';
7034 -> 'warning-canceled';
7035 -> 'watch-canceled';
7036 -> 'alert-canceled';
7037 -> ended;
7038 -> cleared;
7039 -> canceled;
7169 -> 'drive-carefully';
7170 -> 'drive-with-extreme-caution';
7171 -> 'approach-with-care';
7172 -> 'keep-your-distance';
7173 -> 'increase-normal-following-distance';
7174 -> 'test-your-brakes';
7175 -> 'cross-intersection-with-care';
7176 -> 'pass-with-care';
7177 -> 'use-low-beam-headlights';
7178 -> 'use-fog-lights';
7179 -> 'use-hazard-warning-lights';
7180 -> 'do-not-leave-your-vehicle';
7181 -> 'leave-your-vehicle-and-proceed-to-next-safe-place';
7182 -> 'turn-off-engine';
7183 -> 'close-all-windows-turn-off-heater-air-conditioner-and-vents';
7184 -> 'turn-off-air-conditioner-to-prevent-engine-overheating';
7185 -> 'turn-off-mobile-phones-and-two-way-radios';
7186 -> 'prepare-to-stop';
7187 -> 'stop-at-next-rest-area';
7188 -> 'stop-at-next-safe-place';
7189 -> 'only-travel-if-absolutely-necessary';
7190 -> 'drive-to-another-service-area';
7191 -> 'use-through-traffic-lanes';
7192 -> 'use-local-traffic-lanes';
7193 -> 'use-left-hand-parallel-roadway';
7194 -> 'use-right-hand-parallel-roadway';
7195 -> 'use-heavy-vehicle-lane';
7196 -> 'observe-recommended-speed';
7197 -> 'facing-traffic';
7198 -> 'push-button';
7199 -> 'to-cross-street';
7200 -> pass;
7201 -> 'be-prepared-to-stop';
7202 -> 'signals-sequenced-for-speed';
7203 -> 'maintain-top-safe-speed';
7204 -> 'evacuate-area-voluntarily';
7205 -> 'shelter-in-place';
7425 -> 'keep-to-the-right';
7426 -> 'keep-to-the-left';
7427 -> 'use-right-lane';
7428 -> 'use-left-lane';
7429 -> 'heavy-vehicles-use-right-lane';
7430 -> 'heavy-vehicles-use-left-lane';
7431 -> 'observe-signals';
7432 -> 'observe-signs';
7433 -> 'no-passing';
7434 -> 'no-smoking';
7435 -> 'no-open-flames';
7436 -> 'use-shoulder-as-lane';
7437 -> 'do-not-drive-on-the-shoulder';
7438 -> 'allow-emergency-vehicles-to-pass';
7439 -> 'clear-a-lane-for-emergency-vehicles';
7440 -> 'pull-over-to-the-edge-of-the-roadway';
7441 -> 'wait-for-escort-vehicle';
7442 -> 'in-emergency-wait-for-police-patrol';
7443 -> 'reduce-your-speed';
7444 -> 'observe-speed-limits';
7445 -> 'check-point';
7446 -> 'entry-requirements';
7447 -> 'insurance-requirements';
7448 -> 'firearms-requirements';
7449 -> 'pet-requirements';
7450 -> 'stay-in-lane';
7451 -> merge;
7452 -> 'slower-traffic-keep-right';
7453 -> 'keep-off';
7454 -> 'evacuate-area-immediately';
7547 -> 'shoulder-travel-no-longer-allowed';
7681 -> above;
7682 -> below;
7683 -> in;
7684 -> around;
7685 -> 'after';
7686 -> before;
7687 -> at;
7688 -> on;
7689 -> near;
7690 -> 'from-the';
7691 -> terminal;
7692 -> 'falling-slowly';
7693 -> falling;
7694 -> 'falling-quickly';
7695 -> 'rising-slowly';
7696 -> rising;
7697 -> 'rising-quickly';
7698 -> steady;
7699 -> likely;
7700 -> 'changing-to';
7701 -> mostly;
7702 -> partly;
7703 -> minus;
7704 -> 'weather-ended';
7705 -> expected;
7706 -> low;
7707 -> mid;
7708 -> high;
7709 -> upper;
7710 -> unseasonably;
7711 -> reported;
7712 -> advice;
7713 -> 'due-to';
7714 -> 'proceed-to';
7715 -> 'transferred-to';
7716 -> use;
7717 -> affecting;
7718 -> blocking;
7719 -> connecting;
7720 -> finished;
7721 -> for;
7722 -> 'or';
7723 -> 'and';
7724 -> later;
7725 -> level;
7726 -> shortly;
7727 -> soon;
7728 -> service;
7729 -> damaged;
7730 -> 'out-of-order';
7731 -> vandalism;
7732 -> 'on-State-right-of-way';
7733 -> graffiti;
7734 -> 'found-property';
7735 -> 'begin-time';
7736 -> added;
7737 -> 'end-time';
7738 -> no;
7739 -> 'do-not';
7740 -> block;
7741 -> except;
7742 -> day;
7743 -> night;
7744 -> 'any-time';
7745 -> has;
7746 -> 'may-have';
7747 -> only;
7748 -> lifted;
7749 -> empty;
7750 -> turning;
7751 -> 'u-turn';
7752 -> 'wait-for';
7753 -> 'when-flashing';
7754 -> duration;
7755 -> cross;
7756 -> 'when-wet';
7757 -> must;
7758 -> oncoming;
7759 -> 'may-exceed';
7760 -> 'to-request';
7761 -> exempt;
7762 -> skewed;
7763 -> 'when-children-are-present';
7764 -> lower;
7765 -> middle;
7766 -> major;
7767 -> minor;
7937 -> 'on-bridges';
7938 -> 'in-tunnels';
7939 -> 'entering-or-leaving-tunnels';
7940 -> 'on-ramps';
7941 -> 'in-road-construction-area';
7942 -> 'around-a-curve';
7943 -> 'on-minor-roads';
7944 -> 'in-the-opposing-lanes';
7945 -> 'adjacent-to-roadway';
7946 -> 'on-bend';
7947 -> 'entire-intersection';
7948 -> 'in-the-median';
7949 -> 'moved-to-side-of-road';
7950 -> 'moved-to-shoulder';
7951 -> 'on-the-roadway';
7952 -> 'in-shaded-areas';
7953 -> 'in-low-lying-areas';
7954 -> 'in-the-downtown-area';
7955 -> 'in-the-inner-city-area';
7956 -> 'in-parts';
7957 -> 'in-some-places';
7958 -> 'in-the-ditch';
7959 -> 'in-the-valley';
7960 -> 'on-hill-top';
7961 -> 'near-the-foothills';
7962 -> 'at-high-altitudes';
7963 -> 'near-the-lake';
7964 -> 'near-the-shore';
7965 -> 'over-the-crest-of-a-hill';
7966 -> 'other-than-on-the-roadway';
7967 -> 'near-the-beach';
7968 -> 'near-beach-access-point';
7969 -> 'lower-level';
7970 -> 'upper-level';
7971 -> airport;
7972 -> concourse;
7973 -> gate;
7974 -> 'baggage-claim';
7975 -> 'customs-point';
7976 -> station;
7977 -> platform;
7978 -> dock;
7979 -> depot;
7980 -> 'ev-charging-point';
7981 -> 'information-welcome-point';
7982 -> 'at-rest-area';
7983 -> 'at-service-area';
7984 -> 'at-weigh-station';
7985 -> 'picnic-areas';
7986 -> 'rest-area';
7987 -> 'service-stations';
7988 -> toilets;
7989 -> 'on-the-right';
7990 -> 'on-the-left';
7991 -> 'in-the-center';
7992 -> 'in-the-opposite-direction';
7993 -> 'cross-traffic';
7994 -> 'northbound-traffic';
7995 -> 'eastbound-traffic';
7996 -> 'southbound-traffic';
7997 -> 'westbound-traffic';
7998 -> north;
7999 -> south;
8000 -> east;
8001 -> west;
8002 -> northeast;
8003 -> northwest;
8004 -> southeast;
8005 -> southwest;
8006 -> 'mountain-pass';
8007 -> 'reservation-center';
8008 -> 'nearby-basin';
8009 -> 'on-tracks';
8010 -> dip;
8011 -> 'traffic-circle';
8012 -> 'park-and-ride-lot';
8014 -> to;
8015 -> by;
8016 -> through;
8017 -> 'area-of';
8018 -> under;
8019 -> over;
8020 -> from;
8021 -> approaching;
8022 -> 'entering-at';
8023 -> 'exiting-at';
8024 -> 'across-tracks';
8025 -> 'in-street';
8026 -> 'on-curve';
8027 -> shoulder;
8028 -> crossover;
8029 -> 'cross-road';
8030 -> 'side-road';
8031 -> 'bus-stop';
8032 -> intersection;
8033 -> 'roadside-park';
8034 -> coast;
8193 -> 'all-roadways';
8194 -> 'through-lanes';
8195 -> 'left-lane';
8196 -> 'right-lane';
8197 -> 'center-lane';
8198 -> 'middle-lanes';
8199 -> 'middle-two-lanes';
8200 -> 'right-turning-lanes';
8201 -> 'left-turning-lanes';
8202 -> 'right-exit-ramp';
8203 -> 'right-entrance-ramp';
8204 -> 'left-exit-ramp';
8205 -> 'left-entrance-ramp';
8206 -> 'hard-shoulder';
8207 -> 'soft-shoulder';
8208 -> 'right-shoulder';
8209 -> 'left-shoulder';
8210 -> 'right-hand-parallel-lanes';
8211 -> 'left-hand-parallel-lanes';
8212 -> 'connecting-lanes';
8213 -> 'express-lanes';
8214 -> 'local-lanes';
8215 -> 'toll-lanes';
8216 -> 'electronic-toll-lanes';
8217 -> 'toll-plaza';
8218 -> 'inspection-lane';
8219 -> 'hOV-lanes';
8220 -> 'bus-lanes';
8221 -> 'carpool-lanes';
8222 -> 'truck-lanes';
8223 -> 'emergency-lanes';
8224 -> 'passing-lanes';
8225 -> 'climbing-lanes';
8226 -> 'slow-lane';
8227 -> 'service-road';
8228 -> 'cycle-lane';
8229 -> bridge;
8230 -> overpass;
8231 -> 'elevated-lanes';
8232 -> underpass;
8233 -> tunnel;
8234 -> 'escape-ramp';
8235 -> highways;
8236 -> 'upper-deck-lanes';
8237 -> 'lower-deck-lanes';
8238 -> 'reversible-lanes';
8239 -> 'right-exit-lanes';
8240 -> 'left-exit-lanes';
8241 -> 'right-merging-lanes';
8242 -> 'left-merging-lanes';
8243 -> 'right-second-exit-ramp';
8244 -> 'left-second-exit-ramp';
8245 -> 'right-second-entrance-ramp';
8246 -> 'left-second-entrance-ramp';
8247 -> 'all-exit-lanes';
8248 -> 'all-entry-lanes';
8249 -> 'either-shoulder';
8250 -> tracks;
8251 -> sidewalk;
8252 -> median;
8253 -> 'shoulder-work';
8449 -> 'detour-where-possible';
8450 -> 'no-detour-available';
8451 -> 'follow-signs';
8452 -> 'follow-detour-signs';
8453 -> 'follow-special-detour-markers';
8454 -> 'do-not-follow-detour-signs';
8455 -> 'detour-in-operation';
8456 -> 'follow-local-detour';
8457 -> 'compulsory-detour-in-operation';
8458 -> 'no-suitable-detour-available';
8459 -> 'detour-is-no-longer-recommended';
8460 -> 'local-drivers-are-recommended-to-avoid-the-area';
8461 -> 'trucks-are-recommended-to-avoid-the-area';
8462 -> 'consider-alternate-route';
8463 -> 'consider-alternate-parking';
8464 -> 'consider-alternate-destination';
8465 -> 'consider-alternate-area';
8466 -> 'snow-route';
8467 -> 'emergency-snow-route';
8468 -> 'evacuation-route';
8469 -> 'truck-route';
8470 -> 'hazardous-materials-route';
8471 -> detour;
8705 -> 'square-feet';
8706 -> 'square-meters';
8707 -> acres;
8708 -> hectares;
8709 -> inches;
8710 -> feet;
8711 -> mile;
8712 -> miles;
8713 -> 'nautical-miles';
8714 -> millimeters;
8715 -> meters;
8716 -> kilometer;
8717 -> kilometers;
8718 -> 'feet-per-second';
8719 -> 'meters-per-second';
8720 -> mPH;
8721 -> kPH;
8722 -> knots;
8723 -> aM;
8724 -> pM;
8725 -> weekends;
8726 -> holiday;
8727 -> seconds;
8728 -> minutes;
8729 -> hours;
8730 -> days;
8731 -> weeks;
8732 -> months;
8733 -> 'degrees-Angle';
8734 -> 'degrees-Celsius';
8735 -> 'degrees-Fahrenheit';
8736 -> grams;
8737 -> kilograms;
8738 -> ounces;
8739 -> pounds;
8740 -> tons;
8741 -> 'fluid-ounces';
8742 -> gallons;
8743 -> milliliters;
8744 -> liters;
8745 -> 'kilograms-per-lane-mile';
8746 -> 'tons-per-lane-mile';
8747 -> dollar;
8748 -> percent;
8749 -> 'time-delimiter';
8750 -> dollars;
8751 -> 'flight-number';
8752 -> 'person-people';
8753 -> 'response-plan';
8754 -> 'placard-type';
8755 -> 'placard-number';
8756 -> fM;
8757 -> grade;
8758 -> nSunday;
8759 -> nMonday;
8760 -> nTuesday;
8761 -> nWednesday;
8762 -> nThursday;
8763 -> nFriday;
8764 -> nSaturday;
8765 -> weekdays;
8766 -> elevation;
8767 -> 'other-times';
8961 -> travel;
8962 -> transit;
8963 -> bus;
8964 -> trolleybus;
8965 -> rail;
8966 -> 'commuter-rail';
8967 -> subway;
8968 -> 'rapid-transit';
8969 -> 'light-rail';
8970 -> streetcar;
8971 -> 'dial-a-ride';
8972 -> 'park-and-ride';
8973 -> shuttle;
8974 -> 'free-shuttle';
8975 -> 'airport-shuttle';
8976 -> taxies;
8977 -> ferry;
8978 -> 'passenger-ferry';
8979 -> 'vehicle-ferry';
8980 -> 'aerial-tramway';
8981 -> 'automated-guideway';
8982 -> 'cable-cars';
8983 -> monorail;
8984 -> 'air-travel';
8985 -> 'hitch-hitching';
8986 -> walk;
9217 -> 'all-vehicles';
9218 -> bicycles;
9219 -> motorcycles;
9220 -> cars;
9221 -> 'light-vehicles';
9222 -> 'cars-and-light-vehicles';
9223 -> 'cars-with-trailers';
9224 -> 'cars-with-recreational-trailers';
9225 -> 'vehicles-with-trailers';
9226 -> 'heavy-vehicles';
9227 -> trucks;
9228 -> buses;
9229 -> 'articulated-buses';
9230 -> 'school-buses';
9231 -> 'vehicles-with-semi-trailers';
9232 -> 'vehicles-with-double-trailers';
9233 -> 'high-profile-vehicles';
9234 -> 'wide-vehicles';
9235 -> 'long-vehicles';
9236 -> 'hazardous-loads';
9237 -> 'exceptional-loads';
9238 -> 'abnormal-loads';
9239 -> convoys;
9240 -> 'maintenance-vehicles';
9241 -> 'delivery-vehicles';
9242 -> 'vehicles-with-even-numbered-license-plates';
9243 -> 'vehicles-with-odd-numbered-license-plates';
9244 -> 'vehicles-with-parking-permits';
9245 -> 'vehicles-with-catalytic-converters';
9246 -> 'vehicles-without-catalytic-converters';
9247 -> 'gas-powered-vehicles';
9248 -> 'diesel-powered-vehicles';
9249 -> 'lPG-vehicles';
9250 -> 'military-convoys';
9251 -> 'military-vehicles';
9252 -> 'electric-powered-vehicles';
9253 -> 'hybrid-powered-vehicles';
9254 -> 'inherently-low-emission-vehicles';
9255 -> 'commercial-vehicles';
9256 -> 'runaway-vehicles';
9257 -> 'vehicles-with-lugs';
9258 -> 'motor-driven-cycles';
9259 -> 'recreational-vehicles';
9260 -> 'non-motorized-vehicles';
9261 -> traffic;
9473 -> 'through-traffic';
9474 -> 'holiday-traffic';
9475 -> residents;
9476 -> visitors;
9477 -> 'long-distance-traffic';
9478 -> 'local-traffic';
9479 -> 'regional-traffic';
9480 -> arrivals;
9481 -> departures;
9482 -> 'airline-travelers';
9483 -> 'commuter-airline-travelers';
9484 -> 'domestic-airline-travelers';
9485 -> 'international-airline-travelers';
9486 -> pedestrians;
9487 -> bicyclists;
9729 -> 'emergency-vehicle-units';
9730 -> 'federal-law-enforcement-units';
9731 -> 'state-police-units';
9732 -> 'county-police-units';
9733 -> 'local-police-units';
9734 -> 'ambulance-units';
9735 -> 'rescue-units';
9736 -> 'fire-units';
9737 -> 'hAZMAT-units';
9738 -> 'light-tow-unit';
9739 -> 'heavy-tow-unit';
9740 -> 'freeway-service-patrols';
9741 -> 'transportation-response-units';
9742 -> 'private-contractor-response-units';
9743 -> 'private-tow-units';
9985 -> 'ground-fire-suppression';
9986 -> 'heavy-ground-equipment';
9988 -> aircraft;
9989 -> 'marine-equipment';
9990 -> 'support-equipment';
9991 -> 'medical-rescue-unit';
9993 -> other;
9994 -> 'ground-fire-suppression-other';
9995 -> engine;
9996 -> 'truck-or-aerial';
9997 -> quint;
9998 -> 'tanker-pumper-combination';
10000 -> 'brush-truck';
10001 -> 'aircraft-rescue-firefighting';
10004 -> 'heavy-ground-equipment-other';
10005 -> 'dozer-or-plow';
10006 -> tractor;
10008 -> 'tanker-or-tender';
10024 -> 'aircraft-other';
10025 -> 'aircraft-fixed-wing-tanker';
10026 -> helitanker;
10027 -> helicopter;
10034 -> 'marine-equipment-other';
10035 -> 'fire-boat-with-pump';
10036 -> 'boat-no-pump';
10044 -> 'support-apparatus-other';
10045 -> 'breathing-apparatus-support';
10046 -> 'light-and-air-unit';
10054 -> 'medical-rescue-unit-other';
10055 -> 'rescue-unit';
10056 -> 'urban-search-rescue-unit';
10057 -> 'high-angle-rescue';
10058 -> 'crash-fire-rescue';
10059 -> 'bLS-unit';
10060 -> 'aLS-unit';
10075 -> 'mobile-command-post';
10076 -> 'chief-officer-car';
10077 -> 'hAZMAT-unit';
10078 -> 'type-i-hand-crew';
10079 -> 'type-ii-hand-crew';
10083 -> 'privately-owned-vehicle';
10084 -> 'other-apparatus-resource';
10085 -> ambulance;
10086 -> 'bomb-squad-van';
10087 -> 'combine-harvester';
10088 -> 'construction-vehicle';
10089 -> 'farm-tractor';
10090 -> 'grass-cutting-machines';
10091 -> 'hAZMAT-containment-tow';
10092 -> 'heavy-tow';
10093 -> 'hedge-cutting-machines';
10094 -> 'light-tow';
10095 -> 'mobile-crane';
10096 -> 'refuse-collection-vehicle';
10097 -> 'resurfacing-vehicle';
10098 -> 'road-sweeper';
10099 -> 'roadside-litter-collection-crews';
10100 -> 'salvage-vehicle';
10101 -> 'sand-truck';
10102 -> snowplow;
10103 -> 'steam-roller';
10104 -> 'swat-team-van';
10105 -> 'track-laying-vehicle';
10106 -> 'unknown-vehicle';
10107 -> 'white-lining-vehicle';
10108 -> 'dump-truck';
10109 -> 'supervisor-vehicle';
10110 -> 'snow-blower';
10111 -> 'rotary-snow-blower';
10112 -> 'road-grader';
10113 -> 'steam-truck';
10114 -> 'flatbed-tow';
10115 -> 'survey-crews';
10240 -> 'unknown-status';
10241 -> 'ready-for-use';
10242 -> 'working-normally';
10243 -> 'working-autonomously';
10244 -> 'working-incorrectly';
10245 -> 'not-working';
10246 -> 'normal-maintenance';
10247 -> 'in-route-to-use';
10248 -> 'returning-from-use';
10249 -> 'out-of-service';
10250 -> 'off-duty';
10251 -> 'on-patrol';
10252 -> 'on-call';
10253 -> 'on-break';
10254 -> 'mandatory-time-off';
10255 -> 'low-on-fuel';
10256 -> 'low-on-water';
10257 -> 'low-charge';
10258 -> missing;
10496 -> none;
10497 -> 'light-pole';
10498 -> 'utility-pole';
10499 -> 'gantry-way';
10500 -> 'sign-support';
10501 -> 'signal-pole';
10502 -> 'signage-public';
10503 -> 'signage-private';
10504 -> cones;
10505 -> 'cones-post-type';
10506 -> 'cones-glue-post';
10507 -> 'cones-other';
10508 -> barriers;
10509 -> 'barrier-Aframe';
10510 -> 'barriers-heavy-duty';
10511 -> 'barricade-type-III';
10512 -> 'barricade-small';
10513 -> 'barricade-lights';
10514 -> beacon;
10515 -> 't-stand';
10516 -> 'a-stand';
10517 -> drums;
10518 -> 'impact-attenuator';
10519 -> 'barricade-tape';
10520 -> 'safety-fence';
10521 -> 'temp-pavement-markings';
10522 -> 'speed-bumps';
10523 -> 'temp-curbs';
10524 -> 'parking-blocks';
10525 -> 'signboard-fixed';
10526 -> 'signboard-portable';
10527 -> har;
10528 -> 'har-AM';
10529 -> 'har-FM';
10530 -> 'har-DSRC';
10531 -> 'traffic-light';
10532 -> 'lane-control-signal';
10533 -> 'traffic-detector';
10534 -> 'vehicle-detector';
10535 -> 'system-alarm';
10536 -> 'arrow-board';
10537 -> 'fixed-VMS';
10538 -> 'mobile-VMS';
10539 -> 'ramp-control';
10540 -> 'gate-control';
10541 -> 'temporary-traffic-light';
10542 -> 'over-height-warning-system';
10543 -> 'over-weight-warning-system';
10544 -> 'emergency-telephones';
10545 -> 'railroad-crossing-equipment';
10546 -> 'tunnel-ventilation';
10547 -> ccTV;
10548 -> 'environmental-sensor';
10549 -> switch;
10550 -> signal;
10551 -> 'third-rail';
10552 -> 'overhead-power';
10553 -> 'concrete-tie';
10554 -> 'wooden-tie';
10555 -> escalator;
10556 -> elevator;
10557 -> track;
10558 -> drawbridge;
10559 -> 'manhole-cover';
10560 -> culvert;
10561 -> 'snow-poles';
10562 -> 'guide-poles';
10563 -> 'expansion-joint';
10564 -> 'shifted-plate';
10565 -> 'solid-barrier';
10566 -> 'moveable-barrier';
10567 -> 'sand-barrel';
10568 -> 'overhead-sign';
10569 -> 'ground-sign';
10570 -> 'emergency-signal';
10571 -> 'countdown-pedestrian-sign';
10572 -> stripe;
10573 -> island;
10753 -> 'unknown-transit-problem';
10754 -> 'sleeping-customer';
10755 -> 'assault-on-passenger';
10756 -> 'assault-on-employee';
10757 -> 'broken-seat';
10758 -> 'bus-alarm';
10759 -> 'crime-or-drug-deal';
10760 -> 'eating-on-board';
10761 -> 'equipment-problem-with-air-conditioning';
10762 -> 'equipment-problem-with-air-system';
10763 -> 'equipment-problem-with-brakes';
10764 -> 'equipment-problem-with-chassis-or-suspension';
10765 -> 'equipment-problem-with-cooling-system';
10766 -> 'equipment-problem-with-doors';
10767 -> 'equipment-problem-with-electrical';
10768 -> 'equipment-problem-with-engine';
10769 -> 'equipment-problem-with-exterior-or-body';
10770 -> 'equipment-problem-with-fare-collection';
10771 -> 'equipment-problem-with-fuel-or-exhaust';
10772 -> 'equipment-problem-with-horn';
10773 -> 'equipment-problem-with-interior';
10774 -> 'equipment-problem-with-liftkneeling';
10775 -> 'equipment-problem-with-lights';
10776 -> 'equipment-problem-with-lubrication';
10777 -> 'equipment-problem-with-radio-or-communication';
10778 -> 'equipment-problem-with-signs';
10779 -> 'equipment-problem-with-steering';
10780 -> 'equipment-problem-with-tires';
10781 -> 'equipment-problem-with-transmission';
10782 -> 'equipment-problem-with-unknown-alarm';
10783 -> 'equipment-problem-with-wipers';
10784 -> 'fare-dispute-expired-pass';
10785 -> 'fare-dispute-expired-transfer';
10786 -> 'fare-dispute-expired-upgrade';
10787 -> 'fare-dispute-other';
10788 -> 'fare-dispute-refuses-to-pay';
10789 -> 'lift-passenger-cycle-completed';
10790 -> 'lift-passenger-ready-to-alight';
10791 -> 'lift-passenger-ready-to-board';
10792 -> 'lost-article';
10793 -> 'objects-thrown';
10794 -> 'passenger-accident-alighting';
10795 -> 'passenger-accident-boarding';
10796 -> 'passenger-accident-fallen-on-board';
10797 -> 'passenger-load';
10798 -> 'passenger-accident-other';
10799 -> 'passenger-sick-or-injured';
10800 -> 'right-of-way';
10801 -> theft;
10802 -> 'theft-of-service';
10803 -> 'waiting-to-get-relief-for-schedule-break';
10804 -> 'waiting-to-get-relief-after-run-is-finished';
10805 -> 'waiting-to-provide-relief';
11009 -> 'unknown-object';
11010 -> tire;
11011 -> rim;
11012 -> retread;
11013 -> trash;
11014 -> cargo;
11015 -> diesel;
11016 -> gasoline;
11017 -> 'anti-freeze';
11018 -> 'seat-belts';
11019 -> 'litter-container';
11020 -> 'all-Terrain-vehicle';
11021 -> seaplane;
11022 -> chairlift;
11023 -> 'fishing-pier';
11024 -> 'railroad-cross-buck';
11025 -> telephone;
11026 -> fallout;
11027 -> medical;
11028 -> chemical;
11029 -> welfare;
11030 -> evacuation;
11031 -> 'left-arrow-signal';
11032 -> 'ahead-arrow-signal';
11033 -> 'right-arrow-signal';
11034 -> 'green-light-signal';
11035 -> 'green-arrow-signal';
11036 -> 'yellow-light-signal';
11037 -> 'yellow-arrow-signal';
11038 -> 'red-light-signal';
11039 -> 'red-arrow-signal';
11040 -> 'extended-green-signal';
11041 -> 'advance-arrow-signal';
11042 -> 'pedestrian-Signal-Stop';
11043 -> 'pedestrian-Signal-Caution';
11044 -> 'pedestrian-Signal-Walk';
11045 -> 'pedestrian-Signal-Light';
11046 -> 'pedestrian-Signal-Time-Display';
11047 -> train;
11048 -> horn;
11049 -> deer;
11050 -> cattle;
11051 -> horse;
11052 -> 'golf-cart';
11053 -> 'food-services';
11054 -> 'ambulance-staging-point';
11055 -> 'roadside-table';
11056 -> services;
11059 -> 'motorist-services';
11060 -> 'alternative-fuel';
11061 -> 'propane-gas';
11062 -> registration;
11063 -> decontamination;
11064 -> emergency;
11264 -> 'prohibit-None-Allowed-LU-LT-L45-S-R45-RT-RU';
11265 -> 'prohibit-RU-Allowed-LU-LT-L45-S-R45-RT';
11266 -> 'prohibit-RT-Allowed-LU-LT-L45-S-R45-RU';
11267 -> 'prohibit-RT-RU-Allowed-LU-LT-L45-S-R45';
11268 -> 'prohibit-R45-Allowed-LU-LT-L45-S-RT-RU';
11269 -> 'prohibit-R45-RU-Allowed-LU-LT-L45-S-RT';
11270 -> 'prohibit-R45-RT-Allowed-LU-LT-L45-S-RU';
11271 -> 'prohibit-R45-RT-RU-Allowed-LU-LT-L45-S';
11272 -> 'prohibit-S-Allowed-LU-LT-L45-R45-RT-RU';
11273 -> 'prohibit-S-RU-Allowed-LU-LT-L45-R45-RT';
11274 -> 'prohibit-S-RT-Allowed-LU-LT-L45-R45-RU';
11275 -> 'prohibit-S-RT-RU-Allowed-LU-LT-L45-R45';
11276 -> 'prohibit-S-R45-Allowed-LU-LT-L45-RT-RU';
11277 -> 'prohibit-S-R45-RU-Allowed-LU-LT-L45-RT';
11278 -> 'prohibit-S-R45-RT-Allowed-LU-LT-L45-RU';
11279 -> 'prohibit-S-R45-RT-RU-Allowed-LU-LT-L45';
11280 -> 'prohibit-L45-Allowed-LU-LT-S-R45-RT-RU';
11281 -> 'prohibit-L45-RU-Allowed-LU-LT-S-R45-RT';
11282 -> 'prohibit-L45-RT-Allowed-LU-LT-S-R45-RU';
11283 -> 'prohibit-L45-RT-RU-Allowed-LU-LT-S-R45';
11284 -> 'prohibit-L45-R45-Allowed-LU-LT-S-RT-RU';
11285 -> 'prohibit-L45-R45-RU-Allowed-LU-LT-S-RT';
11286 -> 'prohibit-L45-R45-RT-Allowed-LU-LT-S-RU';
11287 -> 'prohibit-L45-R45-RT-RU-Allowed-LU-LT-S';
11288 -> 'prohibit-L45-S-Allowed-LU-LT-R45-RT-RU';
11289 -> 'prohibit-L45-S-RU-Allowed-LU-LT-R45-RT';
11290 -> 'prohibit-L45-S-RT-Allowed-LU-LT-R45-RU';
11291 -> 'prohibit-L45-S-RT-RU-Allowed-LU-LT-R45';
11292 -> 'prohibit-L45-S-R45-Allowed-LU-LT-RT-RU';
11293 -> 'prohibit-L45-S-R45-RU-Allowed-LU-LT-RT';
11294 -> 'prohibit-L45-S-R45-RT-Allowed-LU-LT-RU';
11295 -> 'prohibit-L45-S-R45-RT-RU-Allowed-LU-LT';
11296 -> 'prohibit-LT-Allowed-LU-L45-S-R45-RT-RU';
11297 -> 'prohibit-LT-RU-Allowed-LU-L45-S-R45-RT';
11298 -> 'prohibit-LT-RT-Allowed-LU-L45-S-R45-RU';
11299 -> 'prohibit-LT-RT-RU-Allowed-LU-L45-S-R45';
11300 -> 'prohibit-LT-R45-Allowed-LU-L45-S-RT-RU';
11301 -> 'prohibit-LT-R45-RU-Allowed-LU-L45-S-RT';
11302 -> 'prohibit-LT-R45-RT-Allowed-LU-L45-S-RU';
11303 -> 'prohibit-LT-R45-RT-RU-Allowed-LU-L45-S';
11304 -> 'prohibit-LT-S-Allowed-LU-L45-R45-RT-RU';
11305 -> 'prohibit-LT-S-RU-Allowed-LU-L45-R45-RT';
11306 -> 'prohibit-LT-S-RT-Allowed-LU-L45-R45-RU';
11307 -> 'prohibit-LT-S-RT-RU-Allowed-LU-L45-R45';
11308 -> 'prohibit-LT-S-R45-Allowed-LU-L45-RT-RU';
11309 -> 'prohibit-LT-S-R45-RU-Allowed-LU-L45-RT';
11310 -> 'prohibit-LT-S-R45-RT-Allowed-LU-L45-RU';
11311 -> 'prohibit-LT-S-R45-RT-RU-Allowed-LU-L45';
11312 -> 'prohibit-LT-L45-Allowed-LU-S-R45-RT-RU';
11313 -> 'prohibit-LT-L45-RU-Allowed-LU-S-R45-RT';
11314 -> 'prohibit-LT-L45-RT-Allowed-LU-S-R45-RU';
11315 -> 'prohibit-LT-L45-RT-RU-Allowed-LU-S-R45';
11316 -> 'prohibit-LT-L45-R45-Allowed-LU-S-RT-RU';
11317 -> 'prohibit-LT-L45-R45-RU-Allowed-LU-S-RT';
11318 -> 'prohibit-LT-L45-R45-RT-Allowed-LU-S-RU';
11319 -> 'prohibit-LT-L45-R45-RT-RU-Allowed-LU-S';
11320 -> 'prohibit-LT-L45-S-Allowed-LU-R45-RT-RU';
11321 -> 'prohibit-LT-L45-S-RU-Allowed-LU-R45-RT';
11322 -> 'prohibit-LT-L45-S-RT-Allowed-LU-R45-RU';
11323 -> 'prohibit-LT-L45-S-RT-RU-Allowed-LU-R45';
11324 -> 'prohibit-LT-L45-S-R45-Allowed-LU-RT-RU';
11325 -> 'prohibit-LT-L45-S-R45-RU-Allowed-LU-RT';
11326 -> 'prohibit-LT-L45-S-R45-RT-Allowed-LU-RU';
11327 -> 'prohibit-LT-L45-S-R45-RT-RU-Allowed-LU';
11328 -> 'prohibit-LU-Allowed-LT-L45-S-R45-RT-RU';
11329 -> 'prohibit-LU-RU-Allowed-LT-L45-S-R45-RT';
11330 -> 'prohibit-LU-RT-Allowed-LT-L45-S-R45-RU';
11331 -> 'prohibit-LU-RT-RU-Allowed-LT-L45-S-R45';
11332 -> 'prohibit-LU-R45-Allowed-LT-L45-S-RT-RU';
11333 -> 'prohibit-LU-R45-RU-Allowed-LT-L45-S-RT';
11334 -> 'prohibit-LU-R45-RT-Allowed-LT-L45-S-RU';
11335 -> 'prohibit-LU-R45-RT-RU-Allowed-LT-L45-S';
11336 -> 'prohibit-LU-S-Allowed-LT-L45-R45-RT-RU';
11337 -> 'prohibit-LU-S-RU-Allowed-LT-L45-R45-RT';
11338 -> 'prohibit-LU-S-RT-Allowed-LT-L45-R45-RU';
11339 -> 'prohibit-LU-S-RT-RU-Allowed-LT-L45-R45';
11340 -> 'prohibit-LU-S-R45-Allowed-LT-L45-RT-RU';
11341 -> 'prohibit-LU-S-R45-RU-Allowed-LT-L45-RT';
11342 -> 'prohibit-LU-S-R45-RT-Allowed-LT-L45-RU';
11343 -> 'prohibit-LU-S-R45-RT-RU-Allowed-LT-L45';
11344 -> 'prohibit-LU-L45-Allowed-LT-S-R45-RT-RU';
11345 -> 'prohibit-LU-L45-RU-Allowed-LT-S-R45-RT';
11346 -> 'prohibit-LU-L45-RT-Allowed-LT-S-R45-RU';
11347 -> 'prohibit-LU-L45-RT-RU-Allowed-LT-S-R45';
11348 -> 'prohibit-LU-L45-R45-Allowed-LT-S-RT-RU';
11349 -> 'prohibit-LU-L45-R45-RU-Allowed-LT-S-RT';
11350 -> 'prohibit-LU-L45-R45-RT-Allowed-LT-S-RU';
11351 -> 'prohibit-LU-L45-R45-RT-RU-Allowed-LT-S';
11352 -> 'prohibit-LU-L45-S-Allowed-LT-R45-RT-RU';
11353 -> 'prohibit-LU-L45-S-RU-Allowed-LT-R45-RT';
11354 -> 'prohibit-LU-L45-S-RT-Allowed-LT-R45-RU';
11355 -> 'prohibit-LU-L45-S-RT-RU-Allowed-LT-R45';
11356 -> 'prohibit-LU-L45-S-R45-Allowed-LT-RT-RU';
11357 -> 'prohibit-LU-L45-S-R45-RU-Allowed-LT-RT';
11358 -> 'prohibit-LU-L45-S-R45-RT-Allowed-LT-RU';
11359 -> 'prohibit-LU-L45-S-R45-RT-RU-Allowed-LT';
11360 -> 'prohibit-LU-LT-Allowed-L45-S-R45-RT-RU';
11361 -> 'prohibit-LU-LT-RU-Allowed-L45-S-R45-RT';
11362 -> 'prohibit-LU-LT-RT-Allowed-L45-S-R45-RU';
11363 -> 'prohibit-LU-LT-RT-RU-Allowed-L45-S-R45';
11364 -> 'prohibit-LU-LT-R45-Allowed-L45-S-RT-RU';
11365 -> 'prohibit-LU-LT-R45-RU-Allowed-L45-S-RT';
11366 -> 'prohibit-LU-LT-R45-RT-Allowed-L45-S-RU';
11367 -> 'prohibit-LU-LT-R45-RT-RU-Allowed-L45-S';
11368 -> 'prohibit-LU-LT-S-Allowed-L45-R45-RT-RU';
11369 -> 'prohibit-LU-LT-S-RU-Allowed-L45-R45-RT';
11370 -> 'prohibit-LU-LT-S-RT-Allowed-L45-R45-RU';
11371 -> 'prohibit-LU-LT-S-RT-RU-Allowed-L45-R45';
11372 -> 'prohibit-LU-LT-S-R45-Allowed-L45-RT-RU';
11373 -> 'prohibit-LU-LT-S-R45-RU-Allowed-L45-RT';
11374 -> 'prohibit-LU-LT-S-R45-RT-Allowed-L45-RU';
11375 -> 'prohibit-LU-LT-S-R45-RT-RU-Allowed-L45';
11376 -> 'prohibit-LU-LT-L45-Allowed-S-R45-RT-RU';
11377 -> 'prohibit-LU-LT-L45-RU-Allowed-S-R45-RT';
11378 -> 'prohibit-LU-LT-L45-RT-Allowed-S-R45-RU';
11379 -> 'prohibit-LU-LT-L45-RT-RU-Allowed-S-R45';
11380 -> 'prohibit-LU-LT-L45-R45-Allowed-S-RT-RU';
11381 -> 'prohibit-LU-LT-L45-R45-RU-Allowed-S-RT';
11382 -> 'prohibit-LU-LT-L45-R45-RT-Allowed-S-RU';
11383 -> 'prohibit-LU-LT-L45-R45-RT-RU-Allowed-S';
11384 -> 'prohibit-LU-LT-L45-S-Allowed-R45-RT-RU';
11385 -> 'prohibit-LU-LT-L45-S-RU-Allowed-R45-RT';
11386 -> 'prohibit-LU-LT-L45-S-RT-Allowed-R45-RU';
11387 -> 'prohibit-LU-LT-L45-S-RT-RU-Allowed-R45';
11388 -> 'prohibit-LU-LT-L45-S-R45-Allowed-RT-RU';
11389 -> 'prohibit-LU-LT-L45-S-R45-RU-Allowed-RT';
11390 -> 'prohibit-LU-LT-L45-S-R45-RT-Allowed-RU';
11391 -> 'prohibit-LU-LT-L45-S-R45-RT-RU-Allowed-None';
11521 -> 'n1-16th';
11522 -> 'n1-10th';
11523 -> 'n1-8th';
11524 -> 'n1-4th';
11525 -> 'n1-3rd';
11526 -> 'n1-2';
11527 -> 'n3-4';
11531 -> n300;
11532 -> n350;
11533 -> n400;
11534 -> n450;
11535 -> n500;
11536 -> n550;
11537 -> n600;
11538 -> n650;
11539 -> n700;
11540 -> n750;
11541 -> n800;
11542 -> n850;
11543 -> n900;
11544 -> n950;
11545 -> n1000;
11546 -> n1100;
11547 -> n1200;
11548 -> n1300;
11549 -> n1400;
11550 -> n1500;
11551 -> n1600;
11552 -> n1700;
11553 -> n1800;
11554 -> n1900;
11555 -> n2000;
11556 -> n2100;
11557 -> n2200;
11558 -> n2300;
11559 -> n2400;
11560 -> n2500;
11561 -> n2600;
11562 -> n2700;
11563 -> n2800;
11564 -> n2900;
11565 -> n3000;
11566 -> n3500;
11567 -> n4000;
11568 -> n4500;
11569 -> n5000;
11570 -> n5500;
11571 -> n6000;
11572 -> n6500;
11573 -> n7000;
11574 -> n7500;
11575 -> n8000;
11576 -> n8500;
11577 -> n9000;
11578 -> n9500;
11579 -> n10000;
11580 -> n11000;
11581 -> n12000;
11582 -> n13000;
11583 -> n14000;
11584 -> n15000;
11585 -> n16000;
11586 -> n17000;
11587 -> n18000;
11588 -> n19000;
11589 -> n20000;
11590 -> n21000;
11591 -> n22000;
11592 -> n23000;
11593 -> n24000;
11594 -> n25000;
11595 -> n26000;
11596 -> n27000;
11597 -> n28000;
11598 -> n29000;
11599 -> n30000;
11600 -> n35000;
11601 -> n40000;
11602 -> n45000;
11603 -> n50000;
11604 -> n55000;
11605 -> n60000;
11606 -> n65000;
11607 -> n70000;
11608 -> n75000;
11609 -> n80000;
11610 -> n85000;
11611 -> n90000;
11612 -> n95000;
11613 -> n100000;
11777 -> 'name-follows';
11778 -> freeway;
11779 -> 'us-Route';
11780 -> 'state-Route';
11781 -> interstate;
11782 -> 'business-Loop';
11783 -> alternative;
11784 -> 'county-Route';
11785 -> 'forest-Route';
11786 -> 'farm-to-Market-Route';
11787 -> 'eisenhower-Interstate-System';
11788 -> 'americas-Byways';
11789 -> 'national-Network-Route';
11790 -> 'scenic-Area';
11791 -> 'parking-Area';
11792 -> 'weight-Station';
11793 -> road;
11794 -> exit;
11795 -> 'historical-route';
11796 -> 'state-line';
11797 -> spur;
11798 -> junction;
11799 -> 'bicycle-route';
11800 -> 'bicycle-interstate-route';
11801 -> 'national-park';
12033 -> 'bear-viewing-area';
12034 -> 'deer-viewing-area';
12035 -> 'drinking-water';
12036 -> 'environmental-study-area';
12037 -> 'falling-rocks';
12038 -> firearms;
12039 -> 'leashed-pets';
12040 -> 'point-of-interest';
12041 -> smoking;
12042 -> dog;
12043 -> 'tent-camping';
12044 -> 'trailer-camping';
12045 -> 'first-aid';
12046 -> handicapped;
12047 -> mechanic;
12048 -> 'trailer-sanitary-station';
12049 -> 'viewing-area';
12050 -> campfire;
12051 -> locker;
12052 -> sleeping;
12053 -> trail;
12054 -> climbing;
12055 -> 'rock-climbing';
12056 -> hunting;
12057 -> playground;
12058 -> 'rock-collecting';
12059 -> spelunking;
12060 -> 'bicycle-trail';
12061 -> 'hiking-trail';
12062 -> 'horse-trail';
12063 -> 'trail-interpretive-auto';
12064 -> 'trail-interpretive-pedestrian';
12065 -> 'trail-road-for-4WD-vehicles';
12066 -> 'trail-for-trail-bikes';
12067 -> archer;
12068 -> 'hang-glider';
12069 -> 'boat-tours';
12070 -> canoeing;
12071 -> diving;
12072 -> 'scuba-diving';
12073 -> fishing;
12074 -> 'marine-recreation-area';
12075 -> motorboating;
12076 -> 'boat-ramp';
12077 -> rowboating;
12078 -> sailboating;
12079 -> 'water-skiing';
12080 -> surfing;
12081 -> swimming;
12082 -> wading;
12083 -> 'hand-launch';
12084 -> kayak;
12085 -> 'wind-surf';
12086 -> 'ice-skating';
12087 -> 'ski-jumping';
12088 -> bobbing;
12089 -> 'cross-country-skiing';
12090 -> 'downhill-skiing';
12091 -> sledding;
12092 -> snowmobiling;
12093 -> snowshoeing;
12094 -> 'winter-recreation-area';
12095 -> 'scenic-overlook';
12289 -> 'regulatory-sign';
12290 -> 'warning-sign';
12291 -> 'information-sign';
12292 -> 'construction-sign';
12293 -> 'guide-sign';
12294 -> stop;
12295 -> yield;
12296 -> 'to-oncoming-traffic';
12297 -> 'four-way';
12298 -> 'all-way';
12299 -> zone;
12300 -> narrows;
12301 -> widens;
12302 -> reduced;
12303 -> combined;
12304 -> minimum;
12305 -> maximum;
12306 -> 'divided-road';
12307 -> 'double-arrow';
12308 -> 'dead-end';
12309 -> 'no-outlet';
12310 -> 'wrong-way';
12312 -> nDetour;
12313 -> chevron;
12314 -> 'do-not-enter';
12315 -> 't-intersection-to-the-side';
12316 -> 't-intersection-oncoming';
12317 -> 'y-intersection-to-the-side';
12318 -> 'y-intersection-oncoming';
12319 -> 'four-way-divided-highway-crossing';
12320 -> 't-way-divided-highway-crossing';
12321 -> 'light-rail-divided-highway-crossing';
12322 -> 'light-rail-t-divided-highway-crossing';
12323 -> 'side-road-to-right';
12324 -> 'side-road-to-left';
12325 -> 'side-road-to-right-at-angle';
12326 -> 'side-road-to-left-at-angle';
12327 -> 'entering-roadway-merge';
12328 -> 'entering-roadway-added-lane';
12329 -> 'one-way';
12330 -> caution;
12331 -> temporary;
12545 -> n1;
12546 -> n2;
12547 -> n3;
12548 -> n4;
12549 -> n5;
12550 -> n6;
12551 -> n7;
12552 -> n8;
12553 -> n9;
12554 -> n10;
12555 -> n11;
12556 -> n12;
12557 -> n13;
12558 -> n14;
12559 -> n15;
12560 -> n16;
12561 -> n17;
12562 -> n18;
12563 -> n19;
12564 -> n20;
12565 -> n21;
12566 -> n22;
12567 -> n23;
12568 -> n24;
12569 -> n25;
12570 -> n26;
12571 -> n27;
12572 -> n28;
12573 -> n29;
12574 -> n30;
12575 -> n31;
12576 -> n32;
12577 -> n33;
12578 -> n34;
12579 -> n35;
12580 -> n36;
12581 -> n37;
12582 -> n38;
12583 -> n39;
12584 -> n40;
12585 -> n41;
12586 -> n42;
12587 -> n43;
12588 -> n44;
12589 -> n45;
12590 -> n46;
12591 -> n47;
12592 -> n48;
12593 -> n49;
12594 -> n50;
12595 -> n51;
12596 -> n52;
12597 -> n53;
12598 -> n54;
12599 -> n55;
12600 -> n56;
12601 -> n57;
12602 -> n58;
12603 -> n59;
12604 -> n60;
12605 -> n61;
12606 -> n62;
12607 -> n63;
12608 -> n64;
12609 -> n65;
12610 -> n66;
12611 -> n67;
12612 -> n68;
12613 -> n69;
12614 -> n70;
12615 -> n71;
12616 -> n72;
12617 -> n73;
12618 -> n74;
12619 -> n75;
12620 -> n76;
12621 -> n77;
12622 -> n78;
12623 -> n79;
12624 -> n80;
12625 -> n81;
12626 -> n82;
12627 -> n83;
12628 -> n84;
12629 -> n85;
12630 -> n86;
12631 -> n87;
12632 -> n88;
12633 -> n89;
12634 -> n90;
12635 -> n91;
12636 -> n92;
12637 -> n93;
12638 -> n94;
12639 -> n95;
12640 -> n96;
12641 -> n97;
12642 -> n98;
12643 -> n99;
12644 -> n100;
12645 -> n101;
12646 -> n102;
12647 -> n103;
12648 -> n104;
12649 -> n105;
12650 -> n106;
12651 -> n107;
12652 -> n108;
12653 -> n109;
12654 -> n110;
12655 -> n111;
12656 -> n112;
12657 -> n113;
12658 -> n114;
12659 -> n115;
12660 -> n116;
12661 -> n117;
12662 -> n118;
12663 -> n119;
12664 -> n120;
12665 -> n121;
12666 -> n122;
12667 -> n123;
12668 -> n124;
12669 -> n125;
12670 -> n126;
12671 -> n127;
12672 -> n128;
12673 -> n129;
12674 -> n130;
12675 -> n131;
12676 -> n132;
12677 -> n133;
12678 -> n134;
12679 -> n135;
12680 -> n136;
12681 -> n137;
12682 -> n138;
12683 -> n139;
12684 -> n140;
12685 -> n141;
12686 -> n142;
12687 -> n143;
12688 -> n144;
12689 -> n145;
12690 -> n146;
12691 -> n147;
12692 -> n148;
12693 -> n149;
12694 -> n150;
12695 -> n151;
12696 -> n152;
12697 -> n153;
12698 -> n154;
12699 -> n155;
12700 -> n156;
12701 -> n157;
12702 -> n158;
12703 -> n159;
12704 -> n160;
12705 -> n161;
12706 -> n162;
12707 -> n163;
12708 -> n164;
12709 -> n165;
12710 -> n166;
12711 -> n167;
12712 -> n168;
12713 -> n169;
12714 -> n170;
12715 -> n171;
12716 -> n172;
12717 -> n173;
12718 -> n174;
12719 -> n175;
12720 -> n176;
12721 -> n177;
12722 -> n178;
12723 -> n179;
12724 -> n180;
12725 -> n181;
12726 -> n182;
12727 -> n183;
12728 -> n184;
12729 -> n185;
12730 -> n186;
12731 -> n187;
12732 -> n188;
12733 -> n189;
12734 -> n190;
12735 -> n191;
12736 -> n192;
12737 -> n193;
12738 -> n194;
12739 -> n195;
12740 -> n196;
12741 -> n197;
12742 -> n198;
12743 -> n199;
12744 -> n200;
12745 -> n201;
12746 -> n202;
12747 -> n203;
12748 -> n204;
12749 -> n205;
12750 -> n206;
12751 -> n207;
12752 -> n208;
12753 -> n209;
12754 -> n210;
12755 -> n211;
12756 -> n212;
12757 -> n213;
12758 -> n214;
12759 -> n215;
12760 -> n216;
12761 -> n217;
12762 -> n218;
12763 -> n219;
12764 -> n220;
12765 -> n221;
12766 -> n222;
12767 -> n223;
12768 -> n224;
12769 -> n225;
12770 -> n226;
12771 -> n227;
12772 -> n228;
12773 -> n229;
12774 -> n230;
12775 -> n231;
12776 -> n232;
12777 -> n233;
12778 -> n234;
12779 -> n235;
12780 -> n236;
12781 -> n237;
12782 -> n238;
12783 -> n239;
12784 -> n240;
12785 -> n241;
12786 -> n242;
12787 -> n243;
12788 -> n244;
12789 -> n245;
12790 -> n246;
12791 -> n247;
12792 -> n248;
12793 -> n249;
12794 -> n250;
12795 -> n251;
12796 -> n252;
12797 -> n253;
12798 -> n254;
12799 -> n255;
12801 -> alabama;
12802 -> alaska;
12803 -> 'american-Samoa';
12804 -> arizona;
12805 -> arkansas;
12806 -> california;
12807 -> colorado;
12808 -> connecticut;
12809 -> delaware;
12810 -> 'district-of-Columbia';
12811 -> florida;
12812 -> georgia;
12813 -> guam;
12814 -> hawaii;
12815 -> idaho;
12816 -> illinois;
12817 -> indiana;
12818 -> iowa;
12819 -> kansas;
12820 -> kentucky;
12821 -> louisiana;
12822 -> maine;
12823 -> maryland;
12824 -> massachusetts;
12825 -> michigan;
12826 -> minnesota;
12827 -> mississippi;
12828 -> missouri;
12829 -> montana;
12830 -> nebraska;
12831 -> nevada;
12832 -> 'new-Hampshire';
12833 -> 'new-Jersey';
12834 -> 'new-Mexico';
12835 -> 'new-York';
12836 -> 'north-Carolina';
12837 -> 'north-Dakota';
12838 -> 'northern-Marianas-Islands';
12839 -> ohio;
12840 -> oklahoma;
12841 -> oregon;
12842 -> pennsylvania;
12843 -> 'puerto-rico';
12844 -> 'rhode-Island';
12845 -> 'south-Carolina';
12846 -> 'south-Dakota';
12847 -> tennessee;
12848 -> texas;
12849 -> utah;
12850 -> vermont;
12851 -> virginia;
12852 -> 'virgin-Islands';
12853 -> washington;
12854 -> 'west-Virginia';
12855 -> wisconsin;
12856 -> wyoming;
13057 -> 'rest-room';
13058 -> 'mens-rest-room';
13059 -> 'womens-rest-room';
13060 -> 'family-rest-room';
13061 -> dam;
13062 -> 'fish-hatchery';
13063 -> information;
13064 -> lighthouse;
13065 -> 'lookout-tower';
13066 -> 'ranger-station';
13068 -> 'grocery-store';
13069 -> lodging;
13070 -> 'post-office';
13072 -> 'picnic-shelter';
13073 -> 'group-camping';
13074 -> 'group-picnicking';
13075 -> 'n24-hour-pharmacy';
13076 -> kennel;
13077 -> 'laundry-facilities';
13078 -> 'shower-facilities';
13079 -> amphitheater;
13080 -> stable;
13081 -> hospital;
13082 -> 'emergency-medical-service-point';
13083 -> library;
13084 -> 'recycling-collection-center';
13085 -> school;
13313 -> alley;
13314 -> annex;
13315 -> arcade;
13316 -> avenue;
13317 -> bayoo;
13318 -> beach;
13319 -> bend;
13320 -> bluff;
13321 -> bottom;
13322 -> boulevard;
13323 -> branch;
13324 -> nBridge;
13325 -> brook;
13326 -> burg;
13327 -> bypass;
13328 -> camp;
13329 -> canyon;
13330 -> cape;
13331 -> causeway;
13332 -> nCenter;
13333 -> circle;
13334 -> cliff;
13335 -> club;
13336 -> common;
13337 -> corner;
13338 -> course;
13339 -> court;
13340 -> cove;
13341 -> creek;
13342 -> crescent;
13343 -> crest;
13344 -> nCrossing;
13345 -> crossroad;
13346 -> curve;
13347 -> dale;
13348 -> nDam;
13349 -> divide;
13350 -> drive;
13351 -> estate;
13352 -> expressway;
13353 -> extension;
13354 -> fall;
13355 -> nFerry;
13356 -> field;
13357 -> flat;
13358 -> ford;
13359 -> forest;
13360 -> forge;
13361 -> fork;
13362 -> fort;
13363 -> nFreeway;
13364 -> garden;
13365 -> gateway;
13366 -> glen;
13367 -> green;
13368 -> grove;
13369 -> harbor;
13370 -> haven;
13371 -> heights;
13372 -> highway;
13373 -> nHill;
13374 -> hollow;
13375 -> inlet;
13376 -> nIsland;
13377 -> isle;
13378 -> nJunction;
13379 -> key;
13380 -> knoll;
13381 -> lake;
13382 -> land;
13383 -> landing;
13384 -> nLane;
13385 -> light;
13386 -> loaf;
13387 -> lock;
13388 -> lodge;
13389 -> loop;
13390 -> mall;
13391 -> manor;
13392 -> meadow;
13393 -> mews;
13394 -> mill;
13395 -> mission;
13396 -> motorway;
13397 -> mount;
13398 -> mountain;
13399 -> neck;
13400 -> orchard;
13401 -> oval;
13402 -> nOverpass;
13403 -> park;
13404 -> parkway;
13405 -> nPass;
13406 -> passage;
13407 -> path;
13408 -> pike;
13409 -> pine;
13410 -> plains;
13411 -> plaza;
13412 -> point;
13413 -> port;
13414 -> prairie;
13415 -> radial;
13416 -> ramp;
13417 -> ranch;
13418 -> rapid;
13419 -> rest;
13420 -> ridge;
13421 -> river;
13422 -> nRoad;
13423 -> route;
13424 -> row;
13425 -> rue;
13426 -> run;
13427 -> shoal;
13428 -> shore;
13429 -> skyway;
13430 -> spring;
13431 -> nSpur;
13432 -> square;
13433 -> nStation;
13434 -> stravenue;
13435 -> stream;
13436 -> street;
13437 -> summit;
13438 -> terrace;
13439 -> throughway;
13440 -> trace;
13441 -> nTrack;
13442 -> trafficway;
13443 -> nTrail;
13444 -> nTunnel;
13445 -> turnpike;
13446 -> nUnderpass;
13447 -> union;
13448 -> valley;
13449 -> viaduct;
13450 -> view;
13451 -> village;
13452 -> ville;
13453 -> vista;
13454 -> nWalk;
13455 -> wall;
13456 -> way;
13457 -> well;
13569 -> ahead;
13570 -> here;
13571 -> 'here-to';
13572 -> 'here-to-alley';
13573 -> 'here-to-corner';
13574 -> 'here-to-sign';
13575 -> 'between-signs';
13576 -> 'this-side-of-street';
13577 -> 'this-side-of-sign';
13579 -> right;
13580 -> left;
13581 -> 'begin-point';
13582 -> next;
13583 -> 'ends-end';
13584 -> 'other-Side';
13585 -> crossing;
13586 -> crosswalks;
13587 -> 'center-strip';
13588 -> lane;
13589 -> hill;
13590 -> 'both-ways-left-and-right';
13591 -> 'both-ways-45-degree-angle-tilting-right';
13592 -> 'both-ways-45-degree-angle-tilting-left';
13593 -> 'both-directions-of-travel';
13594 -> 'left-turn';
13595 -> 'left-45-degree-arrow';
13596 -> 'left-45-degree-turn';
13597 -> 'ahead-and-to-the-left';
13598 -> 'ahead-and-to-the-left-at-a-45-degree-angle';
13599 -> 'right-turn';
13600 -> 'right-45-degree-arrow';
13601 -> 'right-45-degree-turn';
13602 -> 'ahead-and-to-the-right';
13603 -> 'ahead-and-to-the-right-at-a-45-degree-angle';
13604 -> 'downward-left-45-degree';
13605 -> 'downward-right-45-degree';
13606 -> 'downward-left-and-right-45-degree';
13609 -> 'right-arrow';
13610 -> 'left-arrow';
13611 -> 'starting-start';
13613 -> 'chevron-right';
13614 -> 'chevron-left';
13615 -> 'right-turn-with-junction';
13616 -> 'left-turn-with-junction';
13617 -> 'hairpin-right';
13618 -> 'hairpin-left';
13619 -> 'truck-rollover-right';
13620 -> 'truck-rollover-left';
13621 -> 'n270-degree-turn-right';
13622 -> 'n270-degree-turn-left';
13623 -> 'two-lane-reverse-curve-to-right';
13624 -> 'two-lane-reverse-curve-to-left';
13625 -> 'three-lane-reverse-curve-to-right';
13626 -> 'three-lane-reverse-curve-to-left';
13627 -> 'double-reverse-curve-to-right';
13628 -> 'double-reverse-curve-to-left';
13629 -> 'two-lane-double-reverse-curve-to-right';
13630 -> 'two-lane-double-reverse-curve-to-left';
13631 -> 'three-lane-double-reverse-curve-to-right';
13632 -> 'three-lane-double-reverse-curve-to-left';
13633 -> between;
13634 -> shelter;
13635 -> center;
13636 -> 'reverse-turn-to-right';
13637 -> 'reverse-turn-to-left';
13638 -> 'reverse-curve-to-right';
13639 -> 'reverse-curve-to-left';
13640 -> 'winding-road-to-right';
13641 -> 'winding-road-to-left';
_ -> V2@V0
end,
{V2@Int2,V2@Buf1}
end
end,
{{itis,Val},NewBytes};
1 ->
{Val,NewBytes} = begin
begin
<<V3@V0:9,V3@Buf1/bitstring>> = Bytes1,
V3@Add2 = V3@V0 + 1,
<<V3@V3:V3@Add2/binary-unit:7,V3@Buf4/bitstring>> = V3@Buf1,
{V3@V5,V3@Buf6}  = {decode_chars(V3@V3, 7),V3@Buf4},
{V3@V5,V3@Buf6}
end
end,
{{text,Val},NewBytes}
end.
typeinfo('AccidentsAndIncidents') ->
  {{'INTEGER_NNL',[{accident,513},{'serious-accident',514},{'injury-accident',515},{'minor-accident',516},{'multi-vehicle-accident',517},{'numerous-accidents',518},{'accident-involving-a-bicycle',519},{'accident-involving-a-bus',520},{'accident-involving-a-motorcycle',521},{'accident-involving-a-pedestrian',522},{'accident-involving-a-train',523},{'accident-involving-a-truck',524},{'accident-involving-hazardous-materials',525},{'earlier-accident',526},{'medical-emergency',527},{'secondary-accident',528},{'rescue-and-recovery-work-REMOVED',529},{'accident-investigation-work',530},{incident,531},{'stalled-vehicle',532},{'abandoned-vehicle',533},{'disabled-vehicle',534},{'disabled-truck',535},{'disabled-semi-trailer',536},{'disabled-bus',537},{'disabled-train',538},{'vehicle-spun-out',539},{'vehicle-on-fire',540},{'vehicle-in-water',541},{'vehicles-slowing-to-look-at-accident',542},{'jackknifed-semi-trailer',543},{'jackknifed-trailer-home',544},{'jackknifed-trailer',545},{'spillage-occurring-from-moving-vehicle',546},{'acid-spill',547},{'chemical-spill',548},{'fuel-spill',549},{'hazardous-materials-spill',550},{'oil-spill',551},{'spilled-load',552},{'toxic-spill',553},{'overturned-vehicle',554},{'overturned-truck',555},{'overturned-semi-trailer',556},{'overturned-bus',557},{'derailed-train',558},{'stuck-vehicle',559},{'truck-stuck-under-bridge',560},{'bus-stuck-under-bridge',561},{'accident-involving-a-semi-trailer',562},{'accident-cleared',638},{'incident-cleared',639}]},{0,65535}};
typeinfo('AlternateRoute') ->
  {{'INTEGER_NNL',[{'detour-where-possible',8449},{'no-detour-available',8450},{'follow-signs',8451},{'follow-detour-signs',8452},{'follow-special-detour-markers',8453},{'do-not-follow-detour-signs',8454},{'detour-in-operation',8455},{'follow-local-detour',8456},{'compulsory-detour-in-operation',8457},{'no-suitable-detour-available',8458},{'detour-is-no-longer-recommended',8459},{'local-drivers-are-recommended-to-avoid-the-area',8460},{'trucks-are-recommended-to-avoid-the-area',8461},{'consider-alternate-route',8462},{'consider-alternate-parking',8463},{'consider-alternate-destination',8464},{'consider-alternate-area',8465},{'snow-route',8466},{'emergency-snow-route',8467},{'evacuation-route',8468},{'truck-route',8469},{'hazardous-materials-route',8470},{detour,8471}]},{0,65535}};
typeinfo('AssetStatus') ->
  {{'INTEGER_NNL',[{'unknown-status',10240},{'ready-for-use',10241},{'working-normally',10242},{'working-autonomously',10243},{'working-incorrectly',10244},{'not-working',10245},{'normal-maintenance',10246},{'in-route-to-use',10247},{'returning-from-use',10248},{'out-of-service',10249},{'off-duty',10250},{'on-patrol',10251},{'on-call',10252},{'on-break',10253},{'mandatory-time-off',10254},{'low-on-fuel',10255},{'low-on-water',10256},{'low-charge',10257},{missing,10258}]},{0,65535}};
typeinfo('Closures') ->
  {{'INTEGER_NNL',[{'closed-to-traffic',769},{closed,770},{'closed-ahead',771},{'closed-intermittently',772},{'closed-for-repairs',773},{'closed-for-the-season',774},{blocked,775},{'blocked-ahead',776},{'reduced-to-one-lane',777},{'reduced-to-two-lanes',778},{'reduced-to-three-lanes',779},{collapse,780},{out,781},{'open-to-traffic',891},{open,892},{'reopened-to-traffic',893},{clearing,894},{'cleared-from-road',895}]},{0,65535}};
typeinfo('DelayStatusCancellation') ->
  {{'INTEGER_NNL',[{delays,1537},{'short-delays',1538},{'long-delays',1539},{'very-long-delays',1540},{'delays-of-uncertain-duration',1541},{'delayed-until-further-notice',1542},{busy,1543},{'very-busy',1544},{crowded,1545},{overcrowded,1546},{cancellations,1547},{'route-canceled-and-no-replacement',1548},{'service-canceled',1549},{'service-suspended',1550},{'service-withdrawn',1551},{'service-fully-booked',1552},{'all-services-fully-booked',1553},{'next-departure',1554},{'next-arrival',1555},{'very-frequent-service',1556},{'frequent-service',1557},{'fairly-frequent-service',1558},{'regular-service',1559},{'irregular-service',1560},{'not-operating',1561},{'system-busy',1562},{'system-very-busy',1563},{'system-crowded',1564},{'system-overcrowded',1565},{'deleted-travel-time',1566},{headway,1567},{'extra-services-in-operation',1568},{'delays-clearing',1660},{'delays-cleared',1661},{'normal-services-resumed',1662},{operating,1663}]},{0,65535}};
typeinfo('DeviceStatus') ->
  {{'INTEGER_NNL',[{'lane-control-signs-not-working',2305},{'lane-control-signs-working-incorrectly',2306},{'lane-control-signs-operating',2307},{'variable-message-signs-not-working',2308},{'variable-message-signs-working-incorrectly',2309},{'variable-message-signs-operating',2310},{'emergency-telephones-not-working',2311},{'emergency-telephone-number-not-working',2312},{'traffic-lights-not-working',2313},{'traffic-lights-working-incorrectly',2314},{'ramp-control-signals-not-working',2315},{'ramp-control-signals-working-incorrectly',2316},{'temporary-traffic-lights-not-working',2317},{'temporary-traffic-lights-working-incorrectly',2318},{'traffic-signal-control-computer-not-working',2319},{'traffic-signal-timings-changed',2320},{'overheight-warning-system-triggered',2321},{'equipment-failure',2322},{'railroad-crossing-equipment-failure',2323},{'tunnel-ventilation-not-working',2324},{'power-failure',2325},{'widespread-power-outages',2326},{'technical-problems',2327},{'sign-down',2328},{'lines-in-road-faded',2329},{'damaged-light-standard',2330},{'traffic-signal-stuck-on-flash',2331},{'guide-rail',2332},{fencing,2333},{'light-standard-hanging-by-wires',2334},{'call-box',2335},{'signal-cabinet',2336},{detector,2337},{'improper-use-of-State-vehicle-or-equipment',2338},{'bulb-out',2339},{'not-yet-operational',2340},{'not-yet-installed',2341},{'electronic-signs-repaired',2428},{'emergency-call-facilities-restored',2429},{'traffic-signals-repaired',2430},{'railroad-crossing-equipment-now-working-normally',2431}]},{0,65535}};
typeinfo('Disasters') ->
  {{'INTEGER_NNL',[{'flash-flood',3073},{'major-flood',3074},{'reservoir-failure',3075},{'levee-failure',3076},{tsunami,3077},{'tidal-wave',3078},{'volcanic-eruption',3079},{'ash-fall',3080},{'lava-flow',3081},{'serious-fire',3082},{'forest-fire',3083},{wildfire,3084},{'building-fire',3085},{'brush-fire',3086},{'grass-fire',3087},{'fire-danger-extreme',3088},{'fire-danger-very-high',3089},{'fire-danger-high',3090},{'fire-danger-medium',3091},{'fire-danger-low',3092},{'earthquake-damage',3093},{'air-crash',3094},{'rail-crash',3095},{'toxic-release',3096},{'toxic-leak',3097},{'radioactive-release',3098},{'radiation-hazard',3099},{'reactor-leakage',3100},{explosion,3101},{'major-hazardous-materials-fire',3102},{'major-hazardous-materials-release',3103},{'disaster-cleared',3199}]},{0,65535}};
typeinfo('Disturbances') ->
  {{'INTEGER_NNL',[{assault,3329},{crime,3330},{robbery,3331},{'fare-dispute',3332},{shooting,3333},{'gunfire-on-roadway',3334},{suicide,3335},{fight,3336},{'gang-fight',3337},{'person-harassment',3338},{'person-injured',3339},{'unruly-passenger',3340},{'person-intoxicated',3341},{'crowd-control-problem',3342},{demonstration,3343},{march,3344},{'public-disturbance',3345},{riot,3346},{'civil-unrest',3347},{'civil-emergency',3348},{strike,3349},{'public-transit-strike',3350},{stampede,3351},{'teargas-used',3352},{'security-alert',3353},{'security-incident',3354},{checkpoint,3355},{'bomb-alert',3356},{'terrorist-incident',3357},{'high-velocity-shell-fire',3358},{'explosives-in-use',3359},{'air-raid',3360},{'weapons-of-mass-destruction-threat',3361},{'military-operations',3362},{'sick-customer',3363},{'security-problem-cleared',3454},{'traffic-disturbance-cleared',3455}]},{0,65535}};
typeinfo('GenericLocations') ->
  {{'INTEGER_NNL',[{'on-bridges',7937},{'in-tunnels',7938},{'entering-or-leaving-tunnels',7939},{'on-ramps',7940},{'in-road-construction-area',7941},{'around-a-curve',7942},{'on-minor-roads',7943},{'in-the-opposing-lanes',7944},{'adjacent-to-roadway',7945},{'on-bend',7946},{'entire-intersection',7947},{'in-the-median',7948},{'moved-to-side-of-road',7949},{'moved-to-shoulder',7950},{'on-the-roadway',7951},{'in-shaded-areas',7952},{'in-low-lying-areas',7953},{'in-the-downtown-area',7954},{'in-the-inner-city-area',7955},{'in-parts',7956},{'in-some-places',7957},{'in-the-ditch',7958},{'in-the-valley',7959},{'on-hill-top',7960},{'near-the-foothills',7961},{'at-high-altitudes',7962},{'near-the-lake',7963},{'near-the-shore',7964},{'over-the-crest-of-a-hill',7965},{'other-than-on-the-roadway',7966},{'near-the-beach',7967},{'near-beach-access-point',7968},{'lower-level',7969},{'upper-level',7970},{airport,7971},{concourse,7972},{gate,7973},{'baggage-claim',7974},{'customs-point',7975},{station,7976},{platform,7977},{dock,7978},{depot,7979},{'ev-charging-point',7980},{'information-welcome-point',7981},{'at-rest-area',7982},{'at-service-area',7983},{'at-weigh-station',7984},{'picnic-areas',7985},{'rest-area',7986},{'service-stations',7987},{toilets,7988},{'on-the-right',7989},{'on-the-left',7990},{'in-the-center',7991},{'in-the-opposite-direction',7992},{'cross-traffic',7993},{'northbound-traffic',7994},{'eastbound-traffic',7995},{'southbound-traffic',7996},{'westbound-traffic',7997},{north,7998},{south,7999},{east,8000},{west,8001},{northeast,8002},{northwest,8003},{southeast,8004},{southwest,8005},{'mountain-pass',8006},{'reservation-center',8007},{'nearby-basin',8008},{'on-tracks',8009},{dip,8010},{'traffic-circle',8011},{'park-and-ride-lot',8012},{to,8014},{by,8015},{through,8016},{'area-of',8017},{under,8018},{over,8019},{from,8020},{approaching,8021},{'entering-at',8022},{'exiting-at',8023},{'across-tracks',8024},{'in-street',8025},{'on-curve',8026},{shoulder,8027},{crossover,8028},{'cross-road',8029},{'side-road',8030},{'bus-stop',8031},{intersection,8032},{'roadside-park',8033},{coast,8034}]},{0,65535}};
typeinfo('IncidentResponseEquipment') ->
  {{'INTEGER_NNL',[{'ground-fire-suppression',9985},{'heavy-ground-equipment',9986},{aircraft,9988},{'marine-equipment',9989},{'support-equipment',9990},{'medical-rescue-unit',9991},{other,9993},{'ground-fire-suppression-other',9994},{engine,9995},{'truck-or-aerial',9996},{quint,9997},{'tanker-pumper-combination',9998},{'brush-truck',10000},{'aircraft-rescue-firefighting',10001},{'heavy-ground-equipment-other',10004},{'dozer-or-plow',10005},{tractor,10006},{'tanker-or-tender',10008},{'aircraft-other',10024},{'aircraft-fixed-wing-tanker',10025},{helitanker,10026},{helicopter,10027},{'marine-equipment-other',10034},{'fire-boat-with-pump',10035},{'boat-no-pump',10036},{'support-apparatus-other',10044},{'breathing-apparatus-support',10045},{'light-and-air-unit',10046},{'medical-rescue-unit-other',10054},{'rescue-unit',10055},{'urban-search-rescue-unit',10056},{'high-angle-rescue',10057},{'crash-fire-rescue',10058},{'bLS-unit',10059},{'aLS-unit',10060},{'mobile-command-post',10075},{'chief-officer-car',10076},{'hAZMAT-unit',10077},{'type-i-hand-crew',10078},{'type-ii-hand-crew',10079},{'privately-owned-vehicle',10083},{'other-apparatus-resource',10084},{ambulance,10085},{'bomb-squad-van',10086},{'combine-harvester',10087},{'construction-vehicle',10088},{'farm-tractor',10089},{'grass-cutting-machines',10090},{'hAZMAT-containment-tow',10091},{'heavy-tow',10092},{'hedge-cutting-machines',10093},{'light-tow',10094},{'mobile-crane',10095},{'refuse-collection-vehicle',10096},{'resurfacing-vehicle',10097},{'road-sweeper',10098},{'roadside-litter-collection-crews',10099},{'salvage-vehicle',10100},{'sand-truck',10101},{snowplow,10102},{'steam-roller',10103},{'swat-team-van',10104},{'track-laying-vehicle',10105},{'unknown-vehicle',10106},{'white-lining-vehicle',10107},{'dump-truck',10108},{'supervisor-vehicle',10109},{'snow-blower',10110},{'rotary-snow-blower',10111},{'road-grader',10112},{'steam-truck',10113},{'flatbed-tow',10114},{'survey-crews',10115}]},{0,65535}};
typeinfo('IncidentResponseStatus') ->
  {{'INTEGER_NNL',[{'unconfirmed-report',2817},{'initial-response-en-route',2818},{'follow-up-response-en-route',2819},{'initial-response-on-scene',2820},{'follow-up-response-on-scene',2821},{'confirmed-report',2822},{'scene-is-unsecured-at-this-time',2823},{'response-scene-secured',2824},{'rescue-and-recovery-work-in-progress',2825},{'extraction-in-progress',2826},{'clearance-work-in-progress',2827},{'body-removal-operations',2828},{'fire-containment-contained',2829},{'fire-containment-not-contained',2830},{'event-cleared',2831},{'traffic-clearing',2832},{'incident-closed',2833}]},{0,65535}};
typeinfo('SystemInformation') ->
  {{'INTEGER_NNL',[{'information-available-on-radio',4353},{'information-available-on-TV',4354},{'call-to-get-information',4355},{'information-available-via-Internet',4356},{'test-message',4357},{'no-information-available',4358},{'null-description',4359},{'information-service-is-being-suspended',4360},{'police-assistance',4361},{'police-monitor-CB',4362},{'emergency-notification',4363},{'in-emergency-dial-911',4364},{'travel-Info-call-511',4365},{'car-pool-information',4366},{'information-service-resumed',4478},{'message-canceled',4479}]},{0,65535}};
typeinfo('AdviceInstructionsMandatory') ->
  {{'INTEGER_NNL',[{'keep-to-the-right',7425},{'keep-to-the-left',7426},{'use-right-lane',7427},{'use-left-lane',7428},{'heavy-vehicles-use-right-lane',7429},{'heavy-vehicles-use-left-lane',7430},{'observe-signals',7431},{'observe-signs',7432},{'no-passing',7433},{'no-smoking',7434},{'no-open-flames',7435},{'use-shoulder-as-lane',7436},{'do-not-drive-on-the-shoulder',7437},{'allow-emergency-vehicles-to-pass',7438},{'clear-a-lane-for-emergency-vehicles',7439},{'pull-over-to-the-edge-of-the-roadway',7440},{'wait-for-escort-vehicle',7441},{'in-emergency-wait-for-police-patrol',7442},{'reduce-your-speed',7443},{'observe-speed-limits',7444},{'check-point',7445},{'entry-requirements',7446},{'insurance-requirements',7447},{'firearms-requirements',7448},{'pet-requirements',7449},{'stay-in-lane',7450},{merge,7451},{'slower-traffic-keep-right',7452},{'keep-off',7453},{'evacuate-area-immediately',7454},{'shoulder-travel-no-longer-allowed',7547}]},{0,65535}};
typeinfo('AdviceInstructionsRecommendations') ->
  {{'INTEGER_NNL',[{'drive-carefully',7169},{'drive-with-extreme-caution',7170},{'approach-with-care',7171},{'keep-your-distance',7172},{'increase-normal-following-distance',7173},{'test-your-brakes',7174},{'cross-intersection-with-care',7175},{'pass-with-care',7176},{'use-low-beam-headlights',7177},{'use-fog-lights',7178},{'use-hazard-warning-lights',7179},{'do-not-leave-your-vehicle',7180},{'leave-your-vehicle-and-proceed-to-next-safe-place',7181},{'turn-off-engine',7182},{'close-all-windows-turn-off-heater-air-conditioner-and-vents',7183},{'turn-off-air-conditioner-to-prevent-engine-overheating',7184},{'turn-off-mobile-phones-and-two-way-radios',7185},{'prepare-to-stop',7186},{'stop-at-next-rest-area',7187},{'stop-at-next-safe-place',7188},{'only-travel-if-absolutely-necessary',7189},{'drive-to-another-service-area',7190},{'use-through-traffic-lanes',7191},{'use-local-traffic-lanes',7192},{'use-left-hand-parallel-roadway',7193},{'use-right-hand-parallel-roadway',7194},{'use-heavy-vehicle-lane',7195},{'observe-recommended-speed',7196},{'facing-traffic',7197},{'push-button',7198},{'to-cross-street',7199},{pass,7200},{'be-prepared-to-stop',7201},{'signals-sequenced-for-speed',7202},{'maintain-top-safe-speed',7203},{'evacuate-area-voluntarily',7204},{'shelter-in-place',7205}]},{0,65535}};
typeinfo('ITIStext') ->
  string;
typeinfo('ITISgroups') ->
  {{'INTEGER_NNL',[{trafficConditions,1},{accidentsAndIncidents,2},{closures,3},{roadwork,4},{obstruction,5},{delayStatusCancellation,6},{unusualDriving,7},{mobileSituation,8},{deviceStatus,9},{restrictionClass,10},{incidentResponseStatus,11},{disasters,12},{disturbances,13},{sportingEvents,14},{specialEvents,15},{parkingInformation,16},{systemInformation,17},{weatherConditions,18},{precipitation,19},{winds,20},{visibilityAndAirQuality,21},{temperature,22},{pavementConditions,23},{winterDrivingRestrictions,24},{winterDrivingIndex,25},{suggestionAdvice,26},{warningAdvice,27},{adviceInstructionsRecommendations,28},{adviceInstructionsMandatory,29},{qualifiers,30},{genericLocations,31},{laneRoadway,32},{alternateRoute,33},{units,34},{transitMode,35},{vehicleGroupAffected,36},{travelerGroupAffected,37},{responderGroupAffected,38},{incidentResponseEquipment,39},{assetStatus,40},{roadsideAssets,41},{transitOperations,42},{objects,43},{validManeuvers,44},{largeNumbers,45},{namedObjects,46},{recreationalObjectsAndActivities,47},{regulatoryAndWarningSigns,48},{smallNumbers,49},{states,50},{structures,51},{streetSuffixes,52},{mUTCDLocations,53}]},{0,255}};
typeinfo('ITIScodes') ->
  {{'INTEGER_NNL',[{'stopped-traffic',257},{'stop-and-go-traffic',258},{'slow-traffic',259},{'heavy-traffic',260},{'traffic-building',261},{'long-queues',262},{'traffic-congestion',263},{'traffic-lighter-than-normal',264},{'traffic-heavier-than-normal',265},{'traffic-much-heavier-than-normal',266},{'current-speed',267},{'speed-limit',268},{'travel-time',269},{'merging-traffic',272},{contraflow,273},{'contraflow-canceled',378},{'traffic-flowing-freely',379},{'traffic-easing',380},{'traffic-returned-to-normal',381},{'no-problems-to-report',382},{'traffic-congestion-cleared',383},{accident,513},{'serious-accident',514},{'injury-accident',515},{'minor-accident',516},{'multi-vehicle-accident',517},{'numerous-accidents',518},{'accident-involving-a-bicycle',519},{'accident-involving-a-bus',520},{'accident-involving-a-motorcycle',521},{'accident-involving-a-pedestrian',522},{'accident-involving-a-train',523},{'accident-involving-a-truck',524},{'accident-involving-hazardous-materials',525},{'earlier-accident',526},{'medical-emergency',527},{'secondary-accident',528},{'rescue-and-recovery-work-REMOVED',529},{'accident-investigation-work',530},{incident,531},{'stalled-vehicle',532},{'abandoned-vehicle',533},{'disabled-vehicle',534},{'disabled-truck',535},{'disabled-semi-trailer',536},{'disabled-bus',537},{'disabled-train',538},{'vehicle-spun-out',539},{'vehicle-on-fire',540},{'vehicle-in-water',541},{'vehicles-slowing-to-look-at-accident',542},{'jackknifed-semi-trailer',543},{'jackknifed-trailer-home',544},{'jackknifed-trailer',545},{'spillage-occurring-from-moving-vehicle',546},{'acid-spill',547},{'chemical-spill',548},{'fuel-spill',549},{'hazardous-materials-spill',550},{'oil-spill',551},{'spilled-load',552},{'toxic-spill',553},{'overturned-vehicle',554},{'overturned-truck',555},{'overturned-semi-trailer',556},{'overturned-bus',557},{'derailed-train',558},{'stuck-vehicle',559},{'truck-stuck-under-bridge',560},{'bus-stuck-under-bridge',561},{'accident-involving-a-semi-trailer',562},{'accident-cleared',638},{'incident-cleared',639},{'closed-to-traffic',769},{closed,770},{'closed-ahead',771},{'closed-intermittently',772},{'closed-for-repairs',773},{'closed-for-the-season',774},{blocked,775},{'blocked-ahead',776},{'reduced-to-one-lane',777},{'reduced-to-two-lanes',778},{'reduced-to-three-lanes',779},{collapse,780},{out,781},{'open-to-traffic',891},{open,892},{'reopened-to-traffic',893},{clearing,894},{'cleared-from-road',895},{'road-construction',1025},{'major-road-construction',1026},{'long-term-road-construction',1027},{'construction-work',1028},{'paving-operations',1029},{'work-in-the-median',1030},{'road-reconstruction',1031},{'opposing-traffic',1032},{'narrow-lanes',1033},{'construction-traffic-merging',1034},{'single-line-traffic-alternating-directions',1035},{'road-maintenance-operations',1036},{'road-marking-operations',1037},{'bridge-maintenance-operations',1038},{'bridge-construction',1039},{'bridge-demolition-work',1040},{blasting,1041},{'avalanche-control-activities',1042},{'water-main-work',1043},{'gas-main-work',1044},{'work-on-underground-cables',1045},{'work-on-underground-services',1046},{'new-road-construction-layout',1047},{'new-road-layout',1048},{'temporary-lane-markings',1049},{'temporary-traffic-lights',1050},{'emergency-maintenance',1051},{cracks,1052},{bumps,1053},{'storm-drain',1054},{'overgrown-grass',1055},{'overgrown-brushshrubs',1056},{'overgrown-trees',1057},{'crack-REMOVE',1058},{'drop-off',1059},{'seismic-retrofit',1060},{'road-widening',1061},{'utility-work',1062},{'road-maintenance-cleared',1146},{'normal-road-layout-restored',1147},{'road-work-clearance-in-progress',1148},{'road-construction-cleared',1149},{'normal-traffic-lanes-restored',1150},{'road-work-cleared',1151},{'obstruction-on-roadway',1281},{'object-on-roadway',1282},{'objects-falling-from-moving-vehicle',1283},{'debris-on-roadway',1284},{'storm-damage',1285},{'people-on-roadway',1286},{'bicyclists-on-roadway',1287},{'sightseers-obstructing-access',1288},{'large-numbers-of-visitors',1289},{'animal-on-roadway',1290},{'large-animal-on-roadway',1291},{'herd-of-animals-on-roadway',1292},{'animal-struck',1293},{'fallen-trees',1294},{'downed-power-lines',1295},{'downed-cables',1296},{subsidence,1297},{'road-surface-collapse',1298},{'pavement-buckled',1299},{pothole,1300},{flooding,1301},{'broken-water-main',1302},{'collapsed-sewer',1303},{'sewer-overflow',1304},{'gas-leak',1305},{snowmelt,1306},{mudslide,1307},{avalanche,1308},{rockfall,1309},{landslide,1310},{'over-turned-trees',1311},{'tree-limbs',1312},{'utility-pole-down',1314},{'advertising-signs',1315},{'frost-heave',1316},{'frost-jacking',1317},{washboard,1318},{'wash-out',1319},{'clearance-work',1406},{'obstruction-cleared',1407},{delays,1537},{'short-delays',1538},{'long-delays',1539},{'very-long-delays',1540},{'delays-of-uncertain-duration',1541},{'delayed-until-further-notice',1542},{busy,1543},{'very-busy',1544},{crowded,1545},{overcrowded,1546},{cancellations,1547},{'route-canceled-and-no-replacement',1548},{'service-canceled',1549},{'service-suspended',1550},{'service-withdrawn',1551},{'service-fully-booked',1552},{'all-services-fully-booked',1553},{'next-departure',1554},{'next-arrival',1555},{'very-frequent-service',1556},{'frequent-service',1557},{'fairly-frequent-service',1558},{'regular-service',1559},{'irregular-service',1560},{'not-operating',1561},{'system-busy',1562},{'system-very-busy',1563},{'system-crowded',1564},{'system-overcrowded',1565},{'deleted-travel-time',1566},{headway,1567},{'extra-services-in-operation',1568},{'delays-clearing',1660},{'delays-cleared',1661},{'normal-services-resumed',1662},{operating,1663},{'vehicle-traveling-wrong-way',1793},{'reckless-driver',1794},{'prohibited-vehicle-on-roadway',1795},{'emergency-vehicles-on-roadway',1796},{'high-speed-emergency-vehicles',1797},{'high-speed-chase',1798},{'dangerous-vehicle-warning-cleared',1918},{'emergency-vehicle-warning-cleared',1919},{'abnormal-load',2049},{'wide-load',2050},{'long-load',2051},{'slow-vehicle',2052},{'farm-equipment',2053},{'horse-drawn-vehicles',2054},{'overheight-load',2055},{'overweight-load',2056},{'tracked-vehicle',2057},{'vehicle-carrying-hazardous-materials',2058},{'slow-moving-maintenance-vehicle',2059},{convoy,2060},{'military-convoy',2061},{'refugee-convoy',2062},{motorcade,2063},{'mobile-situation-repositioning',2064},{'winter-maintenance-vehicles',2065},{snowplows,2066},{'slow-moving-maintenance-vehicle-warning-cleared',2172},{'exceptional-load-warning-cleared',2173},{'hazardous-load-warning-cleared',2174},{'convoy-cleared',2175},{'lane-control-signs-not-working',2305},{'lane-control-signs-working-incorrectly',2306},{'lane-control-signs-operating',2307},{'variable-message-signs-not-working',2308},{'variable-message-signs-working-incorrectly',2309},{'variable-message-signs-operating',2310},{'emergency-telephones-not-working',2311},{'emergency-telephone-number-not-working',2312},{'traffic-lights-not-working',2313},{'traffic-lights-working-incorrectly',2314},{'ramp-control-signals-not-working',2315},{'ramp-control-signals-working-incorrectly',2316},{'temporary-traffic-lights-not-working',2317},{'temporary-traffic-lights-working-incorrectly',2318},{'traffic-signal-control-computer-not-working',2319},{'traffic-signal-timings-changed',2320},{'overheight-warning-system-triggered',2321},{'equipment-failure',2322},{'railroad-crossing-equipment-failure',2323},{'tunnel-ventilation-not-working',2324},{'power-failure',2325},{'widespread-power-outages',2326},{'technical-problems',2327},{'sign-down',2328},{'lines-in-road-faded',2329},{'damaged-light-standard',2330},{'traffic-signal-stuck-on-flash',2331},{'guide-rail',2332},{fencing,2333},{'light-standard-hanging-by-wires',2334},{'call-box',2335},{'signal-cabinet',2336},{detector,2337},{'improper-use-of-State-vehicle-or-equipment',2338},{'bulb-out',2339},{'not-yet-operational',2340},{'not-yet-installed',2341},{'electronic-signs-repaired',2428},{'emergency-call-facilities-restored',2429},{'traffic-signals-repaired',2430},{'railroad-crossing-equipment-now-working-normally',2431},{restrictions,2561},{'ramp-restrictions',2562},{'truck-restriction',2563},{'speed-restriction',2564},{'noise-restriction',2565},{'traffic-regulations-have-been-changed',2566},{'local-access-only',2567},{'no-trailers',2568},{'no-high-profile-vehicles',2569},{'hazardous-materials-truck-restriction',2570},{'no-through-traffic',2571},{'no-motor-vehicles',2572},{'width-limit',2573},{'height-limit',2574},{'length-limit',2575},{'axle-load-limit',2576},{'gross-weight-limit',2577},{'axle-count-limit',2578},{'carpool-lane-available',2579},{'carpool-restrictions-changed',2580},{'hOV-2-no-single-occupant-vehicles',2581},{'hOV-3-no-vehicles-with-less-than-three-occupants',2582},{'bus-lane-available-for-all-vehicles',2583},{'truck-lane-available-for-all-vehicles',2584},{'permits-call-in-basis',2585},{'permits-temporarily-closed',2586},{'permits-closed',2587},{'road-use-permits-required',2588},{'permits-open',2675},{'restrictions-for-high-profile-vehicles-lifted',2676},{'width-limit-lifted',2677},{'height-limit-lifted',2678},{'length-limit-lifted',2679},{'axle-load-limit-lifted',2680},{'weight-limit-lifted',2681},{'axle-count-limit-lifted',2682},{'carpool-restrictions-lifted',2683},{'lane-restrictions-lifted',2684},{'ramp-restrictions-lifted',2685},{'motor-vehicle-restrictions-lifted',2686},{'restrictions-lifted',2687},{'unconfirmed-report',2817},{'initial-response-en-route',2818},{'follow-up-response-en-route',2819},{'initial-response-on-scene',2820},{'follow-up-response-on-scene',2821},{'confirmed-report',2822},{'scene-is-unsecured-at-this-time',2823},{'response-scene-secured',2824},{'rescue-and-recovery-work-in-progress',2825},{'extraction-in-progress',2826},{'clearance-work-in-progress',2827},{'body-removal-operations',2828},{'fire-containment-contained',2829},{'fire-containment-not-contained',2830},{'event-cleared',2831},{'traffic-clearing',2832},{'incident-closed',2833},{'flash-flood',3073},{'major-flood',3074},{'reservoir-failure',3075},{'levee-failure',3076},{tsunami,3077},{'tidal-wave',3078},{'volcanic-eruption',3079},{'ash-fall',3080},{'lava-flow',3081},{'serious-fire',3082},{'forest-fire',3083},{wildfire,3084},{'building-fire',3085},{'brush-fire',3086},{'grass-fire',3087},{'fire-danger-extreme',3088},{'fire-danger-very-high',3089},{'fire-danger-high',3090},{'fire-danger-medium',3091},{'fire-danger-low',3092},{'earthquake-damage',3093},{'air-crash',3094},{'rail-crash',3095},{'toxic-release',3096},{'toxic-leak',3097},{'radioactive-release',3098},{'radiation-hazard',3099},{'reactor-leakage',3100},{explosion,3101},{'major-hazardous-materials-fire',3102},{'major-hazardous-materials-release',3103},{'disaster-cleared',3199},{assault,3329},{crime,3330},{robbery,3331},{'fare-dispute',3332},{shooting,3333},{'gunfire-on-roadway',3334},{suicide,3335},{fight,3336},{'gang-fight',3337},{'person-harassment',3338},{'person-injured',3339},{'unruly-passenger',3340},{'person-intoxicated',3341},{'crowd-control-problem',3342},{demonstration,3343},{march,3344},{'public-disturbance',3345},{riot,3346},{'civil-unrest',3347},{'civil-emergency',3348},{strike,3349},{'public-transit-strike',3350},{stampede,3351},{'teargas-used',3352},{'security-alert',3353},{'security-incident',3354},{checkpoint,3355},{'bomb-alert',3356},{'terrorist-incident',3357},{'high-velocity-shell-fire',3358},{'explosives-in-use',3359},{'air-raid',3360},{'weapons-of-mass-destruction-threat',3361},{'military-operations',3362},{'sick-customer',3363},{'security-problem-cleared',3454},{'traffic-disturbance-cleared',3455},{'sports-event',3585},{game,3586},{tournament,3587},{'track-and-field-event',3588},{'baseball-game',3589},{'basketball-game',3590},{'boxing-match',3591},{'football-game',3592},{'soccer-game',3593},{'golf-tournament',3594},{'hockey-game',3595},{'tennis-tournament',3596},{'wrestling-match',3597},{'road-race',3598},{'automobile-race',3599},{'bicycle-race',3600},{'race-event',3601},{marathon,3602},{'horse-show',3603},{rodeo,3604},{'water-sports-event',3605},{'winter-sports-event',3606},{'skating-event',3607},{'dog-sled-race',3608},{'sporting-event-ended',3711},{'major-event',3841},{airshow,3842},{'hot-air-ballooning',3843},{concert,3844},{'state-occasion',3845},{'vIP-visit',3846},{show,3847},{festival,3848},{exhibition,3849},{'performing-arts',3850},{'outdoor-market',3851},{fair,3852},{carnival,3853},{'fireworks-display',3854},{'trade-expo',3855},{'movie-filming',3856},{'presidential-visit',3857},{parade,3858},{procession,3859},{'funeral-procession',3860},{crowd,3861},{'holiday-traffic-crowds',3862},{'event-ended',3967},{'normal-parking-restrictions-lifted',4097},{'parking-meter-restrictions-lifted',4098},{'special-parking-restrictions-in-force',4099},{'full-parking-lot',4100},{'full-parking-garage',4101},{'all-parking-lots-full',4102},{'no-parking-spaces-available',4103},{'only-a-few-spaces-available',4104},{'spaces-available',4105},{'no-parking',4106},{'parking-on-one-side-of-street-only',4107},{'parking-on-both-sides-of-street',4108},{'parallel-parking-only',4109},{'parking-meters-not-available',4110},{'use-of-parking-meters-restricted',4111},{'event-parking',4112},{'handicapped-parking',4113},{'long-term-parking',4114},{'overnight-parking',4115},{'short-term-parking',4116},{'parking-by-permit-only',4117},{'emergency-parking-only',4118},{'emergency-stopping-only',4119},{parking,4120},{stopping,4121},{standing,4122},{'tow-away-zone',4123},{'school-zone',4124},{'speed-zone',4125},{'loading-zone',4126},{'state-law',4127},{'van-accessible',4128},{'special-parking-restrictions-lifted',4222},{'no-parking-information-available',4223},{'information-available-on-radio',4353},{'information-available-on-TV',4354},{'call-to-get-information',4355},{'information-available-via-Internet',4356},{'test-message',4357},{'no-information-available',4358},{'null-description',4359},{'information-service-is-being-suspended',4360},{'police-assistance',4361},{'police-monitor-CB',4362},{'emergency-notification',4363},{'in-emergency-dial-911',4364},{'travel-Info-call-511',4365},{'car-pool-information',4366},{'information-service-resumed',4478},{'message-canceled',4479},{overcast,4609},{cloudy,4610},{'mostly-cloudy',4611},{'partly-cloudy',4612},{'partly-sunny',4613},{'mostly-sunny',4614},{sunny,4615},{'fair-skies',4616},{'clear-skies',4617},{'mostly-clear',4618},{'mostly-dry',4619},{dry,4620},{'uV-index-very-high',4621},{'uV-index-high',4622},{'uV-index-moderate',4623},{'uV-index-low',4624},{'uV-index-very-low',4625},{'barometric-pressure',4626},{'ozone-alert',4627},{'lighting-unknown',4628},{'artificial-exterior-light',4629},{'artificial-interior-light',4630},{darkness,4631},{dusk,4632},{dawn,4633},{moonlight,4634},{daylight,4635},{'weather-forecast-withdrawn',4735},{'severe-weather',4865},{blizzard,4866},{'heavy-snow',4867},{snow,4868},{'light-snow',4869},{'snow-showers',4870},{'winter-storm',4871},{'ice-glaze',4872},{'heavy-frost',4873},{frost,4874},{'ice-storm',4875},{sleet,4876},{'rain-and-snow-mixed',4877},{'rain-changing-to-snow',4878},{'damaging-hail',4879},{hail,4880},{thunderstorms,4881},{thundershowers,4882},{'extremely-heavy-downpour',4883},{'heavy-rain',4884},{rain,4885},{'light-rain',4886},{drizzle,4887},{showers,4888},{dew,4889},{'precipitation-cleared',4991},{tornado,5121},{hurricane,5122},{'hurricane-force-winds',5123},{'tropical-storm',5124},{'gale-force-winds',5125},{'storm-force-winds',5126},{'strong-winds',5127},{'moderate-winds',5128},{'light-winds',5129},{calm,5130},{'gusty-winds',5131},{crosswinds,5132},{windy,5133},{'strong-winds-have-eased',5246},{'strong-wind-forecast-withdrawn',5247},{'dense-fog',5377},{fog,5378},{'patchy-fog',5379},{'freezing-fog',5380},{mist,5381},{haze,5382},{'visibility-reduced',5383},{'white-out',5384},{'blowing-snow',5385},{'smoke-hazard',5386},{'spray-hazard',5387},{'low-sun-glare',5388},{'snow-glare',5389},{'blowing-dust',5390},{'blowing-sand',5391},{'dust-storms',5392},{sandstorms,5393},{'air-quality-good',5394},{'air-quality-fair',5395},{'air-quality-poor',5396},{'air-quality-very-poor',5397},{'severe-exhaust-pollution',5398},{'smog-alert',5399},{'pollen-count-high',5400},{'pollen-count-medium',5401},{'pollen-count-low',5402},{'swarms-of-insects',5403},{'visibility-blocked',5404},{'ice-fog',5405},{'fog-clearing',5499},{'visibility-improved',5500},{'fog-forecast-withdrawn',5501},{'pollution-alert-ended',5502},{'air-quality-improved',5503},{'maximum-temperature',5633},{temperature,5634},{'minimum-temperature',5635},{'current-temperature',5636},{'heat-index',5637},{'extreme-heat',5638},{hot,5639},{hotter,5640},{heat,5641},{warmer,5642},{warm,5643},{mild,5644},{cool,5645},{cooler,5646},{cold,5647},{colder,5648},{'very-cold',5649},{'extreme-cold',5650},{'wind-chill',5651},{dewpoint,5652},{'relative-humidity',5653},{'temperatures-close-to-the-seasonal-norm',5758},{'less-extreme-temperatures',5759},{impassable,5889},{'almost-impassable',5890},{'passable-with-care',5891},{passable,5892},{'surface-water-hazard',5893},{'danger-of-hydroplaning',5894},{'wet-pavement',5895},{'treated-pavement',5896},{slippery,5897},{'mud-on-roadway',5898},{'leaves-on-roadway',5899},{'loose-sand-on-roadway',5900},{'loose-gravel',5901},{'fuel-on-roadway',5902},{'oil-on-roadway',5903},{'road-surface-in-poor-condition',5904},{'melting-tar',5905},{ice,5906},{'icy-patches',5907},{'black-ice',5908},{'ice-pellets-on-roadway',5909},{'ice-build-up',5910},{'freezing-rain',5911},{'wet-and-icy-roads',5912},{'melting-snow',5913},{slush,5914},{'frozen-slush',5915},{'snow-on-roadway',5916},{'packed-snow',5917},{'packed-snow-patches',5918},{'plowed-snow',5919},{'wet-snow',5920},{'fresh-snow',5921},{'powder-snow',5922},{'granular-snow',5923},{'frozen-snow',5924},{'crusted-snow',5925},{'deep-snow',5926},{'snow-drifts',5927},{'drifting-snow',5928},{'expected-snow-accumulation',5929},{'current-snow-accumulation',5930},{'rough-road',5931},{sand,5932},{gravel,5933},{paved,5934},{'uneven-lanes',5935},{'rough-crossing',5936},{'at-grade-level-crossing',5937},{'low-ground-clearance',5938},{'dry-pavement',6011},{'snow-cleared',6012},{'pavement-conditions-improved',6013},{'skid-hazard-reduced',6014},{'pavement-conditions-cleared',6015},{'winter-equipment-recommended',6145},{'winter-equipment-required',6146},{'snow-chains-recommended',6147},{'snow-chains-required',6148},{'snow-chains-prohibited',6149},{'studded-tires-prohibited',6150},{'snow-tires-recommended',6151},{'snow-tires-required',6152},{'four-wheel-drive-recommended',6153},{'four-wheel-drive-required',6154},{'snow-tires-or-chains-recommended',6155},{'snow-tires-or-chains-required',6156},{'winter-driving-requirements-lifted',6271},{'driving-conditions-good',6401},{'driving-conditions-fair',6402},{'difficult-driving-conditions',6403},{'very-difficult-driving-conditions',6404},{'hazardous-driving-conditions',6405},{'extremely-hazardous-driving-conditions',6406},{'why-not-ride-share',6657},{'is-this-your-no-ride-day',6658},{'why-not-use-transit',6659},{'why-not-park-and-ride',6660},{'why-not-try-paratransit',6661},{'why-not-travel-by-rail',6662},{'why-not-use-the-subway',6663},{'why-not-try-rapid-transit',6664},{'why-not-travel-by-bus',6665},{'your-parking-ticket-covers-the-return-ride',6666},{'avoid-the-rush-hour',6667},{'do-not-allow-unnecessary-gaps',6668},{'follow-the-vehicle-in-front-smoothly',6669},{'do-not-slow-down-unnecessarily',6670},{'watch-for-muggers',6671},{'watch-for-pickpockets',6672},{'watch-for-thieves',6673},{'sorry-for-any-delay',6674},{'thank-you-for-your-understanding',6675},{'we-appreciate-your-patience',6676},{'we-are-grateful-for-your-cooperation',6677},{'share-the-road',6678},{risk,6913},{watch,6914},{warning,6915},{alert,6916},{danger,6917},{'danger-of-explosion',6918},{'danger-of-fire',6919},{'extra-police-patrols-in-operation',6920},{'look-out-for-vehicles-stopped-under-bridges',6921},{'increased-risk-of-accident',6922},{'rescue-and-recovery-work-in-progress-at-sceneREMOVED',6923},{'police-at-scene',6924},{'emergency-vehicles-at-scene',6925},{'traffic-being-directed-around-accident-area',6926},{'police-directing-traffic',6927},{'rescue-workers-directing-traffic',6928},{'repairs-in-progress',6929},{'pilot-car-in-operation',6930},{'look-out-for-flagger',6931},{'police-checks-in-operation',6932},{'mandatory-speed-limit-in-force',6933},{'speed-limit-in-force-for-heavy-vehicles',6934},{lockdown,6935},{'security-check-point',6936},{'truck-check-point',6937},{'single-occupancy-vehicle-check-point',6938},{look,6939},{'photo-enforced',6940},{'traffic-laws',6941},{'use-low-gear',6942},{'bridge-ices-before-road',6943},{'speed-checked-by-radar',6944},{'speed-checked-by-aircraft',6945},{fines,6946},{'fines-higher',6947},{'fines-doubled',6948},{'fines-tripled',6949},{'behind-you',6950},{'traffic-signs',6951},{'look-out-for-workers',6952},{'ride-with-traffic',6953},{'prepare-to-evacuate-area',6954},{avoid,6955},{'evacuation-canceled',7033},{'warning-canceled',7034},{'watch-canceled',7035},{'alert-canceled',7036},{ended,7037},{cleared,7038},{canceled,7039},{'drive-carefully',7169},{'drive-with-extreme-caution',7170},{'approach-with-care',7171},{'keep-your-distance',7172},{'increase-normal-following-distance',7173},{'test-your-brakes',7174},{'cross-intersection-with-care',7175},{'pass-with-care',7176},{'use-low-beam-headlights',7177},{'use-fog-lights',7178},{'use-hazard-warning-lights',7179},{'do-not-leave-your-vehicle',7180},{'leave-your-vehicle-and-proceed-to-next-safe-place',7181},{'turn-off-engine',7182},{'close-all-windows-turn-off-heater-air-conditioner-and-vents',7183},{'turn-off-air-conditioner-to-prevent-engine-overheating',7184},{'turn-off-mobile-phones-and-two-way-radios',7185},{'prepare-to-stop',7186},{'stop-at-next-rest-area',7187},{'stop-at-next-safe-place',7188},{'only-travel-if-absolutely-necessary',7189},{'drive-to-another-service-area',7190},{'use-through-traffic-lanes',7191},{'use-local-traffic-lanes',7192},{'use-left-hand-parallel-roadway',7193},{'use-right-hand-parallel-roadway',7194},{'use-heavy-vehicle-lane',7195},{'observe-recommended-speed',7196},{'facing-traffic',7197},{'push-button',7198},{'to-cross-street',7199},{pass,7200},{'be-prepared-to-stop',7201},{'signals-sequenced-for-speed',7202},{'maintain-top-safe-speed',7203},{'evacuate-area-voluntarily',7204},{'shelter-in-place',7205},{'keep-to-the-right',7425},{'keep-to-the-left',7426},{'use-right-lane',7427},{'use-left-lane',7428},{'heavy-vehicles-use-right-lane',7429},{'heavy-vehicles-use-left-lane',7430},{'observe-signals',7431},{'observe-signs',7432},{'no-passing',7433},{'no-smoking',7434},{'no-open-flames',7435},{'use-shoulder-as-lane',7436},{'do-not-drive-on-the-shoulder',7437},{'allow-emergency-vehicles-to-pass',7438},{'clear-a-lane-for-emergency-vehicles',7439},{'pull-over-to-the-edge-of-the-roadway',7440},{'wait-for-escort-vehicle',7441},{'in-emergency-wait-for-police-patrol',7442},{'reduce-your-speed',7443},{'observe-speed-limits',7444},{'check-point',7445},{'entry-requirements',7446},{'insurance-requirements',7447},{'firearms-requirements',7448},{'pet-requirements',7449},{'stay-in-lane',7450},{merge,7451},{'slower-traffic-keep-right',7452},{'keep-off',7453},{'evacuate-area-immediately',7454},{'shoulder-travel-no-longer-allowed',7547},{above,7681},{below,7682},{in,7683},{around,7684},{'after',7685},{before,7686},{at,7687},{on,7688},{near,7689},{'from-the',7690},{terminal,7691},{'falling-slowly',7692},{falling,7693},{'falling-quickly',7694},{'rising-slowly',7695},{rising,7696},{'rising-quickly',7697},{steady,7698},{likely,7699},{'changing-to',7700},{mostly,7701},{partly,7702},{minus,7703},{'weather-ended',7704},{expected,7705},{low,7706},{mid,7707},{high,7708},{upper,7709},{unseasonably,7710},{reported,7711},{advice,7712},{'due-to',7713},{'proceed-to',7714},{'transferred-to',7715},{use,7716},{affecting,7717},{blocking,7718},{connecting,7719},{finished,7720},{for,7721},{'or',7722},{'and',7723},{later,7724},{level,7725},{shortly,7726},{soon,7727},{service,7728},{damaged,7729},{'out-of-order',7730},{vandalism,7731},{'on-State-right-of-way',7732},{graffiti,7733},{'found-property',7734},{'begin-time',7735},{added,7736},{'end-time',7737},{no,7738},{'do-not',7739},{block,7740},{except,7741},{day,7742},{night,7743},{'any-time',7744},{has,7745},{'may-have',7746},{only,7747},{lifted,7748},{empty,7749},{turning,7750},{'u-turn',7751},{'wait-for',7752},{'when-flashing',7753},{duration,7754},{cross,7755},{'when-wet',7756},{must,7757},{oncoming,7758},{'may-exceed',7759},{'to-request',7760},{exempt,7761},{skewed,7762},{'when-children-are-present',7763},{lower,7764},{middle,7765},{major,7766},{minor,7767},{'on-bridges',7937},{'in-tunnels',7938},{'entering-or-leaving-tunnels',7939},{'on-ramps',7940},{'in-road-construction-area',7941},{'around-a-curve',7942},{'on-minor-roads',7943},{'in-the-opposing-lanes',7944},{'adjacent-to-roadway',7945},{'on-bend',7946},{'entire-intersection',7947},{'in-the-median',7948},{'moved-to-side-of-road',7949},{'moved-to-shoulder',7950},{'on-the-roadway',7951},{'in-shaded-areas',7952},{'in-low-lying-areas',7953},{'in-the-downtown-area',7954},{'in-the-inner-city-area',7955},{'in-parts',7956},{'in-some-places',7957},{'in-the-ditch',7958},{'in-the-valley',7959},{'on-hill-top',7960},{'near-the-foothills',7961},{'at-high-altitudes',7962},{'near-the-lake',7963},{'near-the-shore',7964},{'over-the-crest-of-a-hill',7965},{'other-than-on-the-roadway',7966},{'near-the-beach',7967},{'near-beach-access-point',7968},{'lower-level',7969},{'upper-level',7970},{airport,7971},{concourse,7972},{gate,7973},{'baggage-claim',7974},{'customs-point',7975},{station,7976},{platform,7977},{dock,7978},{depot,7979},{'ev-charging-point',7980},{'information-welcome-point',7981},{'at-rest-area',7982},{'at-service-area',7983},{'at-weigh-station',7984},{'picnic-areas',7985},{'rest-area',7986},{'service-stations',7987},{toilets,7988},{'on-the-right',7989},{'on-the-left',7990},{'in-the-center',7991},{'in-the-opposite-direction',7992},{'cross-traffic',7993},{'northbound-traffic',7994},{'eastbound-traffic',7995},{'southbound-traffic',7996},{'westbound-traffic',7997},{north,7998},{south,7999},{east,8000},{west,8001},{northeast,8002},{northwest,8003},{southeast,8004},{southwest,8005},{'mountain-pass',8006},{'reservation-center',8007},{'nearby-basin',8008},{'on-tracks',8009},{dip,8010},{'traffic-circle',8011},{'park-and-ride-lot',8012},{to,8014},{by,8015},{through,8016},{'area-of',8017},{under,8018},{over,8019},{from,8020},{approaching,8021},{'entering-at',8022},{'exiting-at',8023},{'across-tracks',8024},{'in-street',8025},{'on-curve',8026},{shoulder,8027},{crossover,8028},{'cross-road',8029},{'side-road',8030},{'bus-stop',8031},{intersection,8032},{'roadside-park',8033},{coast,8034},{'all-roadways',8193},{'through-lanes',8194},{'left-lane',8195},{'right-lane',8196},{'center-lane',8197},{'middle-lanes',8198},{'middle-two-lanes',8199},{'right-turning-lanes',8200},{'left-turning-lanes',8201},{'right-exit-ramp',8202},{'right-entrance-ramp',8203},{'left-exit-ramp',8204},{'left-entrance-ramp',8205},{'hard-shoulder',8206},{'soft-shoulder',8207},{'right-shoulder',8208},{'left-shoulder',8209},{'right-hand-parallel-lanes',8210},{'left-hand-parallel-lanes',8211},{'connecting-lanes',8212},{'express-lanes',8213},{'local-lanes',8214},{'toll-lanes',8215},{'electronic-toll-lanes',8216},{'toll-plaza',8217},{'inspection-lane',8218},{'hOV-lanes',8219},{'bus-lanes',8220},{'carpool-lanes',8221},{'truck-lanes',8222},{'emergency-lanes',8223},{'passing-lanes',8224},{'climbing-lanes',8225},{'slow-lane',8226},{'service-road',8227},{'cycle-lane',8228},{bridge,8229},{overpass,8230},{'elevated-lanes',8231},{underpass,8232},{tunnel,8233},{'escape-ramp',8234},{highways,8235},{'upper-deck-lanes',8236},{'lower-deck-lanes',8237},{'reversible-lanes',8238},{'right-exit-lanes',8239},{'left-exit-lanes',8240},{'right-merging-lanes',8241},{'left-merging-lanes',8242},{'right-second-exit-ramp',8243},{'left-second-exit-ramp',8244},{'right-second-entrance-ramp',8245},{'left-second-entrance-ramp',8246},{'all-exit-lanes',8247},{'all-entry-lanes',8248},{'either-shoulder',8249},{tracks,8250},{sidewalk,8251},{median,8252},{'shoulder-work',8253},{'detour-where-possible',8449},{'no-detour-available',8450},{'follow-signs',8451},{'follow-detour-signs',8452},{'follow-special-detour-markers',8453},{'do-not-follow-detour-signs',8454},{'detour-in-operation',8455},{'follow-local-detour',8456},{'compulsory-detour-in-operation',8457},{'no-suitable-detour-available',8458},{'detour-is-no-longer-recommended',8459},{'local-drivers-are-recommended-to-avoid-the-area',8460},{'trucks-are-recommended-to-avoid-the-area',8461},{'consider-alternate-route',8462},{'consider-alternate-parking',8463},{'consider-alternate-destination',8464},{'consider-alternate-area',8465},{'snow-route',8466},{'emergency-snow-route',8467},{'evacuation-route',8468},{'truck-route',8469},{'hazardous-materials-route',8470},{detour,8471},{'square-feet',8705},{'square-meters',8706},{acres,8707},{hectares,8708},{inches,8709},{feet,8710},{mile,8711},{miles,8712},{'nautical-miles',8713},{millimeters,8714},{meters,8715},{kilometer,8716},{kilometers,8717},{'feet-per-second',8718},{'meters-per-second',8719},{mPH,8720},{kPH,8721},{knots,8722},{aM,8723},{pM,8724},{weekends,8725},{holiday,8726},{seconds,8727},{minutes,8728},{hours,8729},{days,8730},{weeks,8731},{months,8732},{'degrees-Angle',8733},{'degrees-Celsius',8734},{'degrees-Fahrenheit',8735},{grams,8736},{kilograms,8737},{ounces,8738},{pounds,8739},{tons,8740},{'fluid-ounces',8741},{gallons,8742},{milliliters,8743},{liters,8744},{'kilograms-per-lane-mile',8745},{'tons-per-lane-mile',8746},{dollar,8747},{percent,8748},{'time-delimiter',8749},{dollars,8750},{'flight-number',8751},{'person-people',8752},{'response-plan',8753},{'placard-type',8754},{'placard-number',8755},{fM,8756},{grade,8757},{nSunday,8758},{nMonday,8759},{nTuesday,8760},{nWednesday,8761},{nThursday,8762},{nFriday,8763},{nSaturday,8764},{weekdays,8765},{elevation,8766},{'other-times',8767},{travel,8961},{transit,8962},{bus,8963},{trolleybus,8964},{rail,8965},{'commuter-rail',8966},{subway,8967},{'rapid-transit',8968},{'light-rail',8969},{streetcar,8970},{'dial-a-ride',8971},{'park-and-ride',8972},{shuttle,8973},{'free-shuttle',8974},{'airport-shuttle',8975},{taxies,8976},{ferry,8977},{'passenger-ferry',8978},{'vehicle-ferry',8979},{'aerial-tramway',8980},{'automated-guideway',8981},{'cable-cars',8982},{monorail,8983},{'air-travel',8984},{'hitch-hitching',8985},{walk,8986},{'all-vehicles',9217},{bicycles,9218},{motorcycles,9219},{cars,9220},{'light-vehicles',9221},{'cars-and-light-vehicles',9222},{'cars-with-trailers',9223},{'cars-with-recreational-trailers',9224},{'vehicles-with-trailers',9225},{'heavy-vehicles',9226},{trucks,9227},{buses,9228},{'articulated-buses',9229},{'school-buses',9230},{'vehicles-with-semi-trailers',9231},{'vehicles-with-double-trailers',9232},{'high-profile-vehicles',9233},{'wide-vehicles',9234},{'long-vehicles',9235},{'hazardous-loads',9236},{'exceptional-loads',9237},{'abnormal-loads',9238},{convoys,9239},{'maintenance-vehicles',9240},{'delivery-vehicles',9241},{'vehicles-with-even-numbered-license-plates',9242},{'vehicles-with-odd-numbered-license-plates',9243},{'vehicles-with-parking-permits',9244},{'vehicles-with-catalytic-converters',9245},{'vehicles-without-catalytic-converters',9246},{'gas-powered-vehicles',9247},{'diesel-powered-vehicles',9248},{'lPG-vehicles',9249},{'military-convoys',9250},{'military-vehicles',9251},{'electric-powered-vehicles',9252},{'hybrid-powered-vehicles',9253},{'inherently-low-emission-vehicles',9254},{'commercial-vehicles',9255},{'runaway-vehicles',9256},{'vehicles-with-lugs',9257},{'motor-driven-cycles',9258},{'recreational-vehicles',9259},{'non-motorized-vehicles',9260},{traffic,9261},{'through-traffic',9473},{'holiday-traffic',9474},{residents,9475},{visitors,9476},{'long-distance-traffic',9477},{'local-traffic',9478},{'regional-traffic',9479},{arrivals,9480},{departures,9481},{'airline-travelers',9482},{'commuter-airline-travelers',9483},{'domestic-airline-travelers',9484},{'international-airline-travelers',9485},{pedestrians,9486},{bicyclists,9487},{'emergency-vehicle-units',9729},{'federal-law-enforcement-units',9730},{'state-police-units',9731},{'county-police-units',9732},{'local-police-units',9733},{'ambulance-units',9734},{'rescue-units',9735},{'fire-units',9736},{'hAZMAT-units',9737},{'light-tow-unit',9738},{'heavy-tow-unit',9739},{'freeway-service-patrols',9740},{'transportation-response-units',9741},{'private-contractor-response-units',9742},{'private-tow-units',9743},{'ground-fire-suppression',9985},{'heavy-ground-equipment',9986},{aircraft,9988},{'marine-equipment',9989},{'support-equipment',9990},{'medical-rescue-unit',9991},{other,9993},{'ground-fire-suppression-other',9994},{engine,9995},{'truck-or-aerial',9996},{quint,9997},{'tanker-pumper-combination',9998},{'brush-truck',10000},{'aircraft-rescue-firefighting',10001},{'heavy-ground-equipment-other',10004},{'dozer-or-plow',10005},{tractor,10006},{'tanker-or-tender',10008},{'aircraft-other',10024},{'aircraft-fixed-wing-tanker',10025},{helitanker,10026},{helicopter,10027},{'marine-equipment-other',10034},{'fire-boat-with-pump',10035},{'boat-no-pump',10036},{'support-apparatus-other',10044},{'breathing-apparatus-support',10045},{'light-and-air-unit',10046},{'medical-rescue-unit-other',10054},{'rescue-unit',10055},{'urban-search-rescue-unit',10056},{'high-angle-rescue',10057},{'crash-fire-rescue',10058},{'bLS-unit',10059},{'aLS-unit',10060},{'mobile-command-post',10075},{'chief-officer-car',10076},{'hAZMAT-unit',10077},{'type-i-hand-crew',10078},{'type-ii-hand-crew',10079},{'privately-owned-vehicle',10083},{'other-apparatus-resource',10084},{ambulance,10085},{'bomb-squad-van',10086},{'combine-harvester',10087},{'construction-vehicle',10088},{'farm-tractor',10089},{'grass-cutting-machines',10090},{'hAZMAT-containment-tow',10091},{'heavy-tow',10092},{'hedge-cutting-machines',10093},{'light-tow',10094},{'mobile-crane',10095},{'refuse-collection-vehicle',10096},{'resurfacing-vehicle',10097},{'road-sweeper',10098},{'roadside-litter-collection-crews',10099},{'salvage-vehicle',10100},{'sand-truck',10101},{snowplow,10102},{'steam-roller',10103},{'swat-team-van',10104},{'track-laying-vehicle',10105},{'unknown-vehicle',10106},{'white-lining-vehicle',10107},{'dump-truck',10108},{'supervisor-vehicle',10109},{'snow-blower',10110},{'rotary-snow-blower',10111},{'road-grader',10112},{'steam-truck',10113},{'flatbed-tow',10114},{'survey-crews',10115},{'unknown-status',10240},{'ready-for-use',10241},{'working-normally',10242},{'working-autonomously',10243},{'working-incorrectly',10244},{'not-working',10245},{'normal-maintenance',10246},{'in-route-to-use',10247},{'returning-from-use',10248},{'out-of-service',10249},{'off-duty',10250},{'on-patrol',10251},{'on-call',10252},{'on-break',10253},{'mandatory-time-off',10254},{'low-on-fuel',10255},{'low-on-water',10256},{'low-charge',10257},{missing,10258},{none,10496},{'light-pole',10497},{'utility-pole',10498},{'gantry-way',10499},{'sign-support',10500},{'signal-pole',10501},{'signage-public',10502},{'signage-private',10503},{cones,10504},{'cones-post-type',10505},{'cones-glue-post',10506},{'cones-other',10507},{barriers,10508},{'barrier-Aframe',10509},{'barriers-heavy-duty',10510},{'barricade-type-III',10511},{'barricade-small',10512},{'barricade-lights',10513},{beacon,10514},{'t-stand',10515},{'a-stand',10516},{drums,10517},{'impact-attenuator',10518},{'barricade-tape',10519},{'safety-fence',10520},{'temp-pavement-markings',10521},{'speed-bumps',10522},{'temp-curbs',10523},{'parking-blocks',10524},{'signboard-fixed',10525},{'signboard-portable',10526},{har,10527},{'har-AM',10528},{'har-FM',10529},{'har-DSRC',10530},{'traffic-light',10531},{'lane-control-signal',10532},{'traffic-detector',10533},{'vehicle-detector',10534},{'system-alarm',10535},{'arrow-board',10536},{'fixed-VMS',10537},{'mobile-VMS',10538},{'ramp-control',10539},{'gate-control',10540},{'temporary-traffic-light',10541},{'over-height-warning-system',10542},{'over-weight-warning-system',10543},{'emergency-telephones',10544},{'railroad-crossing-equipment',10545},{'tunnel-ventilation',10546},{ccTV,10547},{'environmental-sensor',10548},{switch,10549},{signal,10550},{'third-rail',10551},{'overhead-power',10552},{'concrete-tie',10553},{'wooden-tie',10554},{escalator,10555},{elevator,10556},{track,10557},{drawbridge,10558},{'manhole-cover',10559},{culvert,10560},{'snow-poles',10561},{'guide-poles',10562},{'expansion-joint',10563},{'shifted-plate',10564},{'solid-barrier',10565},{'moveable-barrier',10566},{'sand-barrel',10567},{'overhead-sign',10568},{'ground-sign',10569},{'emergency-signal',10570},{'countdown-pedestrian-sign',10571},{stripe,10572},{island,10573},{'unknown-transit-problem',10753},{'sleeping-customer',10754},{'assault-on-passenger',10755},{'assault-on-employee',10756},{'broken-seat',10757},{'bus-alarm',10758},{'crime-or-drug-deal',10759},{'eating-on-board',10760},{'equipment-problem-with-air-conditioning',10761},{'equipment-problem-with-air-system',10762},{'equipment-problem-with-brakes',10763},{'equipment-problem-with-chassis-or-suspension',10764},{'equipment-problem-with-cooling-system',10765},{'equipment-problem-with-doors',10766},{'equipment-problem-with-electrical',10767},{'equipment-problem-with-engine',10768},{'equipment-problem-with-exterior-or-body',10769},{'equipment-problem-with-fare-collection',10770},{'equipment-problem-with-fuel-or-exhaust',10771},{'equipment-problem-with-horn',10772},{'equipment-problem-with-interior',10773},{'equipment-problem-with-liftkneeling',10774},{'equipment-problem-with-lights',10775},{'equipment-problem-with-lubrication',10776},{'equipment-problem-with-radio-or-communication',10777},{'equipment-problem-with-signs',10778},{'equipment-problem-with-steering',10779},{'equipment-problem-with-tires',10780},{'equipment-problem-with-transmission',10781},{'equipment-problem-with-unknown-alarm',10782},{'equipment-problem-with-wipers',10783},{'fare-dispute-expired-pass',10784},{'fare-dispute-expired-transfer',10785},{'fare-dispute-expired-upgrade',10786},{'fare-dispute-other',10787},{'fare-dispute-refuses-to-pay',10788},{'lift-passenger-cycle-completed',10789},{'lift-passenger-ready-to-alight',10790},{'lift-passenger-ready-to-board',10791},{'lost-article',10792},{'objects-thrown',10793},{'passenger-accident-alighting',10794},{'passenger-accident-boarding',10795},{'passenger-accident-fallen-on-board',10796},{'passenger-load',10797},{'passenger-accident-other',10798},{'passenger-sick-or-injured',10799},{'right-of-way',10800},{theft,10801},{'theft-of-service',10802},{'waiting-to-get-relief-for-schedule-break',10803},{'waiting-to-get-relief-after-run-is-finished',10804},{'waiting-to-provide-relief',10805},{'unknown-object',11009},{tire,11010},{rim,11011},{retread,11012},{trash,11013},{cargo,11014},{diesel,11015},{gasoline,11016},{'anti-freeze',11017},{'seat-belts',11018},{'litter-container',11019},{'all-Terrain-vehicle',11020},{seaplane,11021},{chairlift,11022},{'fishing-pier',11023},{'railroad-cross-buck',11024},{telephone,11025},{fallout,11026},{medical,11027},{chemical,11028},{welfare,11029},{evacuation,11030},{'left-arrow-signal',11031},{'ahead-arrow-signal',11032},{'right-arrow-signal',11033},{'green-light-signal',11034},{'green-arrow-signal',11035},{'yellow-light-signal',11036},{'yellow-arrow-signal',11037},{'red-light-signal',11038},{'red-arrow-signal',11039},{'extended-green-signal',11040},{'advance-arrow-signal',11041},{'pedestrian-Signal-Stop',11042},{'pedestrian-Signal-Caution',11043},{'pedestrian-Signal-Walk',11044},{'pedestrian-Signal-Light',11045},{'pedestrian-Signal-Time-Display',11046},{train,11047},{horn,11048},{deer,11049},{cattle,11050},{horse,11051},{'golf-cart',11052},{'food-services',11053},{'ambulance-staging-point',11054},{'roadside-table',11055},{services,11056},{'motorist-services',11059},{'alternative-fuel',11060},{'propane-gas',11061},{registration,11062},{decontamination,11063},{emergency,11064},{'prohibit-None-Allowed-LU-LT-L45-S-R45-RT-RU',11264},{'prohibit-RU-Allowed-LU-LT-L45-S-R45-RT',11265},{'prohibit-RT-Allowed-LU-LT-L45-S-R45-RU',11266},{'prohibit-RT-RU-Allowed-LU-LT-L45-S-R45',11267},{'prohibit-R45-Allowed-LU-LT-L45-S-RT-RU',11268},{'prohibit-R45-RU-Allowed-LU-LT-L45-S-RT',11269},{'prohibit-R45-RT-Allowed-LU-LT-L45-S-RU',11270},{'prohibit-R45-RT-RU-Allowed-LU-LT-L45-S',11271},{'prohibit-S-Allowed-LU-LT-L45-R45-RT-RU',11272},{'prohibit-S-RU-Allowed-LU-LT-L45-R45-RT',11273},{'prohibit-S-RT-Allowed-LU-LT-L45-R45-RU',11274},{'prohibit-S-RT-RU-Allowed-LU-LT-L45-R45',11275},{'prohibit-S-R45-Allowed-LU-LT-L45-RT-RU',11276},{'prohibit-S-R45-RU-Allowed-LU-LT-L45-RT',11277},{'prohibit-S-R45-RT-Allowed-LU-LT-L45-RU',11278},{'prohibit-S-R45-RT-RU-Allowed-LU-LT-L45',11279},{'prohibit-L45-Allowed-LU-LT-S-R45-RT-RU',11280},{'prohibit-L45-RU-Allowed-LU-LT-S-R45-RT',11281},{'prohibit-L45-RT-Allowed-LU-LT-S-R45-RU',11282},{'prohibit-L45-RT-RU-Allowed-LU-LT-S-R45',11283},{'prohibit-L45-R45-Allowed-LU-LT-S-RT-RU',11284},{'prohibit-L45-R45-RU-Allowed-LU-LT-S-RT',11285},{'prohibit-L45-R45-RT-Allowed-LU-LT-S-RU',11286},{'prohibit-L45-R45-RT-RU-Allowed-LU-LT-S',11287},{'prohibit-L45-S-Allowed-LU-LT-R45-RT-RU',11288},{'prohibit-L45-S-RU-Allowed-LU-LT-R45-RT',11289},{'prohibit-L45-S-RT-Allowed-LU-LT-R45-RU',11290},{'prohibit-L45-S-RT-RU-Allowed-LU-LT-R45',11291},{'prohibit-L45-S-R45-Allowed-LU-LT-RT-RU',11292},{'prohibit-L45-S-R45-RU-Allowed-LU-LT-RT',11293},{'prohibit-L45-S-R45-RT-Allowed-LU-LT-RU',11294},{'prohibit-L45-S-R45-RT-RU-Allowed-LU-LT',11295},{'prohibit-LT-Allowed-LU-L45-S-R45-RT-RU',11296},{'prohibit-LT-RU-Allowed-LU-L45-S-R45-RT',11297},{'prohibit-LT-RT-Allowed-LU-L45-S-R45-RU',11298},{'prohibit-LT-RT-RU-Allowed-LU-L45-S-R45',11299},{'prohibit-LT-R45-Allowed-LU-L45-S-RT-RU',11300},{'prohibit-LT-R45-RU-Allowed-LU-L45-S-RT',11301},{'prohibit-LT-R45-RT-Allowed-LU-L45-S-RU',11302},{'prohibit-LT-R45-RT-RU-Allowed-LU-L45-S',11303},{'prohibit-LT-S-Allowed-LU-L45-R45-RT-RU',11304},{'prohibit-LT-S-RU-Allowed-LU-L45-R45-RT',11305},{'prohibit-LT-S-RT-Allowed-LU-L45-R45-RU',11306},{'prohibit-LT-S-RT-RU-Allowed-LU-L45-R45',11307},{'prohibit-LT-S-R45-Allowed-LU-L45-RT-RU',11308},{'prohibit-LT-S-R45-RU-Allowed-LU-L45-RT',11309},{'prohibit-LT-S-R45-RT-Allowed-LU-L45-RU',11310},{'prohibit-LT-S-R45-RT-RU-Allowed-LU-L45',11311},{'prohibit-LT-L45-Allowed-LU-S-R45-RT-RU',11312},{'prohibit-LT-L45-RU-Allowed-LU-S-R45-RT',11313},{'prohibit-LT-L45-RT-Allowed-LU-S-R45-RU',11314},{'prohibit-LT-L45-RT-RU-Allowed-LU-S-R45',11315},{'prohibit-LT-L45-R45-Allowed-LU-S-RT-RU',11316},{'prohibit-LT-L45-R45-RU-Allowed-LU-S-RT',11317},{'prohibit-LT-L45-R45-RT-Allowed-LU-S-RU',11318},{'prohibit-LT-L45-R45-RT-RU-Allowed-LU-S',11319},{'prohibit-LT-L45-S-Allowed-LU-R45-RT-RU',11320},{'prohibit-LT-L45-S-RU-Allowed-LU-R45-RT',11321},{'prohibit-LT-L45-S-RT-Allowed-LU-R45-RU',11322},{'prohibit-LT-L45-S-RT-RU-Allowed-LU-R45',11323},{'prohibit-LT-L45-S-R45-Allowed-LU-RT-RU',11324},{'prohibit-LT-L45-S-R45-RU-Allowed-LU-RT',11325},{'prohibit-LT-L45-S-R45-RT-Allowed-LU-RU',11326},{'prohibit-LT-L45-S-R45-RT-RU-Allowed-LU',11327},{'prohibit-LU-Allowed-LT-L45-S-R45-RT-RU',11328},{'prohibit-LU-RU-Allowed-LT-L45-S-R45-RT',11329},{'prohibit-LU-RT-Allowed-LT-L45-S-R45-RU',11330},{'prohibit-LU-RT-RU-Allowed-LT-L45-S-R45',11331},{'prohibit-LU-R45-Allowed-LT-L45-S-RT-RU',11332},{'prohibit-LU-R45-RU-Allowed-LT-L45-S-RT',11333},{'prohibit-LU-R45-RT-Allowed-LT-L45-S-RU',11334},{'prohibit-LU-R45-RT-RU-Allowed-LT-L45-S',11335},{'prohibit-LU-S-Allowed-LT-L45-R45-RT-RU',11336},{'prohibit-LU-S-RU-Allowed-LT-L45-R45-RT',11337},{'prohibit-LU-S-RT-Allowed-LT-L45-R45-RU',11338},{'prohibit-LU-S-RT-RU-Allowed-LT-L45-R45',11339},{'prohibit-LU-S-R45-Allowed-LT-L45-RT-RU',11340},{'prohibit-LU-S-R45-RU-Allowed-LT-L45-RT',11341},{'prohibit-LU-S-R45-RT-Allowed-LT-L45-RU',11342},{'prohibit-LU-S-R45-RT-RU-Allowed-LT-L45',11343},{'prohibit-LU-L45-Allowed-LT-S-R45-RT-RU',11344},{'prohibit-LU-L45-RU-Allowed-LT-S-R45-RT',11345},{'prohibit-LU-L45-RT-Allowed-LT-S-R45-RU',11346},{'prohibit-LU-L45-RT-RU-Allowed-LT-S-R45',11347},{'prohibit-LU-L45-R45-Allowed-LT-S-RT-RU',11348},{'prohibit-LU-L45-R45-RU-Allowed-LT-S-RT',11349},{'prohibit-LU-L45-R45-RT-Allowed-LT-S-RU',11350},{'prohibit-LU-L45-R45-RT-RU-Allowed-LT-S',11351},{'prohibit-LU-L45-S-Allowed-LT-R45-RT-RU',11352},{'prohibit-LU-L45-S-RU-Allowed-LT-R45-RT',11353},{'prohibit-LU-L45-S-RT-Allowed-LT-R45-RU',11354},{'prohibit-LU-L45-S-RT-RU-Allowed-LT-R45',11355},{'prohibit-LU-L45-S-R45-Allowed-LT-RT-RU',11356},{'prohibit-LU-L45-S-R45-RU-Allowed-LT-RT',11357},{'prohibit-LU-L45-S-R45-RT-Allowed-LT-RU',11358},{'prohibit-LU-L45-S-R45-RT-RU-Allowed-LT',11359},{'prohibit-LU-LT-Allowed-L45-S-R45-RT-RU',11360},{'prohibit-LU-LT-RU-Allowed-L45-S-R45-RT',11361},{'prohibit-LU-LT-RT-Allowed-L45-S-R45-RU',11362},{'prohibit-LU-LT-RT-RU-Allowed-L45-S-R45',11363},{'prohibit-LU-LT-R45-Allowed-L45-S-RT-RU',11364},{'prohibit-LU-LT-R45-RU-Allowed-L45-S-RT',11365},{'prohibit-LU-LT-R45-RT-Allowed-L45-S-RU',11366},{'prohibit-LU-LT-R45-RT-RU-Allowed-L45-S',11367},{'prohibit-LU-LT-S-Allowed-L45-R45-RT-RU',11368},{'prohibit-LU-LT-S-RU-Allowed-L45-R45-RT',11369},{'prohibit-LU-LT-S-RT-Allowed-L45-R45-RU',11370},{'prohibit-LU-LT-S-RT-RU-Allowed-L45-R45',11371},{'prohibit-LU-LT-S-R45-Allowed-L45-RT-RU',11372},{'prohibit-LU-LT-S-R45-RU-Allowed-L45-RT',11373},{'prohibit-LU-LT-S-R45-RT-Allowed-L45-RU',11374},{'prohibit-LU-LT-S-R45-RT-RU-Allowed-L45',11375},{'prohibit-LU-LT-L45-Allowed-S-R45-RT-RU',11376},{'prohibit-LU-LT-L45-RU-Allowed-S-R45-RT',11377},{'prohibit-LU-LT-L45-RT-Allowed-S-R45-RU',11378},{'prohibit-LU-LT-L45-RT-RU-Allowed-S-R45',11379},{'prohibit-LU-LT-L45-R45-Allowed-S-RT-RU',11380},{'prohibit-LU-LT-L45-R45-RU-Allowed-S-RT',11381},{'prohibit-LU-LT-L45-R45-RT-Allowed-S-RU',11382},{'prohibit-LU-LT-L45-R45-RT-RU-Allowed-S',11383},{'prohibit-LU-LT-L45-S-Allowed-R45-RT-RU',11384},{'prohibit-LU-LT-L45-S-RU-Allowed-R45-RT',11385},{'prohibit-LU-LT-L45-S-RT-Allowed-R45-RU',11386},{'prohibit-LU-LT-L45-S-RT-RU-Allowed-R45',11387},{'prohibit-LU-LT-L45-S-R45-Allowed-RT-RU',11388},{'prohibit-LU-LT-L45-S-R45-RU-Allowed-RT',11389},{'prohibit-LU-LT-L45-S-R45-RT-Allowed-RU',11390},{'prohibit-LU-LT-L45-S-R45-RT-RU-Allowed-None',11391},{'n1-16th',11521},{'n1-10th',11522},{'n1-8th',11523},{'n1-4th',11524},{'n1-3rd',11525},{'n1-2',11526},{'n3-4',11527},{n300,11531},{n350,11532},{n400,11533},{n450,11534},{n500,11535},{n550,11536},{n600,11537},{n650,11538},{n700,11539},{n750,11540},{n800,11541},{n850,11542},{n900,11543},{n950,11544},{n1000,11545},{n1100,11546},{n1200,11547},{n1300,11548},{n1400,11549},{n1500,11550},{n1600,11551},{n1700,11552},{n1800,11553},{n1900,11554},{n2000,11555},{n2100,11556},{n2200,11557},{n2300,11558},{n2400,11559},{n2500,11560},{n2600,11561},{n2700,11562},{n2800,11563},{n2900,11564},{n3000,11565},{n3500,11566},{n4000,11567},{n4500,11568},{n5000,11569},{n5500,11570},{n6000,11571},{n6500,11572},{n7000,11573},{n7500,11574},{n8000,11575},{n8500,11576},{n9000,11577},{n9500,11578},{n10000,11579},{n11000,11580},{n12000,11581},{n13000,11582},{n14000,11583},{n15000,11584},{n16000,11585},{n17000,11586},{n18000,11587},{n19000,11588},{n20000,11589},{n21000,11590},{n22000,11591},{n23000,11592},{n24000,11593},{n25000,11594},{n26000,11595},{n27000,11596},{n28000,11597},{n29000,11598},{n30000,11599},{n35000,11600},{n40000,11601},{n45000,11602},{n50000,11603},{n55000,11604},{n60000,11605},{n65000,11606},{n70000,11607},{n75000,11608},{n80000,11609},{n85000,11610},{n90000,11611},{n95000,11612},{n100000,11613},{'name-follows',11777},{freeway,11778},{'us-Route',11779},{'state-Route',11780},{interstate,11781},{'business-Loop',11782},{alternative,11783},{'county-Route',11784},{'forest-Route',11785},{'farm-to-Market-Route',11786},{'eisenhower-Interstate-System',11787},{'americas-Byways',11788},{'national-Network-Route',11789},{'scenic-Area',11790},{'parking-Area',11791},{'weight-Station',11792},{road,11793},{exit,11794},{'historical-route',11795},{'state-line',11796},{spur,11797},{junction,11798},{'bicycle-route',11799},{'bicycle-interstate-route',11800},{'national-park',11801},{'bear-viewing-area',12033},{'deer-viewing-area',12034},{'drinking-water',12035},{'environmental-study-area',12036},{'falling-rocks',12037},{firearms,12038},{'leashed-pets',12039},{'point-of-interest',12040},{smoking,12041},{dog,12042},{'tent-camping',12043},{'trailer-camping',12044},{'first-aid',12045},{handicapped,12046},{mechanic,12047},{'trailer-sanitary-station',12048},{'viewing-area',12049},{campfire,12050},{locker,12051},{sleeping,12052},{trail,12053},{climbing,12054},{'rock-climbing',12055},{hunting,12056},{playground,12057},{'rock-collecting',12058},{spelunking,12059},{'bicycle-trail',12060},{'hiking-trail',12061},{'horse-trail',12062},{'trail-interpretive-auto',12063},{'trail-interpretive-pedestrian',12064},{'trail-road-for-4WD-vehicles',12065},{'trail-for-trail-bikes',12066},{archer,12067},{'hang-glider',12068},{'boat-tours',12069},{canoeing,12070},{diving,12071},{'scuba-diving',12072},{fishing,12073},{'marine-recreation-area',12074},{motorboating,12075},{'boat-ramp',12076},{rowboating,12077},{sailboating,12078},{'water-skiing',12079},{surfing,12080},{swimming,12081},{wading,12082},{'hand-launch',12083},{kayak,12084},{'wind-surf',12085},{'ice-skating',12086},{'ski-jumping',12087},{bobbing,12088},{'cross-country-skiing',12089},{'downhill-skiing',12090},{sledding,12091},{snowmobiling,12092},{snowshoeing,12093},{'winter-recreation-area',12094},{'scenic-overlook',12095},{'regulatory-sign',12289},{'warning-sign',12290},{'information-sign',12291},{'construction-sign',12292},{'guide-sign',12293},{stop,12294},{yield,12295},{'to-oncoming-traffic',12296},{'four-way',12297},{'all-way',12298},{zone,12299},{narrows,12300},{widens,12301},{reduced,12302},{combined,12303},{minimum,12304},{maximum,12305},{'divided-road',12306},{'double-arrow',12307},{'dead-end',12308},{'no-outlet',12309},{'wrong-way',12310},{nDetour,12312},{chevron,12313},{'do-not-enter',12314},{'t-intersection-to-the-side',12315},{'t-intersection-oncoming',12316},{'y-intersection-to-the-side',12317},{'y-intersection-oncoming',12318},{'four-way-divided-highway-crossing',12319},{'t-way-divided-highway-crossing',12320},{'light-rail-divided-highway-crossing',12321},{'light-rail-t-divided-highway-crossing',12322},{'side-road-to-right',12323},{'side-road-to-left',12324},{'side-road-to-right-at-angle',12325},{'side-road-to-left-at-angle',12326},{'entering-roadway-merge',12327},{'entering-roadway-added-lane',12328},{'one-way',12329},{caution,12330},{temporary,12331},{n1,12545},{n2,12546},{n3,12547},{n4,12548},{n5,12549},{n6,12550},{n7,12551},{n8,12552},{n9,12553},{n10,12554},{n11,12555},{n12,12556},{n13,12557},{n14,12558},{n15,12559},{n16,12560},{n17,12561},{n18,12562},{n19,12563},{n20,12564},{n21,12565},{n22,12566},{n23,12567},{n24,12568},{n25,12569},{n26,12570},{n27,12571},{n28,12572},{n29,12573},{n30,12574},{n31,12575},{n32,12576},{n33,12577},{n34,12578},{n35,12579},{n36,12580},{n37,12581},{n38,12582},{n39,12583},{n40,12584},{n41,12585},{n42,12586},{n43,12587},{n44,12588},{n45,12589},{n46,12590},{n47,12591},{n48,12592},{n49,12593},{n50,12594},{n51,12595},{n52,12596},{n53,12597},{n54,12598},{n55,12599},{n56,12600},{n57,12601},{n58,12602},{n59,12603},{n60,12604},{n61,12605},{n62,12606},{n63,12607},{n64,12608},{n65,12609},{n66,12610},{n67,12611},{n68,12612},{n69,12613},{n70,12614},{n71,12615},{n72,12616},{n73,12617},{n74,12618},{n75,12619},{n76,12620},{n77,12621},{n78,12622},{n79,12623},{n80,12624},{n81,12625},{n82,12626},{n83,12627},{n84,12628},{n85,12629},{n86,12630},{n87,12631},{n88,12632},{n89,12633},{n90,12634},{n91,12635},{n92,12636},{n93,12637},{n94,12638},{n95,12639},{n96,12640},{n97,12641},{n98,12642},{n99,12643},{n100,12644},{n101,12645},{n102,12646},{n103,12647},{n104,12648},{n105,12649},{n106,12650},{n107,12651},{n108,12652},{n109,12653},{n110,12654},{n111,12655},{n112,12656},{n113,12657},{n114,12658},{n115,12659},{n116,12660},{n117,12661},{n118,12662},{n119,12663},{n120,12664},{n121,12665},{n122,12666},{n123,12667},{n124,12668},{n125,12669},{n126,12670},{n127,12671},{n128,12672},{n129,12673},{n130,12674},{n131,12675},{n132,12676},{n133,12677},{n134,12678},{n135,12679},{n136,12680},{n137,12681},{n138,12682},{n139,12683},{n140,12684},{n141,12685},{n142,12686},{n143,12687},{n144,12688},{n145,12689},{n146,12690},{n147,12691},{n148,12692},{n149,12693},{n150,12694},{n151,12695},{n152,12696},{n153,12697},{n154,12698},{n155,12699},{n156,12700},{n157,12701},{n158,12702},{n159,12703},{n160,12704},{n161,12705},{n162,12706},{n163,12707},{n164,12708},{n165,12709},{n166,12710},{n167,12711},{n168,12712},{n169,12713},{n170,12714},{n171,12715},{n172,12716},{n173,12717},{n174,12718},{n175,12719},{n176,12720},{n177,12721},{n178,12722},{n179,12723},{n180,12724},{n181,12725},{n182,12726},{n183,12727},{n184,12728},{n185,12729},{n186,12730},{n187,12731},{n188,12732},{n189,12733},{n190,12734},{n191,12735},{n192,12736},{n193,12737},{n194,12738},{n195,12739},{n196,12740},{n197,12741},{n198,12742},{n199,12743},{n200,12744},{n201,12745},{n202,12746},{n203,12747},{n204,12748},{n205,12749},{n206,12750},{n207,12751},{n208,12752},{n209,12753},{n210,12754},{n211,12755},{n212,12756},{n213,12757},{n214,12758},{n215,12759},{n216,12760},{n217,12761},{n218,12762},{n219,12763},{n220,12764},{n221,12765},{n222,12766},{n223,12767},{n224,12768},{n225,12769},{n226,12770},{n227,12771},{n228,12772},{n229,12773},{n230,12774},{n231,12775},{n232,12776},{n233,12777},{n234,12778},{n235,12779},{n236,12780},{n237,12781},{n238,12782},{n239,12783},{n240,12784},{n241,12785},{n242,12786},{n243,12787},{n244,12788},{n245,12789},{n246,12790},{n247,12791},{n248,12792},{n249,12793},{n250,12794},{n251,12795},{n252,12796},{n253,12797},{n254,12798},{n255,12799},{alabama,12801},{alaska,12802},{'american-Samoa',12803},{arizona,12804},{arkansas,12805},{california,12806},{colorado,12807},{connecticut,12808},{delaware,12809},{'district-of-Columbia',12810},{florida,12811},{georgia,12812},{guam,12813},{hawaii,12814},{idaho,12815},{illinois,12816},{indiana,12817},{iowa,12818},{kansas,12819},{kentucky,12820},{louisiana,12821},{maine,12822},{maryland,12823},{massachusetts,12824},{michigan,12825},{minnesota,12826},{mississippi,12827},{missouri,12828},{montana,12829},{nebraska,12830},{nevada,12831},{'new-Hampshire',12832},{'new-Jersey',12833},{'new-Mexico',12834},{'new-York',12835},{'north-Carolina',12836},{'north-Dakota',12837},{'northern-Marianas-Islands',12838},{ohio,12839},{oklahoma,12840},{oregon,12841},{pennsylvania,12842},{'puerto-rico',12843},{'rhode-Island',12844},{'south-Carolina',12845},{'south-Dakota',12846},{tennessee,12847},{texas,12848},{utah,12849},{vermont,12850},{virginia,12851},{'virgin-Islands',12852},{washington,12853},{'west-Virginia',12854},{wisconsin,12855},{wyoming,12856},{'rest-room',13057},{'mens-rest-room',13058},{'womens-rest-room',13059},{'family-rest-room',13060},{dam,13061},{'fish-hatchery',13062},{information,13063},{lighthouse,13064},{'lookout-tower',13065},{'ranger-station',13066},{'grocery-store',13068},{lodging,13069},{'post-office',13070},{'picnic-shelter',13072},{'group-camping',13073},{'group-picnicking',13074},{'n24-hour-pharmacy',13075},{kennel,13076},{'laundry-facilities',13077},{'shower-facilities',13078},{amphitheater,13079},{stable,13080},{hospital,13081},{'emergency-medical-service-point',13082},{library,13083},{'recycling-collection-center',13084},{school,13085},{alley,13313},{annex,13314},{arcade,13315},{avenue,13316},{bayoo,13317},{beach,13318},{bend,13319},{bluff,13320},{bottom,13321},{boulevard,13322},{branch,13323},{nBridge,13324},{brook,13325},{burg,13326},{bypass,13327},{camp,13328},{canyon,13329},{cape,13330},{causeway,13331},{nCenter,13332},{circle,13333},{cliff,13334},{club,13335},{common,13336},{corner,13337},{course,13338},{court,13339},{cove,13340},{creek,13341},{crescent,13342},{crest,13343},{nCrossing,13344},{crossroad,13345},{curve,13346},{dale,13347},{nDam,13348},{divide,13349},{drive,13350},{estate,13351},{expressway,13352},{extension,13353},{fall,13354},{nFerry,13355},{field,13356},{flat,13357},{ford,13358},{forest,13359},{forge,13360},{fork,13361},{fort,13362},{nFreeway,13363},{garden,13364},{gateway,13365},{glen,13366},{green,13367},{grove,13368},{harbor,13369},{haven,13370},{heights,13371},{highway,13372},{nHill,13373},{hollow,13374},{inlet,13375},{nIsland,13376},{isle,13377},{nJunction,13378},{key,13379},{knoll,13380},{lake,13381},{land,13382},{landing,13383},{nLane,13384},{light,13385},{loaf,13386},{lock,13387},{lodge,13388},{loop,13389},{mall,13390},{manor,13391},{meadow,13392},{mews,13393},{mill,13394},{mission,13395},{motorway,13396},{mount,13397},{mountain,13398},{neck,13399},{orchard,13400},{oval,13401},{nOverpass,13402},{park,13403},{parkway,13404},{nPass,13405},{passage,13406},{path,13407},{pike,13408},{pine,13409},{plains,13410},{plaza,13411},{point,13412},{port,13413},{prairie,13414},{radial,13415},{ramp,13416},{ranch,13417},{rapid,13418},{rest,13419},{ridge,13420},{river,13421},{nRoad,13422},{route,13423},{row,13424},{rue,13425},{run,13426},{shoal,13427},{shore,13428},{skyway,13429},{spring,13430},{nSpur,13431},{square,13432},{nStation,13433},{stravenue,13434},{stream,13435},{street,13436},{summit,13437},{terrace,13438},{throughway,13439},{trace,13440},{nTrack,13441},{trafficway,13442},{nTrail,13443},{nTunnel,13444},{turnpike,13445},{nUnderpass,13446},{union,13447},{valley,13448},{viaduct,13449},{view,13450},{village,13451},{ville,13452},{vista,13453},{nWalk,13454},{wall,13455},{way,13456},{well,13457},{ahead,13569},{here,13570},{'here-to',13571},{'here-to-alley',13572},{'here-to-corner',13573},{'here-to-sign',13574},{'between-signs',13575},{'this-side-of-street',13576},{'this-side-of-sign',13577},{right,13579},{left,13580},{'begin-point',13581},{next,13582},{'ends-end',13583},{'other-Side',13584},{crossing,13585},{crosswalks,13586},{'center-strip',13587},{lane,13588},{hill,13589},{'both-ways-left-and-right',13590},{'both-ways-45-degree-angle-tilting-right',13591},{'both-ways-45-degree-angle-tilting-left',13592},{'both-directions-of-travel',13593},{'left-turn',13594},{'left-45-degree-arrow',13595},{'left-45-degree-turn',13596},{'ahead-and-to-the-left',13597},{'ahead-and-to-the-left-at-a-45-degree-angle',13598},{'right-turn',13599},{'right-45-degree-arrow',13600},{'right-45-degree-turn',13601},{'ahead-and-to-the-right',13602},{'ahead-and-to-the-right-at-a-45-degree-angle',13603},{'downward-left-45-degree',13604},{'downward-right-45-degree',13605},{'downward-left-and-right-45-degree',13606},{'right-arrow',13609},{'left-arrow',13610},{'starting-start',13611},{'chevron-right',13613},{'chevron-left',13614},{'right-turn-with-junction',13615},{'left-turn-with-junction',13616},{'hairpin-right',13617},{'hairpin-left',13618},{'truck-rollover-right',13619},{'truck-rollover-left',13620},{'n270-degree-turn-right',13621},{'n270-degree-turn-left',13622},{'two-lane-reverse-curve-to-right',13623},{'two-lane-reverse-curve-to-left',13624},{'three-lane-reverse-curve-to-right',13625},{'three-lane-reverse-curve-to-left',13626},{'double-reverse-curve-to-right',13627},{'double-reverse-curve-to-left',13628},{'two-lane-double-reverse-curve-to-right',13629},{'two-lane-double-reverse-curve-to-left',13630},{'three-lane-double-reverse-curve-to-right',13631},{'three-lane-double-reverse-curve-to-left',13632},{between,13633},{shelter,13634},{center,13635},{'reverse-turn-to-right',13636},{'reverse-turn-to-left',13637},{'reverse-curve-to-right',13638},{'reverse-curve-to-left',13639},{'winding-road-to-right',13640},{'winding-road-to-left',13641}]},{0,65535}};
typeinfo('LaneRoadway') ->
  {{'INTEGER_NNL',[{'all-roadways',8193},{'through-lanes',8194},{'left-lane',8195},{'right-lane',8196},{'center-lane',8197},{'middle-lanes',8198},{'middle-two-lanes',8199},{'right-turning-lanes',8200},{'left-turning-lanes',8201},{'right-exit-ramp',8202},{'right-entrance-ramp',8203},{'left-exit-ramp',8204},{'left-entrance-ramp',8205},{'hard-shoulder',8206},{'soft-shoulder',8207},{'right-shoulder',8208},{'left-shoulder',8209},{'right-hand-parallel-lanes',8210},{'left-hand-parallel-lanes',8211},{'connecting-lanes',8212},{'express-lanes',8213},{'local-lanes',8214},{'toll-lanes',8215},{'electronic-toll-lanes',8216},{'toll-plaza',8217},{'inspection-lane',8218},{'hOV-lanes',8219},{'bus-lanes',8220},{'carpool-lanes',8221},{'truck-lanes',8222},{'emergency-lanes',8223},{'passing-lanes',8224},{'climbing-lanes',8225},{'slow-lane',8226},{'service-road',8227},{'cycle-lane',8228},{bridge,8229},{overpass,8230},{'elevated-lanes',8231},{underpass,8232},{tunnel,8233},{'escape-ramp',8234},{highways,8235},{'upper-deck-lanes',8236},{'lower-deck-lanes',8237},{'reversible-lanes',8238},{'right-exit-lanes',8239},{'left-exit-lanes',8240},{'right-merging-lanes',8241},{'left-merging-lanes',8242},{'right-second-exit-ramp',8243},{'left-second-exit-ramp',8244},{'right-second-entrance-ramp',8245},{'left-second-entrance-ramp',8246},{'all-exit-lanes',8247},{'all-entry-lanes',8248},{'either-shoulder',8249},{tracks,8250},{sidewalk,8251},{median,8252},{'shoulder-work',8253}]},{0,65535}};
typeinfo('LargeNumbers') ->
  {{'INTEGER_NNL',[{'n1-16th',11521},{'n1-10th',11522},{'n1-8th',11523},{'n1-4th',11524},{'n1-3rd',11525},{'n1-2',11526},{'n3-4',11527},{n300,11531},{n350,11532},{n400,11533},{n450,11534},{n500,11535},{n550,11536},{n600,11537},{n650,11538},{n700,11539},{n750,11540},{n800,11541},{n850,11542},{n900,11543},{n950,11544},{n1000,11545},{n1100,11546},{n1200,11547},{n1300,11548},{n1400,11549},{n1500,11550},{n1600,11551},{n1700,11552},{n1800,11553},{n1900,11554},{n2000,11555},{n2100,11556},{n2200,11557},{n2300,11558},{n2400,11559},{n2500,11560},{n2600,11561},{n2700,11562},{n2800,11563},{n2900,11564},{n3000,11565},{n3500,11566},{n4000,11567},{n4500,11568},{n5000,11569},{n5500,11570},{n6000,11571},{n6500,11572},{n7000,11573},{n7500,11574},{n8000,11575},{n8500,11576},{n9000,11577},{n9500,11578},{n10000,11579},{n11000,11580},{n12000,11581},{n13000,11582},{n14000,11583},{n15000,11584},{n16000,11585},{n17000,11586},{n18000,11587},{n19000,11588},{n20000,11589},{n21000,11590},{n22000,11591},{n23000,11592},{n24000,11593},{n25000,11594},{n26000,11595},{n27000,11596},{n28000,11597},{n29000,11598},{n30000,11599},{n35000,11600},{n40000,11601},{n45000,11602},{n50000,11603},{n55000,11604},{n60000,11605},{n65000,11606},{n70000,11607},{n75000,11608},{n80000,11609},{n85000,11610},{n90000,11611},{n95000,11612},{n100000,11613}]},{0,65535}};
typeinfo('MobileSituation') ->
  {{'INTEGER_NNL',[{'abnormal-load',2049},{'wide-load',2050},{'long-load',2051},{'slow-vehicle',2052},{'farm-equipment',2053},{'horse-drawn-vehicles',2054},{'overheight-load',2055},{'overweight-load',2056},{'tracked-vehicle',2057},{'vehicle-carrying-hazardous-materials',2058},{'slow-moving-maintenance-vehicle',2059},{convoy,2060},{'military-convoy',2061},{'refugee-convoy',2062},{motorcade,2063},{'mobile-situation-repositioning',2064},{'winter-maintenance-vehicles',2065},{snowplows,2066},{'slow-moving-maintenance-vehicle-warning-cleared',2172},{'exceptional-load-warning-cleared',2173},{'hazardous-load-warning-cleared',2174},{'convoy-cleared',2175}]},{0,65535}};
typeinfo('MUTCDLocations') ->
  {{'INTEGER_NNL',[{ahead,13569},{here,13570},{'here-to',13571},{'here-to-alley',13572},{'here-to-corner',13573},{'here-to-sign',13574},{'between-signs',13575},{'this-side-of-street',13576},{'this-side-of-sign',13577},{right,13579},{left,13580},{'begin-point',13581},{next,13582},{'ends-end',13583},{'other-Side',13584},{crossing,13585},{crosswalks,13586},{'center-strip',13587},{lane,13588},{hill,13589},{'both-ways-left-and-right',13590},{'both-ways-45-degree-angle-tilting-right',13591},{'both-ways-45-degree-angle-tilting-left',13592},{'both-directions-of-travel',13593},{'left-turn',13594},{'left-45-degree-arrow',13595},{'left-45-degree-turn',13596},{'ahead-and-to-the-left',13597},{'ahead-and-to-the-left-at-a-45-degree-angle',13598},{'right-turn',13599},{'right-45-degree-arrow',13600},{'right-45-degree-turn',13601},{'ahead-and-to-the-right',13602},{'ahead-and-to-the-right-at-a-45-degree-angle',13603},{'downward-left-45-degree',13604},{'downward-right-45-degree',13605},{'downward-left-and-right-45-degree',13606},{'right-arrow',13609},{'left-arrow',13610},{'starting-start',13611},{'chevron-right',13613},{'chevron-left',13614},{'right-turn-with-junction',13615},{'left-turn-with-junction',13616},{'hairpin-right',13617},{'hairpin-left',13618},{'truck-rollover-right',13619},{'truck-rollover-left',13620},{'n270-degree-turn-right',13621},{'n270-degree-turn-left',13622},{'two-lane-reverse-curve-to-right',13623},{'two-lane-reverse-curve-to-left',13624},{'three-lane-reverse-curve-to-right',13625},{'three-lane-reverse-curve-to-left',13626},{'double-reverse-curve-to-right',13627},{'double-reverse-curve-to-left',13628},{'two-lane-double-reverse-curve-to-right',13629},{'two-lane-double-reverse-curve-to-left',13630},{'three-lane-double-reverse-curve-to-right',13631},{'three-lane-double-reverse-curve-to-left',13632},{between,13633},{shelter,13634},{center,13635},{'reverse-turn-to-right',13636},{'reverse-turn-to-left',13637},{'reverse-curve-to-right',13638},{'reverse-curve-to-left',13639},{'winding-road-to-right',13640},{'winding-road-to-left',13641}]},{0,65535}};
typeinfo('NamedObjects') ->
  {{'INTEGER_NNL',[{'name-follows',11777},{freeway,11778},{'us-Route',11779},{'state-Route',11780},{interstate,11781},{'business-Loop',11782},{alternative,11783},{'county-Route',11784},{'forest-Route',11785},{'farm-to-Market-Route',11786},{'eisenhower-Interstate-System',11787},{'americas-Byways',11788},{'national-Network-Route',11789},{'scenic-Area',11790},{'parking-Area',11791},{'weight-Station',11792},{road,11793},{exit,11794},{'historical-route',11795},{'state-line',11796},{spur,11797},{junction,11798},{'bicycle-route',11799},{'bicycle-interstate-route',11800},{'national-park',11801}]},{0,65535}};
typeinfo('Objects') ->
  {{'INTEGER_NNL',[{'unknown-object',11009},{tire,11010},{rim,11011},{retread,11012},{trash,11013},{cargo,11014},{diesel,11015},{gasoline,11016},{'anti-freeze',11017},{'seat-belts',11018},{'litter-container',11019},{'all-Terrain-vehicle',11020},{seaplane,11021},{chairlift,11022},{'fishing-pier',11023},{'railroad-cross-buck',11024},{telephone,11025},{fallout,11026},{medical,11027},{chemical,11028},{welfare,11029},{evacuation,11030},{'left-arrow-signal',11031},{'ahead-arrow-signal',11032},{'right-arrow-signal',11033},{'green-light-signal',11034},{'green-arrow-signal',11035},{'yellow-light-signal',11036},{'yellow-arrow-signal',11037},{'red-light-signal',11038},{'red-arrow-signal',11039},{'extended-green-signal',11040},{'advance-arrow-signal',11041},{'pedestrian-Signal-Stop',11042},{'pedestrian-Signal-Caution',11043},{'pedestrian-Signal-Walk',11044},{'pedestrian-Signal-Light',11045},{'pedestrian-Signal-Time-Display',11046},{train,11047},{horn,11048},{deer,11049},{cattle,11050},{horse,11051},{'golf-cart',11052},{'food-services',11053},{'ambulance-staging-point',11054},{'roadside-table',11055},{services,11056},{'motorist-services',11059},{'alternative-fuel',11060},{'propane-gas',11061},{registration,11062},{decontamination,11063},{emergency,11064}]},{0,65535}};
typeinfo('Obstruction') ->
  {{'INTEGER_NNL',[{'obstruction-on-roadway',1281},{'object-on-roadway',1282},{'objects-falling-from-moving-vehicle',1283},{'debris-on-roadway',1284},{'storm-damage',1285},{'people-on-roadway',1286},{'bicyclists-on-roadway',1287},{'sightseers-obstructing-access',1288},{'large-numbers-of-visitors',1289},{'animal-on-roadway',1290},{'large-animal-on-roadway',1291},{'herd-of-animals-on-roadway',1292},{'animal-struck',1293},{'fallen-trees',1294},{'downed-power-lines',1295},{'downed-cables',1296},{subsidence,1297},{'road-surface-collapse',1298},{'pavement-buckled',1299},{pothole,1300},{flooding,1301},{'broken-water-main',1302},{'collapsed-sewer',1303},{'sewer-overflow',1304},{'gas-leak',1305},{snowmelt,1306},{mudslide,1307},{avalanche,1308},{rockfall,1309},{landslide,1310},{'over-turned-trees',1311},{'tree-limbs',1312},{'utility-pole-down',1314},{'advertising-signs',1315},{'frost-heave',1316},{'frost-jacking',1317},{washboard,1318},{'wash-out',1319},{'clearance-work',1406},{'obstruction-cleared',1407}]},{0,65535}};
typeinfo('ParkingInformation') ->
  {{'INTEGER_NNL',[{'normal-parking-restrictions-lifted',4097},{'parking-meter-restrictions-lifted',4098},{'special-parking-restrictions-in-force',4099},{'full-parking-lot',4100},{'full-parking-garage',4101},{'all-parking-lots-full',4102},{'no-parking-spaces-available',4103},{'only-a-few-spaces-available',4104},{'spaces-available',4105},{'no-parking',4106},{'parking-on-one-side-of-street-only',4107},{'parking-on-both-sides-of-street',4108},{'parallel-parking-only',4109},{'parking-meters-not-available',4110},{'use-of-parking-meters-restricted',4111},{'event-parking',4112},{'handicapped-parking',4113},{'long-term-parking',4114},{'overnight-parking',4115},{'short-term-parking',4116},{'parking-by-permit-only',4117},{'emergency-parking-only',4118},{'emergency-stopping-only',4119},{parking,4120},{stopping,4121},{standing,4122},{'tow-away-zone',4123},{'school-zone',4124},{'speed-zone',4125},{'loading-zone',4126},{'state-law',4127},{'van-accessible',4128},{'special-parking-restrictions-lifted',4222},{'no-parking-information-available',4223}]},{0,65535}};
typeinfo('PavementConditions') ->
  {{'INTEGER_NNL',[{impassable,5889},{'almost-impassable',5890},{'passable-with-care',5891},{passable,5892},{'surface-water-hazard',5893},{'danger-of-hydroplaning',5894},{'wet-pavement',5895},{'treated-pavement',5896},{slippery,5897},{'mud-on-roadway',5898},{'leaves-on-roadway',5899},{'loose-sand-on-roadway',5900},{'loose-gravel',5901},{'fuel-on-roadway',5902},{'oil-on-roadway',5903},{'road-surface-in-poor-condition',5904},{'melting-tar',5905},{ice,5906},{'icy-patches',5907},{'black-ice',5908},{'ice-pellets-on-roadway',5909},{'ice-build-up',5910},{'freezing-rain',5911},{'wet-and-icy-roads',5912},{'melting-snow',5913},{slush,5914},{'frozen-slush',5915},{'snow-on-roadway',5916},{'packed-snow',5917},{'packed-snow-patches',5918},{'plowed-snow',5919},{'wet-snow',5920},{'fresh-snow',5921},{'powder-snow',5922},{'granular-snow',5923},{'frozen-snow',5924},{'crusted-snow',5925},{'deep-snow',5926},{'snow-drifts',5927},{'drifting-snow',5928},{'expected-snow-accumulation',5929},{'current-snow-accumulation',5930},{'rough-road',5931},{sand,5932},{gravel,5933},{paved,5934},{'uneven-lanes',5935},{'rough-crossing',5936},{'at-grade-level-crossing',5937},{'low-ground-clearance',5938},{'dry-pavement',6011},{'snow-cleared',6012},{'pavement-conditions-improved',6013},{'skid-hazard-reduced',6014},{'pavement-conditions-cleared',6015}]},{0,65535}};
typeinfo('Precipitation') ->
  {{'INTEGER_NNL',[{'severe-weather',4865},{blizzard,4866},{'heavy-snow',4867},{snow,4868},{'light-snow',4869},{'snow-showers',4870},{'winter-storm',4871},{'ice-glaze',4872},{'heavy-frost',4873},{frost,4874},{'ice-storm',4875},{sleet,4876},{'rain-and-snow-mixed',4877},{'rain-changing-to-snow',4878},{'damaging-hail',4879},{hail,4880},{thunderstorms,4881},{thundershowers,4882},{'extremely-heavy-downpour',4883},{'heavy-rain',4884},{rain,4885},{'light-rain',4886},{drizzle,4887},{showers,4888},{dew,4889},{'precipitation-cleared',4991}]},{0,65535}};
typeinfo('Qualifiers') ->
  {{'INTEGER_NNL',[{above,7681},{below,7682},{in,7683},{around,7684},{'after',7685},{before,7686},{at,7687},{on,7688},{near,7689},{'from-the',7690},{terminal,7691},{'falling-slowly',7692},{falling,7693},{'falling-quickly',7694},{'rising-slowly',7695},{rising,7696},{'rising-quickly',7697},{steady,7698},{likely,7699},{'changing-to',7700},{mostly,7701},{partly,7702},{minus,7703},{'weather-ended',7704},{expected,7705},{low,7706},{mid,7707},{high,7708},{upper,7709},{unseasonably,7710},{reported,7711},{advice,7712},{'due-to',7713},{'proceed-to',7714},{'transferred-to',7715},{use,7716},{affecting,7717},{blocking,7718},{connecting,7719},{finished,7720},{for,7721},{'or',7722},{'and',7723},{later,7724},{level,7725},{shortly,7726},{soon,7727},{service,7728},{damaged,7729},{'out-of-order',7730},{vandalism,7731},{'on-State-right-of-way',7732},{graffiti,7733},{'found-property',7734},{'begin-time',7735},{added,7736},{'end-time',7737},{no,7738},{'do-not',7739},{block,7740},{except,7741},{day,7742},{night,7743},{'any-time',7744},{has,7745},{'may-have',7746},{only,7747},{lifted,7748},{empty,7749},{turning,7750},{'u-turn',7751},{'wait-for',7752},{'when-flashing',7753},{duration,7754},{cross,7755},{'when-wet',7756},{must,7757},{oncoming,7758},{'may-exceed',7759},{'to-request',7760},{exempt,7761},{skewed,7762},{'when-children-are-present',7763},{lower,7764},{middle,7765},{major,7766},{minor,7767}]},{0,65535}};
typeinfo('RecreationalObjectsAndActivities') ->
  {{'INTEGER_NNL',[{'bear-viewing-area',12033},{'deer-viewing-area',12034},{'drinking-water',12035},{'environmental-study-area',12036},{'falling-rocks',12037},{firearms,12038},{'leashed-pets',12039},{'point-of-interest',12040},{smoking,12041},{dog,12042},{'tent-camping',12043},{'trailer-camping',12044},{'first-aid',12045},{handicapped,12046},{mechanic,12047},{'trailer-sanitary-station',12048},{'viewing-area',12049},{campfire,12050},{locker,12051},{sleeping,12052},{trail,12053},{climbing,12054},{'rock-climbing',12055},{hunting,12056},{playground,12057},{'rock-collecting',12058},{spelunking,12059},{'bicycle-trail',12060},{'hiking-trail',12061},{'horse-trail',12062},{'trail-interpretive-auto',12063},{'trail-interpretive-pedestrian',12064},{'trail-road-for-4WD-vehicles',12065},{'trail-for-trail-bikes',12066},{archer,12067},{'hang-glider',12068},{'boat-tours',12069},{canoeing,12070},{diving,12071},{'scuba-diving',12072},{fishing,12073},{'marine-recreation-area',12074},{motorboating,12075},{'boat-ramp',12076},{rowboating,12077},{sailboating,12078},{'water-skiing',12079},{surfing,12080},{swimming,12081},{wading,12082},{'hand-launch',12083},{kayak,12084},{'wind-surf',12085},{'ice-skating',12086},{'ski-jumping',12087},{bobbing,12088},{'cross-country-skiing',12089},{'downhill-skiing',12090},{sledding,12091},{snowmobiling,12092},{snowshoeing,12093},{'winter-recreation-area',12094},{'scenic-overlook',12095}]},{0,65535}};
typeinfo('RegulatoryAndWarningSigns') ->
  {{'INTEGER_NNL',[{'regulatory-sign',12289},{'warning-sign',12290},{'information-sign',12291},{'construction-sign',12292},{'guide-sign',12293},{stop,12294},{yield,12295},{'to-oncoming-traffic',12296},{'four-way',12297},{'all-way',12298},{zone,12299},{narrows,12300},{widens,12301},{reduced,12302},{combined,12303},{minimum,12304},{maximum,12305},{'divided-road',12306},{'double-arrow',12307},{'dead-end',12308},{'no-outlet',12309},{'wrong-way',12310},{nDetour,12312},{chevron,12313},{'do-not-enter',12314},{'t-intersection-to-the-side',12315},{'t-intersection-oncoming',12316},{'y-intersection-to-the-side',12317},{'y-intersection-oncoming',12318},{'four-way-divided-highway-crossing',12319},{'t-way-divided-highway-crossing',12320},{'light-rail-divided-highway-crossing',12321},{'light-rail-t-divided-highway-crossing',12322},{'side-road-to-right',12323},{'side-road-to-left',12324},{'side-road-to-right-at-angle',12325},{'side-road-to-left-at-angle',12326},{'entering-roadway-merge',12327},{'entering-roadway-added-lane',12328},{'one-way',12329},{caution,12330},{temporary,12331}]},{0,65535}};
typeinfo('ResponderGroupAffected') ->
  {{'INTEGER_NNL',[{'emergency-vehicle-units',9729},{'federal-law-enforcement-units',9730},{'state-police-units',9731},{'county-police-units',9732},{'local-police-units',9733},{'ambulance-units',9734},{'rescue-units',9735},{'fire-units',9736},{'hAZMAT-units',9737},{'light-tow-unit',9738},{'heavy-tow-unit',9739},{'freeway-service-patrols',9740},{'transportation-response-units',9741},{'private-contractor-response-units',9742},{'private-tow-units',9743}]},{0,65535}};
typeinfo('RestrictionClass') ->
  {{'INTEGER_NNL',[{restrictions,2561},{'ramp-restrictions',2562},{'truck-restriction',2563},{'speed-restriction',2564},{'noise-restriction',2565},{'traffic-regulations-have-been-changed',2566},{'local-access-only',2567},{'no-trailers',2568},{'no-high-profile-vehicles',2569},{'hazardous-materials-truck-restriction',2570},{'no-through-traffic',2571},{'no-motor-vehicles',2572},{'width-limit',2573},{'height-limit',2574},{'length-limit',2575},{'axle-load-limit',2576},{'gross-weight-limit',2577},{'axle-count-limit',2578},{'carpool-lane-available',2579},{'carpool-restrictions-changed',2580},{'hOV-2-no-single-occupant-vehicles',2581},{'hOV-3-no-vehicles-with-less-than-three-occupants',2582},{'bus-lane-available-for-all-vehicles',2583},{'truck-lane-available-for-all-vehicles',2584},{'permits-call-in-basis',2585},{'permits-temporarily-closed',2586},{'permits-closed',2587},{'road-use-permits-required',2588},{'permits-open',2675},{'restrictions-for-high-profile-vehicles-lifted',2676},{'width-limit-lifted',2677},{'height-limit-lifted',2678},{'length-limit-lifted',2679},{'axle-load-limit-lifted',2680},{'weight-limit-lifted',2681},{'axle-count-limit-lifted',2682},{'carpool-restrictions-lifted',2683},{'lane-restrictions-lifted',2684},{'ramp-restrictions-lifted',2685},{'motor-vehicle-restrictions-lifted',2686},{'restrictions-lifted',2687}]},{0,65535}};
typeinfo('RoadsideAssets') ->
  {{'INTEGER_NNL',[{none,10496},{'light-pole',10497},{'utility-pole',10498},{'gantry-way',10499},{'sign-support',10500},{'signal-pole',10501},{'signage-public',10502},{'signage-private',10503},{cones,10504},{'cones-post-type',10505},{'cones-glue-post',10506},{'cones-other',10507},{barriers,10508},{'barrier-Aframe',10509},{'barriers-heavy-duty',10510},{'barricade-type-III',10511},{'barricade-small',10512},{'barricade-lights',10513},{beacon,10514},{'t-stand',10515},{'a-stand',10516},{drums,10517},{'impact-attenuator',10518},{'barricade-tape',10519},{'safety-fence',10520},{'temp-pavement-markings',10521},{'speed-bumps',10522},{'temp-curbs',10523},{'parking-blocks',10524},{'signboard-fixed',10525},{'signboard-portable',10526},{har,10527},{'har-AM',10528},{'har-FM',10529},{'har-DSRC',10530},{'traffic-light',10531},{'lane-control-signal',10532},{'traffic-detector',10533},{'vehicle-detector',10534},{'system-alarm',10535},{'arrow-board',10536},{'fixed-VMS',10537},{'mobile-VMS',10538},{'ramp-control',10539},{'gate-control',10540},{'temporary-traffic-light',10541},{'over-height-warning-system',10542},{'over-weight-warning-system',10543},{'emergency-telephones',10544},{'railroad-crossing-equipment',10545},{'tunnel-ventilation',10546},{ccTV,10547},{'environmental-sensor',10548},{switch,10549},{signal,10550},{'third-rail',10551},{'overhead-power',10552},{'concrete-tie',10553},{'wooden-tie',10554},{escalator,10555},{elevator,10556},{track,10557},{drawbridge,10558},{'manhole-cover',10559},{culvert,10560},{'snow-poles',10561},{'guide-poles',10562},{'expansion-joint',10563},{'shifted-plate',10564},{'solid-barrier',10565},{'moveable-barrier',10566},{'sand-barrel',10567},{'overhead-sign',10568},{'ground-sign',10569},{'emergency-signal',10570},{'countdown-pedestrian-sign',10571},{stripe,10572},{island,10573}]},{0,65535}};
typeinfo('Roadwork') ->
  {{'INTEGER_NNL',[{'road-construction',1025},{'major-road-construction',1026},{'long-term-road-construction',1027},{'construction-work',1028},{'paving-operations',1029},{'work-in-the-median',1030},{'road-reconstruction',1031},{'opposing-traffic',1032},{'narrow-lanes',1033},{'construction-traffic-merging',1034},{'single-line-traffic-alternating-directions',1035},{'road-maintenance-operations',1036},{'road-marking-operations',1037},{'bridge-maintenance-operations',1038},{'bridge-construction',1039},{'bridge-demolition-work',1040},{blasting,1041},{'avalanche-control-activities',1042},{'water-main-work',1043},{'gas-main-work',1044},{'work-on-underground-cables',1045},{'work-on-underground-services',1046},{'new-road-construction-layout',1047},{'new-road-layout',1048},{'temporary-lane-markings',1049},{'temporary-traffic-lights',1050},{'emergency-maintenance',1051},{cracks,1052},{bumps,1053},{'storm-drain',1054},{'overgrown-grass',1055},{'overgrown-brushshrubs',1056},{'overgrown-trees',1057},{'crack-REMOVE',1058},{'drop-off',1059},{'seismic-retrofit',1060},{'road-widening',1061},{'utility-work',1062},{'road-maintenance-cleared',1146},{'normal-road-layout-restored',1147},{'road-work-clearance-in-progress',1148},{'road-construction-cleared',1149},{'normal-traffic-lanes-restored',1150},{'road-work-cleared',1151}]},{0,65535}};
typeinfo('SmallNumbers') ->
  {{'INTEGER_NNL',[{n1,12545},{n2,12546},{n3,12547},{n4,12548},{n5,12549},{n6,12550},{n7,12551},{n8,12552},{n9,12553},{n10,12554},{n11,12555},{n12,12556},{n13,12557},{n14,12558},{n15,12559},{n16,12560},{n17,12561},{n18,12562},{n19,12563},{n20,12564},{n21,12565},{n22,12566},{n23,12567},{n24,12568},{n25,12569},{n26,12570},{n27,12571},{n28,12572},{n29,12573},{n30,12574},{n31,12575},{n32,12576},{n33,12577},{n34,12578},{n35,12579},{n36,12580},{n37,12581},{n38,12582},{n39,12583},{n40,12584},{n41,12585},{n42,12586},{n43,12587},{n44,12588},{n45,12589},{n46,12590},{n47,12591},{n48,12592},{n49,12593},{n50,12594},{n51,12595},{n52,12596},{n53,12597},{n54,12598},{n55,12599},{n56,12600},{n57,12601},{n58,12602},{n59,12603},{n60,12604},{n61,12605},{n62,12606},{n63,12607},{n64,12608},{n65,12609},{n66,12610},{n67,12611},{n68,12612},{n69,12613},{n70,12614},{n71,12615},{n72,12616},{n73,12617},{n74,12618},{n75,12619},{n76,12620},{n77,12621},{n78,12622},{n79,12623},{n80,12624},{n81,12625},{n82,12626},{n83,12627},{n84,12628},{n85,12629},{n86,12630},{n87,12631},{n88,12632},{n89,12633},{n90,12634},{n91,12635},{n92,12636},{n93,12637},{n94,12638},{n95,12639},{n96,12640},{n97,12641},{n98,12642},{n99,12643},{n100,12644},{n101,12645},{n102,12646},{n103,12647},{n104,12648},{n105,12649},{n106,12650},{n107,12651},{n108,12652},{n109,12653},{n110,12654},{n111,12655},{n112,12656},{n113,12657},{n114,12658},{n115,12659},{n116,12660},{n117,12661},{n118,12662},{n119,12663},{n120,12664},{n121,12665},{n122,12666},{n123,12667},{n124,12668},{n125,12669},{n126,12670},{n127,12671},{n128,12672},{n129,12673},{n130,12674},{n131,12675},{n132,12676},{n133,12677},{n134,12678},{n135,12679},{n136,12680},{n137,12681},{n138,12682},{n139,12683},{n140,12684},{n141,12685},{n142,12686},{n143,12687},{n144,12688},{n145,12689},{n146,12690},{n147,12691},{n148,12692},{n149,12693},{n150,12694},{n151,12695},{n152,12696},{n153,12697},{n154,12698},{n155,12699},{n156,12700},{n157,12701},{n158,12702},{n159,12703},{n160,12704},{n161,12705},{n162,12706},{n163,12707},{n164,12708},{n165,12709},{n166,12710},{n167,12711},{n168,12712},{n169,12713},{n170,12714},{n171,12715},{n172,12716},{n173,12717},{n174,12718},{n175,12719},{n176,12720},{n177,12721},{n178,12722},{n179,12723},{n180,12724},{n181,12725},{n182,12726},{n183,12727},{n184,12728},{n185,12729},{n186,12730},{n187,12731},{n188,12732},{n189,12733},{n190,12734},{n191,12735},{n192,12736},{n193,12737},{n194,12738},{n195,12739},{n196,12740},{n197,12741},{n198,12742},{n199,12743},{n200,12744},{n201,12745},{n202,12746},{n203,12747},{n204,12748},{n205,12749},{n206,12750},{n207,12751},{n208,12752},{n209,12753},{n210,12754},{n211,12755},{n212,12756},{n213,12757},{n214,12758},{n215,12759},{n216,12760},{n217,12761},{n218,12762},{n219,12763},{n220,12764},{n221,12765},{n222,12766},{n223,12767},{n224,12768},{n225,12769},{n226,12770},{n227,12771},{n228,12772},{n229,12773},{n230,12774},{n231,12775},{n232,12776},{n233,12777},{n234,12778},{n235,12779},{n236,12780},{n237,12781},{n238,12782},{n239,12783},{n240,12784},{n241,12785},{n242,12786},{n243,12787},{n244,12788},{n245,12789},{n246,12790},{n247,12791},{n248,12792},{n249,12793},{n250,12794},{n251,12795},{n252,12796},{n253,12797},{n254,12798},{n255,12799}]},{0,65535}};
typeinfo('SpecialEvents') ->
  {{'INTEGER_NNL',[{'major-event',3841},{airshow,3842},{'hot-air-ballooning',3843},{concert,3844},{'state-occasion',3845},{'vIP-visit',3846},{show,3847},{festival,3848},{exhibition,3849},{'performing-arts',3850},{'outdoor-market',3851},{fair,3852},{carnival,3853},{'fireworks-display',3854},{'trade-expo',3855},{'movie-filming',3856},{'presidential-visit',3857},{parade,3858},{procession,3859},{'funeral-procession',3860},{crowd,3861},{'holiday-traffic-crowds',3862},{'event-ended',3967}]},{0,65535}};
typeinfo('SportingEvents') ->
  {{'INTEGER_NNL',[{'sports-event',3585},{game,3586},{tournament,3587},{'track-and-field-event',3588},{'baseball-game',3589},{'basketball-game',3590},{'boxing-match',3591},{'football-game',3592},{'soccer-game',3593},{'golf-tournament',3594},{'hockey-game',3595},{'tennis-tournament',3596},{'wrestling-match',3597},{'road-race',3598},{'automobile-race',3599},{'bicycle-race',3600},{'race-event',3601},{marathon,3602},{'horse-show',3603},{rodeo,3604},{'water-sports-event',3605},{'winter-sports-event',3606},{'skating-event',3607},{'dog-sled-race',3608},{'sporting-event-ended',3711}]},{0,65535}};
typeinfo('StatesAndTerritories') ->
  {{'INTEGER_NNL',[{alabama,12801},{alaska,12802},{'american-Samoa',12803},{arizona,12804},{arkansas,12805},{california,12806},{colorado,12807},{connecticut,12808},{delaware,12809},{'district-of-Columbia',12810},{florida,12811},{georgia,12812},{guam,12813},{hawaii,12814},{idaho,12815},{illinois,12816},{indiana,12817},{iowa,12818},{kansas,12819},{kentucky,12820},{louisiana,12821},{maine,12822},{maryland,12823},{massachusetts,12824},{michigan,12825},{minnesota,12826},{mississippi,12827},{missouri,12828},{montana,12829},{nebraska,12830},{nevada,12831},{'new-Hampshire',12832},{'new-Jersey',12833},{'new-Mexico',12834},{'new-York',12835},{'north-Carolina',12836},{'north-Dakota',12837},{'northern-Marianas-Islands',12838},{ohio,12839},{oklahoma,12840},{oregon,12841},{pennsylvania,12842},{'puerto-rico',12843},{'rhode-Island',12844},{'south-Carolina',12845},{'south-Dakota',12846},{tennessee,12847},{texas,12848},{utah,12849},{vermont,12850},{virginia,12851},{'virgin-Islands',12852},{washington,12853},{'west-Virginia',12854},{wisconsin,12855},{wyoming,12856}]},{0,65535}};
typeinfo('StreetSuffixes') ->
  {{'INTEGER_NNL',[{alley,13313},{annex,13314},{arcade,13315},{avenue,13316},{bayoo,13317},{beach,13318},{bend,13319},{bluff,13320},{bottom,13321},{boulevard,13322},{branch,13323},{nBridge,13324},{brook,13325},{burg,13326},{bypass,13327},{camp,13328},{canyon,13329},{cape,13330},{causeway,13331},{nCenter,13332},{circle,13333},{cliff,13334},{club,13335},{common,13336},{corner,13337},{course,13338},{court,13339},{cove,13340},{creek,13341},{crescent,13342},{crest,13343},{nCrossing,13344},{crossroad,13345},{curve,13346},{dale,13347},{nDam,13348},{divide,13349},{drive,13350},{estate,13351},{expressway,13352},{extension,13353},{fall,13354},{nFerry,13355},{field,13356},{flat,13357},{ford,13358},{forest,13359},{forge,13360},{fork,13361},{fort,13362},{nFreeway,13363},{garden,13364},{gateway,13365},{glen,13366},{green,13367},{grove,13368},{harbor,13369},{haven,13370},{heights,13371},{highway,13372},{nHill,13373},{hollow,13374},{inlet,13375},{nIsland,13376},{isle,13377},{nJunction,13378},{key,13379},{knoll,13380},{lake,13381},{land,13382},{landing,13383},{nLane,13384},{light,13385},{loaf,13386},{lock,13387},{lodge,13388},{loop,13389},{mall,13390},{manor,13391},{meadow,13392},{mews,13393},{mill,13394},{mission,13395},{motorway,13396},{mount,13397},{mountain,13398},{neck,13399},{orchard,13400},{oval,13401},{nOverpass,13402},{park,13403},{parkway,13404},{nPass,13405},{passage,13406},{path,13407},{pike,13408},{pine,13409},{plains,13410},{plaza,13411},{point,13412},{port,13413},{prairie,13414},{radial,13415},{ramp,13416},{ranch,13417},{rapid,13418},{rest,13419},{ridge,13420},{river,13421},{nRoad,13422},{route,13423},{row,13424},{rue,13425},{run,13426},{shoal,13427},{shore,13428},{skyway,13429},{spring,13430},{nSpur,13431},{square,13432},{nStation,13433},{stravenue,13434},{stream,13435},{street,13436},{summit,13437},{terrace,13438},{throughway,13439},{trace,13440},{nTrack,13441},{trafficway,13442},{nTrail,13443},{nTunnel,13444},{turnpike,13445},{nUnderpass,13446},{union,13447},{valley,13448},{viaduct,13449},{view,13450},{village,13451},{ville,13452},{vista,13453},{nWalk,13454},{wall,13455},{way,13456},{well,13457}]},{0,65535}};
typeinfo('Structures') ->
  {{'INTEGER_NNL',[{'rest-room',13057},{'mens-rest-room',13058},{'womens-rest-room',13059},{'family-rest-room',13060},{dam,13061},{'fish-hatchery',13062},{information,13063},{lighthouse,13064},{'lookout-tower',13065},{'ranger-station',13066},{'grocery-store',13068},{lodging,13069},{'post-office',13070},{'picnic-shelter',13072},{'group-camping',13073},{'group-picnicking',13074},{'n24-hour-pharmacy',13075},{kennel,13076},{'laundry-facilities',13077},{'shower-facilities',13078},{amphitheater,13079},{stable,13080},{hospital,13081},{'emergency-medical-service-point',13082},{library,13083},{'recycling-collection-center',13084},{school,13085}]},{0,65535}};
typeinfo('SuggestionAdvice') ->
  {{'INTEGER_NNL',[{'why-not-ride-share',6657},{'is-this-your-no-ride-day',6658},{'why-not-use-transit',6659},{'why-not-park-and-ride',6660},{'why-not-try-paratransit',6661},{'why-not-travel-by-rail',6662},{'why-not-use-the-subway',6663},{'why-not-try-rapid-transit',6664},{'why-not-travel-by-bus',6665},{'your-parking-ticket-covers-the-return-ride',6666},{'avoid-the-rush-hour',6667},{'do-not-allow-unnecessary-gaps',6668},{'follow-the-vehicle-in-front-smoothly',6669},{'do-not-slow-down-unnecessarily',6670},{'watch-for-muggers',6671},{'watch-for-pickpockets',6672},{'watch-for-thieves',6673},{'sorry-for-any-delay',6674},{'thank-you-for-your-understanding',6675},{'we-appreciate-your-patience',6676},{'we-are-grateful-for-your-cooperation',6677},{'share-the-road',6678}]},{0,65535}};
typeinfo('Temperature') ->
  {{'INTEGER_NNL',[{'maximum-temperature',5633},{temperature,5634},{'minimum-temperature',5635},{'current-temperature',5636},{'heat-index',5637},{'extreme-heat',5638},{hot,5639},{hotter,5640},{heat,5641},{warmer,5642},{warm,5643},{mild,5644},{cool,5645},{cooler,5646},{cold,5647},{colder,5648},{'very-cold',5649},{'extreme-cold',5650},{'wind-chill',5651},{dewpoint,5652},{'relative-humidity',5653},{'temperatures-close-to-the-seasonal-norm',5758},{'less-extreme-temperatures',5759}]},{0,65535}};
typeinfo('TrafficConditions') ->
  {{'INTEGER_NNL',[{'stopped-traffic',257},{'stop-and-go-traffic',258},{'slow-traffic',259},{'heavy-traffic',260},{'traffic-building',261},{'long-queues',262},{'traffic-congestion',263},{'traffic-lighter-than-normal',264},{'traffic-heavier-than-normal',265},{'traffic-much-heavier-than-normal',266},{'current-speed',267},{'speed-limit',268},{'travel-time',269},{'merging-traffic',272},{contraflow,273},{'contraflow-canceled',378},{'traffic-flowing-freely',379},{'traffic-easing',380},{'traffic-returned-to-normal',381},{'no-problems-to-report',382},{'traffic-congestion-cleared',383}]},{0,65535}};
typeinfo('TransitMode') ->
  {{'INTEGER_NNL',[{travel,8961},{transit,8962},{bus,8963},{trolleybus,8964},{rail,8965},{'commuter-rail',8966},{subway,8967},{'rapid-transit',8968},{'light-rail',8969},{streetcar,8970},{'dial-a-ride',8971},{'park-and-ride',8972},{shuttle,8973},{'free-shuttle',8974},{'airport-shuttle',8975},{taxies,8976},{ferry,8977},{'passenger-ferry',8978},{'vehicle-ferry',8979},{'aerial-tramway',8980},{'automated-guideway',8981},{'cable-cars',8982},{monorail,8983},{'air-travel',8984},{'hitch-hitching',8985},{walk,8986}]},{0,65535}};
typeinfo('TransitOperations') ->
  {{'INTEGER_NNL',[{'unknown-transit-problem',10753},{'sleeping-customer',10754},{'assault-on-passenger',10755},{'assault-on-employee',10756},{'broken-seat',10757},{'bus-alarm',10758},{'crime-or-drug-deal',10759},{'eating-on-board',10760},{'equipment-problem-with-air-conditioning',10761},{'equipment-problem-with-air-system',10762},{'equipment-problem-with-brakes',10763},{'equipment-problem-with-chassis-or-suspension',10764},{'equipment-problem-with-cooling-system',10765},{'equipment-problem-with-doors',10766},{'equipment-problem-with-electrical',10767},{'equipment-problem-with-engine',10768},{'equipment-problem-with-exterior-or-body',10769},{'equipment-problem-with-fare-collection',10770},{'equipment-problem-with-fuel-or-exhaust',10771},{'equipment-problem-with-horn',10772},{'equipment-problem-with-interior',10773},{'equipment-problem-with-liftkneeling',10774},{'equipment-problem-with-lights',10775},{'equipment-problem-with-lubrication',10776},{'equipment-problem-with-radio-or-communication',10777},{'equipment-problem-with-signs',10778},{'equipment-problem-with-steering',10779},{'equipment-problem-with-tires',10780},{'equipment-problem-with-transmission',10781},{'equipment-problem-with-unknown-alarm',10782},{'equipment-problem-with-wipers',10783},{'fare-dispute-expired-pass',10784},{'fare-dispute-expired-transfer',10785},{'fare-dispute-expired-upgrade',10786},{'fare-dispute-other',10787},{'fare-dispute-refuses-to-pay',10788},{'lift-passenger-cycle-completed',10789},{'lift-passenger-ready-to-alight',10790},{'lift-passenger-ready-to-board',10791},{'lost-article',10792},{'objects-thrown',10793},{'passenger-accident-alighting',10794},{'passenger-accident-boarding',10795},{'passenger-accident-fallen-on-board',10796},{'passenger-load',10797},{'passenger-accident-other',10798},{'passenger-sick-or-injured',10799},{'right-of-way',10800},{theft,10801},{'theft-of-service',10802},{'waiting-to-get-relief-for-schedule-break',10803},{'waiting-to-get-relief-after-run-is-finished',10804},{'waiting-to-provide-relief',10805}]},{0,65535}};
typeinfo('TravelerGroupAffected') ->
  {{'INTEGER_NNL',[{'through-traffic',9473},{'holiday-traffic',9474},{residents,9475},{visitors,9476},{'long-distance-traffic',9477},{'local-traffic',9478},{'regional-traffic',9479},{arrivals,9480},{departures,9481},{'airline-travelers',9482},{'commuter-airline-travelers',9483},{'domestic-airline-travelers',9484},{'international-airline-travelers',9485},{pedestrians,9486},{bicyclists,9487}]},{0,65535}};
typeinfo('Units') ->
  {{'INTEGER_NNL',[{'square-feet',8705},{'square-meters',8706},{acres,8707},{hectares,8708},{inches,8709},{feet,8710},{mile,8711},{miles,8712},{'nautical-miles',8713},{millimeters,8714},{meters,8715},{kilometer,8716},{kilometers,8717},{'feet-per-second',8718},{'meters-per-second',8719},{mPH,8720},{kPH,8721},{knots,8722},{aM,8723},{pM,8724},{weekends,8725},{holiday,8726},{seconds,8727},{minutes,8728},{hours,8729},{days,8730},{weeks,8731},{months,8732},{'degrees-Angle',8733},{'degrees-Celsius',8734},{'degrees-Fahrenheit',8735},{grams,8736},{kilograms,8737},{ounces,8738},{pounds,8739},{tons,8740},{'fluid-ounces',8741},{gallons,8742},{milliliters,8743},{liters,8744},{'kilograms-per-lane-mile',8745},{'tons-per-lane-mile',8746},{dollar,8747},{percent,8748},{'time-delimiter',8749},{dollars,8750},{'flight-number',8751},{'person-people',8752},{'response-plan',8753},{'placard-type',8754},{'placard-number',8755},{fM,8756},{grade,8757},{nSunday,8758},{nMonday,8759},{nTuesday,8760},{nWednesday,8761},{nThursday,8762},{nFriday,8763},{nSaturday,8764},{weekdays,8765},{elevation,8766},{'other-times',8767}]},{0,65535}};
typeinfo('UnusualDriving') ->
  {{'INTEGER_NNL',[{'vehicle-traveling-wrong-way',1793},{'reckless-driver',1794},{'prohibited-vehicle-on-roadway',1795},{'emergency-vehicles-on-roadway',1796},{'high-speed-emergency-vehicles',1797},{'high-speed-chase',1798},{'dangerous-vehicle-warning-cleared',1918},{'emergency-vehicle-warning-cleared',1919}]},{0,65535}};
typeinfo('ValidManeuvers') ->
  {{'INTEGER_NNL',[{'prohibit-None-Allowed-LU-LT-L45-S-R45-RT-RU',11264},{'prohibit-RU-Allowed-LU-LT-L45-S-R45-RT',11265},{'prohibit-RT-Allowed-LU-LT-L45-S-R45-RU',11266},{'prohibit-RT-RU-Allowed-LU-LT-L45-S-R45',11267},{'prohibit-R45-Allowed-LU-LT-L45-S-RT-RU',11268},{'prohibit-R45-RU-Allowed-LU-LT-L45-S-RT',11269},{'prohibit-R45-RT-Allowed-LU-LT-L45-S-RU',11270},{'prohibit-R45-RT-RU-Allowed-LU-LT-L45-S',11271},{'prohibit-S-Allowed-LU-LT-L45-R45-RT-RU',11272},{'prohibit-S-RU-Allowed-LU-LT-L45-R45-RT',11273},{'prohibit-S-RT-Allowed-LU-LT-L45-R45-RU',11274},{'prohibit-S-RT-RU-Allowed-LU-LT-L45-R45',11275},{'prohibit-S-R45-Allowed-LU-LT-L45-RT-RU',11276},{'prohibit-S-R45-RU-Allowed-LU-LT-L45-RT',11277},{'prohibit-S-R45-RT-Allowed-LU-LT-L45-RU',11278},{'prohibit-S-R45-RT-RU-Allowed-LU-LT-L45',11279},{'prohibit-L45-Allowed-LU-LT-S-R45-RT-RU',11280},{'prohibit-L45-RU-Allowed-LU-LT-S-R45-RT',11281},{'prohibit-L45-RT-Allowed-LU-LT-S-R45-RU',11282},{'prohibit-L45-RT-RU-Allowed-LU-LT-S-R45',11283},{'prohibit-L45-R45-Allowed-LU-LT-S-RT-RU',11284},{'prohibit-L45-R45-RU-Allowed-LU-LT-S-RT',11285},{'prohibit-L45-R45-RT-Allowed-LU-LT-S-RU',11286},{'prohibit-L45-R45-RT-RU-Allowed-LU-LT-S',11287},{'prohibit-L45-S-Allowed-LU-LT-R45-RT-RU',11288},{'prohibit-L45-S-RU-Allowed-LU-LT-R45-RT',11289},{'prohibit-L45-S-RT-Allowed-LU-LT-R45-RU',11290},{'prohibit-L45-S-RT-RU-Allowed-LU-LT-R45',11291},{'prohibit-L45-S-R45-Allowed-LU-LT-RT-RU',11292},{'prohibit-L45-S-R45-RU-Allowed-LU-LT-RT',11293},{'prohibit-L45-S-R45-RT-Allowed-LU-LT-RU',11294},{'prohibit-L45-S-R45-RT-RU-Allowed-LU-LT',11295},{'prohibit-LT-Allowed-LU-L45-S-R45-RT-RU',11296},{'prohibit-LT-RU-Allowed-LU-L45-S-R45-RT',11297},{'prohibit-LT-RT-Allowed-LU-L45-S-R45-RU',11298},{'prohibit-LT-RT-RU-Allowed-LU-L45-S-R45',11299},{'prohibit-LT-R45-Allowed-LU-L45-S-RT-RU',11300},{'prohibit-LT-R45-RU-Allowed-LU-L45-S-RT',11301},{'prohibit-LT-R45-RT-Allowed-LU-L45-S-RU',11302},{'prohibit-LT-R45-RT-RU-Allowed-LU-L45-S',11303},{'prohibit-LT-S-Allowed-LU-L45-R45-RT-RU',11304},{'prohibit-LT-S-RU-Allowed-LU-L45-R45-RT',11305},{'prohibit-LT-S-RT-Allowed-LU-L45-R45-RU',11306},{'prohibit-LT-S-RT-RU-Allowed-LU-L45-R45',11307},{'prohibit-LT-S-R45-Allowed-LU-L45-RT-RU',11308},{'prohibit-LT-S-R45-RU-Allowed-LU-L45-RT',11309},{'prohibit-LT-S-R45-RT-Allowed-LU-L45-RU',11310},{'prohibit-LT-S-R45-RT-RU-Allowed-LU-L45',11311},{'prohibit-LT-L45-Allowed-LU-S-R45-RT-RU',11312},{'prohibit-LT-L45-RU-Allowed-LU-S-R45-RT',11313},{'prohibit-LT-L45-RT-Allowed-LU-S-R45-RU',11314},{'prohibit-LT-L45-RT-RU-Allowed-LU-S-R45',11315},{'prohibit-LT-L45-R45-Allowed-LU-S-RT-RU',11316},{'prohibit-LT-L45-R45-RU-Allowed-LU-S-RT',11317},{'prohibit-LT-L45-R45-RT-Allowed-LU-S-RU',11318},{'prohibit-LT-L45-R45-RT-RU-Allowed-LU-S',11319},{'prohibit-LT-L45-S-Allowed-LU-R45-RT-RU',11320},{'prohibit-LT-L45-S-RU-Allowed-LU-R45-RT',11321},{'prohibit-LT-L45-S-RT-Allowed-LU-R45-RU',11322},{'prohibit-LT-L45-S-RT-RU-Allowed-LU-R45',11323},{'prohibit-LT-L45-S-R45-Allowed-LU-RT-RU',11324},{'prohibit-LT-L45-S-R45-RU-Allowed-LU-RT',11325},{'prohibit-LT-L45-S-R45-RT-Allowed-LU-RU',11326},{'prohibit-LT-L45-S-R45-RT-RU-Allowed-LU',11327},{'prohibit-LU-Allowed-LT-L45-S-R45-RT-RU',11328},{'prohibit-LU-RU-Allowed-LT-L45-S-R45-RT',11329},{'prohibit-LU-RT-Allowed-LT-L45-S-R45-RU',11330},{'prohibit-LU-RT-RU-Allowed-LT-L45-S-R45',11331},{'prohibit-LU-R45-Allowed-LT-L45-S-RT-RU',11332},{'prohibit-LU-R45-RU-Allowed-LT-L45-S-RT',11333},{'prohibit-LU-R45-RT-Allowed-LT-L45-S-RU',11334},{'prohibit-LU-R45-RT-RU-Allowed-LT-L45-S',11335},{'prohibit-LU-S-Allowed-LT-L45-R45-RT-RU',11336},{'prohibit-LU-S-RU-Allowed-LT-L45-R45-RT',11337},{'prohibit-LU-S-RT-Allowed-LT-L45-R45-RU',11338},{'prohibit-LU-S-RT-RU-Allowed-LT-L45-R45',11339},{'prohibit-LU-S-R45-Allowed-LT-L45-RT-RU',11340},{'prohibit-LU-S-R45-RU-Allowed-LT-L45-RT',11341},{'prohibit-LU-S-R45-RT-Allowed-LT-L45-RU',11342},{'prohibit-LU-S-R45-RT-RU-Allowed-LT-L45',11343},{'prohibit-LU-L45-Allowed-LT-S-R45-RT-RU',11344},{'prohibit-LU-L45-RU-Allowed-LT-S-R45-RT',11345},{'prohibit-LU-L45-RT-Allowed-LT-S-R45-RU',11346},{'prohibit-LU-L45-RT-RU-Allowed-LT-S-R45',11347},{'prohibit-LU-L45-R45-Allowed-LT-S-RT-RU',11348},{'prohibit-LU-L45-R45-RU-Allowed-LT-S-RT',11349},{'prohibit-LU-L45-R45-RT-Allowed-LT-S-RU',11350},{'prohibit-LU-L45-R45-RT-RU-Allowed-LT-S',11351},{'prohibit-LU-L45-S-Allowed-LT-R45-RT-RU',11352},{'prohibit-LU-L45-S-RU-Allowed-LT-R45-RT',11353},{'prohibit-LU-L45-S-RT-Allowed-LT-R45-RU',11354},{'prohibit-LU-L45-S-RT-RU-Allowed-LT-R45',11355},{'prohibit-LU-L45-S-R45-Allowed-LT-RT-RU',11356},{'prohibit-LU-L45-S-R45-RU-Allowed-LT-RT',11357},{'prohibit-LU-L45-S-R45-RT-Allowed-LT-RU',11358},{'prohibit-LU-L45-S-R45-RT-RU-Allowed-LT',11359},{'prohibit-LU-LT-Allowed-L45-S-R45-RT-RU',11360},{'prohibit-LU-LT-RU-Allowed-L45-S-R45-RT',11361},{'prohibit-LU-LT-RT-Allowed-L45-S-R45-RU',11362},{'prohibit-LU-LT-RT-RU-Allowed-L45-S-R45',11363},{'prohibit-LU-LT-R45-Allowed-L45-S-RT-RU',11364},{'prohibit-LU-LT-R45-RU-Allowed-L45-S-RT',11365},{'prohibit-LU-LT-R45-RT-Allowed-L45-S-RU',11366},{'prohibit-LU-LT-R45-RT-RU-Allowed-L45-S',11367},{'prohibit-LU-LT-S-Allowed-L45-R45-RT-RU',11368},{'prohibit-LU-LT-S-RU-Allowed-L45-R45-RT',11369},{'prohibit-LU-LT-S-RT-Allowed-L45-R45-RU',11370},{'prohibit-LU-LT-S-RT-RU-Allowed-L45-R45',11371},{'prohibit-LU-LT-S-R45-Allowed-L45-RT-RU',11372},{'prohibit-LU-LT-S-R45-RU-Allowed-L45-RT',11373},{'prohibit-LU-LT-S-R45-RT-Allowed-L45-RU',11374},{'prohibit-LU-LT-S-R45-RT-RU-Allowed-L45',11375},{'prohibit-LU-LT-L45-Allowed-S-R45-RT-RU',11376},{'prohibit-LU-LT-L45-RU-Allowed-S-R45-RT',11377},{'prohibit-LU-LT-L45-RT-Allowed-S-R45-RU',11378},{'prohibit-LU-LT-L45-RT-RU-Allowed-S-R45',11379},{'prohibit-LU-LT-L45-R45-Allowed-S-RT-RU',11380},{'prohibit-LU-LT-L45-R45-RU-Allowed-S-RT',11381},{'prohibit-LU-LT-L45-R45-RT-Allowed-S-RU',11382},{'prohibit-LU-LT-L45-R45-RT-RU-Allowed-S',11383},{'prohibit-LU-LT-L45-S-Allowed-R45-RT-RU',11384},{'prohibit-LU-LT-L45-S-RU-Allowed-R45-RT',11385},{'prohibit-LU-LT-L45-S-RT-Allowed-R45-RU',11386},{'prohibit-LU-LT-L45-S-RT-RU-Allowed-R45',11387},{'prohibit-LU-LT-L45-S-R45-Allowed-RT-RU',11388},{'prohibit-LU-LT-L45-S-R45-RU-Allowed-RT',11389},{'prohibit-LU-LT-L45-S-R45-RT-Allowed-RU',11390},{'prohibit-LU-LT-L45-S-R45-RT-RU-Allowed-None',11391}]},{0,65535}};
typeinfo('VehicleGroupAffected') ->
  {{'INTEGER_NNL',[{'all-vehicles',9217},{bicycles,9218},{motorcycles,9219},{cars,9220},{'light-vehicles',9221},{'cars-and-light-vehicles',9222},{'cars-with-trailers',9223},{'cars-with-recreational-trailers',9224},{'vehicles-with-trailers',9225},{'heavy-vehicles',9226},{trucks,9227},{buses,9228},{'articulated-buses',9229},{'school-buses',9230},{'vehicles-with-semi-trailers',9231},{'vehicles-with-double-trailers',9232},{'high-profile-vehicles',9233},{'wide-vehicles',9234},{'long-vehicles',9235},{'hazardous-loads',9236},{'exceptional-loads',9237},{'abnormal-loads',9238},{convoys,9239},{'maintenance-vehicles',9240},{'delivery-vehicles',9241},{'vehicles-with-even-numbered-license-plates',9242},{'vehicles-with-odd-numbered-license-plates',9243},{'vehicles-with-parking-permits',9244},{'vehicles-with-catalytic-converters',9245},{'vehicles-without-catalytic-converters',9246},{'gas-powered-vehicles',9247},{'diesel-powered-vehicles',9248},{'lPG-vehicles',9249},{'military-convoys',9250},{'military-vehicles',9251},{'electric-powered-vehicles',9252},{'hybrid-powered-vehicles',9253},{'inherently-low-emission-vehicles',9254},{'commercial-vehicles',9255},{'runaway-vehicles',9256},{'vehicles-with-lugs',9257},{'motor-driven-cycles',9258},{'recreational-vehicles',9259},{'non-motorized-vehicles',9260},{traffic,9261}]},{0,65535}};
typeinfo('VisibilityAndAirQuality') ->
  {{'INTEGER_NNL',[{'dense-fog',5377},{fog,5378},{'patchy-fog',5379},{'freezing-fog',5380},{mist,5381},{haze,5382},{'visibility-reduced',5383},{'white-out',5384},{'blowing-snow',5385},{'smoke-hazard',5386},{'spray-hazard',5387},{'low-sun-glare',5388},{'snow-glare',5389},{'blowing-dust',5390},{'blowing-sand',5391},{'dust-storms',5392},{sandstorms,5393},{'air-quality-good',5394},{'air-quality-fair',5395},{'air-quality-poor',5396},{'air-quality-very-poor',5397},{'severe-exhaust-pollution',5398},{'smog-alert',5399},{'pollen-count-high',5400},{'pollen-count-medium',5401},{'pollen-count-low',5402},{'swarms-of-insects',5403},{'visibility-blocked',5404},{'ice-fog',5405},{'fog-clearing',5499},{'visibility-improved',5500},{'fog-forecast-withdrawn',5501},{'pollution-alert-ended',5502},{'air-quality-improved',5503}]},{0,65535}};
typeinfo('WarningAdvice') ->
  {{'INTEGER_NNL',[{risk,6913},{watch,6914},{warning,6915},{alert,6916},{danger,6917},{'danger-of-explosion',6918},{'danger-of-fire',6919},{'extra-police-patrols-in-operation',6920},{'look-out-for-vehicles-stopped-under-bridges',6921},{'increased-risk-of-accident',6922},{'rescue-and-recovery-work-in-progress-at-sceneREMOVED',6923},{'police-at-scene',6924},{'emergency-vehicles-at-scene',6925},{'traffic-being-directed-around-accident-area',6926},{'police-directing-traffic',6927},{'rescue-workers-directing-traffic',6928},{'repairs-in-progress',6929},{'pilot-car-in-operation',6930},{'look-out-for-flagger',6931},{'police-checks-in-operation',6932},{'mandatory-speed-limit-in-force',6933},{'speed-limit-in-force-for-heavy-vehicles',6934},{lockdown,6935},{'security-check-point',6936},{'truck-check-point',6937},{'single-occupancy-vehicle-check-point',6938},{look,6939},{'photo-enforced',6940},{'traffic-laws',6941},{'use-low-gear',6942},{'bridge-ices-before-road',6943},{'speed-checked-by-radar',6944},{'speed-checked-by-aircraft',6945},{fines,6946},{'fines-higher',6947},{'fines-doubled',6948},{'fines-tripled',6949},{'behind-you',6950},{'traffic-signs',6951},{'look-out-for-workers',6952},{'ride-with-traffic',6953},{'prepare-to-evacuate-area',6954},{avoid,6955},{'evacuation-canceled',7033},{'warning-canceled',7034},{'watch-canceled',7035},{'alert-canceled',7036},{ended,7037},{cleared,7038},{canceled,7039}]},{0,65535}};
typeinfo('WeatherConditions') ->
  {{'INTEGER_NNL',[{overcast,4609},{cloudy,4610},{'mostly-cloudy',4611},{'partly-cloudy',4612},{'partly-sunny',4613},{'mostly-sunny',4614},{sunny,4615},{'fair-skies',4616},{'clear-skies',4617},{'mostly-clear',4618},{'mostly-dry',4619},{dry,4620},{'uV-index-very-high',4621},{'uV-index-high',4622},{'uV-index-moderate',4623},{'uV-index-low',4624},{'uV-index-very-low',4625},{'barometric-pressure',4626},{'ozone-alert',4627},{'lighting-unknown',4628},{'artificial-exterior-light',4629},{'artificial-interior-light',4630},{darkness,4631},{dusk,4632},{dawn,4633},{moonlight,4634},{daylight,4635},{'weather-forecast-withdrawn',4735}]},{0,65535}};
typeinfo('Winds') ->
  {{'INTEGER_NNL',[{tornado,5121},{hurricane,5122},{'hurricane-force-winds',5123},{'tropical-storm',5124},{'gale-force-winds',5125},{'storm-force-winds',5126},{'strong-winds',5127},{'moderate-winds',5128},{'light-winds',5129},{calm,5130},{'gusty-winds',5131},{crosswinds,5132},{windy,5133},{'strong-winds-have-eased',5246},{'strong-wind-forecast-withdrawn',5247}]},{0,65535}};
typeinfo('WinterDrivingIndex') ->
  {{'INTEGER_NNL',[{'driving-conditions-good',6401},{'driving-conditions-fair',6402},{'difficult-driving-conditions',6403},{'very-difficult-driving-conditions',6404},{'hazardous-driving-conditions',6405},{'extremely-hazardous-driving-conditions',6406}]},{0,65535}};
typeinfo('WinterDrivingRestrictions') ->
  {{'INTEGER_NNL',[{'winter-equipment-recommended',6145},{'winter-equipment-required',6146},{'snow-chains-recommended',6147},{'snow-chains-required',6148},{'snow-chains-prohibited',6149},{'studded-tires-prohibited',6150},{'snow-tires-recommended',6151},{'snow-tires-required',6152},{'four-wheel-drive-recommended',6153},{'four-wheel-drive-required',6154},{'snow-tires-or-chains-recommended',6155},{'snow-tires-or-chains-required',6156},{'winter-driving-requirements-lifted',6271}]},{0,65535}};
typeinfo('ITISEventType') ->
  {choice,#{<<100,105,115,116,117,114,98,97,110,99,101,115>> => {{'INTEGER_NNL',[{assault,3329},{crime,3330},{robbery,3331},{'fare-dispute',3332},{shooting,3333},{'gunfire-on-roadway',3334},{suicide,3335},{fight,3336},{'gang-fight',3337},{'person-harassment',3338},{'person-injured',3339},{'unruly-passenger',3340},{'person-intoxicated',3341},{'crowd-control-problem',3342},{demonstration,3343},{march,3344},{'public-disturbance',3345},{riot,3346},{'civil-unrest',3347},{'civil-emergency',3348},{strike,3349},{'public-transit-strike',3350},{stampede,3351},{'teargas-used',3352},{'security-alert',3353},{'security-incident',3354},{checkpoint,3355},{'bomb-alert',3356},{'terrorist-incident',3357},{'high-velocity-shell-fire',3358},{'explosives-in-use',3359},{'air-raid',3360},{'weapons-of-mass-destruction-threat',3361},{'military-operations',3362},{'sick-customer',3363},{'security-problem-cleared',3454},{'traffic-disturbance-cleared',3455}]},{0,65535}},<<115,117,103,103,101,115,116,105,111,110,65,100,118,105,99,101>> => {{'INTEGER_NNL',[{'why-not-ride-share',6657},{'is-this-your-no-ride-day',6658},{'why-not-use-transit',6659},{'why-not-park-and-ride',6660},{'why-not-try-paratransit',6661},{'why-not-travel-by-rail',6662},{'why-not-use-the-subway',6663},{'why-not-try-rapid-transit',6664},{'why-not-travel-by-bus',6665},{'your-parking-ticket-covers-the-return-ride',6666},{'avoid-the-rush-hour',6667},{'do-not-allow-unnecessary-gaps',6668},{'follow-the-vehicle-in-front-smoothly',6669},{'do-not-slow-down-unnecessarily',6670},{'watch-for-muggers',6671},{'watch-for-pickpockets',6672},{'watch-for-thieves',6673},{'sorry-for-any-delay',6674},{'thank-you-for-your-understanding',6675},{'we-appreciate-your-patience',6676},{'we-are-grateful-for-your-cooperation',6677},{'share-the-road',6678}]},{0,65535}},<<108,97,110,101,82,111,97,100,119,97,121>> => {{'INTEGER_NNL',[{'all-roadways',8193},{'through-lanes',8194},{'left-lane',8195},{'right-lane',8196},{'center-lane',8197},{'middle-lanes',8198},{'middle-two-lanes',8199},{'right-turning-lanes',8200},{'left-turning-lanes',8201},{'right-exit-ramp',8202},{'right-entrance-ramp',8203},{'left-exit-ramp',8204},{'left-entrance-ramp',8205},{'hard-shoulder',8206},{'soft-shoulder',8207},{'right-shoulder',8208},{'left-shoulder',8209},{'right-hand-parallel-lanes',8210},{'left-hand-parallel-lanes',8211},{'connecting-lanes',8212},{'express-lanes',8213},{'local-lanes',8214},{'toll-lanes',8215},{'electronic-toll-lanes',8216},{'toll-plaza',8217},{'inspection-lane',8218},{'hOV-lanes',8219},{'bus-lanes',8220},{'carpool-lanes',8221},{'truck-lanes',8222},{'emergency-lanes',8223},{'passing-lanes',8224},{'climbing-lanes',8225},{'slow-lane',8226},{'service-road',8227},{'cycle-lane',8228},{bridge,8229},{overpass,8230},{'elevated-lanes',8231},{underpass,8232},{tunnel,8233},{'escape-ramp',8234},{highways,8235},{'upper-deck-lanes',8236},{'lower-deck-lanes',8237},{'reversible-lanes',8238},{'right-exit-lanes',8239},{'left-exit-lanes',8240},{'right-merging-lanes',8241},{'left-merging-lanes',8242},{'right-second-exit-ramp',8243},{'left-second-exit-ramp',8244},{'right-second-entrance-ramp',8245},{'left-second-entrance-ramp',8246},{'all-exit-lanes',8247},{'all-entry-lanes',8248},{'either-shoulder',8249},{tracks,8250},{sidewalk,8251},{median,8252},{'shoulder-work',8253}]},{0,65535}},<<112,114,101,99,105,112,105,116,97,116,105,111,110>> => {{'INTEGER_NNL',[{'severe-weather',4865},{blizzard,4866},{'heavy-snow',4867},{snow,4868},{'light-snow',4869},{'snow-showers',4870},{'winter-storm',4871},{'ice-glaze',4872},{'heavy-frost',4873},{frost,4874},{'ice-storm',4875},{sleet,4876},{'rain-and-snow-mixed',4877},{'rain-changing-to-snow',4878},{'damaging-hail',4879},{hail,4880},{thunderstorms,4881},{thundershowers,4882},{'extremely-heavy-downpour',4883},{'heavy-rain',4884},{rain,4885},{'light-rain',4886},{drizzle,4887},{showers,4888},{dew,4889},{'precipitation-cleared',4991}]},{0,65535}},<<114,101,115,116,114,105,99,116,105,111,110,67,108,97,115,115>> => {{'INTEGER_NNL',[{restrictions,2561},{'ramp-restrictions',2562},{'truck-restriction',2563},{'speed-restriction',2564},{'noise-restriction',2565},{'traffic-regulations-have-been-changed',2566},{'local-access-only',2567},{'no-trailers',2568},{'no-high-profile-vehicles',2569},{'hazardous-materials-truck-restriction',2570},{'no-through-traffic',2571},{'no-motor-vehicles',2572},{'width-limit',2573},{'height-limit',2574},{'length-limit',2575},{'axle-load-limit',2576},{'gross-weight-limit',2577},{'axle-count-limit',2578},{'carpool-lane-available',2579},{'carpool-restrictions-changed',2580},{'hOV-2-no-single-occupant-vehicles',2581},{'hOV-3-no-vehicles-with-less-than-three-occupants',2582},{'bus-lane-available-for-all-vehicles',2583},{'truck-lane-available-for-all-vehicles',2584},{'permits-call-in-basis',2585},{'permits-temporarily-closed',2586},{'permits-closed',2587},{'road-use-permits-required',2588},{'permits-open',2675},{'restrictions-for-high-profile-vehicles-lifted',2676},{'width-limit-lifted',2677},{'height-limit-lifted',2678},{'length-limit-lifted',2679},{'axle-load-limit-lifted',2680},{'weight-limit-lifted',2681},{'axle-count-limit-lifted',2682},{'carpool-restrictions-lifted',2683},{'lane-restrictions-lifted',2684},{'ramp-restrictions-lifted',2685},{'motor-vehicle-restrictions-lifted',2686},{'restrictions-lifted',2687}]},{0,65535}},<<97,108,116,101,114,110,97,116,101,82,111,117,116,101>> => {{'INTEGER_NNL',[{'detour-where-possible',8449},{'no-detour-available',8450},{'follow-signs',8451},{'follow-detour-signs',8452},{'follow-special-detour-markers',8453},{'do-not-follow-detour-signs',8454},{'detour-in-operation',8455},{'follow-local-detour',8456},{'compulsory-detour-in-operation',8457},{'no-suitable-detour-available',8458},{'detour-is-no-longer-recommended',8459},{'local-drivers-are-recommended-to-avoid-the-area',8460},{'trucks-are-recommended-to-avoid-the-area',8461},{'consider-alternate-route',8462},{'consider-alternate-parking',8463},{'consider-alternate-destination',8464},{'consider-alternate-area',8465},{'snow-route',8466},{'emergency-snow-route',8467},{'evacuation-route',8468},{'truck-route',8469},{'hazardous-materials-route',8470},{detour,8471}]},{0,65535}},<<116,114,97,110,115,105,116,77,111,100,101>> => {{'INTEGER_NNL',[{travel,8961},{transit,8962},{bus,8963},{trolleybus,8964},{rail,8965},{'commuter-rail',8966},{subway,8967},{'rapid-transit',8968},{'light-rail',8969},{streetcar,8970},{'dial-a-ride',8971},{'park-and-ride',8972},{shuttle,8973},{'free-shuttle',8974},{'airport-shuttle',8975},{taxies,8976},{ferry,8977},{'passenger-ferry',8978},{'vehicle-ferry',8979},{'aerial-tramway',8980},{'automated-guideway',8981},{'cable-cars',8982},{monorail,8983},{'air-travel',8984},{'hitch-hitching',8985},{walk,8986}]},{0,65535}},<<116,114,97,118,101,108,101,114,71,114,111,117,112,65,102,102,101,99,116,101,100>> => {{'INTEGER_NNL',[{'through-traffic',9473},{'holiday-traffic',9474},{residents,9475},{visitors,9476},{'long-distance-traffic',9477},{'local-traffic',9478},{'regional-traffic',9479},{arrivals,9480},{departures,9481},{'airline-travelers',9482},{'commuter-airline-travelers',9483},{'domestic-airline-travelers',9484},{'international-airline-travelers',9485},{pedestrians,9486},{bicyclists,9487}]},{0,65535}},<<118,105,115,105,98,105,108,105,116,121,65,110,100,65,105,114,81,117,97,108,105,116,121>> => {{'INTEGER_NNL',[{'dense-fog',5377},{fog,5378},{'patchy-fog',5379},{'freezing-fog',5380},{mist,5381},{haze,5382},{'visibility-reduced',5383},{'white-out',5384},{'blowing-snow',5385},{'smoke-hazard',5386},{'spray-hazard',5387},{'low-sun-glare',5388},{'snow-glare',5389},{'blowing-dust',5390},{'blowing-sand',5391},{'dust-storms',5392},{sandstorms,5393},{'air-quality-good',5394},{'air-quality-fair',5395},{'air-quality-poor',5396},{'air-quality-very-poor',5397},{'severe-exhaust-pollution',5398},{'smog-alert',5399},{'pollen-count-high',5400},{'pollen-count-medium',5401},{'pollen-count-low',5402},{'swarms-of-insects',5403},{'visibility-blocked',5404},{'ice-fog',5405},{'fog-clearing',5499},{'visibility-improved',5500},{'fog-forecast-withdrawn',5501},{'pollution-alert-ended',5502},{'air-quality-improved',5503}]},{0,65535}},<<100,101,118,105,99,101,83,116,97,116,117,115>> => {{'INTEGER_NNL',[{'lane-control-signs-not-working',2305},{'lane-control-signs-working-incorrectly',2306},{'lane-control-signs-operating',2307},{'variable-message-signs-not-working',2308},{'variable-message-signs-working-incorrectly',2309},{'variable-message-signs-operating',2310},{'emergency-telephones-not-working',2311},{'emergency-telephone-number-not-working',2312},{'traffic-lights-not-working',2313},{'traffic-lights-working-incorrectly',2314},{'ramp-control-signals-not-working',2315},{'ramp-control-signals-working-incorrectly',2316},{'temporary-traffic-lights-not-working',2317},{'temporary-traffic-lights-working-incorrectly',2318},{'traffic-signal-control-computer-not-working',2319},{'traffic-signal-timings-changed',2320},{'overheight-warning-system-triggered',2321},{'equipment-failure',2322},{'railroad-crossing-equipment-failure',2323},{'tunnel-ventilation-not-working',2324},{'power-failure',2325},{'widespread-power-outages',2326},{'technical-problems',2327},{'sign-down',2328},{'lines-in-road-faded',2329},{'damaged-light-standard',2330},{'traffic-signal-stuck-on-flash',2331},{'guide-rail',2332},{fencing,2333},{'light-standard-hanging-by-wires',2334},{'call-box',2335},{'signal-cabinet',2336},{detector,2337},{'improper-use-of-State-vehicle-or-equipment',2338},{'bulb-out',2339},{'not-yet-operational',2340},{'not-yet-installed',2341},{'electronic-signs-repaired',2428},{'emergency-call-facilities-restored',2429},{'traffic-signals-repaired',2430},{'railroad-crossing-equipment-now-working-normally',2431}]},{0,65535}},<<119,105,110,116,101,114,68,114,105,118,105,110,103,73,110,100,101,120>> => {{'INTEGER_NNL',[{'driving-conditions-good',6401},{'driving-conditions-fair',6402},{'difficult-driving-conditions',6403},{'very-difficult-driving-conditions',6404},{'hazardous-driving-conditions',6405},{'extremely-hazardous-driving-conditions',6406}]},{0,65535}},<<119,101,97,116,104,101,114,67,111,110,100,105,116,105,111,110,115>> => {{'INTEGER_NNL',[{overcast,4609},{cloudy,4610},{'mostly-cloudy',4611},{'partly-cloudy',4612},{'partly-sunny',4613},{'mostly-sunny',4614},{sunny,4615},{'fair-skies',4616},{'clear-skies',4617},{'mostly-clear',4618},{'mostly-dry',4619},{dry,4620},{'uV-index-very-high',4621},{'uV-index-high',4622},{'uV-index-moderate',4623},{'uV-index-low',4624},{'uV-index-very-low',4625},{'barometric-pressure',4626},{'ozone-alert',4627},{'lighting-unknown',4628},{'artificial-exterior-light',4629},{'artificial-interior-light',4630},{darkness,4631},{dusk,4632},{dawn,4633},{moonlight,4634},{daylight,4635},{'weather-forecast-withdrawn',4735}]},{0,65535}},<<97,99,99,105,100,101,110,116,115,65,110,100,73,110,99,105,100,101,110,116,115>> => {{'INTEGER_NNL',[{accident,513},{'serious-accident',514},{'injury-accident',515},{'minor-accident',516},{'multi-vehicle-accident',517},{'numerous-accidents',518},{'accident-involving-a-bicycle',519},{'accident-involving-a-bus',520},{'accident-involving-a-motorcycle',521},{'accident-involving-a-pedestrian',522},{'accident-involving-a-train',523},{'accident-involving-a-truck',524},{'accident-involving-hazardous-materials',525},{'earlier-accident',526},{'medical-emergency',527},{'secondary-accident',528},{'rescue-and-recovery-work-REMOVED',529},{'accident-investigation-work',530},{incident,531},{'stalled-vehicle',532},{'abandoned-vehicle',533},{'disabled-vehicle',534},{'disabled-truck',535},{'disabled-semi-trailer',536},{'disabled-bus',537},{'disabled-train',538},{'vehicle-spun-out',539},{'vehicle-on-fire',540},{'vehicle-in-water',541},{'vehicles-slowing-to-look-at-accident',542},{'jackknifed-semi-trailer',543},{'jackknifed-trailer-home',544},{'jackknifed-trailer',545},{'spillage-occurring-from-moving-vehicle',546},{'acid-spill',547},{'chemical-spill',548},{'fuel-spill',549},{'hazardous-materials-spill',550},{'oil-spill',551},{'spilled-load',552},{'toxic-spill',553},{'overturned-vehicle',554},{'overturned-truck',555},{'overturned-semi-trailer',556},{'overturned-bus',557},{'derailed-train',558},{'stuck-vehicle',559},{'truck-stuck-under-bridge',560},{'bus-stuck-under-bridge',561},{'accident-involving-a-semi-trailer',562},{'accident-cleared',638},{'incident-cleared',639}]},{0,65535}},<<100,105,115,97,115,116,101,114,115>> => {{'INTEGER_NNL',[{'flash-flood',3073},{'major-flood',3074},{'reservoir-failure',3075},{'levee-failure',3076},{tsunami,3077},{'tidal-wave',3078},{'volcanic-eruption',3079},{'ash-fall',3080},{'lava-flow',3081},{'serious-fire',3082},{'forest-fire',3083},{wildfire,3084},{'building-fire',3085},{'brush-fire',3086},{'grass-fire',3087},{'fire-danger-extreme',3088},{'fire-danger-very-high',3089},{'fire-danger-high',3090},{'fire-danger-medium',3091},{'fire-danger-low',3092},{'earthquake-damage',3093},{'air-crash',3094},{'rail-crash',3095},{'toxic-release',3096},{'toxic-leak',3097},{'radioactive-release',3098},{'radiation-hazard',3099},{'reactor-leakage',3100},{explosion,3101},{'major-hazardous-materials-fire',3102},{'major-hazardous-materials-release',3103},{'disaster-cleared',3199}]},{0,65535}},<<114,111,97,100,119,111,114,107>> => {{'INTEGER_NNL',[{'road-construction',1025},{'major-road-construction',1026},{'long-term-road-construction',1027},{'construction-work',1028},{'paving-operations',1029},{'work-in-the-median',1030},{'road-reconstruction',1031},{'opposing-traffic',1032},{'narrow-lanes',1033},{'construction-traffic-merging',1034},{'single-line-traffic-alternating-directions',1035},{'road-maintenance-operations',1036},{'road-marking-operations',1037},{'bridge-maintenance-operations',1038},{'bridge-construction',1039},{'bridge-demolition-work',1040},{blasting,1041},{'avalanche-control-activities',1042},{'water-main-work',1043},{'gas-main-work',1044},{'work-on-underground-cables',1045},{'work-on-underground-services',1046},{'new-road-construction-layout',1047},{'new-road-layout',1048},{'temporary-lane-markings',1049},{'temporary-traffic-lights',1050},{'emergency-maintenance',1051},{cracks,1052},{bumps,1053},{'storm-drain',1054},{'overgrown-grass',1055},{'overgrown-brushshrubs',1056},{'overgrown-trees',1057},{'crack-REMOVE',1058},{'drop-off',1059},{'seismic-retrofit',1060},{'road-widening',1061},{'utility-work',1062},{'road-maintenance-cleared',1146},{'normal-road-layout-restored',1147},{'road-work-clearance-in-progress',1148},{'road-construction-cleared',1149},{'normal-traffic-lanes-restored',1150},{'road-work-cleared',1151}]},{0,65535}},<<111,98,115,116,114,117,99,116,105,111,110>> => {{'INTEGER_NNL',[{'obstruction-on-roadway',1281},{'object-on-roadway',1282},{'objects-falling-from-moving-vehicle',1283},{'debris-on-roadway',1284},{'storm-damage',1285},{'people-on-roadway',1286},{'bicyclists-on-roadway',1287},{'sightseers-obstructing-access',1288},{'large-numbers-of-visitors',1289},{'animal-on-roadway',1290},{'large-animal-on-roadway',1291},{'herd-of-animals-on-roadway',1292},{'animal-struck',1293},{'fallen-trees',1294},{'downed-power-lines',1295},{'downed-cables',1296},{subsidence,1297},{'road-surface-collapse',1298},{'pavement-buckled',1299},{pothole,1300},{flooding,1301},{'broken-water-main',1302},{'collapsed-sewer',1303},{'sewer-overflow',1304},{'gas-leak',1305},{snowmelt,1306},{mudslide,1307},{avalanche,1308},{rockfall,1309},{landslide,1310},{'over-turned-trees',1311},{'tree-limbs',1312},{'utility-pole-down',1314},{'advertising-signs',1315},{'frost-heave',1316},{'frost-jacking',1317},{washboard,1318},{'wash-out',1319},{'clearance-work',1406},{'obstruction-cleared',1407}]},{0,65535}},<<115,112,111,114,116,105,110,103,69,118,101,110,116,115>> => {{'INTEGER_NNL',[{'sports-event',3585},{game,3586},{tournament,3587},{'track-and-field-event',3588},{'baseball-game',3589},{'basketball-game',3590},{'boxing-match',3591},{'football-game',3592},{'soccer-game',3593},{'golf-tournament',3594},{'hockey-game',3595},{'tennis-tournament',3596},{'wrestling-match',3597},{'road-race',3598},{'automobile-race',3599},{'bicycle-race',3600},{'race-event',3601},{marathon,3602},{'horse-show',3603},{rodeo,3604},{'water-sports-event',3605},{'winter-sports-event',3606},{'skating-event',3607},{'dog-sled-race',3608},{'sporting-event-ended',3711}]},{0,65535}},<<116,101,109,112,101,114,97,116,117,114,101>> => {{'INTEGER_NNL',[{'maximum-temperature',5633},{temperature,5634},{'minimum-temperature',5635},{'current-temperature',5636},{'heat-index',5637},{'extreme-heat',5638},{hot,5639},{hotter,5640},{heat,5641},{warmer,5642},{warm,5643},{mild,5644},{cool,5645},{cooler,5646},{cold,5647},{colder,5648},{'very-cold',5649},{'extreme-cold',5650},{'wind-chill',5651},{dewpoint,5652},{'relative-humidity',5653},{'temperatures-close-to-the-seasonal-norm',5758},{'less-extreme-temperatures',5759}]},{0,65535}},<<119,105,110,116,101,114,68,114,105,118,105,110,103,82,101,115,116,114,105,99,116,105,111,110,115>> => {{'INTEGER_NNL',[{'winter-equipment-recommended',6145},{'winter-equipment-required',6146},{'snow-chains-recommended',6147},{'snow-chains-required',6148},{'snow-chains-prohibited',6149},{'studded-tires-prohibited',6150},{'snow-tires-recommended',6151},{'snow-tires-required',6152},{'four-wheel-drive-recommended',6153},{'four-wheel-drive-required',6154},{'snow-tires-or-chains-recommended',6155},{'snow-tires-or-chains-required',6156},{'winter-driving-requirements-lifted',6271}]},{0,65535}},<<115,121,115,116,101,109,73,110,102,111,114,109,97,116,105,111,110>> => {{'INTEGER_NNL',[{'information-available-on-radio',4353},{'information-available-on-TV',4354},{'call-to-get-information',4355},{'information-available-via-Internet',4356},{'test-message',4357},{'no-information-available',4358},{'null-description',4359},{'information-service-is-being-suspended',4360},{'police-assistance',4361},{'police-monitor-CB',4362},{'emergency-notification',4363},{'in-emergency-dial-911',4364},{'travel-Info-call-511',4365},{'car-pool-information',4366},{'information-service-resumed',4478},{'message-canceled',4479}]},{0,65535}},<<116,114,97,102,102,105,99,67,111,110,100,105,116,105,111,110,115>> => {{'INTEGER_NNL',[{'stopped-traffic',257},{'stop-and-go-traffic',258},{'slow-traffic',259},{'heavy-traffic',260},{'traffic-building',261},{'long-queues',262},{'traffic-congestion',263},{'traffic-lighter-than-normal',264},{'traffic-heavier-than-normal',265},{'traffic-much-heavier-than-normal',266},{'current-speed',267},{'speed-limit',268},{'travel-time',269},{'merging-traffic',272},{contraflow,273},{'contraflow-canceled',378},{'traffic-flowing-freely',379},{'traffic-easing',380},{'traffic-returned-to-normal',381},{'no-problems-to-report',382},{'traffic-congestion-cleared',383}]},{0,65535}},<<112,97,118,101,109,101,110,116,67,111,110,100,105,116,105,111,110,115>> => {{'INTEGER_NNL',[{impassable,5889},{'almost-impassable',5890},{'passable-with-care',5891},{passable,5892},{'surface-water-hazard',5893},{'danger-of-hydroplaning',5894},{'wet-pavement',5895},{'treated-pavement',5896},{slippery,5897},{'mud-on-roadway',5898},{'leaves-on-roadway',5899},{'loose-sand-on-roadway',5900},{'loose-gravel',5901},{'fuel-on-roadway',5902},{'oil-on-roadway',5903},{'road-surface-in-poor-condition',5904},{'melting-tar',5905},{ice,5906},{'icy-patches',5907},{'black-ice',5908},{'ice-pellets-on-roadway',5909},{'ice-build-up',5910},{'freezing-rain',5911},{'wet-and-icy-roads',5912},{'melting-snow',5913},{slush,5914},{'frozen-slush',5915},{'snow-on-roadway',5916},{'packed-snow',5917},{'packed-snow-patches',5918},{'plowed-snow',5919},{'wet-snow',5920},{'fresh-snow',5921},{'powder-snow',5922},{'granular-snow',5923},{'frozen-snow',5924},{'crusted-snow',5925},{'deep-snow',5926},{'snow-drifts',5927},{'drifting-snow',5928},{'expected-snow-accumulation',5929},{'current-snow-accumulation',5930},{'rough-road',5931},{sand,5932},{gravel,5933},{paved,5934},{'uneven-lanes',5935},{'rough-crossing',5936},{'at-grade-level-crossing',5937},{'low-ground-clearance',5938},{'dry-pavement',6011},{'snow-cleared',6012},{'pavement-conditions-improved',6013},{'skid-hazard-reduced',6014},{'pavement-conditions-cleared',6015}]},{0,65535}},<<105,110,99,105,100,101,110,116,82,101,115,112,111,110,115,101,83,116,97,116,117,115>> => {{'INTEGER_NNL',[{'unconfirmed-report',2817},{'initial-response-en-route',2818},{'follow-up-response-en-route',2819},{'initial-response-on-scene',2820},{'follow-up-response-on-scene',2821},{'confirmed-report',2822},{'scene-is-unsecured-at-this-time',2823},{'response-scene-secured',2824},{'rescue-and-recovery-work-in-progress',2825},{'extraction-in-progress',2826},{'clearance-work-in-progress',2827},{'body-removal-operations',2828},{'fire-containment-contained',2829},{'fire-containment-not-contained',2830},{'event-cleared',2831},{'traffic-clearing',2832},{'incident-closed',2833}]},{0,65535}},<<115,112,101,99,105,97,108,69,118,101,110,116,115>> => {{'INTEGER_NNL',[{'major-event',3841},{airshow,3842},{'hot-air-ballooning',3843},{concert,3844},{'state-occasion',3845},{'vIP-visit',3846},{show,3847},{festival,3848},{exhibition,3849},{'performing-arts',3850},{'outdoor-market',3851},{fair,3852},{carnival,3853},{'fireworks-display',3854},{'trade-expo',3855},{'movie-filming',3856},{'presidential-visit',3857},{parade,3858},{procession,3859},{'funeral-procession',3860},{crowd,3861},{'holiday-traffic-crowds',3862},{'event-ended',3967}]},{0,65535}},<<116,114,97,110,115,105,116,79,112,101,114,97,116,105,111,110,115>> => {{'INTEGER_NNL',[{'unknown-transit-problem',10753},{'sleeping-customer',10754},{'assault-on-passenger',10755},{'assault-on-employee',10756},{'broken-seat',10757},{'bus-alarm',10758},{'crime-or-drug-deal',10759},{'eating-on-board',10760},{'equipment-problem-with-air-conditioning',10761},{'equipment-problem-with-air-system',10762},{'equipment-problem-with-brakes',10763},{'equipment-problem-with-chassis-or-suspension',10764},{'equipment-problem-with-cooling-system',10765},{'equipment-problem-with-doors',10766},{'equipment-problem-with-electrical',10767},{'equipment-problem-with-engine',10768},{'equipment-problem-with-exterior-or-body',10769},{'equipment-problem-with-fare-collection',10770},{'equipment-problem-with-fuel-or-exhaust',10771},{'equipment-problem-with-horn',10772},{'equipment-problem-with-interior',10773},{'equipment-problem-with-liftkneeling',10774},{'equipment-problem-with-lights',10775},{'equipment-problem-with-lubrication',10776},{'equipment-problem-with-radio-or-communication',10777},{'equipment-problem-with-signs',10778},{'equipment-problem-with-steering',10779},{'equipment-problem-with-tires',10780},{'equipment-problem-with-transmission',10781},{'equipment-problem-with-unknown-alarm',10782},{'equipment-problem-with-wipers',10783},{'fare-dispute-expired-pass',10784},{'fare-dispute-expired-transfer',10785},{'fare-dispute-expired-upgrade',10786},{'fare-dispute-other',10787},{'fare-dispute-refuses-to-pay',10788},{'lift-passenger-cycle-completed',10789},{'lift-passenger-ready-to-alight',10790},{'lift-passenger-ready-to-board',10791},{'lost-article',10792},{'objects-thrown',10793},{'passenger-accident-alighting',10794},{'passenger-accident-boarding',10795},{'passenger-accident-fallen-on-board',10796},{'passenger-load',10797},{'passenger-accident-other',10798},{'passenger-sick-or-injured',10799},{'right-of-way',10800},{theft,10801},{'theft-of-service',10802},{'waiting-to-get-relief-for-schedule-break',10803},{'waiting-to-get-relief-after-run-is-finished',10804},{'waiting-to-provide-relief',10805}]},{0,65535}},<<114,101,115,112,111,110,100,101,114,71,114,111,117,112,65,102,102,101,99,116,101,100>> => {{'INTEGER_NNL',[{'emergency-vehicle-units',9729},{'federal-law-enforcement-units',9730},{'state-police-units',9731},{'county-police-units',9732},{'local-police-units',9733},{'ambulance-units',9734},{'rescue-units',9735},{'fire-units',9736},{'hAZMAT-units',9737},{'light-tow-unit',9738},{'heavy-tow-unit',9739},{'freeway-service-patrols',9740},{'transportation-response-units',9741},{'private-contractor-response-units',9742},{'private-tow-units',9743}]},{0,65535}},<<109,111,98,105,108,101,83,105,116,117,97,116,105,111,110>> => {{'INTEGER_NNL',[{'abnormal-load',2049},{'wide-load',2050},{'long-load',2051},{'slow-vehicle',2052},{'farm-equipment',2053},{'horse-drawn-vehicles',2054},{'overheight-load',2055},{'overweight-load',2056},{'tracked-vehicle',2057},{'vehicle-carrying-hazardous-materials',2058},{'slow-moving-maintenance-vehicle',2059},{convoy,2060},{'military-convoy',2061},{'refugee-convoy',2062},{motorcade,2063},{'mobile-situation-repositioning',2064},{'winter-maintenance-vehicles',2065},{snowplows,2066},{'slow-moving-maintenance-vehicle-warning-cleared',2172},{'exceptional-load-warning-cleared',2173},{'hazardous-load-warning-cleared',2174},{'convoy-cleared',2175}]},{0,65535}},<<97,100,118,105,99,101,73,110,115,116,114,117,99,116,105,111,110,115,77,97,110,100,97,116,111,114,121>> => {{'INTEGER_NNL',[{'keep-to-the-right',7425},{'keep-to-the-left',7426},{'use-right-lane',7427},{'use-left-lane',7428},{'heavy-vehicles-use-right-lane',7429},{'heavy-vehicles-use-left-lane',7430},{'observe-signals',7431},{'observe-signs',7432},{'no-passing',7433},{'no-smoking',7434},{'no-open-flames',7435},{'use-shoulder-as-lane',7436},{'do-not-drive-on-the-shoulder',7437},{'allow-emergency-vehicles-to-pass',7438},{'clear-a-lane-for-emergency-vehicles',7439},{'pull-over-to-the-edge-of-the-roadway',7440},{'wait-for-escort-vehicle',7441},{'in-emergency-wait-for-police-patrol',7442},{'reduce-your-speed',7443},{'observe-speed-limits',7444},{'check-point',7445},{'entry-requirements',7446},{'insurance-requirements',7447},{'firearms-requirements',7448},{'pet-requirements',7449},{'stay-in-lane',7450},{merge,7451},{'slower-traffic-keep-right',7452},{'keep-off',7453},{'evacuate-area-immediately',7454},{'shoulder-travel-no-longer-allowed',7547}]},{0,65535}},<<99,108,111,115,117,114,101,115>> => {{'INTEGER_NNL',[{'closed-to-traffic',769},{closed,770},{'closed-ahead',771},{'closed-intermittently',772},{'closed-for-repairs',773},{'closed-for-the-season',774},{blocked,775},{'blocked-ahead',776},{'reduced-to-one-lane',777},{'reduced-to-two-lanes',778},{'reduced-to-three-lanes',779},{collapse,780},{out,781},{'open-to-traffic',891},{open,892},{'reopened-to-traffic',893},{clearing,894},{'cleared-from-road',895}]},{0,65535}},<<112,97,114,107,105,110,103,73,110,102,111,114,109,97,116,105,111,110>> => {{'INTEGER_NNL',[{'normal-parking-restrictions-lifted',4097},{'parking-meter-restrictions-lifted',4098},{'special-parking-restrictions-in-force',4099},{'full-parking-lot',4100},{'full-parking-garage',4101},{'all-parking-lots-full',4102},{'no-parking-spaces-available',4103},{'only-a-few-spaces-available',4104},{'spaces-available',4105},{'no-parking',4106},{'parking-on-one-side-of-street-only',4107},{'parking-on-both-sides-of-street',4108},{'parallel-parking-only',4109},{'parking-meters-not-available',4110},{'use-of-parking-meters-restricted',4111},{'event-parking',4112},{'handicapped-parking',4113},{'long-term-parking',4114},{'overnight-parking',4115},{'short-term-parking',4116},{'parking-by-permit-only',4117},{'emergency-parking-only',4118},{'emergency-stopping-only',4119},{parking,4120},{stopping,4121},{standing,4122},{'tow-away-zone',4123},{'school-zone',4124},{'speed-zone',4125},{'loading-zone',4126},{'state-law',4127},{'van-accessible',4128},{'special-parking-restrictions-lifted',4222},{'no-parking-information-available',4223}]},{0,65535}},<<105,110,99,105,100,101,110,116,82,101,115,112,111,110,115,101,69,113,117,105,112,109,101,110,116>> => {{'INTEGER_NNL',[{'ground-fire-suppression',9985},{'heavy-ground-equipment',9986},{aircraft,9988},{'marine-equipment',9989},{'support-equipment',9990},{'medical-rescue-unit',9991},{other,9993},{'ground-fire-suppression-other',9994},{engine,9995},{'truck-or-aerial',9996},{quint,9997},{'tanker-pumper-combination',9998},{'brush-truck',10000},{'aircraft-rescue-firefighting',10001},{'heavy-ground-equipment-other',10004},{'dozer-or-plow',10005},{tractor,10006},{'tanker-or-tender',10008},{'aircraft-other',10024},{'aircraft-fixed-wing-tanker',10025},{helitanker,10026},{helicopter,10027},{'marine-equipment-other',10034},{'fire-boat-with-pump',10035},{'boat-no-pump',10036},{'support-apparatus-other',10044},{'breathing-apparatus-support',10045},{'light-and-air-unit',10046},{'medical-rescue-unit-other',10054},{'rescue-unit',10055},{'urban-search-rescue-unit',10056},{'high-angle-rescue',10057},{'crash-fire-rescue',10058},{'bLS-unit',10059},{'aLS-unit',10060},{'mobile-command-post',10075},{'chief-officer-car',10076},{'hAZMAT-unit',10077},{'type-i-hand-crew',10078},{'type-ii-hand-crew',10079},{'privately-owned-vehicle',10083},{'other-apparatus-resource',10084},{ambulance,10085},{'bomb-squad-van',10086},{'combine-harvester',10087},{'construction-vehicle',10088},{'farm-tractor',10089},{'grass-cutting-machines',10090},{'hAZMAT-containment-tow',10091},{'heavy-tow',10092},{'hedge-cutting-machines',10093},{'light-tow',10094},{'mobile-crane',10095},{'refuse-collection-vehicle',10096},{'resurfacing-vehicle',10097},{'road-sweeper',10098},{'roadside-litter-collection-crews',10099},{'salvage-vehicle',10100},{'sand-truck',10101},{snowplow,10102},{'steam-roller',10103},{'swat-team-van',10104},{'track-laying-vehicle',10105},{'unknown-vehicle',10106},{'white-lining-vehicle',10107},{'dump-truck',10108},{'supervisor-vehicle',10109},{'snow-blower',10110},{'rotary-snow-blower',10111},{'road-grader',10112},{'steam-truck',10113},{'flatbed-tow',10114},{'survey-crews',10115}]},{0,65535}},<<119,97,114,110,105,110,103,65,100,118,105,99,101>> => {{'INTEGER_NNL',[{risk,6913},{watch,6914},{warning,6915},{alert,6916},{danger,6917},{'danger-of-explosion',6918},{'danger-of-fire',6919},{'extra-police-patrols-in-operation',6920},{'look-out-for-vehicles-stopped-under-bridges',6921},{'increased-risk-of-accident',6922},{'rescue-and-recovery-work-in-progress-at-sceneREMOVED',6923},{'police-at-scene',6924},{'emergency-vehicles-at-scene',6925},{'traffic-being-directed-around-accident-area',6926},{'police-directing-traffic',6927},{'rescue-workers-directing-traffic',6928},{'repairs-in-progress',6929},{'pilot-car-in-operation',6930},{'look-out-for-flagger',6931},{'police-checks-in-operation',6932},{'mandatory-speed-limit-in-force',6933},{'speed-limit-in-force-for-heavy-vehicles',6934},{lockdown,6935},{'security-check-point',6936},{'truck-check-point',6937},{'single-occupancy-vehicle-check-point',6938},{look,6939},{'photo-enforced',6940},{'traffic-laws',6941},{'use-low-gear',6942},{'bridge-ices-before-road',6943},{'speed-checked-by-radar',6944},{'speed-checked-by-aircraft',6945},{fines,6946},{'fines-higher',6947},{'fines-doubled',6948},{'fines-tripled',6949},{'behind-you',6950},{'traffic-signs',6951},{'look-out-for-workers',6952},{'ride-with-traffic',6953},{'prepare-to-evacuate-area',6954},{avoid,6955},{'evacuation-canceled',7033},{'warning-canceled',7034},{'watch-canceled',7035},{'alert-canceled',7036},{ended,7037},{cleared,7038},{canceled,7039}]},{0,65535}},<<100,101,108,97,121,83,116,97,116,117,115,67,97,110,99,101,108,108,97,116,105,111,110>> => {{'INTEGER_NNL',[{delays,1537},{'short-delays',1538},{'long-delays',1539},{'very-long-delays',1540},{'delays-of-uncertain-duration',1541},{'delayed-until-further-notice',1542},{busy,1543},{'very-busy',1544},{crowded,1545},{overcrowded,1546},{cancellations,1547},{'route-canceled-and-no-replacement',1548},{'service-canceled',1549},{'service-suspended',1550},{'service-withdrawn',1551},{'service-fully-booked',1552},{'all-services-fully-booked',1553},{'next-departure',1554},{'next-arrival',1555},{'very-frequent-service',1556},{'frequent-service',1557},{'fairly-frequent-service',1558},{'regular-service',1559},{'irregular-service',1560},{'not-operating',1561},{'system-busy',1562},{'system-very-busy',1563},{'system-crowded',1564},{'system-overcrowded',1565},{'deleted-travel-time',1566},{headway,1567},{'extra-services-in-operation',1568},{'delays-clearing',1660},{'delays-cleared',1661},{'normal-services-resumed',1662},{operating,1663}]},{0,65535}},<<97,100,118,105,99,101,73,110,115,116,114,117,99,116,105,111,110,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,115>> => {{'INTEGER_NNL',[{'drive-carefully',7169},{'drive-with-extreme-caution',7170},{'approach-with-care',7171},{'keep-your-distance',7172},{'increase-normal-following-distance',7173},{'test-your-brakes',7174},{'cross-intersection-with-care',7175},{'pass-with-care',7176},{'use-low-beam-headlights',7177},{'use-fog-lights',7178},{'use-hazard-warning-lights',7179},{'do-not-leave-your-vehicle',7180},{'leave-your-vehicle-and-proceed-to-next-safe-place',7181},{'turn-off-engine',7182},{'close-all-windows-turn-off-heater-air-conditioner-and-vents',7183},{'turn-off-air-conditioner-to-prevent-engine-overheating',7184},{'turn-off-mobile-phones-and-two-way-radios',7185},{'prepare-to-stop',7186},{'stop-at-next-rest-area',7187},{'stop-at-next-safe-place',7188},{'only-travel-if-absolutely-necessary',7189},{'drive-to-another-service-area',7190},{'use-through-traffic-lanes',7191},{'use-local-traffic-lanes',7192},{'use-left-hand-parallel-roadway',7193},{'use-right-hand-parallel-roadway',7194},{'use-heavy-vehicle-lane',7195},{'observe-recommended-speed',7196},{'facing-traffic',7197},{'push-button',7198},{'to-cross-street',7199},{pass,7200},{'be-prepared-to-stop',7201},{'signals-sequenced-for-speed',7202},{'maintain-top-safe-speed',7203},{'evacuate-area-voluntarily',7204},{'shelter-in-place',7205}]},{0,65535}},<<118,101,104,105,99,108,101,71,114,111,117,112,65,102,102,101,99,116,101,100>> => {{'INTEGER_NNL',[{'all-vehicles',9217},{bicycles,9218},{motorcycles,9219},{cars,9220},{'light-vehicles',9221},{'cars-and-light-vehicles',9222},{'cars-with-trailers',9223},{'cars-with-recreational-trailers',9224},{'vehicles-with-trailers',9225},{'heavy-vehicles',9226},{trucks,9227},{buses,9228},{'articulated-buses',9229},{'school-buses',9230},{'vehicles-with-semi-trailers',9231},{'vehicles-with-double-trailers',9232},{'high-profile-vehicles',9233},{'wide-vehicles',9234},{'long-vehicles',9235},{'hazardous-loads',9236},{'exceptional-loads',9237},{'abnormal-loads',9238},{convoys,9239},{'maintenance-vehicles',9240},{'delivery-vehicles',9241},{'vehicles-with-even-numbered-license-plates',9242},{'vehicles-with-odd-numbered-license-plates',9243},{'vehicles-with-parking-permits',9244},{'vehicles-with-catalytic-converters',9245},{'vehicles-without-catalytic-converters',9246},{'gas-powered-vehicles',9247},{'diesel-powered-vehicles',9248},{'lPG-vehicles',9249},{'military-convoys',9250},{'military-vehicles',9251},{'electric-powered-vehicles',9252},{'hybrid-powered-vehicles',9253},{'inherently-low-emission-vehicles',9254},{'commercial-vehicles',9255},{'runaway-vehicles',9256},{'vehicles-with-lugs',9257},{'motor-driven-cycles',9258},{'recreational-vehicles',9259},{'non-motorized-vehicles',9260},{traffic,9261}]},{0,65535}},<<119,105,110,100,115>> => {{'INTEGER_NNL',[{tornado,5121},{hurricane,5122},{'hurricane-force-winds',5123},{'tropical-storm',5124},{'gale-force-winds',5125},{'storm-force-winds',5126},{'strong-winds',5127},{'moderate-winds',5128},{'light-winds',5129},{calm,5130},{'gusty-winds',5131},{crosswinds,5132},{windy,5133},{'strong-winds-have-eased',5246},{'strong-wind-forecast-withdrawn',5247}]},{0,65535}},<<114,101,103,117,108,97,116,111,114,121,83,105,103,110,115>> => {{'INTEGER_NNL',[{'regulatory-sign',12289},{'warning-sign',12290},{'information-sign',12291},{'construction-sign',12292},{'guide-sign',12293},{stop,12294},{yield,12295},{'to-oncoming-traffic',12296},{'four-way',12297},{'all-way',12298},{zone,12299},{narrows,12300},{widens,12301},{reduced,12302},{combined,12303},{minimum,12304},{maximum,12305},{'divided-road',12306},{'double-arrow',12307},{'dead-end',12308},{'no-outlet',12309},{'wrong-way',12310},{nDetour,12312},{chevron,12313},{'do-not-enter',12314},{'t-intersection-to-the-side',12315},{'t-intersection-oncoming',12316},{'y-intersection-to-the-side',12317},{'y-intersection-oncoming',12318},{'four-way-divided-highway-crossing',12319},{'t-way-divided-highway-crossing',12320},{'light-rail-divided-highway-crossing',12321},{'light-rail-t-divided-highway-crossing',12322},{'side-road-to-right',12323},{'side-road-to-left',12324},{'side-road-to-right-at-angle',12325},{'side-road-to-left-at-angle',12326},{'entering-roadway-merge',12327},{'entering-roadway-added-lane',12328},{'one-way',12329},{caution,12330},{temporary,12331}]},{0,65535}},<<117,110,117,115,117,97,108,68,114,105,118,105,110,103>> => {{'INTEGER_NNL',[{'vehicle-traveling-wrong-way',1793},{'reckless-driver',1794},{'prohibited-vehicle-on-roadway',1795},{'emergency-vehicles-on-roadway',1796},{'high-speed-emergency-vehicles',1797},{'high-speed-chase',1798},{'dangerous-vehicle-warning-cleared',1918},{'emergency-vehicle-warning-cleared',1919}]},{0,65535}}}};
typeinfo('ITIScodesAndText') ->
  {sof,{sequence,'ITIScodesAndText_SEQOF',1,[{<<105,116,101,109>>,{choice,#{<<105,116,105,115>> => {{'INTEGER_NNL',[{'stopped-traffic',257},{'stop-and-go-traffic',258},{'slow-traffic',259},{'heavy-traffic',260},{'traffic-building',261},{'long-queues',262},{'traffic-congestion',263},{'traffic-lighter-than-normal',264},{'traffic-heavier-than-normal',265},{'traffic-much-heavier-than-normal',266},{'current-speed',267},{'speed-limit',268},{'travel-time',269},{'merging-traffic',272},{contraflow,273},{'contraflow-canceled',378},{'traffic-flowing-freely',379},{'traffic-easing',380},{'traffic-returned-to-normal',381},{'no-problems-to-report',382},{'traffic-congestion-cleared',383},{accident,513},{'serious-accident',514},{'injury-accident',515},{'minor-accident',516},{'multi-vehicle-accident',517},{'numerous-accidents',518},{'accident-involving-a-bicycle',519},{'accident-involving-a-bus',520},{'accident-involving-a-motorcycle',521},{'accident-involving-a-pedestrian',522},{'accident-involving-a-train',523},{'accident-involving-a-truck',524},{'accident-involving-hazardous-materials',525},{'earlier-accident',526},{'medical-emergency',527},{'secondary-accident',528},{'rescue-and-recovery-work-REMOVED',529},{'accident-investigation-work',530},{incident,531},{'stalled-vehicle',532},{'abandoned-vehicle',533},{'disabled-vehicle',534},{'disabled-truck',535},{'disabled-semi-trailer',536},{'disabled-bus',537},{'disabled-train',538},{'vehicle-spun-out',539},{'vehicle-on-fire',540},{'vehicle-in-water',541},{'vehicles-slowing-to-look-at-accident',542},{'jackknifed-semi-trailer',543},{'jackknifed-trailer-home',544},{'jackknifed-trailer',545},{'spillage-occurring-from-moving-vehicle',546},{'acid-spill',547},{'chemical-spill',548},{'fuel-spill',549},{'hazardous-materials-spill',550},{'oil-spill',551},{'spilled-load',552},{'toxic-spill',553},{'overturned-vehicle',554},{'overturned-truck',555},{'overturned-semi-trailer',556},{'overturned-bus',557},{'derailed-train',558},{'stuck-vehicle',559},{'truck-stuck-under-bridge',560},{'bus-stuck-under-bridge',561},{'accident-involving-a-semi-trailer',562},{'accident-cleared',638},{'incident-cleared',639},{'closed-to-traffic',769},{closed,770},{'closed-ahead',771},{'closed-intermittently',772},{'closed-for-repairs',773},{'closed-for-the-season',774},{blocked,775},{'blocked-ahead',776},{'reduced-to-one-lane',777},{'reduced-to-two-lanes',778},{'reduced-to-three-lanes',779},{collapse,780},{out,781},{'open-to-traffic',891},{open,892},{'reopened-to-traffic',893},{clearing,894},{'cleared-from-road',895},{'road-construction',1025},{'major-road-construction',1026},{'long-term-road-construction',1027},{'construction-work',1028},{'paving-operations',1029},{'work-in-the-median',1030},{'road-reconstruction',1031},{'opposing-traffic',1032},{'narrow-lanes',1033},{'construction-traffic-merging',1034},{'single-line-traffic-alternating-directions',1035},{'road-maintenance-operations',1036},{'road-marking-operations',1037},{'bridge-maintenance-operations',1038},{'bridge-construction',1039},{'bridge-demolition-work',1040},{blasting,1041},{'avalanche-control-activities',1042},{'water-main-work',1043},{'gas-main-work',1044},{'work-on-underground-cables',1045},{'work-on-underground-services',1046},{'new-road-construction-layout',1047},{'new-road-layout',1048},{'temporary-lane-markings',1049},{'temporary-traffic-lights',1050},{'emergency-maintenance',1051},{cracks,1052},{bumps,1053},{'storm-drain',1054},{'overgrown-grass',1055},{'overgrown-brushshrubs',1056},{'overgrown-trees',1057},{'crack-REMOVE',1058},{'drop-off',1059},{'seismic-retrofit',1060},{'road-widening',1061},{'utility-work',1062},{'road-maintenance-cleared',1146},{'normal-road-layout-restored',1147},{'road-work-clearance-in-progress',1148},{'road-construction-cleared',1149},{'normal-traffic-lanes-restored',1150},{'road-work-cleared',1151},{'obstruction-on-roadway',1281},{'object-on-roadway',1282},{'objects-falling-from-moving-vehicle',1283},{'debris-on-roadway',1284},{'storm-damage',1285},{'people-on-roadway',1286},{'bicyclists-on-roadway',1287},{'sightseers-obstructing-access',1288},{'large-numbers-of-visitors',1289},{'animal-on-roadway',1290},{'large-animal-on-roadway',1291},{'herd-of-animals-on-roadway',1292},{'animal-struck',1293},{'fallen-trees',1294},{'downed-power-lines',1295},{'downed-cables',1296},{subsidence,1297},{'road-surface-collapse',1298},{'pavement-buckled',1299},{pothole,1300},{flooding,1301},{'broken-water-main',1302},{'collapsed-sewer',1303},{'sewer-overflow',1304},{'gas-leak',1305},{snowmelt,1306},{mudslide,1307},{avalanche,1308},{rockfall,1309},{landslide,1310},{'over-turned-trees',1311},{'tree-limbs',1312},{'utility-pole-down',1314},{'advertising-signs',1315},{'frost-heave',1316},{'frost-jacking',1317},{washboard,1318},{'wash-out',1319},{'clearance-work',1406},{'obstruction-cleared',1407},{delays,1537},{'short-delays',1538},{'long-delays',1539},{'very-long-delays',1540},{'delays-of-uncertain-duration',1541},{'delayed-until-further-notice',1542},{busy,1543},{'very-busy',1544},{crowded,1545},{overcrowded,1546},{cancellations,1547},{'route-canceled-and-no-replacement',1548},{'service-canceled',1549},{'service-suspended',1550},{'service-withdrawn',1551},{'service-fully-booked',1552},{'all-services-fully-booked',1553},{'next-departure',1554},{'next-arrival',1555},{'very-frequent-service',1556},{'frequent-service',1557},{'fairly-frequent-service',1558},{'regular-service',1559},{'irregular-service',1560},{'not-operating',1561},{'system-busy',1562},{'system-very-busy',1563},{'system-crowded',1564},{'system-overcrowded',1565},{'deleted-travel-time',1566},{headway,1567},{'extra-services-in-operation',1568},{'delays-clearing',1660},{'delays-cleared',1661},{'normal-services-resumed',1662},{operating,1663},{'vehicle-traveling-wrong-way',1793},{'reckless-driver',1794},{'prohibited-vehicle-on-roadway',1795},{'emergency-vehicles-on-roadway',1796},{'high-speed-emergency-vehicles',1797},{'high-speed-chase',1798},{'dangerous-vehicle-warning-cleared',1918},{'emergency-vehicle-warning-cleared',1919},{'abnormal-load',2049},{'wide-load',2050},{'long-load',2051},{'slow-vehicle',2052},{'farm-equipment',2053},{'horse-drawn-vehicles',2054},{'overheight-load',2055},{'overweight-load',2056},{'tracked-vehicle',2057},{'vehicle-carrying-hazardous-materials',2058},{'slow-moving-maintenance-vehicle',2059},{convoy,2060},{'military-convoy',2061},{'refugee-convoy',2062},{motorcade,2063},{'mobile-situation-repositioning',2064},{'winter-maintenance-vehicles',2065},{snowplows,2066},{'slow-moving-maintenance-vehicle-warning-cleared',2172},{'exceptional-load-warning-cleared',2173},{'hazardous-load-warning-cleared',2174},{'convoy-cleared',2175},{'lane-control-signs-not-working',2305},{'lane-control-signs-working-incorrectly',2306},{'lane-control-signs-operating',2307},{'variable-message-signs-not-working',2308},{'variable-message-signs-working-incorrectly',2309},{'variable-message-signs-operating',2310},{'emergency-telephones-not-working',2311},{'emergency-telephone-number-not-working',2312},{'traffic-lights-not-working',2313},{'traffic-lights-working-incorrectly',2314},{'ramp-control-signals-not-working',2315},{'ramp-control-signals-working-incorrectly',2316},{'temporary-traffic-lights-not-working',2317},{'temporary-traffic-lights-working-incorrectly',2318},{'traffic-signal-control-computer-not-working',2319},{'traffic-signal-timings-changed',2320},{'overheight-warning-system-triggered',2321},{'equipment-failure',2322},{'railroad-crossing-equipment-failure',2323},{'tunnel-ventilation-not-working',2324},{'power-failure',2325},{'widespread-power-outages',2326},{'technical-problems',2327},{'sign-down',2328},{'lines-in-road-faded',2329},{'damaged-light-standard',2330},{'traffic-signal-stuck-on-flash',2331},{'guide-rail',2332},{fencing,2333},{'light-standard-hanging-by-wires',2334},{'call-box',2335},{'signal-cabinet',2336},{detector,2337},{'improper-use-of-State-vehicle-or-equipment',2338},{'bulb-out',2339},{'not-yet-operational',2340},{'not-yet-installed',2341},{'electronic-signs-repaired',2428},{'emergency-call-facilities-restored',2429},{'traffic-signals-repaired',2430},{'railroad-crossing-equipment-now-working-normally',2431},{restrictions,2561},{'ramp-restrictions',2562},{'truck-restriction',2563},{'speed-restriction',2564},{'noise-restriction',2565},{'traffic-regulations-have-been-changed',2566},{'local-access-only',2567},{'no-trailers',2568},{'no-high-profile-vehicles',2569},{'hazardous-materials-truck-restriction',2570},{'no-through-traffic',2571},{'no-motor-vehicles',2572},{'width-limit',2573},{'height-limit',2574},{'length-limit',2575},{'axle-load-limit',2576},{'gross-weight-limit',2577},{'axle-count-limit',2578},{'carpool-lane-available',2579},{'carpool-restrictions-changed',2580},{'hOV-2-no-single-occupant-vehicles',2581},{'hOV-3-no-vehicles-with-less-than-three-occupants',2582},{'bus-lane-available-for-all-vehicles',2583},{'truck-lane-available-for-all-vehicles',2584},{'permits-call-in-basis',2585},{'permits-temporarily-closed',2586},{'permits-closed',2587},{'road-use-permits-required',2588},{'permits-open',2675},{'restrictions-for-high-profile-vehicles-lifted',2676},{'width-limit-lifted',2677},{'height-limit-lifted',2678},{'length-limit-lifted',2679},{'axle-load-limit-lifted',2680},{'weight-limit-lifted',2681},{'axle-count-limit-lifted',2682},{'carpool-restrictions-lifted',2683},{'lane-restrictions-lifted',2684},{'ramp-restrictions-lifted',2685},{'motor-vehicle-restrictions-lifted',2686},{'restrictions-lifted',2687},{'unconfirmed-report',2817},{'initial-response-en-route',2818},{'follow-up-response-en-route',2819},{'initial-response-on-scene',2820},{'follow-up-response-on-scene',2821},{'confirmed-report',2822},{'scene-is-unsecured-at-this-time',2823},{'response-scene-secured',2824},{'rescue-and-recovery-work-in-progress',2825},{'extraction-in-progress',2826},{'clearance-work-in-progress',2827},{'body-removal-operations',2828},{'fire-containment-contained',2829},{'fire-containment-not-contained',2830},{'event-cleared',2831},{'traffic-clearing',2832},{'incident-closed',2833},{'flash-flood',3073},{'major-flood',3074},{'reservoir-failure',3075},{'levee-failure',3076},{tsunami,3077},{'tidal-wave',3078},{'volcanic-eruption',3079},{'ash-fall',3080},{'lava-flow',3081},{'serious-fire',3082},{'forest-fire',3083},{wildfire,3084},{'building-fire',3085},{'brush-fire',3086},{'grass-fire',3087},{'fire-danger-extreme',3088},{'fire-danger-very-high',3089},{'fire-danger-high',3090},{'fire-danger-medium',3091},{'fire-danger-low',3092},{'earthquake-damage',3093},{'air-crash',3094},{'rail-crash',3095},{'toxic-release',3096},{'toxic-leak',3097},{'radioactive-release',3098},{'radiation-hazard',3099},{'reactor-leakage',3100},{explosion,3101},{'major-hazardous-materials-fire',3102},{'major-hazardous-materials-release',3103},{'disaster-cleared',3199},{assault,3329},{crime,3330},{robbery,3331},{'fare-dispute',3332},{shooting,3333},{'gunfire-on-roadway',3334},{suicide,3335},{fight,3336},{'gang-fight',3337},{'person-harassment',3338},{'person-injured',3339},{'unruly-passenger',3340},{'person-intoxicated',3341},{'crowd-control-problem',3342},{demonstration,3343},{march,3344},{'public-disturbance',3345},{riot,3346},{'civil-unrest',3347},{'civil-emergency',3348},{strike,3349},{'public-transit-strike',3350},{stampede,3351},{'teargas-used',3352},{'security-alert',3353},{'security-incident',3354},{checkpoint,3355},{'bomb-alert',3356},{'terrorist-incident',3357},{'high-velocity-shell-fire',3358},{'explosives-in-use',3359},{'air-raid',3360},{'weapons-of-mass-destruction-threat',3361},{'military-operations',3362},{'sick-customer',3363},{'security-problem-cleared',3454},{'traffic-disturbance-cleared',3455},{'sports-event',3585},{game,3586},{tournament,3587},{'track-and-field-event',3588},{'baseball-game',3589},{'basketball-game',3590},{'boxing-match',3591},{'football-game',3592},{'soccer-game',3593},{'golf-tournament',3594},{'hockey-game',3595},{'tennis-tournament',3596},{'wrestling-match',3597},{'road-race',3598},{'automobile-race',3599},{'bicycle-race',3600},{'race-event',3601},{marathon,3602},{'horse-show',3603},{rodeo,3604},{'water-sports-event',3605},{'winter-sports-event',3606},{'skating-event',3607},{'dog-sled-race',3608},{'sporting-event-ended',3711},{'major-event',3841},{airshow,3842},{'hot-air-ballooning',3843},{concert,3844},{'state-occasion',3845},{'vIP-visit',3846},{show,3847},{festival,3848},{exhibition,3849},{'performing-arts',3850},{'outdoor-market',3851},{fair,3852},{carnival,3853},{'fireworks-display',3854},{'trade-expo',3855},{'movie-filming',3856},{'presidential-visit',3857},{parade,3858},{procession,3859},{'funeral-procession',3860},{crowd,3861},{'holiday-traffic-crowds',3862},{'event-ended',3967},{'normal-parking-restrictions-lifted',4097},{'parking-meter-restrictions-lifted',4098},{'special-parking-restrictions-in-force',4099},{'full-parking-lot',4100},{'full-parking-garage',4101},{'all-parking-lots-full',4102},{'no-parking-spaces-available',4103},{'only-a-few-spaces-available',4104},{'spaces-available',4105},{'no-parking',4106},{'parking-on-one-side-of-street-only',4107},{'parking-on-both-sides-of-street',4108},{'parallel-parking-only',4109},{'parking-meters-not-available',4110},{'use-of-parking-meters-restricted',4111},{'event-parking',4112},{'handicapped-parking',4113},{'long-term-parking',4114},{'overnight-parking',4115},{'short-term-parking',4116},{'parking-by-permit-only',4117},{'emergency-parking-only',4118},{'emergency-stopping-only',4119},{parking,4120},{stopping,4121},{standing,4122},{'tow-away-zone',4123},{'school-zone',4124},{'speed-zone',4125},{'loading-zone',4126},{'state-law',4127},{'van-accessible',4128},{'special-parking-restrictions-lifted',4222},{'no-parking-information-available',4223},{'information-available-on-radio',4353},{'information-available-on-TV',4354},{'call-to-get-information',4355},{'information-available-via-Internet',4356},{'test-message',4357},{'no-information-available',4358},{'null-description',4359},{'information-service-is-being-suspended',4360},{'police-assistance',4361},{'police-monitor-CB',4362},{'emergency-notification',4363},{'in-emergency-dial-911',4364},{'travel-Info-call-511',4365},{'car-pool-information',4366},{'information-service-resumed',4478},{'message-canceled',4479},{overcast,4609},{cloudy,4610},{'mostly-cloudy',4611},{'partly-cloudy',4612},{'partly-sunny',4613},{'mostly-sunny',4614},{sunny,4615},{'fair-skies',4616},{'clear-skies',4617},{'mostly-clear',4618},{'mostly-dry',4619},{dry,4620},{'uV-index-very-high',4621},{'uV-index-high',4622},{'uV-index-moderate',4623},{'uV-index-low',4624},{'uV-index-very-low',4625},{'barometric-pressure',4626},{'ozone-alert',4627},{'lighting-unknown',4628},{'artificial-exterior-light',4629},{'artificial-interior-light',4630},{darkness,4631},{dusk,4632},{dawn,4633},{moonlight,4634},{daylight,4635},{'weather-forecast-withdrawn',4735},{'severe-weather',4865},{blizzard,4866},{'heavy-snow',4867},{snow,4868},{'light-snow',4869},{'snow-showers',4870},{'winter-storm',4871},{'ice-glaze',4872},{'heavy-frost',4873},{frost,4874},{'ice-storm',4875},{sleet,4876},{'rain-and-snow-mixed',4877},{'rain-changing-to-snow',4878},{'damaging-hail',4879},{hail,4880},{thunderstorms,4881},{thundershowers,4882},{'extremely-heavy-downpour',4883},{'heavy-rain',4884},{rain,4885},{'light-rain',4886},{drizzle,4887},{showers,4888},{dew,4889},{'precipitation-cleared',4991},{tornado,5121},{hurricane,5122},{'hurricane-force-winds',5123},{'tropical-storm',5124},{'gale-force-winds',5125},{'storm-force-winds',5126},{'strong-winds',5127},{'moderate-winds',5128},{'light-winds',5129},{calm,5130},{'gusty-winds',5131},{crosswinds,5132},{windy,5133},{'strong-winds-have-eased',5246},{'strong-wind-forecast-withdrawn',5247},{'dense-fog',5377},{fog,5378},{'patchy-fog',5379},{'freezing-fog',5380},{mist,5381},{haze,5382},{'visibility-reduced',5383},{'white-out',5384},{'blowing-snow',5385},{'smoke-hazard',5386},{'spray-hazard',5387},{'low-sun-glare',5388},{'snow-glare',5389},{'blowing-dust',5390},{'blowing-sand',5391},{'dust-storms',5392},{sandstorms,5393},{'air-quality-good',5394},{'air-quality-fair',5395},{'air-quality-poor',5396},{'air-quality-very-poor',5397},{'severe-exhaust-pollution',5398},{'smog-alert',5399},{'pollen-count-high',5400},{'pollen-count-medium',5401},{'pollen-count-low',5402},{'swarms-of-insects',5403},{'visibility-blocked',5404},{'ice-fog',5405},{'fog-clearing',5499},{'visibility-improved',5500},{'fog-forecast-withdrawn',5501},{'pollution-alert-ended',5502},{'air-quality-improved',5503},{'maximum-temperature',5633},{temperature,5634},{'minimum-temperature',5635},{'current-temperature',5636},{'heat-index',5637},{'extreme-heat',5638},{hot,5639},{hotter,5640},{heat,5641},{warmer,5642},{warm,5643},{mild,5644},{cool,5645},{cooler,5646},{cold,5647},{colder,5648},{'very-cold',5649},{'extreme-cold',5650},{'wind-chill',5651},{dewpoint,5652},{'relative-humidity',5653},{'temperatures-close-to-the-seasonal-norm',5758},{'less-extreme-temperatures',5759},{impassable,5889},{'almost-impassable',5890},{'passable-with-care',5891},{passable,5892},{'surface-water-hazard',5893},{'danger-of-hydroplaning',5894},{'wet-pavement',5895},{'treated-pavement',5896},{slippery,5897},{'mud-on-roadway',5898},{'leaves-on-roadway',5899},{'loose-sand-on-roadway',5900},{'loose-gravel',5901},{'fuel-on-roadway',5902},{'oil-on-roadway',5903},{'road-surface-in-poor-condition',5904},{'melting-tar',5905},{ice,5906},{'icy-patches',5907},{'black-ice',5908},{'ice-pellets-on-roadway',5909},{'ice-build-up',5910},{'freezing-rain',5911},{'wet-and-icy-roads',5912},{'melting-snow',5913},{slush,5914},{'frozen-slush',5915},{'snow-on-roadway',5916},{'packed-snow',5917},{'packed-snow-patches',5918},{'plowed-snow',5919},{'wet-snow',5920},{'fresh-snow',5921},{'powder-snow',5922},{'granular-snow',5923},{'frozen-snow',5924},{'crusted-snow',5925},{'deep-snow',5926},{'snow-drifts',5927},{'drifting-snow',5928},{'expected-snow-accumulation',5929},{'current-snow-accumulation',5930},{'rough-road',5931},{sand,5932},{gravel,5933},{paved,5934},{'uneven-lanes',5935},{'rough-crossing',5936},{'at-grade-level-crossing',5937},{'low-ground-clearance',5938},{'dry-pavement',6011},{'snow-cleared',6012},{'pavement-conditions-improved',6013},{'skid-hazard-reduced',6014},{'pavement-conditions-cleared',6015},{'winter-equipment-recommended',6145},{'winter-equipment-required',6146},{'snow-chains-recommended',6147},{'snow-chains-required',6148},{'snow-chains-prohibited',6149},{'studded-tires-prohibited',6150},{'snow-tires-recommended',6151},{'snow-tires-required',6152},{'four-wheel-drive-recommended',6153},{'four-wheel-drive-required',6154},{'snow-tires-or-chains-recommended',6155},{'snow-tires-or-chains-required',6156},{'winter-driving-requirements-lifted',6271},{'driving-conditions-good',6401},{'driving-conditions-fair',6402},{'difficult-driving-conditions',6403},{'very-difficult-driving-conditions',6404},{'hazardous-driving-conditions',6405},{'extremely-hazardous-driving-conditions',6406},{'why-not-ride-share',6657},{'is-this-your-no-ride-day',6658},{'why-not-use-transit',6659},{'why-not-park-and-ride',6660},{'why-not-try-paratransit',6661},{'why-not-travel-by-rail',6662},{'why-not-use-the-subway',6663},{'why-not-try-rapid-transit',6664},{'why-not-travel-by-bus',6665},{'your-parking-ticket-covers-the-return-ride',6666},{'avoid-the-rush-hour',6667},{'do-not-allow-unnecessary-gaps',6668},{'follow-the-vehicle-in-front-smoothly',6669},{'do-not-slow-down-unnecessarily',6670},{'watch-for-muggers',6671},{'watch-for-pickpockets',6672},{'watch-for-thieves',6673},{'sorry-for-any-delay',6674},{'thank-you-for-your-understanding',6675},{'we-appreciate-your-patience',6676},{'we-are-grateful-for-your-cooperation',6677},{'share-the-road',6678},{risk,6913},{watch,6914},{warning,6915},{alert,6916},{danger,6917},{'danger-of-explosion',6918},{'danger-of-fire',6919},{'extra-police-patrols-in-operation',6920},{'look-out-for-vehicles-stopped-under-bridges',6921},{'increased-risk-of-accident',6922},{'rescue-and-recovery-work-in-progress-at-sceneREMOVED',6923},{'police-at-scene',6924},{'emergency-vehicles-at-scene',6925},{'traffic-being-directed-around-accident-area',6926},{'police-directing-traffic',6927},{'rescue-workers-directing-traffic',6928},{'repairs-in-progress',6929},{'pilot-car-in-operation',6930},{'look-out-for-flagger',6931},{'police-checks-in-operation',6932},{'mandatory-speed-limit-in-force',6933},{'speed-limit-in-force-for-heavy-vehicles',6934},{lockdown,6935},{'security-check-point',6936},{'truck-check-point',6937},{'single-occupancy-vehicle-check-point',6938},{look,6939},{'photo-enforced',6940},{'traffic-laws',6941},{'use-low-gear',6942},{'bridge-ices-before-road',6943},{'speed-checked-by-radar',6944},{'speed-checked-by-aircraft',6945},{fines,6946},{'fines-higher',6947},{'fines-doubled',6948},{'fines-tripled',6949},{'behind-you',6950},{'traffic-signs',6951},{'look-out-for-workers',6952},{'ride-with-traffic',6953},{'prepare-to-evacuate-area',6954},{avoid,6955},{'evacuation-canceled',7033},{'warning-canceled',7034},{'watch-canceled',7035},{'alert-canceled',7036},{ended,7037},{cleared,7038},{canceled,7039},{'drive-carefully',7169},{'drive-with-extreme-caution',7170},{'approach-with-care',7171},{'keep-your-distance',7172},{'increase-normal-following-distance',7173},{'test-your-brakes',7174},{'cross-intersection-with-care',7175},{'pass-with-care',7176},{'use-low-beam-headlights',7177},{'use-fog-lights',7178},{'use-hazard-warning-lights',7179},{'do-not-leave-your-vehicle',7180},{'leave-your-vehicle-and-proceed-to-next-safe-place',7181},{'turn-off-engine',7182},{'close-all-windows-turn-off-heater-air-conditioner-and-vents',7183},{'turn-off-air-conditioner-to-prevent-engine-overheating',7184},{'turn-off-mobile-phones-and-two-way-radios',7185},{'prepare-to-stop',7186},{'stop-at-next-rest-area',7187},{'stop-at-next-safe-place',7188},{'only-travel-if-absolutely-necessary',7189},{'drive-to-another-service-area',7190},{'use-through-traffic-lanes',7191},{'use-local-traffic-lanes',7192},{'use-left-hand-parallel-roadway',7193},{'use-right-hand-parallel-roadway',7194},{'use-heavy-vehicle-lane',7195},{'observe-recommended-speed',7196},{'facing-traffic',7197},{'push-button',7198},{'to-cross-street',7199},{pass,7200},{'be-prepared-to-stop',7201},{'signals-sequenced-for-speed',7202},{'maintain-top-safe-speed',7203},{'evacuate-area-voluntarily',7204},{'shelter-in-place',7205},{'keep-to-the-right',7425},{'keep-to-the-left',7426},{'use-right-lane',7427},{'use-left-lane',7428},{'heavy-vehicles-use-right-lane',7429},{'heavy-vehicles-use-left-lane',7430},{'observe-signals',7431},{'observe-signs',7432},{'no-passing',7433},{'no-smoking',7434},{'no-open-flames',7435},{'use-shoulder-as-lane',7436},{'do-not-drive-on-the-shoulder',7437},{'allow-emergency-vehicles-to-pass',7438},{'clear-a-lane-for-emergency-vehicles',7439},{'pull-over-to-the-edge-of-the-roadway',7440},{'wait-for-escort-vehicle',7441},{'in-emergency-wait-for-police-patrol',7442},{'reduce-your-speed',7443},{'observe-speed-limits',7444},{'check-point',7445},{'entry-requirements',7446},{'insurance-requirements',7447},{'firearms-requirements',7448},{'pet-requirements',7449},{'stay-in-lane',7450},{merge,7451},{'slower-traffic-keep-right',7452},{'keep-off',7453},{'evacuate-area-immediately',7454},{'shoulder-travel-no-longer-allowed',7547},{above,7681},{below,7682},{in,7683},{around,7684},{'after',7685},{before,7686},{at,7687},{on,7688},{near,7689},{'from-the',7690},{terminal,7691},{'falling-slowly',7692},{falling,7693},{'falling-quickly',7694},{'rising-slowly',7695},{rising,7696},{'rising-quickly',7697},{steady,7698},{likely,7699},{'changing-to',7700},{mostly,7701},{partly,7702},{minus,7703},{'weather-ended',7704},{expected,7705},{low,7706},{mid,7707},{high,7708},{upper,7709},{unseasonably,7710},{reported,7711},{advice,7712},{'due-to',7713},{'proceed-to',7714},{'transferred-to',7715},{use,7716},{affecting,7717},{blocking,7718},{connecting,7719},{finished,7720},{for,7721},{'or',7722},{'and',7723},{later,7724},{level,7725},{shortly,7726},{soon,7727},{service,7728},{damaged,7729},{'out-of-order',7730},{vandalism,7731},{'on-State-right-of-way',7732},{graffiti,7733},{'found-property',7734},{'begin-time',7735},{added,7736},{'end-time',7737},{no,7738},{'do-not',7739},{block,7740},{except,7741},{day,7742},{night,7743},{'any-time',7744},{has,7745},{'may-have',7746},{only,7747},{lifted,7748},{empty,7749},{turning,7750},{'u-turn',7751},{'wait-for',7752},{'when-flashing',7753},{duration,7754},{cross,7755},{'when-wet',7756},{must,7757},{oncoming,7758},{'may-exceed',7759},{'to-request',7760},{exempt,7761},{skewed,7762},{'when-children-are-present',7763},{lower,7764},{middle,7765},{major,7766},{minor,7767},{'on-bridges',7937},{'in-tunnels',7938},{'entering-or-leaving-tunnels',7939},{'on-ramps',7940},{'in-road-construction-area',7941},{'around-a-curve',7942},{'on-minor-roads',7943},{'in-the-opposing-lanes',7944},{'adjacent-to-roadway',7945},{'on-bend',7946},{'entire-intersection',7947},{'in-the-median',7948},{'moved-to-side-of-road',7949},{'moved-to-shoulder',7950},{'on-the-roadway',7951},{'in-shaded-areas',7952},{'in-low-lying-areas',7953},{'in-the-downtown-area',7954},{'in-the-inner-city-area',7955},{'in-parts',7956},{'in-some-places',7957},{'in-the-ditch',7958},{'in-the-valley',7959},{'on-hill-top',7960},{'near-the-foothills',7961},{'at-high-altitudes',7962},{'near-the-lake',7963},{'near-the-shore',7964},{'over-the-crest-of-a-hill',7965},{'other-than-on-the-roadway',7966},{'near-the-beach',7967},{'near-beach-access-point',7968},{'lower-level',7969},{'upper-level',7970},{airport,7971},{concourse,7972},{gate,7973},{'baggage-claim',7974},{'customs-point',7975},{station,7976},{platform,7977},{dock,7978},{depot,7979},{'ev-charging-point',7980},{'information-welcome-point',7981},{'at-rest-area',7982},{'at-service-area',7983},{'at-weigh-station',7984},{'picnic-areas',7985},{'rest-area',7986},{'service-stations',7987},{toilets,7988},{'on-the-right',7989},{'on-the-left',7990},{'in-the-center',7991},{'in-the-opposite-direction',7992},{'cross-traffic',7993},{'northbound-traffic',7994},{'eastbound-traffic',7995},{'southbound-traffic',7996},{'westbound-traffic',7997},{north,7998},{south,7999},{east,8000},{west,8001},{northeast,8002},{northwest,8003},{southeast,8004},{southwest,8005},{'mountain-pass',8006},{'reservation-center',8007},{'nearby-basin',8008},{'on-tracks',8009},{dip,8010},{'traffic-circle',8011},{'park-and-ride-lot',8012},{to,8014},{by,8015},{through,8016},{'area-of',8017},{under,8018},{over,8019},{from,8020},{approaching,8021},{'entering-at',8022},{'exiting-at',8023},{'across-tracks',8024},{'in-street',8025},{'on-curve',8026},{shoulder,8027},{crossover,8028},{'cross-road',8029},{'side-road',8030},{'bus-stop',8031},{intersection,8032},{'roadside-park',8033},{coast,8034},{'all-roadways',8193},{'through-lanes',8194},{'left-lane',8195},{'right-lane',8196},{'center-lane',8197},{'middle-lanes',8198},{'middle-two-lanes',8199},{'right-turning-lanes',8200},{'left-turning-lanes',8201},{'right-exit-ramp',8202},{'right-entrance-ramp',8203},{'left-exit-ramp',8204},{'left-entrance-ramp',8205},{'hard-shoulder',8206},{'soft-shoulder',8207},{'right-shoulder',8208},{'left-shoulder',8209},{'right-hand-parallel-lanes',8210},{'left-hand-parallel-lanes',8211},{'connecting-lanes',8212},{'express-lanes',8213},{'local-lanes',8214},{'toll-lanes',8215},{'electronic-toll-lanes',8216},{'toll-plaza',8217},{'inspection-lane',8218},{'hOV-lanes',8219},{'bus-lanes',8220},{'carpool-lanes',8221},{'truck-lanes',8222},{'emergency-lanes',8223},{'passing-lanes',8224},{'climbing-lanes',8225},{'slow-lane',8226},{'service-road',8227},{'cycle-lane',8228},{bridge,8229},{overpass,8230},{'elevated-lanes',8231},{underpass,8232},{tunnel,8233},{'escape-ramp',8234},{highways,8235},{'upper-deck-lanes',8236},{'lower-deck-lanes',8237},{'reversible-lanes',8238},{'right-exit-lanes',8239},{'left-exit-lanes',8240},{'right-merging-lanes',8241},{'left-merging-lanes',8242},{'right-second-exit-ramp',8243},{'left-second-exit-ramp',8244},{'right-second-entrance-ramp',8245},{'left-second-entrance-ramp',8246},{'all-exit-lanes',8247},{'all-entry-lanes',8248},{'either-shoulder',8249},{tracks,8250},{sidewalk,8251},{median,8252},{'shoulder-work',8253},{'detour-where-possible',8449},{'no-detour-available',8450},{'follow-signs',8451},{'follow-detour-signs',8452},{'follow-special-detour-markers',8453},{'do-not-follow-detour-signs',8454},{'detour-in-operation',8455},{'follow-local-detour',8456},{'compulsory-detour-in-operation',8457},{'no-suitable-detour-available',8458},{'detour-is-no-longer-recommended',8459},{'local-drivers-are-recommended-to-avoid-the-area',8460},{'trucks-are-recommended-to-avoid-the-area',8461},{'consider-alternate-route',8462},{'consider-alternate-parking',8463},{'consider-alternate-destination',8464},{'consider-alternate-area',8465},{'snow-route',8466},{'emergency-snow-route',8467},{'evacuation-route',8468},{'truck-route',8469},{'hazardous-materials-route',8470},{detour,8471},{'square-feet',8705},{'square-meters',8706},{acres,8707},{hectares,8708},{inches,8709},{feet,8710},{mile,8711},{miles,8712},{'nautical-miles',8713},{millimeters,8714},{meters,8715},{kilometer,8716},{kilometers,8717},{'feet-per-second',8718},{'meters-per-second',8719},{mPH,8720},{kPH,8721},{knots,8722},{aM,8723},{pM,8724},{weekends,8725},{holiday,8726},{seconds,8727},{minutes,8728},{hours,8729},{days,8730},{weeks,8731},{months,8732},{'degrees-Angle',8733},{'degrees-Celsius',8734},{'degrees-Fahrenheit',8735},{grams,8736},{kilograms,8737},{ounces,8738},{pounds,8739},{tons,8740},{'fluid-ounces',8741},{gallons,8742},{milliliters,8743},{liters,8744},{'kilograms-per-lane-mile',8745},{'tons-per-lane-mile',8746},{dollar,8747},{percent,8748},{'time-delimiter',8749},{dollars,8750},{'flight-number',8751},{'person-people',8752},{'response-plan',8753},{'placard-type',8754},{'placard-number',8755},{fM,8756},{grade,8757},{nSunday,8758},{nMonday,8759},{nTuesday,8760},{nWednesday,8761},{nThursday,8762},{nFriday,8763},{nSaturday,8764},{weekdays,8765},{elevation,8766},{'other-times',8767},{travel,8961},{transit,8962},{bus,8963},{trolleybus,8964},{rail,8965},{'commuter-rail',8966},{subway,8967},{'rapid-transit',8968},{'light-rail',8969},{streetcar,8970},{'dial-a-ride',8971},{'park-and-ride',8972},{shuttle,8973},{'free-shuttle',8974},{'airport-shuttle',8975},{taxies,8976},{ferry,8977},{'passenger-ferry',8978},{'vehicle-ferry',8979},{'aerial-tramway',8980},{'automated-guideway',8981},{'cable-cars',8982},{monorail,8983},{'air-travel',8984},{'hitch-hitching',8985},{walk,8986},{'all-vehicles',9217},{bicycles,9218},{motorcycles,9219},{cars,9220},{'light-vehicles',9221},{'cars-and-light-vehicles',9222},{'cars-with-trailers',9223},{'cars-with-recreational-trailers',9224},{'vehicles-with-trailers',9225},{'heavy-vehicles',9226},{trucks,9227},{buses,9228},{'articulated-buses',9229},{'school-buses',9230},{'vehicles-with-semi-trailers',9231},{'vehicles-with-double-trailers',9232},{'high-profile-vehicles',9233},{'wide-vehicles',9234},{'long-vehicles',9235},{'hazardous-loads',9236},{'exceptional-loads',9237},{'abnormal-loads',9238},{convoys,9239},{'maintenance-vehicles',9240},{'delivery-vehicles',9241},{'vehicles-with-even-numbered-license-plates',9242},{'vehicles-with-odd-numbered-license-plates',9243},{'vehicles-with-parking-permits',9244},{'vehicles-with-catalytic-converters',9245},{'vehicles-without-catalytic-converters',9246},{'gas-powered-vehicles',9247},{'diesel-powered-vehicles',9248},{'lPG-vehicles',9249},{'military-convoys',9250},{'military-vehicles',9251},{'electric-powered-vehicles',9252},{'hybrid-powered-vehicles',9253},{'inherently-low-emission-vehicles',9254},{'commercial-vehicles',9255},{'runaway-vehicles',9256},{'vehicles-with-lugs',9257},{'motor-driven-cycles',9258},{'recreational-vehicles',9259},{'non-motorized-vehicles',9260},{traffic,9261},{'through-traffic',9473},{'holiday-traffic',9474},{residents,9475},{visitors,9476},{'long-distance-traffic',9477},{'local-traffic',9478},{'regional-traffic',9479},{arrivals,9480},{departures,9481},{'airline-travelers',9482},{'commuter-airline-travelers',9483},{'domestic-airline-travelers',9484},{'international-airline-travelers',9485},{pedestrians,9486},{bicyclists,9487},{'emergency-vehicle-units',9729},{'federal-law-enforcement-units',9730},{'state-police-units',9731},{'county-police-units',9732},{'local-police-units',9733},{'ambulance-units',9734},{'rescue-units',9735},{'fire-units',9736},{'hAZMAT-units',9737},{'light-tow-unit',9738},{'heavy-tow-unit',9739},{'freeway-service-patrols',9740},{'transportation-response-units',9741},{'private-contractor-response-units',9742},{'private-tow-units',9743},{'ground-fire-suppression',9985},{'heavy-ground-equipment',9986},{aircraft,9988},{'marine-equipment',9989},{'support-equipment',9990},{'medical-rescue-unit',9991},{other,9993},{'ground-fire-suppression-other',9994},{engine,9995},{'truck-or-aerial',9996},{quint,9997},{'tanker-pumper-combination',9998},{'brush-truck',10000},{'aircraft-rescue-firefighting',10001},{'heavy-ground-equipment-other',10004},{'dozer-or-plow',10005},{tractor,10006},{'tanker-or-tender',10008},{'aircraft-other',10024},{'aircraft-fixed-wing-tanker',10025},{helitanker,10026},{helicopter,10027},{'marine-equipment-other',10034},{'fire-boat-with-pump',10035},{'boat-no-pump',10036},{'support-apparatus-other',10044},{'breathing-apparatus-support',10045},{'light-and-air-unit',10046},{'medical-rescue-unit-other',10054},{'rescue-unit',10055},{'urban-search-rescue-unit',10056},{'high-angle-rescue',10057},{'crash-fire-rescue',10058},{'bLS-unit',10059},{'aLS-unit',10060},{'mobile-command-post',10075},{'chief-officer-car',10076},{'hAZMAT-unit',10077},{'type-i-hand-crew',10078},{'type-ii-hand-crew',10079},{'privately-owned-vehicle',10083},{'other-apparatus-resource',10084},{ambulance,10085},{'bomb-squad-van',10086},{'combine-harvester',10087},{'construction-vehicle',10088},{'farm-tractor',10089},{'grass-cutting-machines',10090},{'hAZMAT-containment-tow',10091},{'heavy-tow',10092},{'hedge-cutting-machines',10093},{'light-tow',10094},{'mobile-crane',10095},{'refuse-collection-vehicle',10096},{'resurfacing-vehicle',10097},{'road-sweeper',10098},{'roadside-litter-collection-crews',10099},{'salvage-vehicle',10100},{'sand-truck',10101},{snowplow,10102},{'steam-roller',10103},{'swat-team-van',10104},{'track-laying-vehicle',10105},{'unknown-vehicle',10106},{'white-lining-vehicle',10107},{'dump-truck',10108},{'supervisor-vehicle',10109},{'snow-blower',10110},{'rotary-snow-blower',10111},{'road-grader',10112},{'steam-truck',10113},{'flatbed-tow',10114},{'survey-crews',10115},{'unknown-status',10240},{'ready-for-use',10241},{'working-normally',10242},{'working-autonomously',10243},{'working-incorrectly',10244},{'not-working',10245},{'normal-maintenance',10246},{'in-route-to-use',10247},{'returning-from-use',10248},{'out-of-service',10249},{'off-duty',10250},{'on-patrol',10251},{'on-call',10252},{'on-break',10253},{'mandatory-time-off',10254},{'low-on-fuel',10255},{'low-on-water',10256},{'low-charge',10257},{missing,10258},{none,10496},{'light-pole',10497},{'utility-pole',10498},{'gantry-way',10499},{'sign-support',10500},{'signal-pole',10501},{'signage-public',10502},{'signage-private',10503},{cones,10504},{'cones-post-type',10505},{'cones-glue-post',10506},{'cones-other',10507},{barriers,10508},{'barrier-Aframe',10509},{'barriers-heavy-duty',10510},{'barricade-type-III',10511},{'barricade-small',10512},{'barricade-lights',10513},{beacon,10514},{'t-stand',10515},{'a-stand',10516},{drums,10517},{'impact-attenuator',10518},{'barricade-tape',10519},{'safety-fence',10520},{'temp-pavement-markings',10521},{'speed-bumps',10522},{'temp-curbs',10523},{'parking-blocks',10524},{'signboard-fixed',10525},{'signboard-portable',10526},{har,10527},{'har-AM',10528},{'har-FM',10529},{'har-DSRC',10530},{'traffic-light',10531},{'lane-control-signal',10532},{'traffic-detector',10533},{'vehicle-detector',10534},{'system-alarm',10535},{'arrow-board',10536},{'fixed-VMS',10537},{'mobile-VMS',10538},{'ramp-control',10539},{'gate-control',10540},{'temporary-traffic-light',10541},{'over-height-warning-system',10542},{'over-weight-warning-system',10543},{'emergency-telephones',10544},{'railroad-crossing-equipment',10545},{'tunnel-ventilation',10546},{ccTV,10547},{'environmental-sensor',10548},{switch,10549},{signal,10550},{'third-rail',10551},{'overhead-power',10552},{'concrete-tie',10553},{'wooden-tie',10554},{escalator,10555},{elevator,10556},{track,10557},{drawbridge,10558},{'manhole-cover',10559},{culvert,10560},{'snow-poles',10561},{'guide-poles',10562},{'expansion-joint',10563},{'shifted-plate',10564},{'solid-barrier',10565},{'moveable-barrier',10566},{'sand-barrel',10567},{'overhead-sign',10568},{'ground-sign',10569},{'emergency-signal',10570},{'countdown-pedestrian-sign',10571},{stripe,10572},{island,10573},{'unknown-transit-problem',10753},{'sleeping-customer',10754},{'assault-on-passenger',10755},{'assault-on-employee',10756},{'broken-seat',10757},{'bus-alarm',10758},{'crime-or-drug-deal',10759},{'eating-on-board',10760},{'equipment-problem-with-air-conditioning',10761},{'equipment-problem-with-air-system',10762},{'equipment-problem-with-brakes',10763},{'equipment-problem-with-chassis-or-suspension',10764},{'equipment-problem-with-cooling-system',10765},{'equipment-problem-with-doors',10766},{'equipment-problem-with-electrical',10767},{'equipment-problem-with-engine',10768},{'equipment-problem-with-exterior-or-body',10769},{'equipment-problem-with-fare-collection',10770},{'equipment-problem-with-fuel-or-exhaust',10771},{'equipment-problem-with-horn',10772},{'equipment-problem-with-interior',10773},{'equipment-problem-with-liftkneeling',10774},{'equipment-problem-with-lights',10775},{'equipment-problem-with-lubrication',10776},{'equipment-problem-with-radio-or-communication',10777},{'equipment-problem-with-signs',10778},{'equipment-problem-with-steering',10779},{'equipment-problem-with-tires',10780},{'equipment-problem-with-transmission',10781},{'equipment-problem-with-unknown-alarm',10782},{'equipment-problem-with-wipers',10783},{'fare-dispute-expired-pass',10784},{'fare-dispute-expired-transfer',10785},{'fare-dispute-expired-upgrade',10786},{'fare-dispute-other',10787},{'fare-dispute-refuses-to-pay',10788},{'lift-passenger-cycle-completed',10789},{'lift-passenger-ready-to-alight',10790},{'lift-passenger-ready-to-board',10791},{'lost-article',10792},{'objects-thrown',10793},{'passenger-accident-alighting',10794},{'passenger-accident-boarding',10795},{'passenger-accident-fallen-on-board',10796},{'passenger-load',10797},{'passenger-accident-other',10798},{'passenger-sick-or-injured',10799},{'right-of-way',10800},{theft,10801},{'theft-of-service',10802},{'waiting-to-get-relief-for-schedule-break',10803},{'waiting-to-get-relief-after-run-is-finished',10804},{'waiting-to-provide-relief',10805},{'unknown-object',11009},{tire,11010},{rim,11011},{retread,11012},{trash,11013},{cargo,11014},{diesel,11015},{gasoline,11016},{'anti-freeze',11017},{'seat-belts',11018},{'litter-container',11019},{'all-Terrain-vehicle',11020},{seaplane,11021},{chairlift,11022},{'fishing-pier',11023},{'railroad-cross-buck',11024},{telephone,11025},{fallout,11026},{medical,11027},{chemical,11028},{welfare,11029},{evacuation,11030},{'left-arrow-signal',11031},{'ahead-arrow-signal',11032},{'right-arrow-signal',11033},{'green-light-signal',11034},{'green-arrow-signal',11035},{'yellow-light-signal',11036},{'yellow-arrow-signal',11037},{'red-light-signal',11038},{'red-arrow-signal',11039},{'extended-green-signal',11040},{'advance-arrow-signal',11041},{'pedestrian-Signal-Stop',11042},{'pedestrian-Signal-Caution',11043},{'pedestrian-Signal-Walk',11044},{'pedestrian-Signal-Light',11045},{'pedestrian-Signal-Time-Display',11046},{train,11047},{horn,11048},{deer,11049},{cattle,11050},{horse,11051},{'golf-cart',11052},{'food-services',11053},{'ambulance-staging-point',11054},{'roadside-table',11055},{services,11056},{'motorist-services',11059},{'alternative-fuel',11060},{'propane-gas',11061},{registration,11062},{decontamination,11063},{emergency,11064},{'prohibit-None-Allowed-LU-LT-L45-S-R45-RT-RU',11264},{'prohibit-RU-Allowed-LU-LT-L45-S-R45-RT',11265},{'prohibit-RT-Allowed-LU-LT-L45-S-R45-RU',11266},{'prohibit-RT-RU-Allowed-LU-LT-L45-S-R45',11267},{'prohibit-R45-Allowed-LU-LT-L45-S-RT-RU',11268},{'prohibit-R45-RU-Allowed-LU-LT-L45-S-RT',11269},{'prohibit-R45-RT-Allowed-LU-LT-L45-S-RU',11270},{'prohibit-R45-RT-RU-Allowed-LU-LT-L45-S',11271},{'prohibit-S-Allowed-LU-LT-L45-R45-RT-RU',11272},{'prohibit-S-RU-Allowed-LU-LT-L45-R45-RT',11273},{'prohibit-S-RT-Allowed-LU-LT-L45-R45-RU',11274},{'prohibit-S-RT-RU-Allowed-LU-LT-L45-R45',11275},{'prohibit-S-R45-Allowed-LU-LT-L45-RT-RU',11276},{'prohibit-S-R45-RU-Allowed-LU-LT-L45-RT',11277},{'prohibit-S-R45-RT-Allowed-LU-LT-L45-RU',11278},{'prohibit-S-R45-RT-RU-Allowed-LU-LT-L45',11279},{'prohibit-L45-Allowed-LU-LT-S-R45-RT-RU',11280},{'prohibit-L45-RU-Allowed-LU-LT-S-R45-RT',11281},{'prohibit-L45-RT-Allowed-LU-LT-S-R45-RU',11282},{'prohibit-L45-RT-RU-Allowed-LU-LT-S-R45',11283},{'prohibit-L45-R45-Allowed-LU-LT-S-RT-RU',11284},{'prohibit-L45-R45-RU-Allowed-LU-LT-S-RT',11285},{'prohibit-L45-R45-RT-Allowed-LU-LT-S-RU',11286},{'prohibit-L45-R45-RT-RU-Allowed-LU-LT-S',11287},{'prohibit-L45-S-Allowed-LU-LT-R45-RT-RU',11288},{'prohibit-L45-S-RU-Allowed-LU-LT-R45-RT',11289},{'prohibit-L45-S-RT-Allowed-LU-LT-R45-RU',11290},{'prohibit-L45-S-RT-RU-Allowed-LU-LT-R45',11291},{'prohibit-L45-S-R45-Allowed-LU-LT-RT-RU',11292},{'prohibit-L45-S-R45-RU-Allowed-LU-LT-RT',11293},{'prohibit-L45-S-R45-RT-Allowed-LU-LT-RU',11294},{'prohibit-L45-S-R45-RT-RU-Allowed-LU-LT',11295},{'prohibit-LT-Allowed-LU-L45-S-R45-RT-RU',11296},{'prohibit-LT-RU-Allowed-LU-L45-S-R45-RT',11297},{'prohibit-LT-RT-Allowed-LU-L45-S-R45-RU',11298},{'prohibit-LT-RT-RU-Allowed-LU-L45-S-R45',11299},{'prohibit-LT-R45-Allowed-LU-L45-S-RT-RU',11300},{'prohibit-LT-R45-RU-Allowed-LU-L45-S-RT',11301},{'prohibit-LT-R45-RT-Allowed-LU-L45-S-RU',11302},{'prohibit-LT-R45-RT-RU-Allowed-LU-L45-S',11303},{'prohibit-LT-S-Allowed-LU-L45-R45-RT-RU',11304},{'prohibit-LT-S-RU-Allowed-LU-L45-R45-RT',11305},{'prohibit-LT-S-RT-Allowed-LU-L45-R45-RU',11306},{'prohibit-LT-S-RT-RU-Allowed-LU-L45-R45',11307},{'prohibit-LT-S-R45-Allowed-LU-L45-RT-RU',11308},{'prohibit-LT-S-R45-RU-Allowed-LU-L45-RT',11309},{'prohibit-LT-S-R45-RT-Allowed-LU-L45-RU',11310},{'prohibit-LT-S-R45-RT-RU-Allowed-LU-L45',11311},{'prohibit-LT-L45-Allowed-LU-S-R45-RT-RU',11312},{'prohibit-LT-L45-RU-Allowed-LU-S-R45-RT',11313},{'prohibit-LT-L45-RT-Allowed-LU-S-R45-RU',11314},{'prohibit-LT-L45-RT-RU-Allowed-LU-S-R45',11315},{'prohibit-LT-L45-R45-Allowed-LU-S-RT-RU',11316},{'prohibit-LT-L45-R45-RU-Allowed-LU-S-RT',11317},{'prohibit-LT-L45-R45-RT-Allowed-LU-S-RU',11318},{'prohibit-LT-L45-R45-RT-RU-Allowed-LU-S',11319},{'prohibit-LT-L45-S-Allowed-LU-R45-RT-RU',11320},{'prohibit-LT-L45-S-RU-Allowed-LU-R45-RT',11321},{'prohibit-LT-L45-S-RT-Allowed-LU-R45-RU',11322},{'prohibit-LT-L45-S-RT-RU-Allowed-LU-R45',11323},{'prohibit-LT-L45-S-R45-Allowed-LU-RT-RU',11324},{'prohibit-LT-L45-S-R45-RU-Allowed-LU-RT',11325},{'prohibit-LT-L45-S-R45-RT-Allowed-LU-RU',11326},{'prohibit-LT-L45-S-R45-RT-RU-Allowed-LU',11327},{'prohibit-LU-Allowed-LT-L45-S-R45-RT-RU',11328},{'prohibit-LU-RU-Allowed-LT-L45-S-R45-RT',11329},{'prohibit-LU-RT-Allowed-LT-L45-S-R45-RU',11330},{'prohibit-LU-RT-RU-Allowed-LT-L45-S-R45',11331},{'prohibit-LU-R45-Allowed-LT-L45-S-RT-RU',11332},{'prohibit-LU-R45-RU-Allowed-LT-L45-S-RT',11333},{'prohibit-LU-R45-RT-Allowed-LT-L45-S-RU',11334},{'prohibit-LU-R45-RT-RU-Allowed-LT-L45-S',11335},{'prohibit-LU-S-Allowed-LT-L45-R45-RT-RU',11336},{'prohibit-LU-S-RU-Allowed-LT-L45-R45-RT',11337},{'prohibit-LU-S-RT-Allowed-LT-L45-R45-RU',11338},{'prohibit-LU-S-RT-RU-Allowed-LT-L45-R45',11339},{'prohibit-LU-S-R45-Allowed-LT-L45-RT-RU',11340},{'prohibit-LU-S-R45-RU-Allowed-LT-L45-RT',11341},{'prohibit-LU-S-R45-RT-Allowed-LT-L45-RU',11342},{'prohibit-LU-S-R45-RT-RU-Allowed-LT-L45',11343},{'prohibit-LU-L45-Allowed-LT-S-R45-RT-RU',11344},{'prohibit-LU-L45-RU-Allowed-LT-S-R45-RT',11345},{'prohibit-LU-L45-RT-Allowed-LT-S-R45-RU',11346},{'prohibit-LU-L45-RT-RU-Allowed-LT-S-R45',11347},{'prohibit-LU-L45-R45-Allowed-LT-S-RT-RU',11348},{'prohibit-LU-L45-R45-RU-Allowed-LT-S-RT',11349},{'prohibit-LU-L45-R45-RT-Allowed-LT-S-RU',11350},{'prohibit-LU-L45-R45-RT-RU-Allowed-LT-S',11351},{'prohibit-LU-L45-S-Allowed-LT-R45-RT-RU',11352},{'prohibit-LU-L45-S-RU-Allowed-LT-R45-RT',11353},{'prohibit-LU-L45-S-RT-Allowed-LT-R45-RU',11354},{'prohibit-LU-L45-S-RT-RU-Allowed-LT-R45',11355},{'prohibit-LU-L45-S-R45-Allowed-LT-RT-RU',11356},{'prohibit-LU-L45-S-R45-RU-Allowed-LT-RT',11357},{'prohibit-LU-L45-S-R45-RT-Allowed-LT-RU',11358},{'prohibit-LU-L45-S-R45-RT-RU-Allowed-LT',11359},{'prohibit-LU-LT-Allowed-L45-S-R45-RT-RU',11360},{'prohibit-LU-LT-RU-Allowed-L45-S-R45-RT',11361},{'prohibit-LU-LT-RT-Allowed-L45-S-R45-RU',11362},{'prohibit-LU-LT-RT-RU-Allowed-L45-S-R45',11363},{'prohibit-LU-LT-R45-Allowed-L45-S-RT-RU',11364},{'prohibit-LU-LT-R45-RU-Allowed-L45-S-RT',11365},{'prohibit-LU-LT-R45-RT-Allowed-L45-S-RU',11366},{'prohibit-LU-LT-R45-RT-RU-Allowed-L45-S',11367},{'prohibit-LU-LT-S-Allowed-L45-R45-RT-RU',11368},{'prohibit-LU-LT-S-RU-Allowed-L45-R45-RT',11369},{'prohibit-LU-LT-S-RT-Allowed-L45-R45-RU',11370},{'prohibit-LU-LT-S-RT-RU-Allowed-L45-R45',11371},{'prohibit-LU-LT-S-R45-Allowed-L45-RT-RU',11372},{'prohibit-LU-LT-S-R45-RU-Allowed-L45-RT',11373},{'prohibit-LU-LT-S-R45-RT-Allowed-L45-RU',11374},{'prohibit-LU-LT-S-R45-RT-RU-Allowed-L45',11375},{'prohibit-LU-LT-L45-Allowed-S-R45-RT-RU',11376},{'prohibit-LU-LT-L45-RU-Allowed-S-R45-RT',11377},{'prohibit-LU-LT-L45-RT-Allowed-S-R45-RU',11378},{'prohibit-LU-LT-L45-RT-RU-Allowed-S-R45',11379},{'prohibit-LU-LT-L45-R45-Allowed-S-RT-RU',11380},{'prohibit-LU-LT-L45-R45-RU-Allowed-S-RT',11381},{'prohibit-LU-LT-L45-R45-RT-Allowed-S-RU',11382},{'prohibit-LU-LT-L45-R45-RT-RU-Allowed-S',11383},{'prohibit-LU-LT-L45-S-Allowed-R45-RT-RU',11384},{'prohibit-LU-LT-L45-S-RU-Allowed-R45-RT',11385},{'prohibit-LU-LT-L45-S-RT-Allowed-R45-RU',11386},{'prohibit-LU-LT-L45-S-RT-RU-Allowed-R45',11387},{'prohibit-LU-LT-L45-S-R45-Allowed-RT-RU',11388},{'prohibit-LU-LT-L45-S-R45-RU-Allowed-RT',11389},{'prohibit-LU-LT-L45-S-R45-RT-Allowed-RU',11390},{'prohibit-LU-LT-L45-S-R45-RT-RU-Allowed-None',11391},{'n1-16th',11521},{'n1-10th',11522},{'n1-8th',11523},{'n1-4th',11524},{'n1-3rd',11525},{'n1-2',11526},{'n3-4',11527},{n300,11531},{n350,11532},{n400,11533},{n450,11534},{n500,11535},{n550,11536},{n600,11537},{n650,11538},{n700,11539},{n750,11540},{n800,11541},{n850,11542},{n900,11543},{n950,11544},{n1000,11545},{n1100,11546},{n1200,11547},{n1300,11548},{n1400,11549},{n1500,11550},{n1600,11551},{n1700,11552},{n1800,11553},{n1900,11554},{n2000,11555},{n2100,11556},{n2200,11557},{n2300,11558},{n2400,11559},{n2500,11560},{n2600,11561},{n2700,11562},{n2800,11563},{n2900,11564},{n3000,11565},{n3500,11566},{n4000,11567},{n4500,11568},{n5000,11569},{n5500,11570},{n6000,11571},{n6500,11572},{n7000,11573},{n7500,11574},{n8000,11575},{n8500,11576},{n9000,11577},{n9500,11578},{n10000,11579},{n11000,11580},{n12000,11581},{n13000,11582},{n14000,11583},{n15000,11584},{n16000,11585},{n17000,11586},{n18000,11587},{n19000,11588},{n20000,11589},{n21000,11590},{n22000,11591},{n23000,11592},{n24000,11593},{n25000,11594},{n26000,11595},{n27000,11596},{n28000,11597},{n29000,11598},{n30000,11599},{n35000,11600},{n40000,11601},{n45000,11602},{n50000,11603},{n55000,11604},{n60000,11605},{n65000,11606},{n70000,11607},{n75000,11608},{n80000,11609},{n85000,11610},{n90000,11611},{n95000,11612},{n100000,11613},{'name-follows',11777},{freeway,11778},{'us-Route',11779},{'state-Route',11780},{interstate,11781},{'business-Loop',11782},{alternative,11783},{'county-Route',11784},{'forest-Route',11785},{'farm-to-Market-Route',11786},{'eisenhower-Interstate-System',11787},{'americas-Byways',11788},{'national-Network-Route',11789},{'scenic-Area',11790},{'parking-Area',11791},{'weight-Station',11792},{road,11793},{exit,11794},{'historical-route',11795},{'state-line',11796},{spur,11797},{junction,11798},{'bicycle-route',11799},{'bicycle-interstate-route',11800},{'national-park',11801},{'bear-viewing-area',12033},{'deer-viewing-area',12034},{'drinking-water',12035},{'environmental-study-area',12036},{'falling-rocks',12037},{firearms,12038},{'leashed-pets',12039},{'point-of-interest',12040},{smoking,12041},{dog,12042},{'tent-camping',12043},{'trailer-camping',12044},{'first-aid',12045},{handicapped,12046},{mechanic,12047},{'trailer-sanitary-station',12048},{'viewing-area',12049},{campfire,12050},{locker,12051},{sleeping,12052},{trail,12053},{climbing,12054},{'rock-climbing',12055},{hunting,12056},{playground,12057},{'rock-collecting',12058},{spelunking,12059},{'bicycle-trail',12060},{'hiking-trail',12061},{'horse-trail',12062},{'trail-interpretive-auto',12063},{'trail-interpretive-pedestrian',12064},{'trail-road-for-4WD-vehicles',12065},{'trail-for-trail-bikes',12066},{archer,12067},{'hang-glider',12068},{'boat-tours',12069},{canoeing,12070},{diving,12071},{'scuba-diving',12072},{fishing,12073},{'marine-recreation-area',12074},{motorboating,12075},{'boat-ramp',12076},{rowboating,12077},{sailboating,12078},{'water-skiing',12079},{surfing,12080},{swimming,12081},{wading,12082},{'hand-launch',12083},{kayak,12084},{'wind-surf',12085},{'ice-skating',12086},{'ski-jumping',12087},{bobbing,12088},{'cross-country-skiing',12089},{'downhill-skiing',12090},{sledding,12091},{snowmobiling,12092},{snowshoeing,12093},{'winter-recreation-area',12094},{'scenic-overlook',12095},{'regulatory-sign',12289},{'warning-sign',12290},{'information-sign',12291},{'construction-sign',12292},{'guide-sign',12293},{stop,12294},{yield,12295},{'to-oncoming-traffic',12296},{'four-way',12297},{'all-way',12298},{zone,12299},{narrows,12300},{widens,12301},{reduced,12302},{combined,12303},{minimum,12304},{maximum,12305},{'divided-road',12306},{'double-arrow',12307},{'dead-end',12308},{'no-outlet',12309},{'wrong-way',12310},{nDetour,12312},{chevron,12313},{'do-not-enter',12314},{'t-intersection-to-the-side',12315},{'t-intersection-oncoming',12316},{'y-intersection-to-the-side',12317},{'y-intersection-oncoming',12318},{'four-way-divided-highway-crossing',12319},{'t-way-divided-highway-crossing',12320},{'light-rail-divided-highway-crossing',12321},{'light-rail-t-divided-highway-crossing',12322},{'side-road-to-right',12323},{'side-road-to-left',12324},{'side-road-to-right-at-angle',12325},{'side-road-to-left-at-angle',12326},{'entering-roadway-merge',12327},{'entering-roadway-added-lane',12328},{'one-way',12329},{caution,12330},{temporary,12331},{n1,12545},{n2,12546},{n3,12547},{n4,12548},{n5,12549},{n6,12550},{n7,12551},{n8,12552},{n9,12553},{n10,12554},{n11,12555},{n12,12556},{n13,12557},{n14,12558},{n15,12559},{n16,12560},{n17,12561},{n18,12562},{n19,12563},{n20,12564},{n21,12565},{n22,12566},{n23,12567},{n24,12568},{n25,12569},{n26,12570},{n27,12571},{n28,12572},{n29,12573},{n30,12574},{n31,12575},{n32,12576},{n33,12577},{n34,12578},{n35,12579},{n36,12580},{n37,12581},{n38,12582},{n39,12583},{n40,12584},{n41,12585},{n42,12586},{n43,12587},{n44,12588},{n45,12589},{n46,12590},{n47,12591},{n48,12592},{n49,12593},{n50,12594},{n51,12595},{n52,12596},{n53,12597},{n54,12598},{n55,12599},{n56,12600},{n57,12601},{n58,12602},{n59,12603},{n60,12604},{n61,12605},{n62,12606},{n63,12607},{n64,12608},{n65,12609},{n66,12610},{n67,12611},{n68,12612},{n69,12613},{n70,12614},{n71,12615},{n72,12616},{n73,12617},{n74,12618},{n75,12619},{n76,12620},{n77,12621},{n78,12622},{n79,12623},{n80,12624},{n81,12625},{n82,12626},{n83,12627},{n84,12628},{n85,12629},{n86,12630},{n87,12631},{n88,12632},{n89,12633},{n90,12634},{n91,12635},{n92,12636},{n93,12637},{n94,12638},{n95,12639},{n96,12640},{n97,12641},{n98,12642},{n99,12643},{n100,12644},{n101,12645},{n102,12646},{n103,12647},{n104,12648},{n105,12649},{n106,12650},{n107,12651},{n108,12652},{n109,12653},{n110,12654},{n111,12655},{n112,12656},{n113,12657},{n114,12658},{n115,12659},{n116,12660},{n117,12661},{n118,12662},{n119,12663},{n120,12664},{n121,12665},{n122,12666},{n123,12667},{n124,12668},{n125,12669},{n126,12670},{n127,12671},{n128,12672},{n129,12673},{n130,12674},{n131,12675},{n132,12676},{n133,12677},{n134,12678},{n135,12679},{n136,12680},{n137,12681},{n138,12682},{n139,12683},{n140,12684},{n141,12685},{n142,12686},{n143,12687},{n144,12688},{n145,12689},{n146,12690},{n147,12691},{n148,12692},{n149,12693},{n150,12694},{n151,12695},{n152,12696},{n153,12697},{n154,12698},{n155,12699},{n156,12700},{n157,12701},{n158,12702},{n159,12703},{n160,12704},{n161,12705},{n162,12706},{n163,12707},{n164,12708},{n165,12709},{n166,12710},{n167,12711},{n168,12712},{n169,12713},{n170,12714},{n171,12715},{n172,12716},{n173,12717},{n174,12718},{n175,12719},{n176,12720},{n177,12721},{n178,12722},{n179,12723},{n180,12724},{n181,12725},{n182,12726},{n183,12727},{n184,12728},{n185,12729},{n186,12730},{n187,12731},{n188,12732},{n189,12733},{n190,12734},{n191,12735},{n192,12736},{n193,12737},{n194,12738},{n195,12739},{n196,12740},{n197,12741},{n198,12742},{n199,12743},{n200,12744},{n201,12745},{n202,12746},{n203,12747},{n204,12748},{n205,12749},{n206,12750},{n207,12751},{n208,12752},{n209,12753},{n210,12754},{n211,12755},{n212,12756},{n213,12757},{n214,12758},{n215,12759},{n216,12760},{n217,12761},{n218,12762},{n219,12763},{n220,12764},{n221,12765},{n222,12766},{n223,12767},{n224,12768},{n225,12769},{n226,12770},{n227,12771},{n228,12772},{n229,12773},{n230,12774},{n231,12775},{n232,12776},{n233,12777},{n234,12778},{n235,12779},{n236,12780},{n237,12781},{n238,12782},{n239,12783},{n240,12784},{n241,12785},{n242,12786},{n243,12787},{n244,12788},{n245,12789},{n246,12790},{n247,12791},{n248,12792},{n249,12793},{n250,12794},{n251,12795},{n252,12796},{n253,12797},{n254,12798},{n255,12799},{alabama,12801},{alaska,12802},{'american-Samoa',12803},{arizona,12804},{arkansas,12805},{california,12806},{colorado,12807},{connecticut,12808},{delaware,12809},{'district-of-Columbia',12810},{florida,12811},{georgia,12812},{guam,12813},{hawaii,12814},{idaho,12815},{illinois,12816},{indiana,12817},{iowa,12818},{kansas,12819},{kentucky,12820},{louisiana,12821},{maine,12822},{maryland,12823},{massachusetts,12824},{michigan,12825},{minnesota,12826},{mississippi,12827},{missouri,12828},{montana,12829},{nebraska,12830},{nevada,12831},{'new-Hampshire',12832},{'new-Jersey',12833},{'new-Mexico',12834},{'new-York',12835},{'north-Carolina',12836},{'north-Dakota',12837},{'northern-Marianas-Islands',12838},{ohio,12839},{oklahoma,12840},{oregon,12841},{pennsylvania,12842},{'puerto-rico',12843},{'rhode-Island',12844},{'south-Carolina',12845},{'south-Dakota',12846},{tennessee,12847},{texas,12848},{utah,12849},{vermont,12850},{virginia,12851},{'virgin-Islands',12852},{washington,12853},{'west-Virginia',12854},{wisconsin,12855},{wyoming,12856},{'rest-room',13057},{'mens-rest-room',13058},{'womens-rest-room',13059},{'family-rest-room',13060},{dam,13061},{'fish-hatchery',13062},{information,13063},{lighthouse,13064},{'lookout-tower',13065},{'ranger-station',13066},{'grocery-store',13068},{lodging,13069},{'post-office',13070},{'picnic-shelter',13072},{'group-camping',13073},{'group-picnicking',13074},{'n24-hour-pharmacy',13075},{kennel,13076},{'laundry-facilities',13077},{'shower-facilities',13078},{amphitheater,13079},{stable,13080},{hospital,13081},{'emergency-medical-service-point',13082},{library,13083},{'recycling-collection-center',13084},{school,13085},{alley,13313},{annex,13314},{arcade,13315},{avenue,13316},{bayoo,13317},{beach,13318},{bend,13319},{bluff,13320},{bottom,13321},{boulevard,13322},{branch,13323},{nBridge,13324},{brook,13325},{burg,13326},{bypass,13327},{camp,13328},{canyon,13329},{cape,13330},{causeway,13331},{nCenter,13332},{circle,13333},{cliff,13334},{club,13335},{common,13336},{corner,13337},{course,13338},{court,13339},{cove,13340},{creek,13341},{crescent,13342},{crest,13343},{nCrossing,13344},{crossroad,13345},{curve,13346},{dale,13347},{nDam,13348},{divide,13349},{drive,13350},{estate,13351},{expressway,13352},{extension,13353},{fall,13354},{nFerry,13355},{field,13356},{flat,13357},{ford,13358},{forest,13359},{forge,13360},{fork,13361},{fort,13362},{nFreeway,13363},{garden,13364},{gateway,13365},{glen,13366},{green,13367},{grove,13368},{harbor,13369},{haven,13370},{heights,13371},{highway,13372},{nHill,13373},{hollow,13374},{inlet,13375},{nIsland,13376},{isle,13377},{nJunction,13378},{key,13379},{knoll,13380},{lake,13381},{land,13382},{landing,13383},{nLane,13384},{light,13385},{loaf,13386},{lock,13387},{lodge,13388},{loop,13389},{mall,13390},{manor,13391},{meadow,13392},{mews,13393},{mill,13394},{mission,13395},{motorway,13396},{mount,13397},{mountain,13398},{neck,13399},{orchard,13400},{oval,13401},{nOverpass,13402},{park,13403},{parkway,13404},{nPass,13405},{passage,13406},{path,13407},{pike,13408},{pine,13409},{plains,13410},{plaza,13411},{point,13412},{port,13413},{prairie,13414},{radial,13415},{ramp,13416},{ranch,13417},{rapid,13418},{rest,13419},{ridge,13420},{river,13421},{nRoad,13422},{route,13423},{row,13424},{rue,13425},{run,13426},{shoal,13427},{shore,13428},{skyway,13429},{spring,13430},{nSpur,13431},{square,13432},{nStation,13433},{stravenue,13434},{stream,13435},{street,13436},{summit,13437},{terrace,13438},{throughway,13439},{trace,13440},{nTrack,13441},{trafficway,13442},{nTrail,13443},{nTunnel,13444},{turnpike,13445},{nUnderpass,13446},{union,13447},{valley,13448},{viaduct,13449},{view,13450},{village,13451},{ville,13452},{vista,13453},{nWalk,13454},{wall,13455},{way,13456},{well,13457},{ahead,13569},{here,13570},{'here-to',13571},{'here-to-alley',13572},{'here-to-corner',13573},{'here-to-sign',13574},{'between-signs',13575},{'this-side-of-street',13576},{'this-side-of-sign',13577},{right,13579},{left,13580},{'begin-point',13581},{next,13582},{'ends-end',13583},{'other-Side',13584},{crossing,13585},{crosswalks,13586},{'center-strip',13587},{lane,13588},{hill,13589},{'both-ways-left-and-right',13590},{'both-ways-45-degree-angle-tilting-right',13591},{'both-ways-45-degree-angle-tilting-left',13592},{'both-directions-of-travel',13593},{'left-turn',13594},{'left-45-degree-arrow',13595},{'left-45-degree-turn',13596},{'ahead-and-to-the-left',13597},{'ahead-and-to-the-left-at-a-45-degree-angle',13598},{'right-turn',13599},{'right-45-degree-arrow',13600},{'right-45-degree-turn',13601},{'ahead-and-to-the-right',13602},{'ahead-and-to-the-right-at-a-45-degree-angle',13603},{'downward-left-45-degree',13604},{'downward-right-45-degree',13605},{'downward-left-and-right-45-degree',13606},{'right-arrow',13609},{'left-arrow',13610},{'starting-start',13611},{'chevron-right',13613},{'chevron-left',13614},{'right-turn-with-junction',13615},{'left-turn-with-junction',13616},{'hairpin-right',13617},{'hairpin-left',13618},{'truck-rollover-right',13619},{'truck-rollover-left',13620},{'n270-degree-turn-right',13621},{'n270-degree-turn-left',13622},{'two-lane-reverse-curve-to-right',13623},{'two-lane-reverse-curve-to-left',13624},{'three-lane-reverse-curve-to-right',13625},{'three-lane-reverse-curve-to-left',13626},{'double-reverse-curve-to-right',13627},{'double-reverse-curve-to-left',13628},{'two-lane-double-reverse-curve-to-right',13629},{'two-lane-double-reverse-curve-to-left',13630},{'three-lane-double-reverse-curve-to-right',13631},{'three-lane-double-reverse-curve-to-left',13632},{between,13633},{shelter,13634},{center,13635},{'reverse-turn-to-right',13636},{'reverse-turn-to-left',13637},{'reverse-curve-to-right',13638},{'reverse-curve-to-left',13639},{'winding-road-to-right',13640},{'winding-road-to-left',13641}]},{0,65535}},<<116,101,120,116>> => string}},mandatory}]}};
typeinfo(Type) ->
  exit({error,{asn1,{undefined_type,Type}}}).


%%%
%%% Run-time functions.
%%%

'dialyzer-suppressions'(Arg) ->
    complete(element(1, Arg)),
    ok.

dec_components1(0, Bytes, Acc) ->
{lists:reverse(Acc),Bytes};
dec_components1(Num, Bytes, Acc) ->
{Term,Remain} = dec_ITIScodesAndText_SEQOF(Bytes),
dec_components1(Num-1, Remain, [Term|Acc]).

bitstring2json(BitStr) when is_binary(BitStr) ->
    octetstring2json(binary_to_list(BitStr));
bitstring2json(BitStr) ->
    Pad = 8 - bit_size(BitStr) rem 8,
    NewStr = <<BitStr/bitstring,0:Pad>>,
    octetstring2json(binary_to_list(NewStr)).

complete(InList) when is_list(InList) ->
    case list_to_bitstring(InList) of
        <<>> ->
            <<0>>;
        Res ->
            Sz = bit_size(Res),
            case Sz band 7 of
                0 ->
                    Res;
                Bits ->
                    <<Res:Sz/bitstring,0:(8 - Bits)>>
            end
    end;
complete(Bin) when is_binary(Bin) ->
    case Bin of
        <<>> ->
            <<0>>;
        _ ->
            Bin
    end;
complete(InList) when is_bitstring(InList) ->
    Sz = bit_size(InList),
    PadLen = 8 - Sz band 7,
    <<InList:Sz/bitstring,0:PadLen>>.

decode_chars(Val, N) ->
    [ 
     C ||
         <<C:N>> <= Val
    ].

decode_jer(Module, Type, Val) ->
    TypeInfo = Module:typeinfo(Type),
    decode_jer(TypeInfo, Val).

decode_jer({'ENUMERATED', _EnumList}, Val) when is_binary(Val) ->
    binary_to_existing_atom(Val, utf8);
decode_jer({'ENUMERATED', _EnumList}, Val) when is_boolean(Val) ->
    Val;
decode_jer({'ENUMERATED', _EnumList}, null) ->
    null;
decode_jer({Type = {'ENUMERATED', _EnumList}, _Constr}, Val) ->
    decode_jer(Type, Val);
decode_jer({'ENUMERATED_EXT', EnumList}, Val) ->
    decode_jer({'ENUMERATED', EnumList}, Val);
decode_jer({Type = {'ENUMERATED_EXT', _EnumList}, _Constr}, Val) ->
    decode_jer(Type, Val);
decode_jer({typeinfo, {Module, Type}}, Val) ->
    TypeInfo = Module:typeinfo(Type),
    decode_jer(TypeInfo, Val);
decode_jer({sequence, Sname, _Arity, CompInfos}, Value)
    when is_map(Value) ->
    DecodedComps = decode_jer_component(CompInfos, Value, []),
    list_to_tuple([Sname | DecodedComps]);
decode_jer({sequence_map, _Sname, _Arity, CompInfos}, Value)
    when is_map(Value) ->
    decode_jer_component_map(CompInfos, Value, []);
decode_jer(string, Str) when is_binary(Str) ->
    binary_to_list(Str);
decode_jer({string, _Prop}, Str) when is_binary(Str) ->
    binary_to_list(Str);
decode_jer('INTEGER', Int) when is_integer(Int) ->
    Int;
decode_jer({'INTEGER', {Min, Max}}, Int)
    when is_integer(Int), Max >= Int, Int >= Min ->
    Int;
decode_jer({Type = {'INTEGER_NNL', _NNList}, _}, Int) ->
    decode_jer(Type, Int);
decode_jer({'INTEGER_NNL', NNList}, Int) ->
    case lists:keyfind(Int, 2, NNList) of
        {NewName, _} ->
            NewName;
        _ ->
            Int
    end;
decode_jer('BOOLEAN', Bool) when is_boolean(Bool) ->
    Bool;
decode_jer({'BOOLEAN', _Prop}, Bool) when is_boolean(Bool) ->
    Bool;
decode_jer('NULL', null) ->
    'NULL';
decode_jer(legacy_octet_string, Str) when is_binary(Str) ->
    json2octetstring2string(binary_to_list(Str));
decode_jer(octet_string, Str) when is_binary(Str) ->
    json2octetstring2binary(binary_to_list(Str));
decode_jer({sof, Type}, Vals) when is_list(Vals) ->
    [ 
     decode_jer(Type, Val) ||
         Val <- Vals
    ];
decode_jer({choice, ChoiceTypes}, ChoiceVal) ->
    [{Alt, Val}] = maps:to_list(ChoiceVal),
    case ChoiceTypes of
        #{Alt := Type} ->
            Type = maps:get(Alt, ChoiceTypes),
            {binary_to_atom(Alt, utf8), decode_jer(Type, Val)};
        _ ->
            exit({error,
                  {asn1, {invalid_choice, Alt, maps:keys(ChoiceTypes)}}})
    end;
decode_jer(bit_string, #{<<"value">> := Str, <<"length">> := Length}) ->
    json2bitstring(binary_to_list(Str), Length);
decode_jer({bit_string, FixedLength}, Str) when is_binary(Str) ->
    json2bitstring(binary_to_list(Str), FixedLength);
decode_jer({bit_string_nnl, NNL},
           #{<<"value">> := Str, <<"length">> := Length}) ->
    BitStr = json2bitstring(binary_to_list(Str), Length),
    jer_bitstr2names(BitStr, NNL);
decode_jer({{bit_string_nnl, NNL}, FixedLength}, Str)
    when is_binary(Str) ->
    BitStr = json2bitstring(binary_to_list(Str), FixedLength),
    jer_bitstr2names(BitStr, NNL);
decode_jer({compact_bit_string_nnl, NNL}, Value) ->
    decode_jer({bit_string_nnl, NNL}, Value);
decode_jer({{compact_bit_string_nnl, NNL}, FixedLength}, Value) ->
    decode_jer({{bit_string_nnl, NNL}, FixedLength}, Value);
decode_jer(compact_bit_string,
           #{<<"value">> := Str, <<"length">> := Length}) ->
    BitStr = json2bitstring(binary_to_list(Str), Length),
    jer_bitstr2compact(BitStr);
decode_jer({compact_bit_string, FixedLength}, Str) ->
    BitStr = json2bitstring(binary_to_list(Str), FixedLength),
    Unused = (8 - FixedLength rem 8) band 7,
    {Unused, <<BitStr/bitstring,0:Unused>>};
decode_jer('OBJECT IDENTIFIER', OidBin) when is_binary(OidBin) ->
    json2oid(OidBin);
decode_jer('RELATIVE-OID', OidBin) when is_binary(OidBin) ->
    json2oid(OidBin);
decode_jer({'ObjClassFieldType', _, _}, Bin) when is_binary(Bin) ->
    Bin;
decode_jer('ASN1_OPEN_TYPE', Bin) when is_binary(Bin) ->
    Bin;
decode_jer({container, Type, _Containing}, Val) ->
    decode_jer(Type, Val);
decode_jer(Type, Val) ->
    exit({error, {asn1, {{decode, Type}, Val}}}).

decode_jer_component([{Name, Type, _OptOrDefault} | CompInfos],
                     VMap, Acc)
    when is_map_key(Name, VMap) ->
    Value = maps:get(Name, VMap),
    Dec = decode_jer(Type, Value),
    decode_jer_component(CompInfos, VMap, [Dec | Acc]);
decode_jer_component([{_Name, _Type, 'OPTIONAL'} | CompInfos],
                     VMap, Acc) ->
    decode_jer_component(CompInfos, VMap, [asn1_NOVALUE | Acc]);
decode_jer_component([{_Name, _Type, {'DEFAULT', Dvalue}} | CompInfos],
                     VMap, Acc) ->
    decode_jer_component(CompInfos, VMap, [Dvalue | Acc]);
decode_jer_component([{Name, _Type, _OptOrDefault} | _CompInfos],
                     VMap, _Acc) ->
    exit({error,
          {asn1, {{decode, {mandatory_component_missing, Name}}, VMap}}});
decode_jer_component([], _, Acc) ->
    lists:reverse(Acc).

decode_jer_component_map([{Name, AtomName, Type, _OptOrDefault} |
                          CompInfos],
                         VMap, Acc)
    when is_map_key(Name, VMap) ->
    Value = maps:get(Name, VMap),
    Dec = decode_jer(Type, Value),
    decode_jer_component_map(CompInfos, VMap, [{AtomName, Dec} | Acc]);
decode_jer_component_map([{_Name, _AtomName, _Type, 'OPTIONAL'} |
                          CompInfos],
                         VMap, Acc) ->
    decode_jer_component_map(CompInfos, VMap, Acc);
decode_jer_component_map([{_Name, AtomName, _Type, {'DEFAULT', Dvalue}} |
                          CompInfos],
                         VMap, Acc) ->
    decode_jer_component_map(CompInfos, VMap,
                             [{AtomName, Dvalue} | Acc]);
decode_jer_component_map([{Name, _AtomName, _Type, _OptOrDefault} |
                          _CompInfos],
                         VMap, _Acc) ->
    exit({error,
          {asn1, {{decode, {mandatory_component_missing, Name}}, VMap}}});
decode_jer_component_map([], _, Acc) ->
    maps:from_list(Acc).

encode_chars(Val, NumBits) ->
    << 
      <<C:NumBits>> ||
          C <- Val
    >>.

encode_jer(Module, Type, Val) ->
    Info = Module:typeinfo(Type),
    Enc = encode_jer(Info, Val),
    EncFun =
        fun({'KV_LIST', Value}, Encode) ->
               json:encode_key_value_list(Value, Encode);
           (Other, Encode) ->
               json:encode_value(Other, Encode)
        end,
    iolist_to_binary(json:encode(Enc, EncFun)).

encode_jer({sequence_tab, Simple, Sname, Arity, CompInfos}, Value)
    when tuple_size(Value) == Arity + 1 ->
    [Sname | Clist] = tuple_to_list(Value),
    encode_jer_component_tab(CompInfos, Clist, Simple, #{});
encode_jer({sequence_map, _Sname, _Arity, CompInfos}, Value)
    when is_map(Value) ->
    encode_jer_component_map(CompInfos, Value, []);
encode_jer({sequence, Sname, Arity, CompInfos}, Value)
    when tuple_size(Value) == Arity + 1 ->
    [Sname | Clist] = tuple_to_list(Value),
    encode_jer_component(CompInfos, Clist, []);
encode_jer(string, Str) when is_list(Str) ->
    list_to_binary(Str);
encode_jer({string, _Prop}, Str) when is_list(Str) ->
    list_to_binary(Str);
encode_jer(string, Str) when is_binary(Str) ->
    Str;
encode_jer({string, _Prop}, Str) when is_binary(Str) ->
    Str;
encode_jer('INTEGER', Int) when is_integer(Int) ->
    Int;
encode_jer({'INTEGER', {Min, Max}}, Int)
    when is_integer(Int), Max >= Int, Int >= Min ->
    Int;
encode_jer({'INTEGER_NNL', _NNL}, Int) when is_integer(Int) ->
    Int;
encode_jer(Type = {'INTEGER_NNL', NNList}, Int) when is_atom(Int) ->
    case lists:keyfind(Int, 1, NNList) of
        {_, NewVal} ->
            NewVal;
        _ ->
            exit({error, {asn1, {Type, Int}}})
    end;
encode_jer({Type = {'INTEGER_NNL', _NNList}, _Constraint}, Int)
    when is_atom(Int) ->
    encode_jer(Type, Int);
encode_jer({{'INTEGER_NNL', _NNList}, Constraint}, Int)
    when is_integer(Int) ->
    encode_jer({'INTEGER', Constraint}, Int);
encode_jer('BOOLEAN', Bool) when is_boolean(Bool) ->
    Bool;
encode_jer({'BOOLEAN', _Prop}, Bool) when is_boolean(Bool) ->
    Bool;
encode_jer('NULL', _) ->
    null;
encode_jer(legacy_octet_string, Value) when is_list(Value) ->
    bitstring2json(list_to_binary(Value));
encode_jer({legacy_octet_string, _Prop}, Value) when is_list(Value) ->
    bitstring2json(list_to_binary(Value));
encode_jer(octet_string, Value) when is_binary(Value) ->
    encode_jer({octet_string, []}, Value);
encode_jer({octet_string, _Prop}, Value) when is_binary(Value) ->
    bitstring2json(Value);
encode_jer({'ENUMERATED', EnumMap}, Val) when is_map_key(Val, EnumMap) ->
    Val;
encode_jer({Type = {'ENUMERATED', _EnumList}, _Constr}, Val) ->
    encode_jer(Type, Val);
encode_jer({'ENUMERATED_EXT', _EnumMap}, Val) when is_atom(Val) ->
    Val;
encode_jer({Type = {'ENUMERATED_EXT', _EnumList}, _Constr}, Val) ->
    encode_jer(Type, Val);
encode_jer({typeinfo, {Module, Type}}, Val) ->
    TypeInfo = Module:typeinfo(Type),
    encode_jer(TypeInfo, Val);
encode_jer({sof, Type}, Vals) when is_list(Vals) ->
    [ 
     encode_jer(Type, Val) ||
         Val <- Vals
    ];
encode_jer({choice, Choices}, {Alt, Value}) ->
    case is_map_key(AltBin = atom_to_binary(Alt, utf8), Choices) of
        true ->
            EncodedVal = encode_jer(maps:get(AltBin, Choices), Value),
            #{AltBin => EncodedVal};
        false ->
            exit({error, {asn1, {invalid_choice, Alt, Choices}}})
    end;
encode_jer(bit_string, Value) ->
    Str = bitstring2json(Value),
    #{value => Str, length => bit_size(Value)};
encode_jer({bit_string, FixedLength}, Value)
    when is_bitstring(Value), is_integer(FixedLength) ->
    Value2 = jer_padbitstr(Value, FixedLength),
    bitstring2json(Value2);
encode_jer(compact_bit_string, Compact) ->
    BitStr = jer_compact2bitstr(Compact),
    encode_jer(bit_string, BitStr);
encode_jer({compact_bit_string, FixedLength},
           Compact = {_Unused, Binary})
    when is_binary(Binary) ->
    BitStr = jer_compact2bitstr(Compact),
    encode_jer({bit_string, FixedLength}, BitStr);
encode_jer({bit_string_nnl, NNL}, Value) ->
    Value1 = jer_bit_str2bitstr(Value, NNL),
    encode_jer(bit_string, Value1);
encode_jer({{bit_string_nnl, NNL}, FixedLength}, Value) ->
    Value1 = jer_bit_str2bitstr(Value, NNL),
    encode_jer({bit_string, FixedLength}, Value1);
encode_jer({compact_bit_string_nnl, NNL}, Value) ->
    Value1 = jer_bit_str2bitstr(Value, NNL),
    encode_jer(bit_string, Value1);
encode_jer({{compact_bit_string_nnl, NNL}, FixedLength}, Value) ->
    Value1 = jer_bit_str2bitstr(Value, NNL),
    encode_jer({bit_string, FixedLength}, Value1);
encode_jer('OBJECT IDENTIFIER', Oid) when is_tuple(Oid) ->
    oid2json(Oid);
encode_jer('RELATIVE-OID', Oid) when is_tuple(Oid) ->
    oid2json(Oid);
encode_jer({'ObjClassFieldType', _, _}, Val) when is_binary(Val) ->
    Val;
encode_jer('ASN1_OPEN_TYPE', Val) when is_binary(Val) ->
    Val;
encode_jer({container, Type, _Containing}, Val) ->
    encode_jer(Type, Val);
encode_jer(Type, Val) ->
    exit({error, {asn1, {{encode, Type}, Val}}}).

encode_jer_component([{_Name, _Type, 'OPTIONAL'} | CompInfos],
                     [asn1_NOVALUE | Rest],
                     Acc) ->
    encode_jer_component(CompInfos, Rest, Acc);
encode_jer_component([{_Name, _Type, {'DEFAULT', _}} | CompInfos],
                     [asn1_DEFAULT | Rest],
                     Acc) ->
    encode_jer_component(CompInfos, Rest, Acc);
encode_jer_component([{Name, Type, _OptOrDefault} | CompInfos],
                     [Value | Rest],
                     Acc) ->
    Enc = encode_jer(Type, Value),
    encode_jer_component(CompInfos, Rest, [{Name, Enc} | Acc]);
encode_jer_component([], _, Acc) ->
    {'KV_LIST', lists:reverse(Acc)}.

encode_jer_component_map([{Name, AName, Type, _OptOrDefault} |
                          CompInfos],
                         MapVal, Acc)
    when is_map_key(AName, MapVal) ->
    Value = maps:get(AName, MapVal),
    Enc = encode_jer(Type, Value),
    encode_jer_component_map(CompInfos, MapVal, [{Name, Enc} | Acc]);
encode_jer_component_map([{_Name, _AName, _Type, 'OPTIONAL'} |
                          CompInfos],
                         MapVal, Acc) ->
    encode_jer_component_map(CompInfos, MapVal, Acc);
encode_jer_component_map([{_Name, _AName, _Type, {'DEFAULT', _}} |
                          CompInfos],
                         MapVal, Acc) ->
    encode_jer_component_map(CompInfos, MapVal, Acc);
encode_jer_component_map([], MapVal, Acc)
    when map_size(MapVal) =:= length(Acc) ->
    {'KV_LIST', lists:reverse(Acc)};
encode_jer_component_map(_, MapVal, Acc) ->
    ErroneousKeys =
        maps:keys(MapVal)
        --
        [ 
         K ||
             {K, _V} <- Acc
        ],
    exit({error,
          {asn1,
           {{encode, 'SEQUENCE'}, {erroneous_keys, ErroneousKeys}}}}).

encode_jer_component_tab([{_Name, _Type, 'OPTIONAL'} | CompInfos],
                         [asn1_NOVALUE | Rest],
                         Simple, MapAcc) ->
    encode_jer_component_tab(CompInfos, Rest, Simple, MapAcc);
encode_jer_component_tab([{_Name, _Type, {'DEFAULT', _}} | CompInfos],
                         [asn1_DEFAULT | Rest],
                         Simple, MapAcc) ->
    encode_jer_component_tab(CompInfos, Rest, Simple, MapAcc);
encode_jer_component_tab([{Name, Type, _OptOrDefault} | CompInfos],
                         [Value | Rest],
                         Simple, MapAcc) ->
    Enc = encode_jer(Type, Value),
    encode_jer_component_tab(CompInfos, Rest, Simple,
                             MapAcc#{Name => Enc});
encode_jer_component_tab([], _, _Simple, MapAcc) ->
    MapAcc.

jer_bit_str2bitstr(Compact = {_Unused, _Binary}, _NamedBitList) ->
    jer_compact2bitstr(Compact);
jer_bit_str2bitstr(Int, _NamedBitList) when is_integer(Int) ->
    jer_compact2bitstr(Int);
jer_bit_str2bitstr(BitList = [Bit | _], _NamedBitList)
    when Bit == 1; Bit == 0 ->
    Int =
        list_to_integer([ 
                         case B of
                             0 ->
                                 $0;
                             1 ->
                                 $1
                         end ||
                             B <- BitList
                        ],
                        2),
    Len = length(BitList),
    <<Int:Len>>;
jer_bit_str2bitstr([H | _] = Bits, NamedBitList) when is_atom(H) ->
    jer_do_encode_named_bit_string(Bits, NamedBitList);
jer_bit_str2bitstr([{bit, _} | _] = Bits, NamedBitList) ->
    jer_do_encode_named_bit_string(Bits, NamedBitList);
jer_bit_str2bitstr([], _NamedBitList) ->
    <<>>;
jer_bit_str2bitstr(BitStr, _NamedBitList) when is_bitstring(BitStr) ->
    BitStr.

jer_bitstr2compact(BitStr) ->
    Size = bit_size(BitStr),
    Unused = (8 - Size rem 8) band 7,
    {Unused, <<BitStr/bitstring,0:Unused>>}.

jer_bitstr2names(<<1:1,BitStr/bitstring>>,
                 [{Name, Pos} | Rest],
                 Pos, Acc) ->
    jer_bitstr2names(BitStr, Rest, Pos + 1, [Name | Acc]);
jer_bitstr2names(<<1:1,BitStr/bitstring>>, NNL, Num, Acc) ->
    jer_bitstr2names(BitStr, NNL, Num + 1, [{bit, Num} | Acc]);
jer_bitstr2names(<<0:1,BitStr/bitstring>>, [{_, Num} | Rest], Num, Acc) ->
    jer_bitstr2names(BitStr, Rest, Num + 1, Acc);
jer_bitstr2names(<<0:1,BitStr/bitstring>>, NNL, Num, Acc) ->
    jer_bitstr2names(BitStr, NNL, Num + 1, Acc);
jer_bitstr2names(<<>>, _, _, Acc) ->
    lists:reverse(Acc).

jer_bitstr2names(BitStr, []) ->
    BitStr;
jer_bitstr2names(BitStr, NNL) ->
    SortedList = lists:keysort(2, NNL),
    jer_bitstr2names(BitStr, SortedList, 0, []).

jer_compact2bitstr({Unused, Binary}) ->
    Size = bit_size(Binary) - Unused,
    <<BitStr:Size/bitstring,_/bitstring>> = Binary,
    BitStr;
jer_compact2bitstr(Int) when is_integer(Int) ->
    jer_int2bitstr(Int);
jer_compact2bitstr(BitList = [Bit | _]) when Bit == 1; Bit == 0 ->
    IntStr = jer_skip_trailing_zeroes(BitList, []),
    Int = list_to_integer(IntStr, 2),
    Len = length(IntStr),
    <<Int:Len>>.

jer_do_encode_named_bit_string([FirstVal | RestVal], NamedBitList) ->
    ToSetPos =
        jer_get_all_bitposes([FirstVal | RestVal], NamedBitList, []),
    Size = lists:max(ToSetPos) + 1,
    BitList = jer_make_and_set_list(Size, ToSetPos, 0),
    jer_encode_bitstring(BitList).

jer_encode_bitstring([B8, B7, B6, B5, B4, B3, B2, B1 | Rest]) ->
    Val =
        B8 bsl 7 bor (B7 bsl 6) bor (B6 bsl 5) bor (B5 bsl 4)
        bor
        (B4 bsl 3)
        bor
        (B3 bsl 2)
        bor
        (B2 bsl 1)
        bor
        B1,
    jer_encode_bitstring(Rest, <<Val>>);
jer_encode_bitstring(Val) ->
    jer_unused_bitlist(Val, <<>>).

jer_encode_bitstring([B8, B7, B6, B5, B4, B3, B2, B1 | Rest], Acc) ->
    Val =
        B8 bsl 7 bor (B7 bsl 6) bor (B6 bsl 5) bor (B5 bsl 4)
        bor
        (B4 bsl 3)
        bor
        (B3 bsl 2)
        bor
        (B2 bsl 1)
        bor
        B1,
    jer_encode_bitstring(Rest, [Acc, Val]);
jer_encode_bitstring([], Acc) ->
    Acc;
jer_encode_bitstring(Rest, Acc) ->
    jer_unused_bitlist(Rest, Acc).

jer_get_all_bitposes([{bit, ValPos} | Rest], NamedBitList, Ack) ->
    jer_get_all_bitposes(Rest, NamedBitList, [ValPos | Ack]);
jer_get_all_bitposes([Val | Rest], NamedBitList, Ack) when is_atom(Val) ->
    case lists:keyfind(Val, 1, NamedBitList) of
        {_ValName, ValPos} ->
            jer_get_all_bitposes(Rest, NamedBitList, [ValPos | Ack]);
        _ ->
            exit({error, {asn1, {bitstring_namedbit, Val}}})
    end;
jer_get_all_bitposes([], _NamedBitList, Ack) ->
    lists:sort(Ack).

jer_int2bitstr(0, Acc) ->
    Acc;
jer_int2bitstr(Int, Acc) ->
    Bit = Int band 1,
    jer_int2bitstr(Int bsr 1, <<Acc/bitstring,Bit:1>>).

jer_int2bitstr(Int) when is_integer(Int), Int >= 0 ->
    jer_int2bitstr(Int, <<>>).

jer_make_and_set_list(0, [], _) ->
    [];
jer_make_and_set_list(0, _, _) ->
    exit({error, {asn1, bitstring_sizeconstraint}});
jer_make_and_set_list(Len, [XPos | SetPos], XPos) ->
    [1 | jer_make_and_set_list(Len - 1, SetPos, XPos + 1)];
jer_make_and_set_list(Len, [Pos | SetPos], XPos) ->
    [0 | jer_make_and_set_list(Len - 1, [Pos | SetPos], XPos + 1)];
jer_make_and_set_list(Len, [], XPos) ->
    [0 | jer_make_and_set_list(Len - 1, [], XPos + 1)].

jer_padbitstr(BitStr, FixedLength) when bit_size(BitStr) == FixedLength ->
    BitStr;
jer_padbitstr(BitStr, FixedLength) when bit_size(BitStr) < FixedLength ->
    Len = bit_size(BitStr),
    PadLen = FixedLength - Len,
    <<BitStr/bitstring,0:PadLen>>.

jer_skip_trailing_zeroes([1 | Rest], Acc) ->
    jer_skip_trailing_zeroes(Rest, [$1 | Acc]);
jer_skip_trailing_zeroes([0 | Rest], Acc) ->
    jer_skip_trailing_zeroes(Rest, [$0 | Acc]);
jer_skip_trailing_zeroes([], [$0 | Acc]) ->
    jer_skip_trailing_zeroes([], Acc);
jer_skip_trailing_zeroes([], Acc) ->
    lists:reverse(Acc).

jer_unused_bitlist([], Acc) ->
    Acc;
jer_unused_bitlist([Bit | Rest], Acc) ->
    jer_unused_bitlist(Rest, <<Acc/bitstring,Bit:1>>).

json2bitstring(Value, Length) ->
    json2bitstring(Value, Length, []).

json2bitstring([A1, A2], Length, Acc) ->
    Int = list_to_integer([A1, A2], 16) bsr (8 - Length),
    Bin = list_to_binary(lists:reverse(Acc)),
    <<Bin/binary,Int:Length>>;
json2bitstring([A1, A2 | Rest], Length, Acc) ->
    Int = list_to_integer([A1, A2], 16),
    json2bitstring(Rest, Length - 8, [Int | Acc]);
json2bitstring([], 0, Acc) ->
    Bin = list_to_binary(lists:reverse(Acc)),
    Bin.

json2octetstring([A1, A2 | Rest], Acc) ->
    Int = list_to_integer([A1, A2], 16),
    json2octetstring(Rest, [Int | Acc]);
json2octetstring([], Acc) ->
    lists:reverse(Acc).

json2octetstring2binary(Value) ->
    list_to_binary(json2octetstring(Value, [])).

json2octetstring2string(Value) ->
    json2octetstring(Value, []).

json2oid(OidStr) when is_binary(OidStr) ->
    OidList = binary:split(OidStr, [<<".">>], [global]),
    OidNumList =
        [ 
         binary_to_integer(Num) ||
             Num <- OidList
        ],
    list_to_tuple(OidNumList).

octetstring2json(List) when is_list(List) ->
    list_to_binary([ 
                    begin
                        Num = integer_to_list(X, 16),
                        if
                            length(Num) == 1 ->
                                "0" ++ Num;
                            true ->
                                Num
                        end
                    end ||
                        X <- List
                   ]).

oid2json(Oid) when is_tuple(Oid) ->
    OidList = tuple_to_list(Oid),
    OidNumberStr =
        [ 
         integer_to_list(V) ||
             V <- OidList
        ],
    oid2json(OidNumberStr, []).

oid2json([Num | T], []) ->
    oid2json(T, [Num]);
oid2json([Num | T], Acc) ->
    oid2json(T, [Num, $. | Acc]);
oid2json([], Acc) ->
    list_to_binary(lists:reverse(Acc)).
